

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Feb 25 04:36:57 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	dabs	1,0x7E,2
    53  0000                     
    54                           ; Version 2.40
    55                           ; Generated 17/11/2021 GMT
    56                           ; 
    57                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F887 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  000E                     	;# 
   105  000F                     	;# 
   106  0010                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0014                     	;# 
   111  0015                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0017                     	;# 
   115  0018                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001E                     	;# 
   123  001F                     	;# 
   124  0081                     	;# 
   125  0085                     	;# 
   126  0086                     	;# 
   127  0087                     	;# 
   128  0088                     	;# 
   129  0089                     	;# 
   130  008C                     	;# 
   131  008D                     	;# 
   132  008E                     	;# 
   133  008F                     	;# 
   134  0090                     	;# 
   135  0091                     	;# 
   136  0092                     	;# 
   137  0093                     	;# 
   138  0093                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  0105                     	;# 
   153  0107                     	;# 
   154  0108                     	;# 
   155  0109                     	;# 
   156  010C                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  0185                     	;# 
   162  0187                     	;# 
   163  0188                     	;# 
   164  0189                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0000                     	;# 
   168  0001                     	;# 
   169  0002                     	;# 
   170  0003                     	;# 
   171  0004                     	;# 
   172  0005                     	;# 
   173  0006                     	;# 
   174  0007                     	;# 
   175  0008                     	;# 
   176  0009                     	;# 
   177  000A                     	;# 
   178  000B                     	;# 
   179  000C                     	;# 
   180  000D                     	;# 
   181  000E                     	;# 
   182  000E                     	;# 
   183  000F                     	;# 
   184  0010                     	;# 
   185  0011                     	;# 
   186  0012                     	;# 
   187  0013                     	;# 
   188  0014                     	;# 
   189  0015                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001B                     	;# 
   197  001B                     	;# 
   198  001C                     	;# 
   199  001D                     	;# 
   200  001E                     	;# 
   201  001F                     	;# 
   202  0081                     	;# 
   203  0085                     	;# 
   204  0086                     	;# 
   205  0087                     	;# 
   206  0088                     	;# 
   207  0089                     	;# 
   208  008C                     	;# 
   209  008D                     	;# 
   210  008E                     	;# 
   211  008F                     	;# 
   212  0090                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  0095                     	;# 
   220  0096                     	;# 
   221  0097                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009A                     	;# 
   225  009B                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  0105                     	;# 
   231  0107                     	;# 
   232  0108                     	;# 
   233  0109                     	;# 
   234  010C                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  0185                     	;# 
   240  0187                     	;# 
   241  0188                     	;# 
   242  0189                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0008                     	;# 
   254  0009                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000D                     	;# 
   259  000E                     	;# 
   260  000E                     	;# 
   261  000F                     	;# 
   262  0010                     	;# 
   263  0011                     	;# 
   264  0012                     	;# 
   265  0013                     	;# 
   266  0014                     	;# 
   267  0015                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001B                     	;# 
   276  001C                     	;# 
   277  001D                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  0081                     	;# 
   281  0085                     	;# 
   282  0086                     	;# 
   283  0087                     	;# 
   284  0088                     	;# 
   285  0089                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  008E                     	;# 
   289  008F                     	;# 
   290  0090                     	;# 
   291  0091                     	;# 
   292  0092                     	;# 
   293  0093                     	;# 
   294  0093                     	;# 
   295  0093                     	;# 
   296  0094                     	;# 
   297  0095                     	;# 
   298  0096                     	;# 
   299  0097                     	;# 
   300  0098                     	;# 
   301  0099                     	;# 
   302  009A                     	;# 
   303  009B                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  009F                     	;# 
   308  0105                     	;# 
   309  0107                     	;# 
   310  0108                     	;# 
   311  0109                     	;# 
   312  010C                     	;# 
   313  010C                     	;# 
   314  010D                     	;# 
   315  010E                     	;# 
   316  010F                     	;# 
   317  0185                     	;# 
   318  0187                     	;# 
   319  0188                     	;# 
   320  0189                     	;# 
   321  018C                     	;# 
   322  018D                     	;# 
   323                           
   324                           	psect	idataBANK1
   325  0000'                    __pidataBANK1:
   326                           
   327                           ;initializer for _FECHA
   328  0000' 3432               	retlw	50
   329  0001' 3433               	retlw	51
   330  0002' 3430               	retlw	48
   331  0003' 3439               	retlw	57
   332  0004' 3432               	retlw	50
   333  0005' 3433               	retlw	51
   334  0006' 3400               	retlw	0
   335                           
   336                           ;initializer for _HORA
   337  0007' 3430               	retlw	48
   338  0008' 3430               	retlw	48
   339  0009' 3430               	retlw	48
   340  000A' 3430               	retlw	48
   341  000B' 3430               	retlw	48
   342  000C' 3430               	retlw	48
   343  000D' 3400               	retlw	0
   344                           
   345                           	psect	strings
   346  0000'                    __pstrings:
   347  0000'                    stringtab:
   348  0000'                    __stringtab:
   349                           
   350                           ;	String table - string pointers are 1 byte each
   351  0000' 1BFF               	btfsc	btemp+1,7
   352  0001' 2800'              	ljmp	stringcode
   353  0002' 1383               	bcf	3,7
   354  0003' 187F               	btfsc	btemp+1,0
   355  0004' 1783               	bsf	3,7
   356  0005' 0800               	movf	0,w
   357  0006' 0A84               	incf	4,f
   358  0007' 1903               	skipnz
   359  0008' 0AFF               	incf	btemp+1,f
   360  0009' 0008               	return
   361  000A'                    stringcode:
   362  000A'                    stringdir:
   363  000A' 3000'              	movlw	high stringdir
   364  000B' 008A               	movwf	10
   365  000C' 0804               	movf	4,w
   366  000D' 0A84               	incf	4,f
   367  000E' 0782               	addwf	2,f
   368  000F'                    __stringbase:
   369  000F' 3400               	retlw	0
   370  0010'                    __end_of__stringtab:
   371  0010'                    __powers_:
   372  0010' 3400               	retlw	0
   373  0011' 3400               	retlw	0
   374  0012' 3480               	retlw	128
   375  0013' 343F               	retlw	63
   376  0014' 3400               	retlw	0
   377  0015' 3400               	retlw	0
   378  0016' 3420               	retlw	32
   379  0017' 3441               	retlw	65
   380  0018' 3400               	retlw	0
   381  0019' 3400               	retlw	0
   382  001A' 34C8               	retlw	200
   383  001B' 3442               	retlw	66
   384  001C' 3400               	retlw	0
   385  001D' 3400               	retlw	0
   386  001E' 347A               	retlw	122
   387  001F' 3444               	retlw	68
   388  0020' 3400               	retlw	0
   389  0021' 3440               	retlw	64
   390  0022' 341C               	retlw	28
   391  0023' 3446               	retlw	70
   392  0024' 3400               	retlw	0
   393  0025' 3450               	retlw	80
   394  0026' 34C3               	retlw	195
   395  0027' 3447               	retlw	71
   396  0028' 3400               	retlw	0
   397  0029' 3424               	retlw	36
   398  002A' 3474               	retlw	116
   399  002B' 3449               	retlw	73
   400  002C' 3480               	retlw	128
   401  002D' 3496               	retlw	150
   402  002E' 3418               	retlw	24
   403  002F' 344B               	retlw	75
   404  0030' 3420               	retlw	32
   405  0031' 34BC               	retlw	188
   406  0032' 34BE               	retlw	190
   407  0033' 344C               	retlw	76
   408  0034' 3428               	retlw	40
   409  0035' 346B               	retlw	107
   410  0036' 346E               	retlw	110
   411  0037' 344E               	retlw	78
   412  0038' 34F9               	retlw	249
   413  0039' 3402               	retlw	2
   414  003A' 3415               	retlw	21
   415  003B' 3450               	retlw	80
   416  003C' 34EC               	retlw	236
   417  003D' 3478               	retlw	120
   418  003E' 34AD               	retlw	173
   419  003F' 3460               	retlw	96
   420  0040' 34CA               	retlw	202
   421  0041' 34F2               	retlw	242
   422  0042' 3449               	retlw	73
   423  0043' 3471               	retlw	113
   424  0044'                    __end_of__powers_:
   425  0044'                    __npowers_:
   426  0044' 3400               	retlw	0
   427  0045' 3400               	retlw	0
   428  0046' 3480               	retlw	128
   429  0047' 343F               	retlw	63
   430  0048' 34CD               	retlw	205
   431  0049' 34CC               	retlw	204
   432  004A' 34CC               	retlw	204
   433  004B' 343D               	retlw	61
   434  004C' 340A               	retlw	10
   435  004D' 34D7               	retlw	215
   436  004E' 3423               	retlw	35
   437  004F' 343C               	retlw	60
   438  0050' 346F               	retlw	111
   439  0051' 3412               	retlw	18
   440  0052' 3483               	retlw	131
   441  0053' 343A               	retlw	58
   442  0054' 3417               	retlw	23
   443  0055' 34B7               	retlw	183
   444  0056' 34D1               	retlw	209
   445  0057' 3438               	retlw	56
   446  0058' 34AC               	retlw	172
   447  0059' 34C5               	retlw	197
   448  005A' 3427               	retlw	39
   449  005B' 3437               	retlw	55
   450  005C' 34BD               	retlw	189
   451  005D' 3437               	retlw	55
   452  005E' 3486               	retlw	134
   453  005F' 3435               	retlw	53
   454  0060' 3495               	retlw	149
   455  0061' 34BF               	retlw	191
   456  0062' 34D6               	retlw	214
   457  0063' 3433               	retlw	51
   458  0064' 3477               	retlw	119
   459  0065' 34CC               	retlw	204
   460  0066' 342B               	retlw	43
   461  0067' 3432               	retlw	50
   462  0068' 345F               	retlw	95
   463  0069' 3470               	retlw	112
   464  006A' 3489               	retlw	137
   465  006B' 3430               	retlw	48
   466  006C' 34FF               	retlw	255
   467  006D' 34E6               	retlw	230
   468  006E' 34DB               	retlw	219
   469  006F' 342E               	retlw	46
   470  0070' 3408               	retlw	8
   471  0071' 34E5               	retlw	229
   472  0072' 343C               	retlw	60
   473  0073' 341E               	retlw	30
   474  0074' 3460               	retlw	96
   475  0075' 3442               	retlw	66
   476  0076' 34A2               	retlw	162
   477  0077' 340D               	retlw	13
   478  0078'                    __end_of__npowers_:
   479  0078'                    _dpowers:
   480  0078' 3401               	retlw	1
   481  0079' 3400               	retlw	0
   482  007A' 3400               	retlw	0
   483  007B' 3400               	retlw	0
   484  007C' 340A               	retlw	10
   485  007D' 3400               	retlw	0
   486  007E' 3400               	retlw	0
   487  007F' 3400               	retlw	0
   488  0080' 3464               	retlw	100
   489  0081' 3400               	retlw	0
   490  0082' 3400               	retlw	0
   491  0083' 3400               	retlw	0
   492  0084' 34E8               	retlw	232
   493  0085' 3403               	retlw	3
   494  0086' 3400               	retlw	0
   495  0087' 3400               	retlw	0
   496  0088' 3410               	retlw	16
   497  0089' 3427               	retlw	39
   498  008A' 3400               	retlw	0
   499  008B' 3400               	retlw	0
   500  008C' 34A0               	retlw	160
   501  008D' 3486               	retlw	134
   502  008E' 3401               	retlw	1
   503  008F' 3400               	retlw	0
   504  0090' 3440               	retlw	64
   505  0091' 3442               	retlw	66
   506  0092' 340F               	retlw	15
   507  0093' 3400               	retlw	0
   508  0094' 3480               	retlw	128
   509  0095' 3496               	retlw	150
   510  0096' 3498               	retlw	152
   511  0097' 3400               	retlw	0
   512  0098' 3400               	retlw	0
   513  0099' 34E1               	retlw	225
   514  009A' 34F5               	retlw	245
   515  009B' 3405               	retlw	5
   516  009C' 3400               	retlw	0
   517  009D' 34CA               	retlw	202
   518  009E' 349A               	retlw	154
   519  009F' 343B               	retlw	59
   520  00A0'                    __end_of_dpowers:
   521  0008                     _PORTDbits	set	8
   522  0009                     _PORTE	set	9
   523  0008                     _PORTD	set	8
   524  0006                     _PORTB	set	6
   525  0005                     _PORTA	set	5
   526  0006                     _PORTBbits	set	6
   527  0001                     _TMR0	set	1
   528  000B                     _INTCONbits	set	11
   529  000C                     _PIR1bits	set	12
   530  0043                     _RD3	set	67
   531  0047                     _RD7	set	71
   532  0046                     _RD6	set	70
   533  0045                     _RD5	set	69
   534  0044                     _RD4	set	68
   535  008F                     _OSCCONbits	set	143
   536  008C                     _PIE1bits	set	140
   537  0081                     _OPTION_REGbits	set	129
   538  0096                     _IOCB	set	150
   539  0089                     _TRISE	set	137
   540  0088                     _TRISD	set	136
   541  0086                     _TRISB	set	134
   542  0085                     _TRISA	set	133
   543  0189                     _ANSELH	set	393
   544  0188                     _ANSEL	set	392
   545  00A0'                    STR_1:
   546  00A0' 3443               	retlw	67	;'C'
   547  00A1' 346F               	retlw	111	;'o'
   548  00A2' 346E               	retlw	110	;'n'
   549  00A3' 3466               	retlw	102	;'f'
   550  00A4' 3469               	retlw	105	;'i'
   551  00A5' 3467               	retlw	103	;'g'
   552  00A6' 342E               	retlw	46	;'.'
   553  00A7' 3420               	retlw	32	;' '
   554  00A8' 3448               	retlw	72	;'H'
   555  00A9' 346F               	retlw	111	;'o'
   556  00AA' 3472               	retlw	114	;'r'
   557  00AB' 3461               	retlw	97	;'a'
   558  00AC' 3400               	retlw	0
   559  00AD'                    STR_3:
   560  00AD' 3448               	retlw	72	;'H'
   561  00AE' 344F               	retlw	79	;'O'
   562  00AF' 3452               	retlw	82	;'R'
   563  00B0' 3441               	retlw	65	;'A'
   564  00B1' 3400               	retlw	0
   565  00B2'                    STR_4:
   566  00B2' 3425               	retlw	37	;'%'
   567  00B3' 342E               	retlw	46	;'.'
   568  00B4' 3432               	retlw	50	;'2'
   569  00B5' 3466               	retlw	102	;'f'
   570  00B6' 3400               	retlw	0
   571  00B7'                    STR_2:
   572  00B7' 3453               	retlw	83	;'S'
   573  00B8' 3431               	retlw	49	;'1'
   574  00B9' 3400               	retlw	0
   575  00BA'                    STR_6:
   576  00BA' 343A               	retlw	58	;':'
   577  00BB' 3400               	retlw	0
   578  00BC'                    STR_5:
   579  00BC' 3456               	retlw	86	;'V'
   580  00BD' 3400               	retlw	0
   581  00BA'                    
   582                           	psect	cinit
   583  0000'                    start_initialization:	
   584                           ; #config settings
   585                           
   586  0000'                    __initialization:
   587                           
   588                           ; Initialize objects allocated to BANK1
   589  0000' 1383               	bcf	3,7	;select IRP bank0
   590  0001' 3000'              	movlw	low (__pdataBANK1+14)
   591  0002' 00FD               	movwf	btemp+-1
   592  0003' 3000'              	movlw	high __pidataBANK1
   593  0004' 00FE               	movwf	btemp
   594  0005' 3000'              	movlw	low __pidataBANK1
   595  0006' 00FF               	movwf	btemp+1
   596  0007' 3000'              	movlw	low __pdataBANK1
   597  0008' 0084               	movwf	4
   598  0009' 120A' 118A' 2000' 120A' 118A' 	fcall	init_ram0
   599                           
   600                           ; Clear objects allocated to BANK1
   601  000E' 3000'              	movlw	low __pbssBANK1
   602  000F' 0084               	movwf	4
   603  0010' 3000'              	movlw	low (__pbssBANK1+23)
   604  0011' 120A' 118A' 2000' 120A' 118A' 	fcall	clear_ram0
   605                           
   606                           ; Clear objects allocated to BANK0
   607  0016' 0180'              	clrf	__pbssBANK0& (0+127)
   608                           
   609                           ; Clear objects allocated to COMMON
   610  0017' 0180'              	clrf	__pbssCOMMON& (0+127)
   611  0018' 0180'              	clrf	(__pbssCOMMON+1)& (0+127)
   612  0019'                    end_of_initialization:	
   613                           ;End of C runtime variable initialization code
   614                           
   615  0019'                    __end_of__initialization:
   616  0019' 0183               	clrf	3
   617  001A' 120A' 118A' 2800'  	ljmp	_main	;jump to C main() function
   618                           
   619                           	psect	bssCOMMON
   620  0000'                    __pbssCOMMON:
   621  0000'                    _temporal:
   622  0000'                    	ds	2
   623                           
   624                           	psect	bssBANK0
   625  0000'                    __pbssBANK0:
   626  0000'                    _tens:
   627  0000'                    	ds	1
   628                           
   629                           	psect	bssBANK1
   630  0000'                    __pbssBANK1:
   631  0000'                    _voltaje1:
   632  0000'                    	ds	4
   633  0004'                    _VOLTAJE1:
   634  0004'                    	ds	4
   635  0008'                    _horas:
   636  0008'                    	ds	2
   637  000A'                    _cont:
   638  000A'                    	ds	2
   639  000C'                    _year:
   640  000C'                    	ds	1
   641  000D'                    _month:
   642  000D'                    	ds	1
   643  000E'                    _day:
   644  000E'                    	ds	1
   645  000F'                    _hora:
   646  000F'                    	ds	1
   647  0010'                    _min:
   648  0010'                    	ds	1
   649  0011'                    _sec:
   650  0011'                    	ds	1
   651  0012'                    _ones:
   652  0012'                    	ds	1
   653  0013'                    _ADC1:
   654  0013'                    	ds	4
   655                           
   656                           	psect	dataBANK1
   657  0000'                    __pdataBANK1:
   658  0000'                    _FECHA:
   659  0000'                    	ds	7
   660  0007'                    _HORA:
   661  0007'                    	ds	7
   662                           
   663                           	psect	inittext
   664  0000'                    init_fetch0:	
   665                           ;	Called with low address in FSR and high address in W
   666                           
   667  0000' 087E               	movf	btemp,w
   668  0001' 008A               	movwf	10
   669  0002' 087F               	movf	btemp+1,w
   670  0003' 0082               	movwf	2
   671  0004'                    init_ram0:	
   672                           ;Called with:
   673                           ;	high address of idata address in btemp 
   674                           ;	low address of idata address in btemp+1 
   675                           ;	low address of data in FSR
   676                           ;	high address + 1 of data in btemp-1
   677                           
   678  0004' 120A' 118A' 2000' 120A' 118A' 	fcall	init_fetch0
   679  0009' 0080               	movwf	0
   680  000A' 0A84               	incf	4,f
   681  000B' 0804               	movf	4,w
   682  000C' 067D               	xorwf	btemp+-1,w
   683  000D' 1903               	btfsc	3,2
   684  000E' 3400               	retlw	0
   685  000F' 0AFF               	incf	btemp+1,f
   686  0010' 1903               	btfsc	3,2
   687  0011' 0AFE               	incf	btemp,f
   688  0012' 2800'              	goto	init_ram0
   689                           
   690                           	psect	clrtext
   691  0000'                    clear_ram0:	
   692                           ;	Called with FSR containing the base address, and
   693                           ;	W with the last address+1
   694                           
   695  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
   696  0001'                    clrloop0:
   697  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
   698  0002' 0A84               	incf	4,f	;increment pointer
   699  0003' 0604               	xorwf	4,w	;XOR with final address
   700  0004' 1903               	btfsc	3,2	;have we reached the end yet?
   701  0005' 3400               	retlw	0	;all done for this memory range, return
   702  0006' 0604               	xorwf	4,w	;XOR again to restore value
   703  0007' 2800'              	goto	clrloop0	;do the next byte
   704                           
   705                           	psect	cstackBANK1
   706  0000'                    __pcstackBANK1:
   707  0000'                    ?___flsub:
   708  0000'                    ___flsub@a:	
   709                           ; 4 bytes @ 0x0
   710                           
   711                           
   712                           ; 4 bytes @ 0x0
   713  0000'                    	ds	4
   714  0004'                    ___flsub@b:
   715                           
   716                           ; 4 bytes @ 0x4
   717  0004'                    	ds	4
   718  0008'                    ??_sprintf:
   719                           
   720                           ; 1 bytes @ 0x8
   721  0008'                    	ds	5
   722  000D'                    _sprintf$1052:
   723                           
   724                           ; 4 bytes @ 0xD
   725  000D'                    	ds	4
   726  0011'                    sprintf@ap:
   727                           
   728                           ; 1 bytes @ 0x11
   729  0011'                    	ds	1
   730  0012'                    sprintf@flag:
   731                           
   732                           ; 2 bytes @ 0x12
   733  0012'                    	ds	2
   734  0014'                    sprintf@val:
   735                           
   736                           ; 4 bytes @ 0x14
   737  0014'                    	ds	4
   738  0018'                    sprintf@eexp:
   739                           
   740                           ; 2 bytes @ 0x18
   741  0018'                    	ds	2
   742  001A'                    sprintf@sp:
   743                           
   744                           ; 1 bytes @ 0x1A
   745  001A'                    	ds	1
   746  001B'                    sprintf@tmpval:
   747                           
   748                           ; 4 bytes @ 0x1B
   749  001B'                    	ds	4
   750  001F'                    sprintf@prec:
   751                           
   752                           ; 2 bytes @ 0x1F
   753  001F'                    	ds	2
   754  0021'                    sprintf@fval:
   755                           
   756                           ; 4 bytes @ 0x21
   757  0021'                    	ds	4
   758  0025'                    sprintf@c:
   759                           
   760                           ; 1 bytes @ 0x25
   761  0025'                    	ds	1
   762  0026'                    ??_main:
   763                           
   764                           ; 1 bytes @ 0x26
   765  0026'                    	ds	2
   766                           
   767                           	psect	cstackCOMMON
   768  0000'                    __pcstackCOMMON:
   769  0000'                    ?_isdigit:
   770  0000'                    ?_setup:	
   771                           ; 1 bit 
   772                           
   773  0000'                    ?_Lcd_Init:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0000'                    ?_Lcd_Clear:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0000'                    ?_Lcd_Write_Char:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0000'                    ?_I2C_Master_Start:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0000'                    ??_I2C_Master_Start:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0000'                    ?_I2C_Master_Write:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0000'                    ??_I2C_Master_Write:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  0000'                    ?_I2C_Master_Stop:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0000'                    ??_I2C_Master_Stop:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0000'                    ?_leer_hora:	
   801                           ; 1 bytes @ 0x0
   802                           
   803  0000'                    ??_leer_hora:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0000'                    ??_I2C_Master_Read:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0000'                    ?_I2C_Master_Init:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0000'                    ??_I2C_Master_Init:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0000'                    ?_isr:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0000'                    ??_isr:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0000'                    ?_main:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0000'                    ?_Lcd_Port:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0000'                    ?_Lcd_Cmd:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0000'                    ?_I2C_Master_Read:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0000'                    _I2C_Master_Write$0:	
   834                           ; 2 bytes @ 0x0
   835                           
   836  0000'                    _I2C_Master_Read$0:	
   837                           ; 2 bytes @ 0x0
   838                           
   839  0000'                    _I2C_Master_Init$0:	
   840                           ; 2 bytes @ 0x0
   841                           
   842                           
   843                           ; 4 bytes @ 0x0
   844  0000'                    	ds	2
   845  0002'                    ?___fleq:
   846  0002'                    ?___flge:	
   847                           ; 1 bit 
   848                           
   849  0002'                    ??_setup:	
   850                           ; 1 bit 
   851                           
   852  0002'                    ??_isdigit:	
   853                           ; 1 bytes @ 0x2
   854                           
   855  0002'                    ??_Lcd_Port:	
   856                           ; 1 bytes @ 0x2
   857                           
   858  0002'                    ?__Umul8_16:	
   859                           ; 1 bytes @ 0x2
   860                           
   861  0002'                    ?___wmul:	
   862                           ; 2 bytes @ 0x2
   863                           
   864  0002'                    ?___awmod:	
   865                           ; 2 bytes @ 0x2
   866                           
   867  0002'                    ?___lwdiv:	
   868                           ; 2 bytes @ 0x2
   869                           
   870  0002'                    ?__tdiv_to_l_:	
   871                           ; 2 bytes @ 0x2
   872                           
   873  0002'                    ?__div_to_l_:	
   874                           ; 4 bytes @ 0x2
   875                           
   876  0002'                    ?___lldiv:	
   877                           ; 4 bytes @ 0x2
   878                           
   879  0002'                    ?___flneg:	
   880                           ; 4 bytes @ 0x2
   881                           
   882  0002'                    ?___llmod:	
   883                           ; 4 bytes @ 0x2
   884                           
   885  0002'                    ?___xxtofl:	
   886                           ; 4 bytes @ 0x2
   887                           
   888  0002'                    Lcd_Port@a:	
   889                           ; 4 bytes @ 0x2
   890                           
   891  0002'                    __Umul8_16@multiplicand:	
   892                           ; 1 bytes @ 0x2
   893                           
   894  0002'                    _isdigit$870:	
   895                           ; 1 bytes @ 0x2
   896                           
   897  0002'                    ___wmul@multiplier:	
   898                           ; 1 bytes @ 0x2
   899                           
   900  0002'                    ___awmod@divisor:	
   901                           ; 2 bytes @ 0x2
   902                           
   903  0002'                    ___lwdiv@divisor:	
   904                           ; 2 bytes @ 0x2
   905                           
   906  0002'                    ___lldiv@divisor:	
   907                           ; 2 bytes @ 0x2
   908                           
   909  0002'                    __div_to_l_@f1:	
   910                           ; 4 bytes @ 0x2
   911                           
   912  0002'                    ___fleq@ff1:	
   913                           ; 4 bytes @ 0x2
   914                           
   915  0002'                    ___flge@ff1:	
   916                           ; 4 bytes @ 0x2
   917                           
   918  0002'                    ___flneg@f1:	
   919                           ; 4 bytes @ 0x2
   920                           
   921  0002'                    __tdiv_to_l_@f1:	
   922                           ; 4 bytes @ 0x2
   923                           
   924  0002'                    ___llmod@divisor:	
   925                           ; 4 bytes @ 0x2
   926                           
   927  0002'                    ___xxtofl@val:	
   928                           ; 4 bytes @ 0x2
   929                           
   930                           
   931                           ; 4 bytes @ 0x2
   932  0002'                    	ds	1
   933  0003'                    ??_Lcd_Write_Char:
   934  0003'                    ??_Lcd_Cmd:	
   935                           ; 1 bytes @ 0x3
   936                           
   937  0003'                    isdigit@c:	
   938                           ; 1 bytes @ 0x3
   939                           
   940                           
   941                           ; 1 bytes @ 0x3
   942  0003'                    	ds	1
   943  0004'                    ??__Umul8_16:
   944  0004'                    Lcd_Write_Char@temp:	
   945                           ; 1 bytes @ 0x4
   946                           
   947  0004'                    ___wmul@multiplicand:	
   948                           ; 1 bytes @ 0x4
   949                           
   950  0004'                    ___awmod@dividend:	
   951                           ; 2 bytes @ 0x4
   952                           
   953  0004'                    ___lwdiv@dividend:	
   954                           ; 2 bytes @ 0x4
   955                           
   956                           
   957                           ; 2 bytes @ 0x4
   958  0004'                    	ds	1
   959  0005'                    Lcd_Cmd@a:
   960  0005'                    Lcd_Write_Char@y:	
   961                           ; 1 bytes @ 0x5
   962                           
   963                           
   964                           ; 1 bytes @ 0x5
   965  0005'                    	ds	1
   966  0006'                    ??_Lcd_Init:
   967  0006'                    ??_Lcd_Clear:	
   968                           ; 1 bytes @ 0x6
   969                           
   970  0006'                    ?_Lcd_Set_Cursor:	
   971                           ; 1 bytes @ 0x6
   972                           
   973  0006'                    ??___wmul:	
   974                           ; 1 bytes @ 0x6
   975                           
   976  0006'                    ??___awmod:	
   977                           ; 1 bytes @ 0x6
   978                           
   979  0006'                    ??___flneg:	
   980                           ; 1 bytes @ 0x6
   981                           
   982  0006'                    ??___lwdiv:	
   983                           ; 1 bytes @ 0x6
   984                           
   985  0006'                    ??___xxtofl:	
   986                           ; 1 bytes @ 0x6
   987                           
   988  0006'                    Lcd_Set_Cursor@b:	
   989                           ; 1 bytes @ 0x6
   990                           
   991  0006'                    Lcd_Write_Char@a:	
   992                           ; 1 bytes @ 0x6
   993                           
   994  0006'                    ___wmul@product:	
   995                           ; 1 bytes @ 0x6
   996                           
   997  0006'                    ___lldiv@dividend:	
   998                           ; 2 bytes @ 0x6
   999                           
  1000  0006'                    __div_to_l_@f2:	
  1001                           ; 4 bytes @ 0x6
  1002                           
  1003  0006'                    ___fleq@ff2:	
  1004                           ; 4 bytes @ 0x6
  1005                           
  1006  0006'                    ___flge@ff2:	
  1007                           ; 4 bytes @ 0x6
  1008                           
  1009  0006'                    __tdiv_to_l_@f2:	
  1010                           ; 4 bytes @ 0x6
  1011                           
  1012  0006'                    ___llmod@dividend:	
  1013                           ; 4 bytes @ 0x6
  1014                           
  1015                           
  1016                           ; 4 bytes @ 0x6
  1017  0006'                    	ds	1
  1018  0007'                    ??_Lcd_Set_Cursor:
  1019  0007'                    ?_Lcd_Write_String:	
  1020                           ; 1 bytes @ 0x7
  1021                           
  1022  0007'                    ___awmod@counter:	
  1023                           ; 1 bytes @ 0x7
  1024                           
  1025  0007'                    Lcd_Write_String@a:	
  1026                           ; 1 bytes @ 0x7
  1027                           
  1028  0007'                    ___lwdiv@quotient:	
  1029                           ; 2 bytes @ 0x7
  1030                           
  1031                           
  1032                           ; 2 bytes @ 0x7
  1033  0007'                    	ds	1
  1034  0008'                    ___awmod@sign:
  1035                           
  1036                           ; 1 bytes @ 0x8
  1037  0008'                    	ds	1
  1038  0009'                    ??___awdiv:
  1039  0009'                    ___lwdiv@counter:	
  1040                           ; 1 bytes @ 0x9
  1041                           
  1042                           
  1043                           ; 1 bytes @ 0x9
  1044  0009'                    	ds	1
  1045  000A'                    ??___flsub:
  1046                           
  1047                           	psect	cstackBANK0
  1048  0000'                    __pcstackBANK0:	
  1049                           ; 1 bytes @ 0xA
  1050                           
  1051  0000'                    ??_Lcd_Write_String:
  1052  0000'                    ??__tdiv_to_l_:	
  1053                           ; 1 bytes @ 0x0
  1054                           
  1055  0000'                    ??__div_to_l_:	
  1056                           ; 1 bytes @ 0x0
  1057                           
  1058  0000'                    ??___lldiv:	
  1059                           ; 1 bytes @ 0x0
  1060                           
  1061  0000'                    ??___fleq:	
  1062                           ; 1 bytes @ 0x0
  1063                           
  1064  0000'                    ??___flge:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067  0000'                    ??___llmod:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070  0000'                    ?___awdiv:	
  1071                           ; 1 bytes @ 0x0
  1072                           
  1073  0000'                    ?___lwmod:	
  1074                           ; 2 bytes @ 0x0
  1075                           
  1076  0000'                    Lcd_Set_Cursor@a:	
  1077                           ; 2 bytes @ 0x0
  1078                           
  1079  0000'                    ___xxtofl@sign:	
  1080                           ; 1 bytes @ 0x0
  1081                           
  1082  0000'                    ___awdiv@divisor:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085  0000'                    ___lwmod@divisor:	
  1086                           ; 2 bytes @ 0x0
  1087                           
  1088  0000'                    __Umul8_16@product:	
  1089                           ; 2 bytes @ 0x0
  1090                           
  1091                           
  1092                           ; 2 bytes @ 0x0
  1093  0000'                    	ds	1
  1094  0001'                    Lcd_Set_Cursor@z:
  1095  0001'                    ___llmod@counter:	
  1096                           ; 1 bytes @ 0x1
  1097                           
  1098  0001'                    ___xxtofl@exp:	
  1099                           ; 1 bytes @ 0x1
  1100                           
  1101  0001'                    ___lldiv@quotient:	
  1102                           ; 1 bytes @ 0x1
  1103                           
  1104  0001'                    __div_to_l_@quot:	
  1105                           ; 4 bytes @ 0x1
  1106                           
  1107                           
  1108                           ; 4 bytes @ 0x1
  1109  0001'                    	ds	1
  1110  0002'                    Lcd_Set_Cursor@y:
  1111  0002'                    ___awdiv@dividend:	
  1112                           ; 1 bytes @ 0x2
  1113                           
  1114  0002'                    ___lwmod@dividend:	
  1115                           ; 2 bytes @ 0x2
  1116                           
  1117  0002'                    __Umul8_16@word_mpld:	
  1118                           ; 2 bytes @ 0x2
  1119                           
  1120  0002'                    ___xxtofl@arg:	
  1121                           ; 2 bytes @ 0x2
  1122                           
  1123                           
  1124                           ; 4 bytes @ 0x2
  1125  0002'                    	ds	1
  1126  0003'                    Lcd_Set_Cursor@temp:
  1127  0003'                    Lcd_Write_String@i:	
  1128                           ; 1 bytes @ 0x3
  1129                           
  1130  0003'                    __tdiv_to_l_@quot:	
  1131                           ; 2 bytes @ 0x3
  1132                           
  1133                           
  1134                           ; 4 bytes @ 0x3
  1135  0003'                    	ds	1
  1136  0004'                    ??___lwmod:
  1137  0004'                    ___awdiv@counter:	
  1138                           ; 1 bytes @ 0x4
  1139                           
  1140  0004'                    __Umul8_16@multiplier:	
  1141                           ; 1 bytes @ 0x4
  1142                           
  1143                           
  1144                           ; 1 bytes @ 0x4
  1145  0004'                    	ds	1
  1146  0005'                    ___lldiv@counter:
  1147  0005'                    ___awdiv@sign:	
  1148                           ; 1 bytes @ 0x5
  1149                           
  1150  0005'                    __div_to_l_@cntr:	
  1151                           ; 1 bytes @ 0x5
  1152                           
  1153  0005'                    ___lwmod@counter:	
  1154                           ; 1 bytes @ 0x5
  1155                           
  1156                           
  1157                           ; 1 bytes @ 0x5
  1158  0005'                    	ds	1
  1159  0006'                    __div_to_l_@exp1:
  1160  0006'                    ___awdiv@quotient:	
  1161                           ; 1 bytes @ 0x6
  1162                           
  1163                           
  1164                           ; 2 bytes @ 0x6
  1165  0006'                    	ds	1
  1166  0007'                    __tdiv_to_l_@cntr:
  1167                           
  1168                           ; 1 bytes @ 0x7
  1169  0007'                    	ds	1
  1170  0008'                    ?___flmul:
  1171  0008'                    __tdiv_to_l_@exp1:	
  1172                           ; 4 bytes @ 0x8
  1173                           
  1174  0008'                    ___flmul@b:	
  1175                           ; 1 bytes @ 0x8
  1176                           
  1177                           
  1178                           ; 4 bytes @ 0x8
  1179  0008'                    	ds	4
  1180  000C'                    ___flmul@a:
  1181                           
  1182                           ; 4 bytes @ 0xC
  1183  000C'                    	ds	4
  1184  0010'                    ??___flmul:
  1185                           
  1186                           ; 1 bytes @ 0x10
  1187  0010'                    	ds	5
  1188  0015'                    ___flmul@sign:
  1189                           
  1190                           ; 1 bytes @ 0x15
  1191  0015'                    	ds	1
  1192  0016'                    ___flmul@aexp:
  1193                           
  1194                           ; 1 bytes @ 0x16
  1195  0016'                    	ds	1
  1196  0017'                    ___flmul@grs:
  1197                           
  1198                           ; 4 bytes @ 0x17
  1199  0017'                    	ds	4
  1200  001B'                    ___flmul@bexp:
  1201                           
  1202                           ; 1 bytes @ 0x1B
  1203  001B'                    	ds	1
  1204  001C'                    ___flmul@prod:
  1205                           
  1206                           ; 4 bytes @ 0x1C
  1207  001C'                    	ds	4
  1208  0020'                    ___flmul@temp:
  1209                           
  1210                           ; 2 bytes @ 0x20
  1211  0020'                    	ds	2
  1212  0022'                    ?_fround:
  1213  0022'                    ?_scale:	
  1214                           ; 4 bytes @ 0x22
  1215                           
  1216  0022'                    ?___fldiv:	
  1217                           ; 4 bytes @ 0x22
  1218                           
  1219  0022'                    ___fldiv@a:	
  1220                           ; 4 bytes @ 0x22
  1221                           
  1222                           
  1223                           ; 4 bytes @ 0x22
  1224  0022'                    	ds	4
  1225  0026'                    ??_fround:
  1226  0026'                    ??_scale:	
  1227                           ; 1 bytes @ 0x26
  1228                           
  1229  0026'                    ___fldiv@b:	
  1230                           ; 1 bytes @ 0x26
  1231                           
  1232                           
  1233                           ; 4 bytes @ 0x26
  1234  0026'                    	ds	4
  1235  002A'                    ??___fldiv:
  1236                           
  1237                           ; 1 bytes @ 0x2A
  1238  002A'                    	ds	3
  1239  002D'                    _fround$1050:
  1240                           
  1241                           ; 4 bytes @ 0x2D
  1242  002D'                    	ds	2
  1243  002F'                    ___fldiv@rem:
  1244                           
  1245                           ; 4 bytes @ 0x2F
  1246  002F'                    	ds	1
  1247  0030'                    _scale$1051:
  1248                           
  1249                           ; 4 bytes @ 0x30
  1250  0030'                    	ds	1
  1251  0031'                    _fround$1049:
  1252                           
  1253                           ; 4 bytes @ 0x31
  1254  0031'                    	ds	2
  1255  0033'                    ___fldiv@sign:
  1256                           
  1257                           ; 1 bytes @ 0x33
  1258  0033'                    	ds	1
  1259  0034'                    scale@scl:
  1260  0034'                    ___fldiv@new_exp:	
  1261                           ; 1 bytes @ 0x34
  1262                           
  1263                           
  1264                           ; 2 bytes @ 0x34
  1265  0034'                    	ds	1
  1266  0035'                    ?___fltol:
  1267  0035'                    fround@prec:	
  1268                           ; 4 bytes @ 0x35
  1269                           
  1270  0035'                    ___fltol@f1:	
  1271                           ; 1 bytes @ 0x35
  1272                           
  1273                           
  1274                           ; 4 bytes @ 0x35
  1275  0035'                    	ds	1
  1276  0036'                    ?___fladd:
  1277  0036'                    ___fladd@b:	
  1278                           ; 4 bytes @ 0x36
  1279                           
  1280  0036'                    ___fldiv@grs:	
  1281                           ; 4 bytes @ 0x36
  1282                           
  1283                           
  1284                           ; 4 bytes @ 0x36
  1285  0036'                    	ds	3
  1286  0039'                    ??___fltol:
  1287                           
  1288                           ; 1 bytes @ 0x39
  1289  0039'                    	ds	1
  1290  003A'                    ___fldiv@bexp:
  1291  003A'                    ___fladd@a:	
  1292                           ; 1 bytes @ 0x3A
  1293                           
  1294                           
  1295                           ; 4 bytes @ 0x3A
  1296  003A'                    	ds	1
  1297  003B'                    ___fldiv@aexp:
  1298                           
  1299                           ; 1 bytes @ 0x3B
  1300  003B'                    	ds	2
  1301  003D'                    ___fltol@sign1:
  1302                           
  1303                           ; 1 bytes @ 0x3D
  1304  003D'                    	ds	1
  1305  003E'                    ??___fladd:
  1306  003E'                    ___fltol@exp1:	
  1307                           ; 1 bytes @ 0x3E
  1308                           
  1309                           
  1310                           ; 1 bytes @ 0x3E
  1311  003E'                    	ds	8
  1312  0046'                    ___fladd@signs:
  1313                           
  1314                           ; 1 bytes @ 0x46
  1315  0046'                    	ds	1
  1316  0047'                    ___fladd@aexp:
  1317                           
  1318                           ; 1 bytes @ 0x47
  1319  0047'                    	ds	1
  1320  0048'                    ___fladd@bexp:
  1321                           
  1322                           ; 1 bytes @ 0x48
  1323  0048'                    	ds	1
  1324  0049'                    ___fladd@grs:
  1325                           
  1326                           ; 1 bytes @ 0x49
  1327  0049'                    	ds	1
  1328  004A'                    ?_sprintf:
  1329  004A'                    sprintf@f:	
  1330                           ; 2 bytes @ 0x4A
  1331                           
  1332                           
  1333                           ; 1 bytes @ 0x4A
  1334  004A'                    	ds	5
  1335                           
  1336                           	psect	maintext
  1337  0000'                    __pmaintext:	
  1338 ;;
  1339 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1340 ;;
  1341 ;; *************** function _main *****************
  1342 ;; Defined at:
  1343 ;;		line 162 in file "main.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;		None
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;		None
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  1    wreg      void 
  1350 ;; Registers used:
  1351 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1352 ;; Tracked objects:
  1353 ;;		On entry : B00/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1357 ;;      Params:         0       0       0       0       0
  1358 ;;      Locals:         0       0       0       0       0
  1359 ;;      Temps:          0       0       2       0       0
  1360 ;;      Totals:         0       0       2       0       0
  1361 ;;Total ram usage:        2 bytes
  1362 ;; Hardware stack levels required when called: 5
  1363 ;; This function calls:
  1364 ;;		_I2C_Master_Read
  1365 ;;		_I2C_Master_Start
  1366 ;;		_I2C_Master_Stop
  1367 ;;		_I2C_Master_Write
  1368 ;;		_Lcd_Clear
  1369 ;;		_Lcd_Init
  1370 ;;		_Lcd_Set_Cursor
  1371 ;;		_Lcd_Write_Char
  1372 ;;		_Lcd_Write_String
  1373 ;;		___fldiv
  1374 ;;		___flmul
  1375 ;;		___lwdiv
  1376 ;;		___lwmod
  1377 ;;		___xxtofl
  1378 ;;		_leer_hora
  1379 ;;		_setup
  1380 ;;		_sprintf
  1381 ;; This function is called by:
  1382 ;;		Startup code after reset
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386  0000'                    _main:	
  1387                           ;psect for function _main
  1388                           
  1389  0000'                    l4475:	
  1390                           ;incstack = 0
  1391                           ; Regs used in _main: [allreg]
  1392                           
  1393                           
  1394                           ;main.c: 163:     setup();
  1395  0000' 120A' 118A' 2000' 120A' 118A' 	fcall	_setup
  1396  0005'                    l4477:
  1397                           
  1398                           ;main.c: 164:     Lcd_Init();
  1399  0005' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Init
  1400  000A'                    l4479:
  1401                           
  1402                           ;main.c: 165:     Lcd_Clear();
  1403  000A' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Clear
  1404                           
  1405                           ;main.c: 167:     while (cont==0){
  1406  000F' 2800'              	goto	l4495
  1407  0010'                    l4481:
  1408                           
  1409                           ;main.c: 168:         Lcd_Set_Cursor(1,7);
  1410  0010' 3007               	movlw	7
  1411  0011' 0086'              	movwf	Lcd_Set_Cursor@b
  1412  0012' 3001               	movlw	1
  1413  0013' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1414  0018'                    l4483:
  1415                           
  1416                           ;main.c: 169:         Lcd_Write_String("Config. Hora");
  1417  0018' 3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1418  0019' 0087'              	movwf	Lcd_Write_String@a
  1419  001A' 3080               	movlw	128
  1420  001B' 0088'              	movwf	Lcd_Write_String@a+1
  1421  001C' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1422  0021'                    l4485:
  1423                           
  1424                           ;main.c: 170:         Lcd_Set_Cursor(2,7);
  1425  0021' 3007               	movlw	7
  1426  0022' 0086'              	movwf	Lcd_Set_Cursor@b
  1427  0023' 3002               	movlw	2
  1428  0024' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1429  0029'                    l4487:
  1430                           
  1431                           ;main.c: 171:         tens = (horas/10)%10;
  1432  0029' 300A               	movlw	10
  1433  002A' 1283               	bcf	3,5	;RP0=0, select bank0
  1434  002B' 1303               	bcf	3,6	;RP1=0, select bank0
  1435  002C' 0080'              	movwf	___lwmod@divisor
  1436  002D' 3000               	movlw	0
  1437  002E' 0081'              	movwf	___lwmod@divisor+1
  1438  002F' 300A               	movlw	10
  1439  0030' 0082'              	movwf	___lwdiv@divisor
  1440  0031' 3000               	movlw	0
  1441  0032' 0083'              	movwf	___lwdiv@divisor+1
  1442  0033' 1683               	bsf	3,5	;RP0=1, select bank1
  1443  0034' 1303               	bcf	3,6	;RP1=0, select bank1
  1444  0035' 0800'              	movf	(_horas+1)^(0+128),w
  1445  0036' 0085'              	movwf	___lwdiv@dividend+1
  1446  0037' 0800'              	movf	_horas^(0+128),w
  1447  0038' 0084'              	movwf	___lwdiv@dividend
  1448  0039' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  1449  003E' 0803'              	movf	?___lwdiv+1,w
  1450  003F' 1283               	bcf	3,5	;RP0=0, select bank0
  1451  0040' 1303               	bcf	3,6	;RP1=0, select bank0
  1452  0041' 0083'              	movwf	___lwmod@dividend+1
  1453  0042' 0802'              	movf	?___lwdiv,w
  1454  0043' 0082'              	movwf	___lwmod@dividend
  1455  0044' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  1456  0049' 1283               	bcf	3,5	;RP0=0, select bank0
  1457  004A' 1303               	bcf	3,6	;RP1=0, select bank0
  1458  004B' 0800'              	movf	?___lwmod,w
  1459  004C' 0080'              	movwf	_tens
  1460  004D'                    l4489:
  1461                           
  1462                           ;main.c: 172:         ones = horas%10;
  1463  004D' 300A               	movlw	10
  1464  004E' 0080'              	movwf	___lwmod@divisor
  1465  004F' 3000               	movlw	0
  1466  0050' 0081'              	movwf	___lwmod@divisor+1
  1467  0051' 1683               	bsf	3,5	;RP0=1, select bank1
  1468  0052' 1303               	bcf	3,6	;RP1=0, select bank1
  1469  0053' 0800'              	movf	(_horas+1)^(0+128),w
  1470  0054' 1283               	bcf	3,5	;RP0=0, select bank0
  1471  0055' 1303               	bcf	3,6	;RP1=0, select bank0
  1472  0056' 0083'              	movwf	___lwmod@dividend+1
  1473  0057' 1683               	bsf	3,5	;RP0=1, select bank1
  1474  0058' 1303               	bcf	3,6	;RP1=0, select bank1
  1475  0059' 0800'              	movf	_horas^(0+128),w
  1476  005A' 1283               	bcf	3,5	;RP0=0, select bank0
  1477  005B' 1303               	bcf	3,6	;RP1=0, select bank0
  1478  005C' 0082'              	movwf	___lwmod@dividend
  1479  005D' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  1480  0062' 1283               	bcf	3,5	;RP0=0, select bank0
  1481  0063' 1303               	bcf	3,6	;RP1=0, select bank0
  1482  0064' 0800'              	movf	?___lwmod,w
  1483  0065' 1683               	bsf	3,5	;RP0=1, select bank1
  1484  0066' 1303               	bcf	3,6	;RP1=0, select bank1
  1485  0067' 0080'              	movwf	_ones^(0+128)
  1486  0068'                    l4491:
  1487                           
  1488                           ;main.c: 173:         Lcd_Write_Char(horas+48);
  1489  0068' 0800'              	movf	_horas^(0+128),w
  1490  0069' 3E30               	addlw	48
  1491  006A' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_Char
  1492  006F'                    l4493:
  1493                           
  1494                           ;main.c: 174:         Lcd_Write_Char(horas+48);
  1495  006F' 1683               	bsf	3,5	;RP0=1, select bank1
  1496  0070' 1303               	bcf	3,6	;RP1=0, select bank1
  1497  0071' 0800'              	movf	_horas^(0+128),w
  1498  0072' 3E30               	addlw	48
  1499  0073' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_Char
  1500  0078'                    l4495:
  1501                           
  1502                           ;main.c: 167:     while (cont==0){
  1503  0078' 1683               	bsf	3,5	;RP0=1, select bank1
  1504  0079' 1303               	bcf	3,6	;RP1=0, select bank1
  1505  007A' 0800'              	movf	_cont^(0+128),w
  1506  007B' 0400'              	iorwf	(_cont+1)^(0+128),w
  1507  007C' 1903               	btfsc	3,2
  1508  007D' 2800'              	goto	u7711
  1509  007E' 2800'              	goto	u7710
  1510  007F'                    u7711:
  1511  007F' 2800'              	goto	l4481
  1512  0080'                    u7710:
  1513  0080'                    l4497:
  1514                           
  1515                           ;main.c: 177:     I2C_Master_Start();
  1516  0080' 120A' 118A' 2000' 120A' 118A' 	fcall	_I2C_Master_Start
  1517                           
  1518                           ;main.c: 178:     I2C_Master_Write(0xD0);
  1519  0085' 30D0               	movlw	208
  1520  0086' 0080'              	movwf	_I2C_Master_Write$0
  1521  0087' 3000               	movlw	0
  1522  0088' 0081'              	movwf	_I2C_Master_Write$0+1
  1523  0089' 120A' 118A' 2000' 120A' 118A' 	fcall	_I2C_Master_Write
  1524                           
  1525                           ;main.c: 179:     I2C_Master_Write(0x00);
  1526  008E' 3000               	movlw	0
  1527  008F' 0080'              	movwf	_I2C_Master_Write$0
  1528  0090' 0081'              	movwf	_I2C_Master_Write$0+1
  1529  0091' 120A' 118A' 2000' 120A' 118A' 	fcall	_I2C_Master_Write
  1530                           
  1531                           ;main.c: 180:     I2C_Master_Write(sec);
  1532  0096' 3000               	movlw	0
  1533  0097' 0080'              	movwf	_I2C_Master_Write$0
  1534  0098' 0081'              	movwf	_I2C_Master_Write$0+1
  1535  0099' 120A' 118A' 2000' 120A' 118A' 	fcall	_I2C_Master_Write
  1536                           
  1537                           ;main.c: 181:     I2C_Master_Write(min);
  1538  009E' 3000               	movlw	0
  1539  009F' 0080'              	movwf	_I2C_Master_Write$0
  1540  00A0' 0081'              	movwf	_I2C_Master_Write$0+1
  1541  00A1' 120A' 118A' 2000' 120A' 118A' 	fcall	_I2C_Master_Write
  1542                           
  1543                           ;main.c: 182:     I2C_Master_Write(hora);
  1544  00A6' 3000               	movlw	0
  1545  00A7' 0080'              	movwf	_I2C_Master_Write$0
  1546  00A8' 0081'              	movwf	_I2C_Master_Write$0+1
  1547  00A9' 120A' 118A' 2000' 120A' 118A' 	fcall	_I2C_Master_Write
  1548                           
  1549                           ;main.c: 183:     I2C_Master_Stop();
  1550  00AE' 120A' 118A' 2000' 120A' 118A' 	fcall	_I2C_Master_Stop
  1551  00B3'                    l4499:
  1552                           
  1553                           ;main.c: 184:     _delay((unsigned long)((200)*(2000000/4000.0)));
  1554  00B3' 3082               	movlw	130
  1555  00B4' 1683               	bsf	3,5	;RP0=1, select bank1
  1556  00B5' 1303               	bcf	3,6	;RP1=0, select bank1
  1557  00B6' 0081'              	movwf	(??_main^(0+128)+1)
  1558  00B7' 30DD               	movlw	221
  1559  00B8' 0080'              	movwf	??_main^(0+128)
  1560  00B9'                    u7727:
  1561  00B9' 0B80'              	decfsz	??_main^(0+128),f
  1562  00BA' 2800'              	goto	u7727
  1563  00BB' 0B81'              	decfsz	(??_main^(0+128)+1),f
  1564  00BC' 2800'              	goto	u7727
  1565  00BD'                    l4501:
  1566                           
  1567                           ;main.c: 188:         leer_hora();
  1568  00BD' 120A' 118A' 2000' 120A' 118A' 	fcall	_leer_hora
  1569                           
  1570                           ;main.c: 189:         _delay((unsigned long)((200)*(2000000/4000.0)));
  1571  00C2' 3082               	movlw	130
  1572  00C3' 1683               	bsf	3,5	;RP0=1, select bank1
  1573  00C4' 1303               	bcf	3,6	;RP1=0, select bank1
  1574  00C5' 0081'              	movwf	(??_main^(0+128)+1)
  1575  00C6' 30DD               	movlw	221
  1576  00C7' 0080'              	movwf	??_main^(0+128)
  1577  00C8'                    u7737:
  1578  00C8' 0B80'              	decfsz	??_main^(0+128),f
  1579  00C9' 2800'              	goto	u7737
  1580  00CA' 0B81'              	decfsz	(??_main^(0+128)+1),f
  1581  00CB' 2800'              	goto	u7737
  1582  00CC'                    l4503:
  1583                           
  1584                           ;main.c: 191:         I2C_Master_Start();
  1585  00CC' 120A' 118A' 2000' 120A' 118A' 	fcall	_I2C_Master_Start
  1586  00D1'                    l4505:
  1587                           
  1588                           ;main.c: 192:         I2C_Master_Write(0x51);
  1589  00D1' 3051               	movlw	81
  1590  00D2' 0080'              	movwf	_I2C_Master_Write$0
  1591  00D3' 3000               	movlw	0
  1592  00D4' 0081'              	movwf	_I2C_Master_Write$0+1
  1593  00D5' 120A' 118A' 2000' 120A' 118A' 	fcall	_I2C_Master_Write
  1594  00DA'                    l4507:
  1595                           
  1596                           ;main.c: 193:         voltaje1 = I2C_Master_Read(0);
  1597  00DA' 3000               	movlw	0
  1598  00DB' 0080'              	movwf	_I2C_Master_Read$0
  1599  00DC' 0081'              	movwf	_I2C_Master_Read$0+1
  1600  00DD' 120A' 118A' 2000' 120A' 118A' 	fcall	_I2C_Master_Read
  1601  00E2' 0800'              	movf	?_I2C_Master_Read,w
  1602  00E3' 0082'              	movwf	___xxtofl@val
  1603  00E4' 0801'              	movf	?_I2C_Master_Read+1,w
  1604  00E5' 0083'              	movwf	___xxtofl@val+1
  1605  00E6' 3000               	movlw	0
  1606  00E7' 1B83'              	btfsc	___xxtofl@val+1,7
  1607  00E8' 30FF               	movlw	255
  1608  00E9' 0084'              	movwf	___xxtofl@val+2
  1609  00EA' 0085'              	movwf	___xxtofl@val+3
  1610  00EB' 3001               	movlw	1
  1611  00EC' 120A' 118A' 2000' 120A' 118A' 	fcall	___xxtofl
  1612  00F1' 0805'              	movf	?___xxtofl+3,w
  1613  00F2' 1683               	bsf	3,5	;RP0=1, select bank1
  1614  00F3' 1303               	bcf	3,6	;RP1=0, select bank1
  1615  00F4' 0080'              	movwf	(_voltaje1+3)^(0+128)
  1616  00F5' 0804'              	movf	?___xxtofl+2,w
  1617  00F6' 0080'              	movwf	(_voltaje1+2)^(0+128)
  1618  00F7' 0803'              	movf	?___xxtofl+1,w
  1619  00F8' 0080'              	movwf	(_voltaje1+1)^(0+128)
  1620  00F9' 0802'              	movf	?___xxtofl,w
  1621  00FA' 0080'              	movwf	_voltaje1^(0+128)
  1622  00FB'                    l4509:
  1623                           
  1624                           ;main.c: 194:         I2C_Master_Stop();
  1625  00FB' 120A' 118A' 2000' 120A' 118A' 	fcall	_I2C_Master_Stop
  1626                           
  1627                           ;main.c: 195:         _delay((unsigned long)((200)*(2000000/4000.0)));
  1628  0100' 3082               	movlw	130
  1629  0101' 1683               	bsf	3,5	;RP0=1, select bank1
  1630  0102' 1303               	bcf	3,6	;RP1=0, select bank1
  1631  0103' 0081'              	movwf	(??_main^(0+128)+1)
  1632  0104' 30DD               	movlw	221
  1633  0105' 0080'              	movwf	??_main^(0+128)
  1634  0106'                    u7747:
  1635  0106' 0B80'              	decfsz	??_main^(0+128),f
  1636  0107' 2800'              	goto	u7747
  1637  0108' 0B81'              	decfsz	(??_main^(0+128)+1),f
  1638  0109' 2800'              	goto	u7747
  1639  010A'                    l4511:
  1640                           
  1641                           ;main.c: 198:         Lcd_Set_Cursor(1,2);
  1642  010A' 3002               	movlw	2
  1643  010B' 0086'              	movwf	Lcd_Set_Cursor@b
  1644  010C' 3001               	movlw	1
  1645  010D' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1646  0112'                    l4513:
  1647                           
  1648                           ;main.c: 199:         Lcd_Write_String("S1");
  1649  0112' 30A8               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1650  0113' 0087'              	movwf	Lcd_Write_String@a
  1651  0114' 3080               	movlw	128
  1652  0115' 0088'              	movwf	Lcd_Write_String@a+1
  1653  0116' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1654  011B'                    l4515:
  1655                           
  1656                           ;main.c: 200:         Lcd_Set_Cursor(1,7);
  1657  011B' 3007               	movlw	7
  1658  011C' 0086'              	movwf	Lcd_Set_Cursor@b
  1659  011D' 3001               	movlw	1
  1660  011E' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1661  0123'                    l4517:
  1662                           
  1663                           ;main.c: 201:         Lcd_Write_String("HORA");
  1664  0123' 309E               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1665  0124' 0087'              	movwf	Lcd_Write_String@a
  1666  0125' 3080               	movlw	128
  1667  0126' 0088'              	movwf	Lcd_Write_String@a+1
  1668  0127' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1669  012C'                    l4519:
  1670                           
  1671                           ;main.c: 204:         Lcd_Set_Cursor(2,1);
  1672  012C' 0186'              	clrf	Lcd_Set_Cursor@b
  1673  012D' 0A86'              	incf	Lcd_Set_Cursor@b,f
  1674  012E' 3002               	movlw	2
  1675  012F' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1676  0134'                    l4521:
  1677                           
  1678                           ;main.c: 205:         VOLTAJE1 = (voltaje1*5)/255;
  1679  0134' 3043               	movlw	67
  1680  0135' 1283               	bcf	3,5	;RP0=0, select bank0
  1681  0136' 1303               	bcf	3,6	;RP1=0, select bank0
  1682  0137' 00A5'              	movwf	___fldiv@a+3
  1683  0138' 307F               	movlw	127
  1684  0139' 00A4'              	movwf	___fldiv@a+2
  1685  013A' 3000               	movlw	0
  1686  013B' 00A3'              	movwf	___fldiv@a+1
  1687  013C' 3000               	movlw	0
  1688  013D' 00A2'              	movwf	___fldiv@a
  1689  013E' 3040               	movlw	64
  1690  013F' 008B'              	movwf	___flmul@b+3
  1691  0140' 30A0               	movlw	160
  1692  0141' 008A'              	movwf	___flmul@b+2
  1693  0142' 3000               	movlw	0
  1694  0143' 0089'              	movwf	___flmul@b+1
  1695  0144' 3000               	movlw	0
  1696  0145' 0088'              	movwf	___flmul@b
  1697  0146' 1683               	bsf	3,5	;RP0=1, select bank1
  1698  0147' 1303               	bcf	3,6	;RP1=0, select bank1
  1699  0148' 0800'              	movf	(_voltaje1+3)^(0+128),w
  1700  0149' 1283               	bcf	3,5	;RP0=0, select bank0
  1701  014A' 1303               	bcf	3,6	;RP1=0, select bank0
  1702  014B' 008F'              	movwf	___flmul@a+3
  1703  014C' 1683               	bsf	3,5	;RP0=1, select bank1
  1704  014D' 1303               	bcf	3,6	;RP1=0, select bank1
  1705  014E' 0800'              	movf	(_voltaje1+2)^(0+128),w
  1706  014F' 1283               	bcf	3,5	;RP0=0, select bank0
  1707  0150' 1303               	bcf	3,6	;RP1=0, select bank0
  1708  0151' 008E'              	movwf	___flmul@a+2
  1709  0152' 1683               	bsf	3,5	;RP0=1, select bank1
  1710  0153' 1303               	bcf	3,6	;RP1=0, select bank1
  1711  0154' 0800'              	movf	(_voltaje1+1)^(0+128),w
  1712  0155' 1283               	bcf	3,5	;RP0=0, select bank0
  1713  0156' 1303               	bcf	3,6	;RP1=0, select bank0
  1714  0157' 008D'              	movwf	___flmul@a+1
  1715  0158' 1683               	bsf	3,5	;RP0=1, select bank1
  1716  0159' 1303               	bcf	3,6	;RP1=0, select bank1
  1717  015A' 0800'              	movf	_voltaje1^(0+128),w
  1718  015B' 1283               	bcf	3,5	;RP0=0, select bank0
  1719  015C' 1303               	bcf	3,6	;RP1=0, select bank0
  1720  015D' 008C'              	movwf	___flmul@a
  1721  015E' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  1722  0163' 1283               	bcf	3,5	;RP0=0, select bank0
  1723  0164' 1303               	bcf	3,6	;RP1=0, select bank0
  1724  0165' 080B'              	movf	?___flmul+3,w
  1725  0166' 00A9'              	movwf	___fldiv@b+3
  1726  0167' 080A'              	movf	?___flmul+2,w
  1727  0168' 00A8'              	movwf	___fldiv@b+2
  1728  0169' 0809'              	movf	?___flmul+1,w
  1729  016A' 00A7'              	movwf	___fldiv@b+1
  1730  016B' 0808'              	movf	?___flmul,w
  1731  016C' 00A6'              	movwf	___fldiv@b
  1732  016D' 120A' 118A' 2000' 120A' 118A' 	fcall	___fldiv
  1733  0172' 1283               	bcf	3,5	;RP0=0, select bank0
  1734  0173' 1303               	bcf	3,6	;RP1=0, select bank0
  1735  0174' 0825'              	movf	?___fldiv+3,w
  1736  0175' 1683               	bsf	3,5	;RP0=1, select bank1
  1737  0176' 1303               	bcf	3,6	;RP1=0, select bank1
  1738  0177' 0080'              	movwf	(_VOLTAJE1+3)^(0+128)
  1739  0178' 1283               	bcf	3,5	;RP0=0, select bank0
  1740  0179' 1303               	bcf	3,6	;RP1=0, select bank0
  1741  017A' 0824'              	movf	?___fldiv+2,w
  1742  017B' 1683               	bsf	3,5	;RP0=1, select bank1
  1743  017C' 1303               	bcf	3,6	;RP1=0, select bank1
  1744  017D' 0080'              	movwf	(_VOLTAJE1+2)^(0+128)
  1745  017E' 1283               	bcf	3,5	;RP0=0, select bank0
  1746  017F' 1303               	bcf	3,6	;RP1=0, select bank0
  1747  0180' 0823'              	movf	?___fldiv+1,w
  1748  0181' 1683               	bsf	3,5	;RP0=1, select bank1
  1749  0182' 1303               	bcf	3,6	;RP1=0, select bank1
  1750  0183' 0080'              	movwf	(_VOLTAJE1+1)^(0+128)
  1751  0184' 1283               	bcf	3,5	;RP0=0, select bank0
  1752  0185' 1303               	bcf	3,6	;RP1=0, select bank0
  1753  0186' 0822'              	movf	?___fldiv,w
  1754  0187' 1683               	bsf	3,5	;RP0=1, select bank1
  1755  0188' 1303               	bcf	3,6	;RP1=0, select bank1
  1756  0189' 0080'              	movwf	_VOLTAJE1^(0+128)
  1757  018A'                    l4523:
  1758                           
  1759                           ;main.c: 206:         sprintf(ADC1,"%.2f", VOLTAJE1);
  1760  018A' 30A3               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1761  018B' 1283               	bcf	3,5	;RP0=0, select bank0
  1762  018C' 1303               	bcf	3,6	;RP1=0, select bank0
  1763  018D' 00CA'              	movwf	sprintf@f
  1764  018E' 1683               	bsf	3,5	;RP0=1, select bank1
  1765  018F' 1303               	bcf	3,6	;RP1=0, select bank1
  1766  0190' 0800'              	movf	(_VOLTAJE1+3)^(0+128),w
  1767  0191' 1283               	bcf	3,5	;RP0=0, select bank0
  1768  0192' 1303               	bcf	3,6	;RP1=0, select bank0
  1769  0193' 00CE'              	movwf	?_sprintf+4
  1770  0194' 1683               	bsf	3,5	;RP0=1, select bank1
  1771  0195' 1303               	bcf	3,6	;RP1=0, select bank1
  1772  0196' 0800'              	movf	(_VOLTAJE1+2)^(0+128),w
  1773  0197' 1283               	bcf	3,5	;RP0=0, select bank0
  1774  0198' 1303               	bcf	3,6	;RP1=0, select bank0
  1775  0199' 00CD'              	movwf	?_sprintf+3
  1776  019A' 1683               	bsf	3,5	;RP0=1, select bank1
  1777  019B' 1303               	bcf	3,6	;RP1=0, select bank1
  1778  019C' 0800'              	movf	(_VOLTAJE1+1)^(0+128),w
  1779  019D' 1283               	bcf	3,5	;RP0=0, select bank0
  1780  019E' 1303               	bcf	3,6	;RP1=0, select bank0
  1781  019F' 00CC'              	movwf	?_sprintf+2
  1782  01A0' 1683               	bsf	3,5	;RP0=1, select bank1
  1783  01A1' 1303               	bcf	3,6	;RP1=0, select bank1
  1784  01A2' 0800'              	movf	_VOLTAJE1^(0+128),w
  1785  01A3' 1283               	bcf	3,5	;RP0=0, select bank0
  1786  01A4' 1303               	bcf	3,6	;RP1=0, select bank0
  1787  01A5' 00CB'              	movwf	?_sprintf+1
  1788  01A6' 3000'              	movlw	(low (_ADC1| 0))& (0+255)
  1789  01A7' 120A' 118A' 2000' 120A' 118A' 	fcall	_sprintf
  1790  01AC'                    l4525:
  1791                           
  1792                           ;main.c: 207:         Lcd_Write_String(ADC1);
  1793  01AC' 3000'              	movlw	(low (_ADC1| 0))& (0+255)
  1794  01AD' 0087'              	movwf	Lcd_Write_String@a
  1795  01AE' 3000               	movlw	0
  1796  01AF' 0088'              	movwf	Lcd_Write_String@a+1
  1797  01B0' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1798  01B5'                    l4527:
  1799                           
  1800                           ;main.c: 208:         Lcd_Write_String("V");
  1801  01B5' 30AD               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1802  01B6' 0087'              	movwf	Lcd_Write_String@a
  1803  01B7' 3080               	movlw	128
  1804  01B8' 0088'              	movwf	Lcd_Write_String@a+1
  1805  01B9' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1806  01BE'                    l4529:
  1807                           
  1808                           ;main.c: 212:         Lcd_Set_Cursor(2,7);
  1809  01BE' 3007               	movlw	7
  1810  01BF' 0086'              	movwf	Lcd_Set_Cursor@b
  1811  01C0' 3002               	movlw	2
  1812  01C1' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1813  01C6'                    l4531:
  1814                           
  1815                           ;main.c: 215:         Lcd_Write_Char((hora>>4)+0x30);
  1816  01C6' 3030               	movlw	48
  1817  01C7' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_Char
  1818  01CC'                    l4533:
  1819                           
  1820                           ;main.c: 216:         Lcd_Write_Char((hora&0x0F)+0x30);
  1821  01CC' 3030               	movlw	48
  1822  01CD' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_Char
  1823  01D2'                    l4535:
  1824                           
  1825                           ;main.c: 217:         Lcd_Write_String(":");
  1826  01D2' 30AB               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1827  01D3' 0087'              	movwf	Lcd_Write_String@a
  1828  01D4' 3080               	movlw	128
  1829  01D5' 0088'              	movwf	Lcd_Write_String@a+1
  1830  01D6' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1831  01DB'                    l4537:
  1832                           
  1833                           ;main.c: 218:         Lcd_Write_Char((min>>4)+0x30);
  1834  01DB' 3030               	movlw	48
  1835  01DC' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_Char
  1836  01E1'                    l4539:
  1837                           
  1838                           ;main.c: 219:         Lcd_Write_Char((min&0x0F)+0x30);
  1839  01E1' 3030               	movlw	48
  1840  01E2' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_Char
  1841  01E7'                    l4541:
  1842                           
  1843                           ;main.c: 220:         Lcd_Write_String(":");
  1844  01E7' 30AB               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1845  01E8' 0087'              	movwf	Lcd_Write_String@a
  1846  01E9' 3080               	movlw	128
  1847  01EA' 0088'              	movwf	Lcd_Write_String@a+1
  1848  01EB' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1849  01F0'                    l4543:
  1850                           
  1851                           ;main.c: 221:         Lcd_Write_Char((sec>>4)+0x30);
  1852  01F0' 3030               	movlw	48
  1853  01F1' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_Char
  1854  01F6'                    l4545:
  1855                           
  1856                           ;main.c: 222:         Lcd_Write_Char((sec&0x0F)+0x30);
  1857  01F6' 3030               	movlw	48
  1858  01F7' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_Char
  1859  01FC'                    l4547:
  1860                           
  1861                           ;main.c: 225:        _delay((unsigned long)((1)*(2000000/4000.0)));
  1862  01FC' 30A5               	movlw	165
  1863  01FD' 1683               	bsf	3,5	;RP0=1, select bank1
  1864  01FE' 1303               	bcf	3,6	;RP1=0, select bank1
  1865  01FF' 0080'              	movwf	??_main^(0+128)
  1866  0200'                    u7757:
  1867  0200' 0B80'              	decfsz	??_main^(0+128),f
  1868  0201' 2800'              	goto	u7757
  1869  0202' 2800'              	nop2
  1870  0203' 2800'              	goto	l4501
  1871  0204' 120A' 118A' 2800'  	ljmp	start
  1872  0207'                    __end_of_main:
  1873                           
  1874                           	psect	text1
  1875  0000'                    __ptext1:	
  1876 ;; *************** function _sprintf *****************
  1877 ;; Defined at:
  1878 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;  sp              1    wreg     PTR unsigned char 
  1881 ;;		 -> ADC1(4), 
  1882 ;;  f               1   74[BANK0 ] PTR const unsigned char 
  1883 ;;		 -> STR_4(5), 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;  sp              1   26[BANK1 ] PTR unsigned char 
  1886 ;;		 -> ADC1(4), 
  1887 ;;  fval            4   33[BANK1 ] PTR unsigned char 
  1888 ;;  tmpval          4   27[BANK1 ] struct .
  1889 ;;  val             4   20[BANK1 ] unsigned long 
  1890 ;;  prec            2   31[BANK1 ] int 
  1891 ;;  eexp            2   24[BANK1 ] int 
  1892 ;;  flag            2   18[BANK1 ] unsigned short 
  1893 ;;  cp              2    0        PTR const unsigned char 
  1894 ;;  len             2    0        unsigned int 
  1895 ;;  width           2    0        int 
  1896 ;;  c               1   37[BANK1 ] unsigned char 
  1897 ;;  ap              1   17[BANK1 ] PTR void [1]
  1898 ;;		 -> ?_sprintf(2), 
  1899 ;;  d               1    0        unsigned char 
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  2   74[BANK0 ] int 
  1902 ;; Registers used:
  1903 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1909 ;;      Params:         0       5       0       0       0
  1910 ;;      Locals:         0       0      25       0       0
  1911 ;;      Temps:          0       0       5       0       0
  1912 ;;      Totals:         0       5      30       0       0
  1913 ;;Total ram usage:       35 bytes
  1914 ;; Hardware stack levels used: 1
  1915 ;; Hardware stack levels required when called: 4
  1916 ;; This function calls:
  1917 ;;		___awdiv
  1918 ;;		___fladd
  1919 ;;		___fleq
  1920 ;;		___flge
  1921 ;;		___flmul
  1922 ;;		___flneg
  1923 ;;		___flsub
  1924 ;;		___fltol
  1925 ;;		___lldiv
  1926 ;;		___llmod
  1927 ;;		___wmul
  1928 ;;		___xxtofl
  1929 ;;		__div_to_l_
  1930 ;;		__tdiv_to_l_
  1931 ;;		_fround
  1932 ;;		_isdigit
  1933 ;;		_scale
  1934 ;; This function is called by:
  1935 ;;		_main
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939  0000'                    _sprintf:	
  1940                           ;psect for function _sprintf
  1941                           
  1942                           
  1943                           ;incstack = 0
  1944                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1945                           ;sprintf@sp stored from wreg
  1946  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  1947  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  1948  0002' 0080'              	movwf	sprintf@sp^(0+128)
  1949  0003'                    l4269:
  1950                           
  1951                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1952  0003' 3000'              	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1953  0004' 0080'              	movwf	sprintf@ap^(0+128)
  1954                           
  1955                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1956  0005' 2800'              	goto	l4463
  1957  0006'                    l4271:
  1958                           
  1959                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1960  0006' 3025               	movlw	37
  1961  0007' 0600'              	xorwf	sprintf@c^(0+128),w
  1962  0008' 1903               	btfsc	3,2
  1963  0009' 2800'              	goto	u7361
  1964  000A' 2800'              	goto	u7360
  1965  000B'                    u7361:
  1966  000B' 2800'              	goto	l4277
  1967  000C'                    u7360:
  1968  000C'                    l4273:
  1969                           
  1970                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1971  000C' 0800'              	movf	sprintf@sp^(0+128),w
  1972  000D' 0084               	movwf	4
  1973  000E' 0800'              	movf	sprintf@c^(0+128),w
  1974  000F' 1383               	bcf	3,7	;select IRP bank0
  1975  0010' 0080               	movwf	0
  1976  0011'                    l4275:
  1977  0011' 3001               	movlw	1
  1978  0012' 0080'              	movwf	??_sprintf^(0+128)
  1979  0013' 0800'              	movf	??_sprintf^(0+128),w
  1980  0014' 0780'              	addwf	sprintf@sp^(0+128),f
  1981                           
  1982                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1983  0015' 2800'              	goto	l4463
  1984  0016'                    l4277:
  1985                           
  1986                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1987  0016' 0180'              	clrf	sprintf@flag^(0+128)
  1988  0017' 0180'              	clrf	(sprintf@flag+1)^(0+128)
  1989  0018'                    l4279:
  1990                           
  1991                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1992  0018' 1283               	bcf	3,5	;RP0=0, select bank0
  1993  0019' 1303               	bcf	3,6	;RP1=0, select bank0
  1994  001A' 084A'              	movf	sprintf@f,w
  1995  001B' 0084               	movwf	4
  1996  001C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  1997  0021' 3A2E               	xorlw	46
  1998  0022' 1D03               	skipz
  1999  0023' 2800'              	goto	u7371
  2000  0024' 2800'              	goto	u7370
  2001  0025'                    u7371:
  2002  0025' 2800'              	goto	l4295
  2003  0026'                    u7370:
  2004  0026'                    l4281:
  2005                           
  2006                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2007  0026' 1683               	bsf	3,5	;RP0=1, select bank1
  2008  0027' 1303               	bcf	3,6	;RP1=0, select bank1
  2009  0028' 1701'              	bsf	(sprintf@flag^(0+128)+1),6
  2010  0029'                    l4283:
  2011                           
  2012                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 630:    f++;
  2013  0029' 3001               	movlw	1
  2014  002A' 0080'              	movwf	??_sprintf^(0+128)
  2015  002B' 0800'              	movf	??_sprintf^(0+128),w
  2016  002C' 1283               	bcf	3,5	;RP0=0, select bank0
  2017  002D' 1303               	bcf	3,6	;RP1=0, select bank0
  2018  002E' 07CA'              	addwf	sprintf@f,f
  2019  002F'                    l4285:
  2020                           
  2021                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2022  002F' 1683               	bsf	3,5	;RP0=1, select bank1
  2023  0030' 1303               	bcf	3,6	;RP1=0, select bank1
  2024  0031' 0180'              	clrf	sprintf@prec^(0+128)
  2025  0032' 0180'              	clrf	(sprintf@prec+1)^(0+128)
  2026                           
  2027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2028  0033' 2800'              	goto	l4293
  2029  0034'                    l4287:
  2030                           
  2031                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2032  0034' 300A               	movlw	10
  2033  0035' 0082'              	movwf	___wmul@multiplier
  2034  0036' 3000               	movlw	0
  2035  0037' 0083'              	movwf	___wmul@multiplier+1
  2036  0038' 1683               	bsf	3,5	;RP0=1, select bank1
  2037  0039' 1303               	bcf	3,6	;RP1=0, select bank1
  2038  003A' 0800'              	movf	(sprintf@prec+1)^(0+128),w
  2039  003B' 0085'              	movwf	___wmul@multiplicand+1
  2040  003C' 0800'              	movf	sprintf@prec^(0+128),w
  2041  003D' 0084'              	movwf	___wmul@multiplicand
  2042  003E' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  2043  0043' 0803'              	movf	?___wmul+1,w
  2044  0044' 1683               	bsf	3,5	;RP0=1, select bank1
  2045  0045' 1303               	bcf	3,6	;RP1=0, select bank1
  2046  0046' 0080'              	movwf	(sprintf@prec+1)^(0+128)
  2047  0047' 0802'              	movf	?___wmul,w
  2048  0048' 0080'              	movwf	sprintf@prec^(0+128)
  2049  0049'                    l4289:
  2050                           
  2051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2052  0049' 1283               	bcf	3,5	;RP0=0, select bank0
  2053  004A' 1303               	bcf	3,6	;RP1=0, select bank0
  2054  004B' 084A'              	movf	sprintf@f,w
  2055  004C' 0084               	movwf	4
  2056  004D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2057  0052' 3ED0               	addlw	208
  2058  0053' 1683               	bsf	3,5	;RP0=1, select bank1
  2059  0054' 1303               	bcf	3,6	;RP1=0, select bank1
  2060  0055' 0080'              	movwf	??_sprintf^(0+128)
  2061  0056' 30FF               	movlw	255
  2062  0057' 1803               	skipnc
  2063  0058' 3000               	movlw	0
  2064  0059' 0081'              	movwf	(??_sprintf^(0+128)+1)
  2065  005A' 0800'              	movf	??_sprintf^(0+128),w
  2066  005B' 0780'              	addwf	sprintf@prec^(0+128),f
  2067  005C' 1803               	skipnc
  2068  005D' 0A80'              	incf	(sprintf@prec+1)^(0+128),f
  2069  005E' 0800'              	movf	(??_sprintf+1)^(0+128),w
  2070  005F' 0780'              	addwf	(sprintf@prec+1)^(0+128),f
  2071  0060'                    l4291:
  2072  0060' 3001               	movlw	1
  2073  0061' 0080'              	movwf	??_sprintf^(0+128)
  2074  0062' 0800'              	movf	??_sprintf^(0+128),w
  2075  0063' 1283               	bcf	3,5	;RP0=0, select bank0
  2076  0064' 1303               	bcf	3,6	;RP1=0, select bank0
  2077  0065' 07CA'              	addwf	sprintf@f,f
  2078  0066'                    l4293:
  2079                           
  2080                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2081  0066' 1283               	bcf	3,5	;RP0=0, select bank0
  2082  0067' 084A'              	movf	sprintf@f,w
  2083  0068' 0084               	movwf	4
  2084  0069' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2085  006E' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  2086  0073' 1803               	btfsc	3,0
  2087  0074' 2800'              	goto	u7381
  2088  0075' 2800'              	goto	u7380
  2089  0076'                    u7381:
  2090  0076' 2800'              	goto	l4287
  2091  0077'                    u7380:
  2092  0077' 2800'              	goto	l4301
  2093  0078'                    l4295:
  2094                           
  2095                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2096  0078' 1683               	bsf	3,5	;RP0=1, select bank1
  2097  0079' 1303               	bcf	3,6	;RP1=0, select bank1
  2098  007A' 0180'              	clrf	sprintf@prec^(0+128)
  2099  007B' 0180'              	clrf	(sprintf@prec+1)^(0+128)
  2100  007C'                    l4297:
  2101                           
  2102                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2103  007C' 1601'              	bsf	(sprintf@flag^(0+128)+1),4
  2104  007D' 2800'              	goto	l4301
  2105  007E'                    l323:	
  2106                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2107                           
  2108                           
  2109                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2110  007E' 1501'              	bsf	(sprintf@flag^(0+128)+1),2
  2111                           
  2112                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 690:    break;
  2113  007F' 2800'              	goto	l4303
  2114  0080'                    l4301:
  2115  0080' 3001               	movlw	1
  2116  0081' 1283               	bcf	3,5	;RP0=0, select bank0
  2117  0082' 1303               	bcf	3,6	;RP1=0, select bank0
  2118  0083' 07CA'              	addwf	sprintf@f,f
  2119  0084' 30FF               	movlw	-1
  2120  0085' 074A'              	addwf	sprintf@f,w
  2121  0086' 0084               	movwf	4
  2122  0087' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2123  008C' 1683               	bsf	3,5	;RP0=1, select bank1
  2124  008D' 1303               	bcf	3,6	;RP1=0, select bank1
  2125  008E' 0080'              	movwf	sprintf@c^(0+128)
  2126  008F' 0080'              	movwf	??_sprintf^(0+128)
  2127  0090' 0181'              	clrf	(??_sprintf^(0+128)+1)
  2128                           
  2129                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2130                           ; Switch size 1, requested type "simple"
  2131                           ; Number of cases is 1, Range of values is 0 to 0
  2132                           ; switch strategies available:
  2133                           ; Name         Instructions Cycles
  2134                           ; simple_byte            4     3 (average)
  2135                           ; direct_byte           11     8 (fixed)
  2136                           ; jumptable            260     6 (fixed)
  2137                           ;	Chosen strategy is simple_byte
  2138  0091' 0800'              	movf	(??_sprintf+1)^(0+128),w
  2139  0092' 3A00               	xorlw	0	; case 0
  2140  0093' 1903               	skipnz
  2141  0094' 2800'              	goto	l4583
  2142  0095' 2800'              	goto	l4463
  2143  0096'                    l4583:
  2144                           
  2145                           ; Switch size 1, requested type "simple"
  2146                           ; Number of cases is 2, Range of values is 0 to 102
  2147                           ; switch strategies available:
  2148                           ; Name         Instructions Cycles
  2149                           ; simple_byte            7     4 (average)
  2150                           ; jumptable            260     6 (fixed)
  2151                           ;	Chosen strategy is simple_byte
  2152  0096' 0800'              	movf	??_sprintf^(0+128),w
  2153  0097' 3A00               	xorlw	0	; case 0
  2154  0098' 1903               	skipnz
  2155  0099' 2800'              	goto	l4465
  2156  009A' 3A66               	xorlw	102	; case 102
  2157  009B' 1903               	skipnz
  2158  009C' 2800'              	goto	l323
  2159  009D' 2800'              	goto	l4463
  2160  009E'                    l4303:
  2161                           
  2162                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2163  009E' 3000               	movlw	0
  2164  009F' 0500'              	andwf	sprintf@flag^(0+128),w
  2165  00A0' 0080'              	movwf	??_sprintf^(0+128)
  2166  00A1' 3007               	movlw	7
  2167  00A2' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
  2168  00A3' 0080'              	movwf	(??_sprintf+1)^(0+128)
  2169  00A4' 0800'              	movf	??_sprintf^(0+128),w
  2170  00A5' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
  2171  00A6' 1903               	btfsc	3,2
  2172  00A7' 2800'              	goto	u7391
  2173  00A8' 2800'              	goto	u7390
  2174  00A9'                    u7391:
  2175  00A9' 2800'              	goto	l4445
  2176  00AA'                    u7390:
  2177  00AA'                    l4305:
  2178                           
  2179                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2180  00AA' 1E00'              	btfss	(sprintf@flag+1)^(0+128),4
  2181  00AB' 2800'              	goto	u7401
  2182  00AC' 2800'              	goto	u7400
  2183  00AD'                    u7401:
  2184  00AD' 2800'              	goto	l4309
  2185  00AE'                    u7400:
  2186  00AE'                    l4307:
  2187                           
  2188                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2189  00AE' 3006               	movlw	6
  2190  00AF' 0080'              	movwf	sprintf@prec^(0+128)
  2191  00B0' 3000               	movlw	0
  2192  00B1' 0081'              	movwf	(sprintf@prec^(0+128)+1)
  2193  00B2'                    l4309:
  2194                           
  2195                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2196  00B2' 0800'              	movf	sprintf@ap^(0+128),w
  2197  00B3' 0084               	movwf	4
  2198  00B4' 1383               	bcf	3,7	;select IRP bank0
  2199  00B5' 0800               	movf	0,w
  2200  00B6' 0080'              	movwf	sprintf@fval^(0+128)
  2201  00B7' 0A84               	incf	4,f
  2202  00B8' 0800               	movf	0,w
  2203  00B9' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  2204  00BA' 0A84               	incf	4,f
  2205  00BB' 0800               	movf	0,w
  2206  00BC' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  2207  00BD' 0A84               	incf	4,f
  2208  00BE' 0800               	movf	0,w
  2209  00BF' 0080'              	movwf	(sprintf@fval+3)^(0+128)
  2210  00C0'                    l4311:
  2211  00C0' 3004               	movlw	4
  2212  00C1' 0080'              	movwf	??_sprintf^(0+128)
  2213  00C2' 0800'              	movf	??_sprintf^(0+128),w
  2214  00C3' 0780'              	addwf	sprintf@ap^(0+128),f
  2215  00C4'                    l4313:
  2216                           
  2217                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2218  00C4' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2219  00C5' 0085'              	movwf	___flge@ff1+3
  2220  00C6' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2221  00C7' 0084'              	movwf	___flge@ff1+2
  2222  00C8' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2223  00C9' 0083'              	movwf	___flge@ff1+1
  2224  00CA' 0800'              	movf	sprintf@fval^(0+128),w
  2225  00CB' 0082'              	movwf	___flge@ff1
  2226  00CC' 3000               	movlw	0
  2227  00CD' 0089'              	movwf	___flge@ff2+3
  2228  00CE' 3000               	movlw	0
  2229  00CF' 0088'              	movwf	___flge@ff2+2
  2230  00D0' 3000               	movlw	0
  2231  00D1' 0087'              	movwf	___flge@ff2+1
  2232  00D2' 3000               	movlw	0
  2233  00D3' 0086'              	movwf	___flge@ff2
  2234  00D4' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  2235  00D9' 1803               	btfsc	3,0
  2236  00DA' 2800'              	goto	u7411
  2237  00DB' 2800'              	goto	u7410
  2238  00DC'                    u7411:
  2239  00DC' 2800'              	goto	l4319
  2240  00DD'                    u7410:
  2241  00DD'                    l4315:
  2242                           
  2243                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2244  00DD' 1683               	bsf	3,5	;RP0=1, select bank1
  2245  00DE' 1303               	bcf	3,6	;RP1=0, select bank1
  2246  00DF' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2247  00E0' 0085'              	movwf	___flneg@f1+3
  2248  00E1' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2249  00E2' 0084'              	movwf	___flneg@f1+2
  2250  00E3' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2251  00E4' 0083'              	movwf	___flneg@f1+1
  2252  00E5' 0800'              	movf	sprintf@fval^(0+128),w
  2253  00E6' 0082'              	movwf	___flneg@f1
  2254  00E7' 120A' 118A' 2000' 120A' 118A' 	fcall	___flneg
  2255  00EC' 0805'              	movf	?___flneg+3,w
  2256  00ED' 1683               	bsf	3,5	;RP0=1, select bank1
  2257  00EE' 1303               	bcf	3,6	;RP1=0, select bank1
  2258  00EF' 0080'              	movwf	(sprintf@fval+3)^(0+128)
  2259  00F0' 0804'              	movf	?___flneg+2,w
  2260  00F1' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  2261  00F2' 0803'              	movf	?___flneg+1,w
  2262  00F3' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  2263  00F4' 0802'              	movf	?___flneg,w
  2264  00F5' 0080'              	movwf	sprintf@fval^(0+128)
  2265  00F6'                    l4317:
  2266                           
  2267                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2268  00F6' 3003               	movlw	3
  2269  00F7' 0480'              	iorwf	sprintf@flag^(0+128),f
  2270  00F8' 3000               	movlw	0
  2271  00F9' 0480'              	iorwf	(sprintf@flag+1)^(0+128),f
  2272  00FA'                    l4319:
  2273                           
  2274                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2275  00FA' 1683               	bsf	3,5	;RP0=1, select bank1
  2276  00FB' 1303               	bcf	3,6	;RP1=0, select bank1
  2277  00FC' 0180'              	clrf	sprintf@eexp^(0+128)
  2278  00FD' 0180'              	clrf	(sprintf@eexp+1)^(0+128)
  2279  00FE'                    l4321:
  2280                           
  2281                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2282  00FE' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2283  00FF' 0085'              	movwf	___fleq@ff1+3
  2284  0100' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2285  0101' 0084'              	movwf	___fleq@ff1+2
  2286  0102' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2287  0103' 0083'              	movwf	___fleq@ff1+1
  2288  0104' 0800'              	movf	sprintf@fval^(0+128),w
  2289  0105' 0082'              	movwf	___fleq@ff1
  2290  0106' 3000               	movlw	0
  2291  0107' 0089'              	movwf	___fleq@ff2+3
  2292  0108' 3000               	movlw	0
  2293  0109' 0088'              	movwf	___fleq@ff2+2
  2294  010A' 3000               	movlw	0
  2295  010B' 0087'              	movwf	___fleq@ff2+1
  2296  010C' 3000               	movlw	0
  2297  010D' 0086'              	movwf	___fleq@ff2
  2298  010E' 120A' 118A' 2000' 120A' 118A' 	fcall	___fleq
  2299  0113' 1803               	btfsc	3,0
  2300  0114' 2800'              	goto	u7421
  2301  0115' 2800'              	goto	u7420
  2302  0116'                    u7421:
  2303  0116' 2800'              	goto	l4347
  2304  0117'                    u7420:
  2305  0117'                    l4323:
  2306                           
  2307                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2308  0117' 1003               	clrc
  2309  0118' 1683               	bsf	3,5	;RP0=1, select bank1
  2310  0119' 1303               	bcf	3,6	;RP1=0, select bank1
  2311  011A' 0D00'              	rlf	(sprintf@fval+2)^(0+128),w
  2312  011B' 0D00'              	rlf	(sprintf@fval+3)^(0+128),w
  2313  011C' 3E82               	addlw	130
  2314  011D' 0080'              	movwf	sprintf@eexp^(0+128)
  2315  011E' 30FF               	movlw	255
  2316  011F' 1803               	skipnc
  2317  0120' 3000               	movlw	0
  2318  0121' 0081'              	movwf	(sprintf@eexp^(0+128)+1)
  2319  0122'                    l4325:
  2320                           
  2321                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2322  0122' 30FF               	movlw	255
  2323  0123' 0780'              	addwf	sprintf@eexp^(0+128),f
  2324  0124' 1803               	skipnc
  2325  0125' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  2326  0126' 30FF               	movlw	255
  2327  0127' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
  2328  0128'                    l4327:
  2329                           
  2330                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2331  0128' 3003               	movlw	3
  2332  0129' 0082'              	movwf	___wmul@multiplier
  2333  012A' 3000               	movlw	0
  2334  012B' 0083'              	movwf	___wmul@multiplier+1
  2335  012C' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
  2336  012D' 0085'              	movwf	___wmul@multiplicand+1
  2337  012E' 0800'              	movf	sprintf@eexp^(0+128),w
  2338  012F' 0084'              	movwf	___wmul@multiplicand
  2339  0130' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  2340  0135' 0803'              	movf	?___wmul+1,w
  2341  0136' 1683               	bsf	3,5	;RP0=1, select bank1
  2342  0137' 1303               	bcf	3,6	;RP1=0, select bank1
  2343  0138' 0080'              	movwf	(sprintf@eexp+1)^(0+128)
  2344  0139' 0802'              	movf	?___wmul,w
  2345  013A' 0080'              	movwf	sprintf@eexp^(0+128)
  2346  013B'                    l4329:
  2347                           
  2348                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2349  013B' 300A               	movlw	10
  2350  013C' 1283               	bcf	3,5	;RP0=0, select bank0
  2351  013D' 1303               	bcf	3,6	;RP1=0, select bank0
  2352  013E' 0080'              	movwf	___awdiv@divisor
  2353  013F' 3000               	movlw	0
  2354  0140' 0081'              	movwf	___awdiv@divisor+1
  2355  0141' 1683               	bsf	3,5	;RP0=1, select bank1
  2356  0142' 1303               	bcf	3,6	;RP1=0, select bank1
  2357  0143' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
  2358  0144' 1283               	bcf	3,5	;RP0=0, select bank0
  2359  0145' 1303               	bcf	3,6	;RP1=0, select bank0
  2360  0146' 0083'              	movwf	___awdiv@dividend+1
  2361  0147' 1683               	bsf	3,5	;RP0=1, select bank1
  2362  0148' 1303               	bcf	3,6	;RP1=0, select bank1
  2363  0149' 0800'              	movf	sprintf@eexp^(0+128),w
  2364  014A' 1283               	bcf	3,5	;RP0=0, select bank0
  2365  014B' 1303               	bcf	3,6	;RP1=0, select bank0
  2366  014C' 0082'              	movwf	___awdiv@dividend
  2367  014D' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  2368  0152' 1283               	bcf	3,5	;RP0=0, select bank0
  2369  0153' 1303               	bcf	3,6	;RP1=0, select bank0
  2370  0154' 0801'              	movf	?___awdiv+1,w
  2371  0155' 1683               	bsf	3,5	;RP0=1, select bank1
  2372  0156' 1303               	bcf	3,6	;RP1=0, select bank1
  2373  0157' 0080'              	movwf	(sprintf@eexp+1)^(0+128)
  2374  0158' 1283               	bcf	3,5	;RP0=0, select bank0
  2375  0159' 1303               	bcf	3,6	;RP1=0, select bank0
  2376  015A' 0800'              	movf	?___awdiv,w
  2377  015B' 1683               	bsf	3,5	;RP0=1, select bank1
  2378  015C' 1303               	bcf	3,6	;RP1=0, select bank1
  2379  015D' 0080'              	movwf	sprintf@eexp^(0+128)
  2380  015E'                    l4331:
  2381                           
  2382                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2383  015E' 1F80'              	btfss	(sprintf@eexp+1)^(0+128),7
  2384  015F' 2800'              	goto	u7431
  2385  0160' 2800'              	goto	u7430
  2386  0161'                    u7431:
  2387  0161' 2800'              	goto	l4335
  2388  0162'                    u7430:
  2389  0162'                    l4333:
  2390                           
  2391                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2392  0162' 30FF               	movlw	255
  2393  0163' 0780'              	addwf	sprintf@eexp^(0+128),f
  2394  0164' 1803               	skipnc
  2395  0165' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  2396  0166' 30FF               	movlw	255
  2397  0167' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
  2398  0168'                    l4335:
  2399                           
  2400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2401  0168' 0300'              	decf	sprintf@eexp^(0+128),w
  2402  0169' 3AFF               	xorlw	255
  2403  016A' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
  2404  016F' 1283               	bcf	3,5	;RP0=0, select bank0
  2405  0170' 1303               	bcf	3,6	;RP1=0, select bank0
  2406  0171' 0825'              	movf	?_scale+3,w
  2407  0172' 1683               	bsf	3,5	;RP0=1, select bank1
  2408  0173' 1303               	bcf	3,6	;RP1=0, select bank1
  2409  0174' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
  2410  0175' 1283               	bcf	3,5	;RP0=0, select bank0
  2411  0176' 1303               	bcf	3,6	;RP1=0, select bank0
  2412  0177' 0824'              	movf	?_scale+2,w
  2413  0178' 1683               	bsf	3,5	;RP0=1, select bank1
  2414  0179' 1303               	bcf	3,6	;RP1=0, select bank1
  2415  017A' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  2416  017B' 1283               	bcf	3,5	;RP0=0, select bank0
  2417  017C' 1303               	bcf	3,6	;RP1=0, select bank0
  2418  017D' 0823'              	movf	?_scale+1,w
  2419  017E' 1683               	bsf	3,5	;RP0=1, select bank1
  2420  017F' 1303               	bcf	3,6	;RP1=0, select bank1
  2421  0180' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  2422  0181' 1283               	bcf	3,5	;RP0=0, select bank0
  2423  0182' 1303               	bcf	3,6	;RP1=0, select bank0
  2424  0183' 0822'              	movf	?_scale,w
  2425  0184' 1683               	bsf	3,5	;RP0=1, select bank1
  2426  0185' 1303               	bcf	3,6	;RP1=0, select bank1
  2427  0186' 0080'              	movwf	sprintf@tmpval^(0+128)
  2428  0187'                    l4337:
  2429                           
  2430                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2431  0187' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2432  0188' 1283               	bcf	3,5	;RP0=0, select bank0
  2433  0189' 1303               	bcf	3,6	;RP1=0, select bank0
  2434  018A' 008B'              	movwf	___flmul@b+3
  2435  018B' 1683               	bsf	3,5	;RP0=1, select bank1
  2436  018C' 1303               	bcf	3,6	;RP1=0, select bank1
  2437  018D' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2438  018E' 1283               	bcf	3,5	;RP0=0, select bank0
  2439  018F' 1303               	bcf	3,6	;RP1=0, select bank0
  2440  0190' 008A'              	movwf	___flmul@b+2
  2441  0191' 1683               	bsf	3,5	;RP0=1, select bank1
  2442  0192' 1303               	bcf	3,6	;RP1=0, select bank1
  2443  0193' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2444  0194' 1283               	bcf	3,5	;RP0=0, select bank0
  2445  0195' 1303               	bcf	3,6	;RP1=0, select bank0
  2446  0196' 0089'              	movwf	___flmul@b+1
  2447  0197' 1683               	bsf	3,5	;RP0=1, select bank1
  2448  0198' 1303               	bcf	3,6	;RP1=0, select bank1
  2449  0199' 0800'              	movf	sprintf@fval^(0+128),w
  2450  019A' 1283               	bcf	3,5	;RP0=0, select bank0
  2451  019B' 1303               	bcf	3,6	;RP1=0, select bank0
  2452  019C' 0088'              	movwf	___flmul@b
  2453  019D' 1683               	bsf	3,5	;RP0=1, select bank1
  2454  019E' 1303               	bcf	3,6	;RP1=0, select bank1
  2455  019F' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
  2456  01A0' 1283               	bcf	3,5	;RP0=0, select bank0
  2457  01A1' 1303               	bcf	3,6	;RP1=0, select bank0
  2458  01A2' 008F'              	movwf	___flmul@a+3
  2459  01A3' 1683               	bsf	3,5	;RP0=1, select bank1
  2460  01A4' 1303               	bcf	3,6	;RP1=0, select bank1
  2461  01A5' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  2462  01A6' 1283               	bcf	3,5	;RP0=0, select bank0
  2463  01A7' 1303               	bcf	3,6	;RP1=0, select bank0
  2464  01A8' 008E'              	movwf	___flmul@a+2
  2465  01A9' 1683               	bsf	3,5	;RP0=1, select bank1
  2466  01AA' 1303               	bcf	3,6	;RP1=0, select bank1
  2467  01AB' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  2468  01AC' 1283               	bcf	3,5	;RP0=0, select bank0
  2469  01AD' 1303               	bcf	3,6	;RP1=0, select bank0
  2470  01AE' 008D'              	movwf	___flmul@a+1
  2471  01AF' 1683               	bsf	3,5	;RP0=1, select bank1
  2472  01B0' 1303               	bcf	3,6	;RP1=0, select bank1
  2473  01B1' 0800'              	movf	sprintf@tmpval^(0+128),w
  2474  01B2' 1283               	bcf	3,5	;RP0=0, select bank0
  2475  01B3' 1303               	bcf	3,6	;RP1=0, select bank0
  2476  01B4' 008C'              	movwf	___flmul@a
  2477  01B5' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  2478  01BA' 1283               	bcf	3,5	;RP0=0, select bank0
  2479  01BB' 1303               	bcf	3,6	;RP1=0, select bank0
  2480  01BC' 080B'              	movf	?___flmul+3,w
  2481  01BD' 1683               	bsf	3,5	;RP0=1, select bank1
  2482  01BE' 1303               	bcf	3,6	;RP1=0, select bank1
  2483  01BF' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
  2484  01C0' 1283               	bcf	3,5	;RP0=0, select bank0
  2485  01C1' 1303               	bcf	3,6	;RP1=0, select bank0
  2486  01C2' 080A'              	movf	?___flmul+2,w
  2487  01C3' 1683               	bsf	3,5	;RP0=1, select bank1
  2488  01C4' 1303               	bcf	3,6	;RP1=0, select bank1
  2489  01C5' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  2490  01C6' 1283               	bcf	3,5	;RP0=0, select bank0
  2491  01C7' 1303               	bcf	3,6	;RP1=0, select bank0
  2492  01C8' 0809'              	movf	?___flmul+1,w
  2493  01C9' 1683               	bsf	3,5	;RP0=1, select bank1
  2494  01CA' 1303               	bcf	3,6	;RP1=0, select bank1
  2495  01CB' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  2496  01CC' 1283               	bcf	3,5	;RP0=0, select bank0
  2497  01CD' 1303               	bcf	3,6	;RP1=0, select bank0
  2498  01CE' 0808'              	movf	?___flmul,w
  2499  01CF' 1683               	bsf	3,5	;RP0=1, select bank1
  2500  01D0' 1303               	bcf	3,6	;RP1=0, select bank1
  2501  01D1' 0080'              	movwf	sprintf@tmpval^(0+128)
  2502  01D2'                    l4339:
  2503                           
  2504                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2505  01D2' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
  2506  01D3' 0085'              	movwf	___flge@ff1+3
  2507  01D4' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  2508  01D5' 0084'              	movwf	___flge@ff1+2
  2509  01D6' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  2510  01D7' 0083'              	movwf	___flge@ff1+1
  2511  01D8' 0800'              	movf	sprintf@tmpval^(0+128),w
  2512  01D9' 0082'              	movwf	___flge@ff1
  2513  01DA' 303F               	movlw	63
  2514  01DB' 0089'              	movwf	___flge@ff2+3
  2515  01DC' 3080               	movlw	128
  2516  01DD' 0088'              	movwf	___flge@ff2+2
  2517  01DE' 3000               	movlw	0
  2518  01DF' 0087'              	movwf	___flge@ff2+1
  2519  01E0' 3000               	movlw	0
  2520  01E1' 0086'              	movwf	___flge@ff2
  2521  01E2' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  2522  01E7' 1803               	btfsc	3,0
  2523  01E8' 2800'              	goto	u7441
  2524  01E9' 2800'              	goto	u7440
  2525  01EA'                    u7441:
  2526  01EA' 2800'              	goto	l4343
  2527  01EB'                    u7440:
  2528  01EB'                    l4341:
  2529                           
  2530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2531  01EB' 30FF               	movlw	255
  2532  01EC' 1683               	bsf	3,5	;RP0=1, select bank1
  2533  01ED' 1303               	bcf	3,6	;RP1=0, select bank1
  2534  01EE' 0780'              	addwf	sprintf@eexp^(0+128),f
  2535  01EF' 1803               	skipnc
  2536  01F0' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  2537  01F1' 30FF               	movlw	255
  2538  01F2' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
  2539  01F3' 2800'              	goto	l4347
  2540  01F4'                    l4343:
  2541  01F4' 1683               	bsf	3,5	;RP0=1, select bank1
  2542  01F5' 1303               	bcf	3,6	;RP1=0, select bank1
  2543  01F6' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
  2544  01F7' 0085'              	movwf	___flge@ff1+3
  2545  01F8' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  2546  01F9' 0084'              	movwf	___flge@ff1+2
  2547  01FA' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  2548  01FB' 0083'              	movwf	___flge@ff1+1
  2549  01FC' 0800'              	movf	sprintf@tmpval^(0+128),w
  2550  01FD' 0082'              	movwf	___flge@ff1
  2551  01FE' 3041               	movlw	65
  2552  01FF' 0089'              	movwf	___flge@ff2+3
  2553  0200' 3020               	movlw	32
  2554  0201' 0088'              	movwf	___flge@ff2+2
  2555  0202' 3000               	movlw	0
  2556  0203' 0087'              	movwf	___flge@ff2+1
  2557  0204' 3000               	movlw	0
  2558  0205' 0086'              	movwf	___flge@ff2
  2559  0206' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  2560  020B' 1C03               	btfss	3,0
  2561  020C' 2800'              	goto	u7451
  2562  020D' 2800'              	goto	u7450
  2563  020E'                    u7451:
  2564  020E' 2800'              	goto	l4347
  2565  020F'                    u7450:
  2566  020F'                    l4345:
  2567                           
  2568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2569  020F' 3001               	movlw	1
  2570  0210' 1683               	bsf	3,5	;RP0=1, select bank1
  2571  0211' 1303               	bcf	3,6	;RP1=0, select bank1
  2572  0212' 0780'              	addwf	sprintf@eexp^(0+128),f
  2573  0213' 1803               	skipnc
  2574  0214' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  2575  0215' 3000               	movlw	0
  2576  0216' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
  2577  0217'                    l4347:
  2578                           
  2579                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2580  0217' 1683               	bsf	3,5	;RP0=1, select bank1
  2581  0218' 1303               	bcf	3,6	;RP1=0, select bank1
  2582  0219' 0800'              	movf	(sprintf@prec+1)^(0+128),w
  2583  021A' 3A80               	xorlw	128
  2584  021B' 00FF               	movwf	btemp+1
  2585  021C' 3080               	movlw	128
  2586  021D' 027F               	subwf	btemp+1,w
  2587  021E' 1D03               	skipz
  2588  021F' 2800'              	goto	u7465
  2589  0220' 300D               	movlw	13
  2590  0221' 0200'              	subwf	sprintf@prec^(0+128),w
  2591  0222'                    u7465:
  2592  0222' 1803               	skipnc
  2593  0223' 2800'              	goto	u7461
  2594  0224' 2800'              	goto	u7460
  2595  0225'                    u7461:
  2596  0225' 2800'              	goto	l4351
  2597  0226'                    u7460:
  2598  0226'                    l4349:
  2599                           
  2600                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2601  0226' 1683               	bsf	3,5	;RP0=1, select bank1
  2602  0227' 1303               	bcf	3,6	;RP1=0, select bank1
  2603  0228' 0800'              	movf	sprintf@prec^(0+128),w
  2604  0229' 120A' 118A' 2000' 120A' 118A' 	fcall	_fround
  2605  022E' 1283               	bcf	3,5	;RP0=0, select bank0
  2606  022F' 1303               	bcf	3,6	;RP1=0, select bank0
  2607  0230' 0825'              	movf	?_fround+3,w
  2608  0231' 00B9'              	movwf	___fladd@b+3
  2609  0232' 0824'              	movf	?_fround+2,w
  2610  0233' 00B8'              	movwf	___fladd@b+2
  2611  0234' 0823'              	movf	?_fround+1,w
  2612  0235' 00B7'              	movwf	___fladd@b+1
  2613  0236' 0822'              	movf	?_fround,w
  2614  0237' 00B6'              	movwf	___fladd@b
  2615  0238' 1683               	bsf	3,5	;RP0=1, select bank1
  2616  0239' 1303               	bcf	3,6	;RP1=0, select bank1
  2617  023A' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2618  023B' 1283               	bcf	3,5	;RP0=0, select bank0
  2619  023C' 1303               	bcf	3,6	;RP1=0, select bank0
  2620  023D' 00BD'              	movwf	___fladd@a+3
  2621  023E' 1683               	bsf	3,5	;RP0=1, select bank1
  2622  023F' 1303               	bcf	3,6	;RP1=0, select bank1
  2623  0240' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2624  0241' 1283               	bcf	3,5	;RP0=0, select bank0
  2625  0242' 1303               	bcf	3,6	;RP1=0, select bank0
  2626  0243' 00BC'              	movwf	___fladd@a+2
  2627  0244' 1683               	bsf	3,5	;RP0=1, select bank1
  2628  0245' 1303               	bcf	3,6	;RP1=0, select bank1
  2629  0246' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2630  0247' 1283               	bcf	3,5	;RP0=0, select bank0
  2631  0248' 1303               	bcf	3,6	;RP1=0, select bank0
  2632  0249' 00BB'              	movwf	___fladd@a+1
  2633  024A' 1683               	bsf	3,5	;RP0=1, select bank1
  2634  024B' 1303               	bcf	3,6	;RP1=0, select bank1
  2635  024C' 0800'              	movf	sprintf@fval^(0+128),w
  2636  024D' 1283               	bcf	3,5	;RP0=0, select bank0
  2637  024E' 1303               	bcf	3,6	;RP1=0, select bank0
  2638  024F' 00BA'              	movwf	___fladd@a
  2639  0250' 120A' 118A' 2000' 120A' 118A' 	fcall	___fladd
  2640  0255' 1283               	bcf	3,5	;RP0=0, select bank0
  2641  0256' 1303               	bcf	3,6	;RP1=0, select bank0
  2642  0257' 0839'              	movf	?___fladd+3,w
  2643  0258' 1683               	bsf	3,5	;RP0=1, select bank1
  2644  0259' 1303               	bcf	3,6	;RP1=0, select bank1
  2645  025A' 0080'              	movwf	(sprintf@fval+3)^(0+128)
  2646  025B' 1283               	bcf	3,5	;RP0=0, select bank0
  2647  025C' 1303               	bcf	3,6	;RP1=0, select bank0
  2648  025D' 0838'              	movf	?___fladd+2,w
  2649  025E' 1683               	bsf	3,5	;RP0=1, select bank1
  2650  025F' 1303               	bcf	3,6	;RP1=0, select bank1
  2651  0260' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  2652  0261' 1283               	bcf	3,5	;RP0=0, select bank0
  2653  0262' 1303               	bcf	3,6	;RP1=0, select bank0
  2654  0263' 0837'              	movf	?___fladd+1,w
  2655  0264' 1683               	bsf	3,5	;RP0=1, select bank1
  2656  0265' 1303               	bcf	3,6	;RP1=0, select bank1
  2657  0266' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  2658  0267' 1283               	bcf	3,5	;RP0=0, select bank0
  2659  0268' 1303               	bcf	3,6	;RP1=0, select bank0
  2660  0269' 0836'              	movf	?___fladd,w
  2661  026A' 1683               	bsf	3,5	;RP0=1, select bank1
  2662  026B' 1303               	bcf	3,6	;RP1=0, select bank1
  2663  026C' 0080'              	movwf	sprintf@fval^(0+128)
  2664  026D'                    l4351:
  2665                           
  2666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2667  026D' 1683               	bsf	3,5	;RP0=1, select bank1
  2668  026E' 1303               	bcf	3,6	;RP1=0, select bank1
  2669  026F' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
  2670  0270' 3A80               	xorlw	128
  2671  0271' 00FF               	movwf	btemp+1
  2672  0272' 3080               	movlw	128
  2673  0273' 027F               	subwf	btemp+1,w
  2674  0274' 1D03               	skipz
  2675  0275' 2800'              	goto	u7475
  2676  0276' 300A               	movlw	10
  2677  0277' 0200'              	subwf	sprintf@eexp^(0+128),w
  2678  0278'                    u7475:
  2679  0278' 1803               	skipnc
  2680  0279' 2800'              	goto	u7471
  2681  027A' 2800'              	goto	u7470
  2682  027B'                    u7471:
  2683  027B' 2800'              	goto	l4359
  2684  027C'                    u7470:
  2685  027C'                    l4353:
  2686  027C' 1683               	bsf	3,5	;RP0=1, select bank1
  2687  027D' 1303               	bcf	3,6	;RP1=0, select bank1
  2688  027E' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2689  027F' 0085'              	movwf	___fleq@ff1+3
  2690  0280' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2691  0281' 0084'              	movwf	___fleq@ff1+2
  2692  0282' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2693  0283' 0083'              	movwf	___fleq@ff1+1
  2694  0284' 0800'              	movf	sprintf@fval^(0+128),w
  2695  0285' 0082'              	movwf	___fleq@ff1
  2696  0286' 3000               	movlw	0
  2697  0287' 0089'              	movwf	___fleq@ff2+3
  2698  0288' 3000               	movlw	0
  2699  0289' 0088'              	movwf	___fleq@ff2+2
  2700  028A' 3000               	movlw	0
  2701  028B' 0087'              	movwf	___fleq@ff2+1
  2702  028C' 3000               	movlw	0
  2703  028D' 0086'              	movwf	___fleq@ff2
  2704  028E' 120A' 118A' 2000' 120A' 118A' 	fcall	___fleq
  2705  0293' 1803               	btfsc	3,0
  2706  0294' 2800'              	goto	u7481
  2707  0295' 2800'              	goto	u7480
  2708  0296'                    u7481:
  2709  0296' 2800'              	goto	l4373
  2710  0297'                    u7480:
  2711  0297'                    l4355:
  2712  0297' 1683               	bsf	3,5	;RP0=1, select bank1
  2713  0298' 1303               	bcf	3,6	;RP1=0, select bank1
  2714  0299' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2715  029A' 1283               	bcf	3,5	;RP0=0, select bank0
  2716  029B' 1303               	bcf	3,6	;RP1=0, select bank0
  2717  029C' 00B8'              	movwf	___fltol@f1+3
  2718  029D' 1683               	bsf	3,5	;RP0=1, select bank1
  2719  029E' 1303               	bcf	3,6	;RP1=0, select bank1
  2720  029F' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2721  02A0' 1283               	bcf	3,5	;RP0=0, select bank0
  2722  02A1' 1303               	bcf	3,6	;RP1=0, select bank0
  2723  02A2' 00B7'              	movwf	___fltol@f1+2
  2724  02A3' 1683               	bsf	3,5	;RP0=1, select bank1
  2725  02A4' 1303               	bcf	3,6	;RP1=0, select bank1
  2726  02A5' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2727  02A6' 1283               	bcf	3,5	;RP0=0, select bank0
  2728  02A7' 1303               	bcf	3,6	;RP1=0, select bank0
  2729  02A8' 00B6'              	movwf	___fltol@f1+1
  2730  02A9' 1683               	bsf	3,5	;RP0=1, select bank1
  2731  02AA' 1303               	bcf	3,6	;RP1=0, select bank1
  2732  02AB' 0800'              	movf	sprintf@fval^(0+128),w
  2733  02AC' 1283               	bcf	3,5	;RP0=0, select bank0
  2734  02AD' 1303               	bcf	3,6	;RP1=0, select bank0
  2735  02AE' 00B5'              	movwf	___fltol@f1
  2736  02AF' 120A' 118A' 2000' 120A' 118A' 	fcall	___fltol
  2737  02B4' 1283               	bcf	3,5	;RP0=0, select bank0
  2738  02B5' 1303               	bcf	3,6	;RP1=0, select bank0
  2739  02B6' 0838'              	movf	?___fltol+3,w
  2740  02B7' 0437'              	iorwf	?___fltol+2,w
  2741  02B8' 0436'              	iorwf	?___fltol+1,w
  2742  02B9' 0435'              	iorwf	?___fltol,w
  2743  02BA' 1D03               	skipz
  2744  02BB' 2800'              	goto	u7491
  2745  02BC' 2800'              	goto	u7490
  2746  02BD'                    u7491:
  2747  02BD' 2800'              	goto	l4373
  2748  02BE'                    u7490:
  2749  02BE'                    l4357:
  2750  02BE' 1683               	bsf	3,5	;RP0=1, select bank1
  2751  02BF' 1303               	bcf	3,6	;RP1=0, select bank1
  2752  02C0' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
  2753  02C1' 3A80               	xorlw	128
  2754  02C2' 00FF               	movwf	btemp+1
  2755  02C3' 3080               	movlw	128
  2756  02C4' 027F               	subwf	btemp+1,w
  2757  02C5' 1D03               	skipz
  2758  02C6' 2800'              	goto	u7505
  2759  02C7' 3002               	movlw	2
  2760  02C8' 0200'              	subwf	sprintf@eexp^(0+128),w
  2761  02C9'                    u7505:
  2762  02C9' 1C03               	skipc
  2763  02CA' 2800'              	goto	u7501
  2764  02CB' 2800'              	goto	u7500
  2765  02CC'                    u7501:
  2766  02CC' 2800'              	goto	l4373
  2767  02CD'                    u7500:
  2768  02CD'                    l4359:
  2769                           
  2770                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2771  02CD' 1683               	bsf	3,5	;RP0=1, select bank1
  2772  02CE' 1303               	bcf	3,6	;RP1=0, select bank1
  2773  02CF' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
  2774  02D0' 0085'              	movwf	___flge@ff1+3
  2775  02D1' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  2776  02D2' 0084'              	movwf	___flge@ff1+2
  2777  02D3' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  2778  02D4' 0083'              	movwf	___flge@ff1+1
  2779  02D5' 0800'              	movf	sprintf@tmpval^(0+128),w
  2780  02D6' 0082'              	movwf	___flge@ff1
  2781  02D7' 3040               	movlw	64
  2782  02D8' 0089'              	movwf	___flge@ff2+3
  2783  02D9' 3089               	movlw	137
  2784  02DA' 0088'              	movwf	___flge@ff2+2
  2785  02DB' 3070               	movlw	112
  2786  02DC' 0087'              	movwf	___flge@ff2+1
  2787  02DD' 305F               	movlw	95
  2788  02DE' 0086'              	movwf	___flge@ff2
  2789  02DF' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  2790  02E4' 1803               	btfsc	3,0
  2791  02E5' 2800'              	goto	u7511
  2792  02E6' 2800'              	goto	u7510
  2793  02E7'                    u7511:
  2794  02E7' 2800'              	goto	l4363
  2795  02E8'                    u7510:
  2796  02E8'                    l4361:
  2797                           
  2798                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2799  02E8' 30F7               	movlw	247
  2800  02E9' 1683               	bsf	3,5	;RP0=1, select bank1
  2801  02EA' 1303               	bcf	3,6	;RP1=0, select bank1
  2802  02EB' 0780'              	addwf	sprintf@eexp^(0+128),f
  2803  02EC' 1803               	skipnc
  2804  02ED' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  2805  02EE' 30FF               	movlw	255
  2806  02EF' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
  2807                           
  2808                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2809  02F0' 2800'              	goto	l4365
  2810  02F1'                    l4363:
  2811                           
  2812                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2813  02F1' 30F8               	movlw	248
  2814  02F2' 1683               	bsf	3,5	;RP0=1, select bank1
  2815  02F3' 1303               	bcf	3,6	;RP1=0, select bank1
  2816  02F4' 0780'              	addwf	sprintf@eexp^(0+128),f
  2817  02F5' 1803               	skipnc
  2818  02F6' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  2819  02F7' 30FF               	movlw	255
  2820  02F8' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
  2821  02F9'                    l4365:
  2822                           
  2823                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2824  02F9' 0800'              	movf	sprintf@eexp^(0+128),w
  2825  02FA' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
  2826  02FF' 1283               	bcf	3,5	;RP0=0, select bank0
  2827  0300' 1303               	bcf	3,6	;RP1=0, select bank0
  2828  0301' 0825'              	movf	?_scale+3,w
  2829  0302' 1683               	bsf	3,5	;RP0=1, select bank1
  2830  0303' 1303               	bcf	3,6	;RP1=0, select bank1
  2831  0304' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
  2832  0305' 1283               	bcf	3,5	;RP0=0, select bank0
  2833  0306' 1303               	bcf	3,6	;RP1=0, select bank0
  2834  0307' 0824'              	movf	?_scale+2,w
  2835  0308' 1683               	bsf	3,5	;RP0=1, select bank1
  2836  0309' 1303               	bcf	3,6	;RP1=0, select bank1
  2837  030A' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  2838  030B' 1283               	bcf	3,5	;RP0=0, select bank0
  2839  030C' 1303               	bcf	3,6	;RP1=0, select bank0
  2840  030D' 0823'              	movf	?_scale+1,w
  2841  030E' 1683               	bsf	3,5	;RP0=1, select bank1
  2842  030F' 1303               	bcf	3,6	;RP1=0, select bank1
  2843  0310' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  2844  0311' 1283               	bcf	3,5	;RP0=0, select bank0
  2845  0312' 1303               	bcf	3,6	;RP1=0, select bank0
  2846  0313' 0822'              	movf	?_scale,w
  2847  0314' 1683               	bsf	3,5	;RP0=1, select bank1
  2848  0315' 1303               	bcf	3,6	;RP1=0, select bank1
  2849  0316' 0080'              	movwf	sprintf@tmpval^(0+128)
  2850  0317'                    l4367:
  2851  0317' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2852  0318' 0085'              	movwf	__div_to_l_@f1+3
  2853  0319' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2854  031A' 0084'              	movwf	__div_to_l_@f1+2
  2855  031B' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2856  031C' 0083'              	movwf	__div_to_l_@f1+1
  2857  031D' 0800'              	movf	sprintf@fval^(0+128),w
  2858  031E' 0082'              	movwf	__div_to_l_@f1
  2859  031F' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
  2860  0320' 0089'              	movwf	__div_to_l_@f2+3
  2861  0321' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  2862  0322' 0088'              	movwf	__div_to_l_@f2+2
  2863  0323' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  2864  0324' 0087'              	movwf	__div_to_l_@f2+1
  2865  0325' 0800'              	movf	sprintf@tmpval^(0+128),w
  2866  0326' 0086'              	movwf	__div_to_l_@f2
  2867  0327' 120A' 118A' 2000' 120A' 118A' 	fcall	__div_to_l_
  2868  032C' 0805'              	movf	?__div_to_l_+3,w
  2869  032D' 1683               	bsf	3,5	;RP0=1, select bank1
  2870  032E' 1303               	bcf	3,6	;RP1=0, select bank1
  2871  032F' 0080'              	movwf	(sprintf@val+3)^(0+128)
  2872  0330' 0804'              	movf	?__div_to_l_+2,w
  2873  0331' 0080'              	movwf	(sprintf@val+2)^(0+128)
  2874  0332' 0803'              	movf	?__div_to_l_+1,w
  2875  0333' 0080'              	movwf	(sprintf@val+1)^(0+128)
  2876  0334' 0802'              	movf	?__div_to_l_,w
  2877  0335' 0080'              	movwf	sprintf@val^(0+128)
  2878  0336'                    l4371:
  2879                           
  2880                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2881  0336' 3000               	movlw	0
  2882  0337' 0080'              	movwf	(sprintf@fval+3)^(0+128)
  2883  0338' 3000               	movlw	0
  2884  0339' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  2885  033A' 3000               	movlw	0
  2886  033B' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  2887  033C' 3000               	movlw	0
  2888  033D' 0080'              	movwf	sprintf@fval^(0+128)
  2889                           
  2890                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2891  033E' 2800'              	goto	l4379
  2892  033F'                    l4373:
  2893                           
  2894                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2895  033F' 1683               	bsf	3,5	;RP0=1, select bank1
  2896  0340' 1303               	bcf	3,6	;RP1=0, select bank1
  2897  0341' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2898  0342' 1283               	bcf	3,5	;RP0=0, select bank0
  2899  0343' 1303               	bcf	3,6	;RP1=0, select bank0
  2900  0344' 00B8'              	movwf	___fltol@f1+3
  2901  0345' 1683               	bsf	3,5	;RP0=1, select bank1
  2902  0346' 1303               	bcf	3,6	;RP1=0, select bank1
  2903  0347' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2904  0348' 1283               	bcf	3,5	;RP0=0, select bank0
  2905  0349' 1303               	bcf	3,6	;RP1=0, select bank0
  2906  034A' 00B7'              	movwf	___fltol@f1+2
  2907  034B' 1683               	bsf	3,5	;RP0=1, select bank1
  2908  034C' 1303               	bcf	3,6	;RP1=0, select bank1
  2909  034D' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2910  034E' 1283               	bcf	3,5	;RP0=0, select bank0
  2911  034F' 1303               	bcf	3,6	;RP1=0, select bank0
  2912  0350' 00B6'              	movwf	___fltol@f1+1
  2913  0351' 1683               	bsf	3,5	;RP0=1, select bank1
  2914  0352' 1303               	bcf	3,6	;RP1=0, select bank1
  2915  0353' 0800'              	movf	sprintf@fval^(0+128),w
  2916  0354' 1283               	bcf	3,5	;RP0=0, select bank0
  2917  0355' 1303               	bcf	3,6	;RP1=0, select bank0
  2918  0356' 00B5'              	movwf	___fltol@f1
  2919  0357' 120A' 118A' 2000' 120A' 118A' 	fcall	___fltol
  2920  035C' 1283               	bcf	3,5	;RP0=0, select bank0
  2921  035D' 1303               	bcf	3,6	;RP1=0, select bank0
  2922  035E' 0838'              	movf	?___fltol+3,w
  2923  035F' 1683               	bsf	3,5	;RP0=1, select bank1
  2924  0360' 1303               	bcf	3,6	;RP1=0, select bank1
  2925  0361' 0080'              	movwf	(sprintf@val+3)^(0+128)
  2926  0362' 1283               	bcf	3,5	;RP0=0, select bank0
  2927  0363' 1303               	bcf	3,6	;RP1=0, select bank0
  2928  0364' 0837'              	movf	?___fltol+2,w
  2929  0365' 1683               	bsf	3,5	;RP0=1, select bank1
  2930  0366' 1303               	bcf	3,6	;RP1=0, select bank1
  2931  0367' 0080'              	movwf	(sprintf@val+2)^(0+128)
  2932  0368' 1283               	bcf	3,5	;RP0=0, select bank0
  2933  0369' 1303               	bcf	3,6	;RP1=0, select bank0
  2934  036A' 0836'              	movf	?___fltol+1,w
  2935  036B' 1683               	bsf	3,5	;RP0=1, select bank1
  2936  036C' 1303               	bcf	3,6	;RP1=0, select bank1
  2937  036D' 0080'              	movwf	(sprintf@val+1)^(0+128)
  2938  036E' 1283               	bcf	3,5	;RP0=0, select bank0
  2939  036F' 1303               	bcf	3,6	;RP1=0, select bank0
  2940  0370' 0835'              	movf	?___fltol,w
  2941  0371' 1683               	bsf	3,5	;RP0=1, select bank1
  2942  0372' 1303               	bcf	3,6	;RP1=0, select bank1
  2943  0373' 0080'              	movwf	sprintf@val^(0+128)
  2944  0374'                    l4375:
  2945                           
  2946                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2947  0374' 0800'              	movf	(sprintf@val+3)^(0+128),w
  2948  0375' 0085'              	movwf	___xxtofl@val+3
  2949  0376' 0800'              	movf	(sprintf@val+2)^(0+128),w
  2950  0377' 0084'              	movwf	___xxtofl@val+2
  2951  0378' 0800'              	movf	(sprintf@val+1)^(0+128),w
  2952  0379' 0083'              	movwf	___xxtofl@val+1
  2953  037A' 0800'              	movf	sprintf@val^(0+128),w
  2954  037B' 0082'              	movwf	___xxtofl@val
  2955  037C' 3000               	movlw	0
  2956  037D' 120A' 118A' 2000' 120A' 118A' 	fcall	___xxtofl
  2957  0382' 0805'              	movf	?___xxtofl+3,w
  2958  0383' 1683               	bsf	3,5	;RP0=1, select bank1
  2959  0384' 1303               	bcf	3,6	;RP1=0, select bank1
  2960  0385' 0080'              	movwf	(___flsub@a+3)^(0+128)
  2961  0386' 0804'              	movf	?___xxtofl+2,w
  2962  0387' 0080'              	movwf	(___flsub@a+2)^(0+128)
  2963  0388' 0803'              	movf	?___xxtofl+1,w
  2964  0389' 0080'              	movwf	(___flsub@a+1)^(0+128)
  2965  038A' 0802'              	movf	?___xxtofl,w
  2966  038B' 0080'              	movwf	___flsub@a^(0+128)
  2967  038C' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2968  038D' 0080'              	movwf	(___flsub@b+3)^(0+128)
  2969  038E' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2970  038F' 0080'              	movwf	(___flsub@b+2)^(0+128)
  2971  0390' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2972  0391' 0080'              	movwf	(___flsub@b+1)^(0+128)
  2973  0392' 0800'              	movf	sprintf@fval^(0+128),w
  2974  0393' 0080'              	movwf	___flsub@b^(0+128)
  2975  0394' 120A' 118A' 2000' 120A' 118A' 	fcall	___flsub
  2976  0399' 1683               	bsf	3,5	;RP0=1, select bank1
  2977  039A' 1303               	bcf	3,6	;RP1=0, select bank1
  2978  039B' 0800'              	movf	(?___flsub+3)^(0+128),w
  2979  039C' 0080'              	movwf	(sprintf@fval+3)^(0+128)
  2980  039D' 0800'              	movf	(?___flsub+2)^(0+128),w
  2981  039E' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  2982  039F' 0800'              	movf	(?___flsub+1)^(0+128),w
  2983  03A0' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  2984  03A1' 0800'              	movf	?___flsub^(0+128),w
  2985  03A2' 0080'              	movwf	sprintf@fval^(0+128)
  2986  03A3'                    l4377:
  2987                           
  2988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2989  03A3' 0180'              	clrf	sprintf@eexp^(0+128)
  2990  03A4' 0180'              	clrf	(sprintf@eexp+1)^(0+128)
  2991  03A5'                    l4379:
  2992                           
  2993                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2994  03A5' 0180'              	clrf	sprintf@c^(0+128)
  2995  03A6' 0A80'              	incf	sprintf@c^(0+128),f
  2996  03A7'                    l4385:
  2997                           
  2998                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2999  03A7' 0800'              	movf	sprintf@c^(0+128),w
  3000  03A8' 0080'              	movwf	??_sprintf^(0+128)
  3001  03A9' 3001               	movlw	1
  3002  03AA'                    u7525:
  3003  03AA' 1003               	clrc
  3004  03AB' 0D80'              	rlf	??_sprintf^(0+128),f
  3005  03AC' 3EFF               	addlw	-1
  3006  03AD' 1D03               	skipz
  3007  03AE' 2800'              	goto	u7525
  3008  03AF' 1003               	clrc
  3009  03B0' 0D00'              	rlf	??_sprintf^(0+128),w
  3010  03B1' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3011  03B2' 0084               	movwf	4
  3012  03B3' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3013  03B8' 0080'              	movwf	(??_sprintf+1)^(0+128)
  3014  03B9' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3015  03BE' 0081'              	movwf	((??_sprintf+1)^(0+128)+1)
  3016  03BF' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3017  03C4' 0082'              	movwf	((??_sprintf+1)^(0+128)+2)
  3018  03C5' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3019  03CA' 0083'              	movwf	((??_sprintf+1)^(0+128)+3)
  3020  03CB' 0800'              	movf	(??_sprintf+4)^(0+128),w
  3021  03CC' 0200'              	subwf	(sprintf@val+3)^(0+128),w
  3022  03CD' 1D03               	skipz
  3023  03CE' 2800'              	goto	u7535
  3024  03CF' 0800'              	movf	(??_sprintf+3)^(0+128),w
  3025  03D0' 0200'              	subwf	(sprintf@val+2)^(0+128),w
  3026  03D1' 1D03               	skipz
  3027  03D2' 2800'              	goto	u7535
  3028  03D3' 0800'              	movf	(??_sprintf+2)^(0+128),w
  3029  03D4' 0200'              	subwf	(sprintf@val+1)^(0+128),w
  3030  03D5' 1D03               	skipz
  3031  03D6' 2800'              	goto	u7535
  3032  03D7' 0800'              	movf	(??_sprintf+1)^(0+128),w
  3033  03D8' 0200'              	subwf	sprintf@val^(0+128),w
  3034  03D9'                    u7535:
  3035  03D9' 1803               	skipnc
  3036  03DA' 2800'              	goto	u7531
  3037  03DB' 2800'              	goto	u7530
  3038  03DC'                    u7531:
  3039  03DC' 2800'              	goto	l4389
  3040  03DD'                    u7530:
  3041  03DD' 2800'              	goto	l4391
  3042  03DE'                    l4389:
  3043  03DE' 3001               	movlw	1
  3044  03DF' 0080'              	movwf	??_sprintf^(0+128)
  3045  03E0' 0800'              	movf	??_sprintf^(0+128),w
  3046  03E1' 0780'              	addwf	sprintf@c^(0+128),f
  3047  03E2' 300A               	movlw	10
  3048  03E3' 0600'              	xorwf	sprintf@c^(0+128),w
  3049  03E4' 1D03               	btfss	3,2
  3050  03E5' 2800'              	goto	u7541
  3051  03E6' 2800'              	goto	u7540
  3052  03E7'                    u7541:
  3053  03E7' 2800'              	goto	l4385
  3054  03E8'                    u7540:
  3055  03E8'                    l4391:
  3056                           
  3057                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  3058  03E8' 3003               	movlw	3
  3059  03E9' 0500'              	andwf	sprintf@flag^(0+128),w
  3060  03EA' 0080'              	movwf	??_sprintf^(0+128)
  3061  03EB' 3000               	movlw	0
  3062  03EC' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
  3063  03ED' 0080'              	movwf	(??_sprintf+1)^(0+128)
  3064  03EE' 0800'              	movf	??_sprintf^(0+128),w
  3065  03EF' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
  3066  03F0' 1903               	btfsc	3,2
  3067  03F1' 2800'              	goto	u7551
  3068  03F2' 2800'              	goto	u7550
  3069  03F3'                    u7551:
  3070  03F3' 2800'              	goto	l349
  3071  03F4'                    u7550:
  3072  03F4'                    l4393:
  3073                           
  3074                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3075  03F4' 0800'              	movf	sprintf@sp^(0+128),w
  3076  03F5' 0084               	movwf	4
  3077  03F6' 302D               	movlw	45
  3078  03F7' 1383               	bcf	3,7	;select IRP bank0
  3079  03F8' 0080               	movwf	0
  3080  03F9'                    l4395:
  3081  03F9' 3001               	movlw	1
  3082  03FA' 0080'              	movwf	??_sprintf^(0+128)
  3083  03FB' 0800'              	movf	??_sprintf^(0+128),w
  3084  03FC' 0780'              	addwf	sprintf@sp^(0+128),f
  3085  03FD' 2800'              	goto	l349
  3086  03FE'                    l4397:
  3087                           
  3088                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3089  03FE' 0800'              	movf	sprintf@c^(0+128),w
  3090  03FF' 0080'              	movwf	??_sprintf^(0+128)
  3091  0400' 3001               	movlw	1
  3092  0401'                    u7565:
  3093  0401' 1003               	clrc
  3094  0402' 0D80'              	rlf	??_sprintf^(0+128),f
  3095  0403' 3EFF               	addlw	-1
  3096  0404' 1D03               	skipz
  3097  0405' 2800'              	goto	u7565
  3098  0406' 1003               	clrc
  3099  0407' 0D00'              	rlf	??_sprintf^(0+128),w
  3100  0408' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3101  0409' 0084               	movwf	4
  3102  040A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3103  040F' 0082'              	movwf	___lldiv@divisor
  3104  0410' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3105  0415' 0083'              	movwf	___lldiv@divisor+1
  3106  0416' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3107  041B' 0084'              	movwf	___lldiv@divisor+2
  3108  041C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3109  0421' 0085'              	movwf	___lldiv@divisor+3
  3110  0422' 0800'              	movf	(sprintf@val+3)^(0+128),w
  3111  0423' 0089'              	movwf	___lldiv@dividend+3
  3112  0424' 0800'              	movf	(sprintf@val+2)^(0+128),w
  3113  0425' 0088'              	movwf	___lldiv@dividend+2
  3114  0426' 0800'              	movf	(sprintf@val+1)^(0+128),w
  3115  0427' 0087'              	movwf	___lldiv@dividend+1
  3116  0428' 0800'              	movf	sprintf@val^(0+128),w
  3117  0429' 0086'              	movwf	___lldiv@dividend
  3118  042A' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
  3119  042F' 0805'              	movf	?___lldiv+3,w
  3120  0430' 1683               	bsf	3,5	;RP0=1, select bank1
  3121  0431' 1303               	bcf	3,6	;RP1=0, select bank1
  3122  0432' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
  3123  0433' 0804'              	movf	?___lldiv+2,w
  3124  0434' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  3125  0435' 0803'              	movf	?___lldiv+1,w
  3126  0436' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  3127  0437' 0802'              	movf	?___lldiv,w
  3128  0438' 0080'              	movwf	sprintf@tmpval^(0+128)
  3129  0439'                    l4399:
  3130                           
  3131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3132  0439' 3000               	movlw	0
  3133  043A' 0085'              	movwf	___llmod@divisor+3
  3134  043B' 3000               	movlw	0
  3135  043C' 0084'              	movwf	___llmod@divisor+2
  3136  043D' 3000               	movlw	0
  3137  043E' 0083'              	movwf	___llmod@divisor+1
  3138  043F' 300A               	movlw	10
  3139  0440' 0082'              	movwf	___llmod@divisor
  3140  0441' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
  3141  0442' 0089'              	movwf	___llmod@dividend+3
  3142  0443' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  3143  0444' 0088'              	movwf	___llmod@dividend+2
  3144  0445' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  3145  0446' 0087'              	movwf	___llmod@dividend+1
  3146  0447' 0800'              	movf	sprintf@tmpval^(0+128),w
  3147  0448' 0086'              	movwf	___llmod@dividend
  3148  0449' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
  3149  044E' 0805'              	movf	?___llmod+3,w
  3150  044F' 1683               	bsf	3,5	;RP0=1, select bank1
  3151  0450' 1303               	bcf	3,6	;RP1=0, select bank1
  3152  0451' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
  3153  0452' 0804'              	movf	?___llmod+2,w
  3154  0453' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  3155  0454' 0803'              	movf	?___llmod+1,w
  3156  0455' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  3157  0456' 0802'              	movf	?___llmod,w
  3158  0457' 0080'              	movwf	sprintf@tmpval^(0+128)
  3159  0458'                    l4401:
  3160                           
  3161                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3162  0458' 0800'              	movf	sprintf@sp^(0+128),w
  3163  0459' 0084               	movwf	4
  3164  045A' 0800'              	movf	sprintf@tmpval^(0+128),w
  3165  045B' 3E30               	addlw	48
  3166  045C' 1383               	bcf	3,7	;select IRP bank0
  3167  045D' 0080               	movwf	0
  3168  045E' 3001               	movlw	1
  3169  045F' 0080'              	movwf	??_sprintf^(0+128)
  3170  0460' 0800'              	movf	??_sprintf^(0+128),w
  3171  0461' 0780'              	addwf	sprintf@sp^(0+128),f
  3172  0462'                    l349:	
  3173                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1232:    }
  3174                           
  3175                           
  3176                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3177  0462' 3001               	movlw	1
  3178  0463' 0280'              	subwf	sprintf@c^(0+128),f
  3179  0464' 0A00'              	incf	sprintf@c^(0+128),w
  3180  0465' 1D03               	btfss	3,2
  3181  0466' 2800'              	goto	u7571
  3182  0467' 2800'              	goto	u7570
  3183  0468'                    u7571:
  3184  0468' 2800'              	goto	l4397
  3185  0469'                    u7570:
  3186  0469' 2800'              	goto	l4409
  3187  046A'                    l4403:
  3188                           
  3189                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3190  046A' 1683               	bsf	3,5	;RP0=1, select bank1
  3191  046B' 1303               	bcf	3,6	;RP1=0, select bank1
  3192  046C' 0800'              	movf	sprintf@sp^(0+128),w
  3193  046D' 0084               	movwf	4
  3194  046E' 3030               	movlw	48
  3195  046F' 1383               	bcf	3,7	;select IRP bank0
  3196  0470' 0080               	movwf	0
  3197  0471'                    l4405:
  3198  0471' 3001               	movlw	1
  3199  0472' 0080'              	movwf	??_sprintf^(0+128)
  3200  0473' 0800'              	movf	??_sprintf^(0+128),w
  3201  0474' 0780'              	addwf	sprintf@sp^(0+128),f
  3202  0475'                    l4407:
  3203                           
  3204                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3205  0475' 30FF               	movlw	255
  3206  0476' 0780'              	addwf	sprintf@eexp^(0+128),f
  3207  0477' 1803               	skipnc
  3208  0478' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  3209  0479' 30FF               	movlw	255
  3210  047A' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
  3211  047B'                    l4409:
  3212                           
  3213                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3214  047B' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
  3215  047C' 3A80               	xorlw	128
  3216  047D' 00FF               	movwf	btemp+1
  3217  047E' 3080               	movlw	128
  3218  047F' 027F               	subwf	btemp+1,w
  3219  0480' 1D03               	skipz
  3220  0481' 2800'              	goto	u7585
  3221  0482' 3001               	movlw	1
  3222  0483' 0200'              	subwf	sprintf@eexp^(0+128),w
  3223  0484'                    u7585:
  3224  0484' 1803               	skipnc
  3225  0485' 2800'              	goto	u7581
  3226  0486' 2800'              	goto	u7580
  3227  0487'                    u7581:
  3228  0487' 2800'              	goto	l4403
  3229  0488'                    u7580:
  3230  0488'                    l4411:
  3231                           
  3232                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3233  0488' 1683               	bsf	3,5	;RP0=1, select bank1
  3234  0489' 1303               	bcf	3,6	;RP1=0, select bank1
  3235  048A' 0800'              	movf	(sprintf@prec+1)^(0+128),w
  3236  048B' 3A80               	xorlw	128
  3237  048C' 00FF               	movwf	btemp+1
  3238  048D' 3080               	movlw	128
  3239  048E' 027F               	subwf	btemp+1,w
  3240  048F' 1D03               	skipz
  3241  0490' 2800'              	goto	u7595
  3242  0491' 3009               	movlw	9
  3243  0492' 0200'              	subwf	sprintf@prec^(0+128),w
  3244  0493'                    u7595:
  3245  0493' 1C03               	skipc
  3246  0494' 2800'              	goto	u7591
  3247  0495' 2800'              	goto	u7590
  3248  0496'                    u7591:
  3249  0496' 2800'              	goto	l4415
  3250  0497'                    u7590:
  3251  0497'                    l4413:
  3252                           
  3253                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3254  0497' 3008               	movlw	8
  3255  0498' 1683               	bsf	3,5	;RP0=1, select bank1
  3256  0499' 1303               	bcf	3,6	;RP1=0, select bank1
  3257  049A' 0080'              	movwf	sprintf@c^(0+128)
  3258  049B' 2800'              	goto	l356
  3259  049C'                    l4415:
  3260                           
  3261                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3262  049C' 1683               	bsf	3,5	;RP0=1, select bank1
  3263  049D' 1303               	bcf	3,6	;RP1=0, select bank1
  3264  049E' 0800'              	movf	sprintf@prec^(0+128),w
  3265  049F' 0080'              	movwf	sprintf@c^(0+128)
  3266  04A0'                    l356:
  3267                           
  3268                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3269  04A0' 0800'              	movf	sprintf@c^(0+128),w
  3270  04A1' 0080'              	movwf	??_sprintf^(0+128)
  3271  04A2' 0181'              	clrf	(??_sprintf^(0+128)+1)
  3272  04A3' 0800'              	movf	??_sprintf^(0+128),w
  3273  04A4' 0280'              	subwf	sprintf@prec^(0+128),f
  3274  04A5' 0800'              	movf	(??_sprintf+1)^(0+128),w
  3275  04A6' 1C03               	skipc
  3276  04A7' 0380'              	decf	(sprintf@prec+1)^(0+128),f
  3277  04A8' 0280'              	subwf	(sprintf@prec+1)^(0+128),f
  3278  04A9'                    l4417:
  3279                           
  3280                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3281  04A9' 0800'              	movf	sprintf@c^(0+128),w
  3282  04AA' 1903               	btfsc	3,2
  3283  04AB' 2800'              	goto	u7601
  3284  04AC' 2800'              	goto	u7600
  3285  04AD'                    u7601:
  3286  04AD' 2800'              	goto	l4423
  3287  04AE'                    u7600:
  3288  04AE'                    l4419:
  3289                           
  3290                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3291  04AE' 0800'              	movf	sprintf@sp^(0+128),w
  3292  04AF' 0084               	movwf	4
  3293  04B0' 302E               	movlw	46
  3294  04B1' 1383               	bcf	3,7	;select IRP bank0
  3295  04B2' 0080               	movwf	0
  3296  04B3'                    l4421:
  3297  04B3' 3001               	movlw	1
  3298  04B4' 0080'              	movwf	??_sprintf^(0+128)
  3299  04B5' 0800'              	movf	??_sprintf^(0+128),w
  3300  04B6' 0780'              	addwf	sprintf@sp^(0+128),f
  3301  04B7'                    l4423:
  3302                           
  3303                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3304  04B7' 0800'              	movf	sprintf@c^(0+128),w
  3305  04B8' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
  3306  04BD' 1283               	bcf	3,5	;RP0=0, select bank0
  3307  04BE' 1303               	bcf	3,6	;RP1=0, select bank0
  3308  04BF' 0825'              	movf	?_scale+3,w
  3309  04C0' 1683               	bsf	3,5	;RP0=1, select bank1
  3310  04C1' 1303               	bcf	3,6	;RP1=0, select bank1
  3311  04C2' 0080'              	movwf	(_sprintf$1052+3)^(0+128)
  3312  04C3' 1283               	bcf	3,5	;RP0=0, select bank0
  3313  04C4' 1303               	bcf	3,6	;RP1=0, select bank0
  3314  04C5' 0824'              	movf	?_scale+2,w
  3315  04C6' 1683               	bsf	3,5	;RP0=1, select bank1
  3316  04C7' 1303               	bcf	3,6	;RP1=0, select bank1
  3317  04C8' 0080'              	movwf	(_sprintf$1052+2)^(0+128)
  3318  04C9' 1283               	bcf	3,5	;RP0=0, select bank0
  3319  04CA' 1303               	bcf	3,6	;RP1=0, select bank0
  3320  04CB' 0823'              	movf	?_scale+1,w
  3321  04CC' 1683               	bsf	3,5	;RP0=1, select bank1
  3322  04CD' 1303               	bcf	3,6	;RP1=0, select bank1
  3323  04CE' 0080'              	movwf	(_sprintf$1052+1)^(0+128)
  3324  04CF' 1283               	bcf	3,5	;RP0=0, select bank0
  3325  04D0' 1303               	bcf	3,6	;RP1=0, select bank0
  3326  04D1' 0822'              	movf	?_scale,w
  3327  04D2' 1683               	bsf	3,5	;RP0=1, select bank1
  3328  04D3' 1303               	bcf	3,6	;RP1=0, select bank1
  3329  04D4' 0080'              	movwf	_sprintf$1052^(0+128)
  3330  04D5'                    l4425:
  3331                           
  3332                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3333  04D5' 0800'              	movf	(_sprintf$1052+3)^(0+128),w
  3334  04D6' 1283               	bcf	3,5	;RP0=0, select bank0
  3335  04D7' 1303               	bcf	3,6	;RP1=0, select bank0
  3336  04D8' 008F'              	movwf	___flmul@a+3
  3337  04D9' 1683               	bsf	3,5	;RP0=1, select bank1
  3338  04DA' 1303               	bcf	3,6	;RP1=0, select bank1
  3339  04DB' 0800'              	movf	(_sprintf$1052+2)^(0+128),w
  3340  04DC' 1283               	bcf	3,5	;RP0=0, select bank0
  3341  04DD' 1303               	bcf	3,6	;RP1=0, select bank0
  3342  04DE' 008E'              	movwf	___flmul@a+2
  3343  04DF' 1683               	bsf	3,5	;RP0=1, select bank1
  3344  04E0' 1303               	bcf	3,6	;RP1=0, select bank1
  3345  04E1' 0800'              	movf	(_sprintf$1052+1)^(0+128),w
  3346  04E2' 1283               	bcf	3,5	;RP0=0, select bank0
  3347  04E3' 1303               	bcf	3,6	;RP1=0, select bank0
  3348  04E4' 008D'              	movwf	___flmul@a+1
  3349  04E5' 1683               	bsf	3,5	;RP0=1, select bank1
  3350  04E6' 1303               	bcf	3,6	;RP1=0, select bank1
  3351  04E7' 0800'              	movf	_sprintf$1052^(0+128),w
  3352  04E8' 1283               	bcf	3,5	;RP0=0, select bank0
  3353  04E9' 1303               	bcf	3,6	;RP1=0, select bank0
  3354  04EA' 008C'              	movwf	___flmul@a
  3355  04EB' 1683               	bsf	3,5	;RP0=1, select bank1
  3356  04EC' 1303               	bcf	3,6	;RP1=0, select bank1
  3357  04ED' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  3358  04EE' 1283               	bcf	3,5	;RP0=0, select bank0
  3359  04EF' 1303               	bcf	3,6	;RP1=0, select bank0
  3360  04F0' 008B'              	movwf	___flmul@b+3
  3361  04F1' 1683               	bsf	3,5	;RP0=1, select bank1
  3362  04F2' 1303               	bcf	3,6	;RP1=0, select bank1
  3363  04F3' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  3364  04F4' 1283               	bcf	3,5	;RP0=0, select bank0
  3365  04F5' 1303               	bcf	3,6	;RP1=0, select bank0
  3366  04F6' 008A'              	movwf	___flmul@b+2
  3367  04F7' 1683               	bsf	3,5	;RP0=1, select bank1
  3368  04F8' 1303               	bcf	3,6	;RP1=0, select bank1
  3369  04F9' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  3370  04FA' 1283               	bcf	3,5	;RP0=0, select bank0
  3371  04FB' 1303               	bcf	3,6	;RP1=0, select bank0
  3372  04FC' 0089'              	movwf	___flmul@b+1
  3373  04FD' 1683               	bsf	3,5	;RP0=1, select bank1
  3374  04FE' 1303               	bcf	3,6	;RP1=0, select bank1
  3375  04FF' 0800'              	movf	sprintf@fval^(0+128),w
  3376  0500' 1283               	bcf	3,5	;RP0=0, select bank0
  3377  0501' 1303               	bcf	3,6	;RP1=0, select bank0
  3378  0502' 0088'              	movwf	___flmul@b
  3379  0503' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3380  0508' 1283               	bcf	3,5	;RP0=0, select bank0
  3381  0509' 1303               	bcf	3,6	;RP1=0, select bank0
  3382  050A' 080B'              	movf	?___flmul+3,w
  3383  050B' 00B8'              	movwf	___fltol@f1+3
  3384  050C' 080A'              	movf	?___flmul+2,w
  3385  050D' 00B7'              	movwf	___fltol@f1+2
  3386  050E' 0809'              	movf	?___flmul+1,w
  3387  050F' 00B6'              	movwf	___fltol@f1+1
  3388  0510' 0808'              	movf	?___flmul,w
  3389  0511' 00B5'              	movwf	___fltol@f1
  3390  0512' 120A' 118A' 2000' 120A' 118A' 	fcall	___fltol
  3391  0517' 1283               	bcf	3,5	;RP0=0, select bank0
  3392  0518' 1303               	bcf	3,6	;RP1=0, select bank0
  3393  0519' 0838'              	movf	?___fltol+3,w
  3394  051A' 1683               	bsf	3,5	;RP0=1, select bank1
  3395  051B' 1303               	bcf	3,6	;RP1=0, select bank1
  3396  051C' 0080'              	movwf	(sprintf@val+3)^(0+128)
  3397  051D' 1283               	bcf	3,5	;RP0=0, select bank0
  3398  051E' 1303               	bcf	3,6	;RP1=0, select bank0
  3399  051F' 0837'              	movf	?___fltol+2,w
  3400  0520' 1683               	bsf	3,5	;RP0=1, select bank1
  3401  0521' 1303               	bcf	3,6	;RP1=0, select bank1
  3402  0522' 0080'              	movwf	(sprintf@val+2)^(0+128)
  3403  0523' 1283               	bcf	3,5	;RP0=0, select bank0
  3404  0524' 1303               	bcf	3,6	;RP1=0, select bank0
  3405  0525' 0836'              	movf	?___fltol+1,w
  3406  0526' 1683               	bsf	3,5	;RP0=1, select bank1
  3407  0527' 1303               	bcf	3,6	;RP1=0, select bank1
  3408  0528' 0080'              	movwf	(sprintf@val+1)^(0+128)
  3409  0529' 1283               	bcf	3,5	;RP0=0, select bank0
  3410  052A' 1303               	bcf	3,6	;RP1=0, select bank0
  3411  052B' 0835'              	movf	?___fltol,w
  3412  052C' 1683               	bsf	3,5	;RP0=1, select bank1
  3413  052D' 1303               	bcf	3,6	;RP1=0, select bank1
  3414  052E' 0080'              	movwf	sprintf@val^(0+128)
  3415                           
  3416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3417  052F' 2800'              	goto	l4435
  3418  0530'                    l4427:
  3419                           
  3420                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3421  0530' 0800'              	movf	sprintf@c^(0+128),w
  3422  0531' 0080'              	movwf	??_sprintf^(0+128)
  3423  0532' 3001               	movlw	1
  3424  0533'                    u7615:
  3425  0533' 1003               	clrc
  3426  0534' 0D80'              	rlf	??_sprintf^(0+128),f
  3427  0535' 3EFF               	addlw	-1
  3428  0536' 1D03               	skipz
  3429  0537' 2800'              	goto	u7615
  3430  0538' 1003               	clrc
  3431  0539' 0D00'              	rlf	??_sprintf^(0+128),w
  3432  053A' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3433  053B' 0084               	movwf	4
  3434  053C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3435  0541' 0082'              	movwf	___lldiv@divisor
  3436  0542' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3437  0547' 0083'              	movwf	___lldiv@divisor+1
  3438  0548' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3439  054D' 0084'              	movwf	___lldiv@divisor+2
  3440  054E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3441  0553' 0085'              	movwf	___lldiv@divisor+3
  3442  0554' 0800'              	movf	(sprintf@val+3)^(0+128),w
  3443  0555' 0089'              	movwf	___lldiv@dividend+3
  3444  0556' 0800'              	movf	(sprintf@val+2)^(0+128),w
  3445  0557' 0088'              	movwf	___lldiv@dividend+2
  3446  0558' 0800'              	movf	(sprintf@val+1)^(0+128),w
  3447  0559' 0087'              	movwf	___lldiv@dividend+1
  3448  055A' 0800'              	movf	sprintf@val^(0+128),w
  3449  055B' 0086'              	movwf	___lldiv@dividend
  3450  055C' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
  3451  0561' 0805'              	movf	?___lldiv+3,w
  3452  0562' 1683               	bsf	3,5	;RP0=1, select bank1
  3453  0563' 1303               	bcf	3,6	;RP1=0, select bank1
  3454  0564' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
  3455  0565' 0804'              	movf	?___lldiv+2,w
  3456  0566' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  3457  0567' 0803'              	movf	?___lldiv+1,w
  3458  0568' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  3459  0569' 0802'              	movf	?___lldiv,w
  3460  056A' 0080'              	movwf	sprintf@tmpval^(0+128)
  3461  056B'                    l4429:
  3462                           
  3463                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3464  056B' 3000               	movlw	0
  3465  056C' 0085'              	movwf	___llmod@divisor+3
  3466  056D' 3000               	movlw	0
  3467  056E' 0084'              	movwf	___llmod@divisor+2
  3468  056F' 3000               	movlw	0
  3469  0570' 0083'              	movwf	___llmod@divisor+1
  3470  0571' 300A               	movlw	10
  3471  0572' 0082'              	movwf	___llmod@divisor
  3472  0573' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
  3473  0574' 0089'              	movwf	___llmod@dividend+3
  3474  0575' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  3475  0576' 0088'              	movwf	___llmod@dividend+2
  3476  0577' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  3477  0578' 0087'              	movwf	___llmod@dividend+1
  3478  0579' 0800'              	movf	sprintf@tmpval^(0+128),w
  3479  057A' 0086'              	movwf	___llmod@dividend
  3480  057B' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
  3481  0580' 0805'              	movf	?___llmod+3,w
  3482  0581' 1683               	bsf	3,5	;RP0=1, select bank1
  3483  0582' 1303               	bcf	3,6	;RP1=0, select bank1
  3484  0583' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
  3485  0584' 0804'              	movf	?___llmod+2,w
  3486  0585' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  3487  0586' 0803'              	movf	?___llmod+1,w
  3488  0587' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  3489  0588' 0802'              	movf	?___llmod,w
  3490  0589' 0080'              	movwf	sprintf@tmpval^(0+128)
  3491  058A'                    l4431:
  3492                           
  3493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3494  058A' 0800'              	movf	sprintf@sp^(0+128),w
  3495  058B' 0084               	movwf	4
  3496  058C' 0800'              	movf	sprintf@tmpval^(0+128),w
  3497  058D' 3E30               	addlw	48
  3498  058E' 1383               	bcf	3,7	;select IRP bank0
  3499  058F' 0080               	movwf	0
  3500  0590' 3001               	movlw	1
  3501  0591' 0080'              	movwf	??_sprintf^(0+128)
  3502  0592' 0800'              	movf	??_sprintf^(0+128),w
  3503  0593' 0780'              	addwf	sprintf@sp^(0+128),f
  3504  0594'                    l4433:
  3505                           
  3506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3507  0594' 0800'              	movf	sprintf@c^(0+128),w
  3508  0595' 0080'              	movwf	??_sprintf^(0+128)
  3509  0596' 3001               	movlw	1
  3510  0597'                    u7625:
  3511  0597' 1003               	clrc
  3512  0598' 0D80'              	rlf	??_sprintf^(0+128),f
  3513  0599' 3EFF               	addlw	-1
  3514  059A' 1D03               	skipz
  3515  059B' 2800'              	goto	u7625
  3516  059C' 1003               	clrc
  3517  059D' 0D00'              	rlf	??_sprintf^(0+128),w
  3518  059E' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3519  059F' 0084               	movwf	4
  3520  05A0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3521  05A5' 0082'              	movwf	___llmod@divisor
  3522  05A6' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3523  05AB' 0083'              	movwf	___llmod@divisor+1
  3524  05AC' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3525  05B1' 0084'              	movwf	___llmod@divisor+2
  3526  05B2' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3527  05B7' 0085'              	movwf	___llmod@divisor+3
  3528  05B8' 0800'              	movf	(sprintf@val+3)^(0+128),w
  3529  05B9' 0089'              	movwf	___llmod@dividend+3
  3530  05BA' 0800'              	movf	(sprintf@val+2)^(0+128),w
  3531  05BB' 0088'              	movwf	___llmod@dividend+2
  3532  05BC' 0800'              	movf	(sprintf@val+1)^(0+128),w
  3533  05BD' 0087'              	movwf	___llmod@dividend+1
  3534  05BE' 0800'              	movf	sprintf@val^(0+128),w
  3535  05BF' 0086'              	movwf	___llmod@dividend
  3536  05C0' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
  3537  05C5' 0805'              	movf	?___llmod+3,w
  3538  05C6' 1683               	bsf	3,5	;RP0=1, select bank1
  3539  05C7' 1303               	bcf	3,6	;RP1=0, select bank1
  3540  05C8' 0080'              	movwf	(sprintf@val+3)^(0+128)
  3541  05C9' 0804'              	movf	?___llmod+2,w
  3542  05CA' 0080'              	movwf	(sprintf@val+2)^(0+128)
  3543  05CB' 0803'              	movf	?___llmod+1,w
  3544  05CC' 0080'              	movwf	(sprintf@val+1)^(0+128)
  3545  05CD' 0802'              	movf	?___llmod,w
  3546  05CE' 0080'              	movwf	sprintf@val^(0+128)
  3547  05CF'                    l4435:
  3548                           
  3549                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3550  05CF' 3001               	movlw	1
  3551  05D0' 0280'              	subwf	sprintf@c^(0+128),f
  3552  05D1' 0A00'              	incf	sprintf@c^(0+128),w
  3553  05D2' 1D03               	btfss	3,2
  3554  05D3' 2800'              	goto	u7631
  3555  05D4' 2800'              	goto	u7630
  3556  05D5'                    u7631:
  3557  05D5' 2800'              	goto	l4427
  3558  05D6'                    u7630:
  3559  05D6' 2800'              	goto	l4443
  3560  05D7'                    l4437:
  3561                           
  3562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3563  05D7' 0800'              	movf	sprintf@sp^(0+128),w
  3564  05D8' 0084               	movwf	4
  3565  05D9' 3030               	movlw	48
  3566  05DA' 1383               	bcf	3,7	;select IRP bank0
  3567  05DB' 0080               	movwf	0
  3568  05DC'                    l4439:
  3569  05DC' 3001               	movlw	1
  3570  05DD' 0080'              	movwf	??_sprintf^(0+128)
  3571  05DE' 0800'              	movf	??_sprintf^(0+128),w
  3572  05DF' 0780'              	addwf	sprintf@sp^(0+128),f
  3573  05E0'                    l4441:
  3574                           
  3575                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3576  05E0' 30FF               	movlw	255
  3577  05E1' 0780'              	addwf	sprintf@prec^(0+128),f
  3578  05E2' 1803               	skipnc
  3579  05E3' 0A80'              	incf	(sprintf@prec+1)^(0+128),f
  3580  05E4' 30FF               	movlw	255
  3581  05E5' 0780'              	addwf	(sprintf@prec+1)^(0+128),f
  3582  05E6'                    l4443:
  3583                           
  3584                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3585  05E6' 0800'              	movf	sprintf@prec^(0+128),w
  3586  05E7' 0400'              	iorwf	(sprintf@prec+1)^(0+128),w
  3587  05E8' 1D03               	btfss	3,2
  3588  05E9' 2800'              	goto	u7641
  3589  05EA' 2800'              	goto	u7640
  3590  05EB'                    u7641:
  3591  05EB' 2800'              	goto	l4437
  3592  05EC'                    u7640:
  3593  05EC' 2800'              	goto	l4463
  3594  05ED'                    l4445:
  3595                           
  3596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3597  05ED' 0800'              	movf	sprintf@prec^(0+128),w
  3598  05EE' 0400'              	iorwf	(sprintf@prec+1)^(0+128),w
  3599  05EF' 1D03               	btfss	3,2
  3600  05F0' 2800'              	goto	u7651
  3601  05F1' 2800'              	goto	u7650
  3602  05F2'                    u7651:
  3603  05F2' 2800'              	goto	l364
  3604  05F3'                    u7650:
  3605  05F3'                    l4447:
  3606  05F3' 0800'              	movf	(sprintf@val+3)^(0+128),w
  3607  05F4' 0400'              	iorwf	(sprintf@val+2)^(0+128),w
  3608  05F5' 0400'              	iorwf	(sprintf@val+1)^(0+128),w
  3609  05F6' 0400'              	iorwf	sprintf@val^(0+128),w
  3610  05F7' 1D03               	skipz
  3611  05F8' 2800'              	goto	u7661
  3612  05F9' 2800'              	goto	u7660
  3613  05FA'                    u7661:
  3614  05FA' 2800'              	goto	l364
  3615  05FB'                    u7660:
  3616  05FB'                    l4449:
  3617                           
  3618                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3619  05FB' 3001               	movlw	1
  3620  05FC' 0780'              	addwf	sprintf@prec^(0+128),f
  3621  05FD' 1803               	skipnc
  3622  05FE' 0A80'              	incf	(sprintf@prec+1)^(0+128),f
  3623  05FF' 3000               	movlw	0
  3624  0600' 0780'              	addwf	(sprintf@prec+1)^(0+128),f
  3625  0601'                    l364:
  3626                           
  3627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3628  0601' 0800'              	movf	(sprintf@prec+1)^(0+128),w
  3629  0602' 3A80               	xorlw	128
  3630  0603' 3C80               	sublw	128
  3631  0604' 1D03               	skipz
  3632  0605' 2800'              	goto	u7675
  3633  0606' 0800'              	movf	sprintf@prec^(0+128),w
  3634  0607' 0200'              	subwf	sprintf@c^(0+128),w
  3635  0608'                    u7675:
  3636  0608' 1803               	skipnc
  3637  0609' 2800'              	goto	u7671
  3638  060A' 2800'              	goto	u7670
  3639  060B'                    u7671:
  3640  060B' 2800'              	goto	l4453
  3641  060C'                    u7670:
  3642  060C'                    l4451:
  3643  060C' 2800'              	goto	l4457
  3644  060D'                    l4453:
  3645  060D' 1683               	bsf	3,5	;RP0=1, select bank1
  3646  060E' 1303               	bcf	3,6	;RP1=0, select bank1
  3647  060F' 0800'              	movf	(sprintf@prec+1)^(0+128),w
  3648  0610' 3A80               	xorlw	128
  3649  0611' 0080'              	movwf	??_sprintf^(0+128)
  3650  0612' 3080               	movlw	128
  3651  0613' 0200'              	subwf	??_sprintf^(0+128),w
  3652  0614' 1D03               	skipz
  3653  0615' 2800'              	goto	u7685
  3654  0616' 0800'              	movf	sprintf@c^(0+128),w
  3655  0617' 0200'              	subwf	sprintf@prec^(0+128),w
  3656  0618'                    u7685:
  3657  0618' 1803               	skipnc
  3658  0619' 2800'              	goto	u7681
  3659  061A' 2800'              	goto	u7680
  3660  061B'                    u7681:
  3661  061B' 2800'              	goto	l4457
  3662  061C'                    u7680:
  3663  061C'                    l4455:
  3664  061C'                    l4457:
  3665                           
  3666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3667  061C' 3003               	movlw	3
  3668  061D' 1683               	bsf	3,5	;RP0=1, select bank1
  3669  061E' 1303               	bcf	3,6	;RP1=0, select bank1
  3670  061F' 0500'              	andwf	sprintf@flag^(0+128),w
  3671  0620' 0080'              	movwf	??_sprintf^(0+128)
  3672  0621' 3000               	movlw	0
  3673  0622' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
  3674  0623' 0080'              	movwf	(??_sprintf+1)^(0+128)
  3675  0624' 0800'              	movf	??_sprintf^(0+128),w
  3676  0625' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
  3677  0626' 1903               	btfsc	3,2
  3678  0627' 2800'              	goto	u7691
  3679  0628' 2800'              	goto	u7690
  3680  0629'                    u7691:
  3681  0629' 2800'              	goto	l4463
  3682  062A'                    u7690:
  3683  062A'                    l4459:
  3684                           
  3685                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3686  062A' 0800'              	movf	sprintf@sp^(0+128),w
  3687  062B' 0084               	movwf	4
  3688  062C' 302D               	movlw	45
  3689  062D' 1383               	bcf	3,7	;select IRP bank0
  3690  062E' 0080               	movwf	0
  3691  062F' 2800'              	goto	l4275
  3692  0630'                    l4463:
  3693                           
  3694                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3695  0630' 3001               	movlw	1
  3696  0631' 1283               	bcf	3,5	;RP0=0, select bank0
  3697  0632' 1303               	bcf	3,6	;RP1=0, select bank0
  3698  0633' 07CA'              	addwf	sprintf@f,f
  3699  0634' 30FF               	movlw	-1
  3700  0635' 074A'              	addwf	sprintf@f,w
  3701  0636' 0084               	movwf	4
  3702  0637' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3703  063C' 1683               	bsf	3,5	;RP0=1, select bank1
  3704  063D' 1303               	bcf	3,6	;RP1=0, select bank1
  3705  063E' 0080'              	movwf	sprintf@c^(0+128)
  3706  063F' 0800'              	movf	sprintf@c^(0+128),w
  3707  0640' 1D03               	btfss	3,2
  3708  0641' 2800'              	goto	u7701
  3709  0642' 2800'              	goto	u7700
  3710  0643'                    u7701:
  3711  0643' 2800'              	goto	l4271
  3712  0644'                    u7700:
  3713  0644'                    l4465:
  3714                           
  3715                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3716  0644' 0800'              	movf	sprintf@sp^(0+128),w
  3717  0645' 0084               	movwf	4
  3718  0646' 1383               	bcf	3,7	;select IRP bank0
  3719  0647' 0180               	clrf	0
  3720  0648'                    l370:
  3721  0648' 0008               	return
  3722  0649'                    __end_of_sprintf:
  3723                           
  3724                           	psect	text2
  3725  0000'                    __ptext2:	
  3726 ;; *************** function _scale *****************
  3727 ;; Defined at:
  3728 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;  scl             1    wreg     char 
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;  scl             1   52[BANK0 ] char 
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  4   34[BANK0 ] char 
  3735 ;; Registers used:
  3736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3742 ;;      Params:         0       4       0       0       0
  3743 ;;      Locals:         0       5       0       0       0
  3744 ;;      Temps:          0      10       0       0       0
  3745 ;;      Totals:         0      19       0       0       0
  3746 ;;Total ram usage:       19 bytes
  3747 ;; Hardware stack levels used: 1
  3748 ;; Hardware stack levels required when called: 3
  3749 ;; This function calls:
  3750 ;;		___awdiv
  3751 ;;		___awmod
  3752 ;;		___flmul
  3753 ;; This function is called by:
  3754 ;;		_sprintf
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758  0000'                    _scale:	
  3759                           ;psect for function _scale
  3760                           
  3761                           
  3762                           ;incstack = 0
  3763                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3764                           ;scale@scl stored from wreg
  3765  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  3766  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  3767  0002' 00B4'              	movwf	scale@scl
  3768  0003'                    l4093:
  3769                           
  3770                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3771  0003' 1FB4'              	btfss	scale@scl,7
  3772  0004' 2800'              	goto	u6861
  3773  0005' 2800'              	goto	u6860
  3774  0006'                    u6861:
  3775  0006' 2800'              	goto	l4115
  3776  0007'                    u6860:
  3777  0007'                    l4095:
  3778                           
  3779                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3780  0007' 09B4'              	comf	scale@scl,f
  3781  0008' 0AB4'              	incf	scale@scl,f
  3782  0009'                    l4097:
  3783                           
  3784                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3785  0009' 0834'              	movf	scale@scl,w
  3786  000A' 3A80               	xorlw	128
  3787  000B' 3E12               	addlw	-238
  3788  000C' 1C03               	skipc
  3789  000D' 2800'              	goto	u6871
  3790  000E' 2800'              	goto	u6870
  3791  000F'                    u6871:
  3792  000F' 2800'              	goto	l4105
  3793  0010'                    u6870:
  3794  0010'                    l4099:
  3795                           
  3796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3797  0010' 300A               	movlw	10
  3798  0011' 0080'              	movwf	___awdiv@divisor
  3799  0012' 3000               	movlw	0
  3800  0013' 0081'              	movwf	___awdiv@divisor+1
  3801  0014' 0834'              	movf	scale@scl,w
  3802  0015' 0084'              	movwf	___awmod@dividend
  3803  0016' 0185'              	clrf	___awmod@dividend+1
  3804  0017' 1B84'              	btfsc	___awmod@dividend,7
  3805  0018' 0385'              	decf	___awmod@dividend+1,f
  3806  0019' 3064               	movlw	100
  3807  001A' 0082'              	movwf	___awmod@divisor
  3808  001B' 3000               	movlw	0
  3809  001C' 0083'              	movwf	___awmod@divisor+1
  3810  001D' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3811  0022' 0803'              	movf	?___awmod+1,w
  3812  0023' 1283               	bcf	3,5	;RP0=0, select bank0
  3813  0024' 1303               	bcf	3,6	;RP1=0, select bank0
  3814  0025' 0083'              	movwf	___awdiv@dividend+1
  3815  0026' 0802'              	movf	?___awmod,w
  3816  0027' 0082'              	movwf	___awdiv@dividend
  3817  0028' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3818  002D' 1283               	bcf	3,5	;RP0=0, select bank0
  3819  002E' 1303               	bcf	3,6	;RP1=0, select bank0
  3820  002F' 0800'              	movf	?___awdiv,w
  3821  0030' 00A6'              	movwf	??_scale
  3822  0031' 3001               	movlw	1
  3823  0032'                    u6885:
  3824  0032' 1003               	clrc
  3825  0033' 0DA6'              	rlf	??_scale,f
  3826  0034' 3EFF               	addlw	-1
  3827  0035' 1D03               	skipz
  3828  0036' 2800'              	goto	u6885
  3829  0037' 1003               	clrc
  3830  0038' 0D26'              	rlf	??_scale,w
  3831  0039' 3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3832  003A' 0084               	movwf	4
  3833  003B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3834  0040' 00A7'              	movwf	??_scale+1
  3835  0041' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3836  0046' 00A8'              	movwf	??_scale+2
  3837  0047' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3838  004C' 00A9'              	movwf	??_scale+3
  3839  004D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3840  0052' 00AA'              	movwf	??_scale+4
  3841  0053' 082A'              	movf	??_scale+4,w
  3842  0054' 008B'              	movwf	___flmul@b+3
  3843  0055' 0829'              	movf	??_scale+3,w
  3844  0056' 008A'              	movwf	___flmul@b+2
  3845  0057' 0828'              	movf	??_scale+2,w
  3846  0058' 0089'              	movwf	___flmul@b+1
  3847  0059' 0827'              	movf	??_scale+1,w
  3848  005A' 0088'              	movwf	___flmul@b
  3849  005B' 3064               	movlw	100
  3850  005C' 0080'              	movwf	___awdiv@divisor
  3851  005D' 3000               	movlw	0
  3852  005E' 0081'              	movwf	___awdiv@divisor+1
  3853  005F' 0834'              	movf	scale@scl,w
  3854  0060' 0082'              	movwf	___awdiv@dividend
  3855  0061' 0183'              	clrf	___awdiv@dividend+1
  3856  0062' 1B82'              	btfsc	___awdiv@dividend,7
  3857  0063' 0383'              	decf	___awdiv@dividend+1,f
  3858  0064' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3859  0069' 1283               	bcf	3,5	;RP0=0, select bank0
  3860  006A' 1303               	bcf	3,6	;RP1=0, select bank0
  3861  006B' 0800'              	movf	?___awdiv,w
  3862  006C' 00AB'              	movwf	??_scale+5
  3863  006D' 3001               	movlw	1
  3864  006E'                    u6895:
  3865  006E' 1003               	clrc
  3866  006F' 0DAB'              	rlf	??_scale+5,f
  3867  0070' 3EFF               	addlw	-1
  3868  0071' 1D03               	skipz
  3869  0072' 2800'              	goto	u6895
  3870  0073' 1003               	clrc
  3871  0074' 0D2B'              	rlf	??_scale+5,w
  3872  0075' 3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3873  0076' 0084               	movwf	4
  3874  0077' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3875  007C' 00AC'              	movwf	??_scale+6
  3876  007D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3877  0082' 00AD'              	movwf	??_scale+7
  3878  0083' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3879  0088' 00AE'              	movwf	??_scale+8
  3880  0089' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3881  008E' 00AF'              	movwf	??_scale+9
  3882  008F' 082F'              	movf	??_scale+9,w
  3883  0090' 008F'              	movwf	___flmul@a+3
  3884  0091' 082E'              	movf	??_scale+8,w
  3885  0092' 008E'              	movwf	___flmul@a+2
  3886  0093' 082D'              	movf	??_scale+7,w
  3887  0094' 008D'              	movwf	___flmul@a+1
  3888  0095' 082C'              	movf	??_scale+6,w
  3889  0096' 008C'              	movwf	___flmul@a
  3890  0097' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3891  009C' 1283               	bcf	3,5	;RP0=0, select bank0
  3892  009D' 1303               	bcf	3,6	;RP1=0, select bank0
  3893  009E' 080B'              	movf	?___flmul+3,w
  3894  009F' 00B3'              	movwf	_scale$1051+3
  3895  00A0' 080A'              	movf	?___flmul+2,w
  3896  00A1' 00B2'              	movwf	_scale$1051+2
  3897  00A2' 0809'              	movf	?___flmul+1,w
  3898  00A3' 00B1'              	movwf	_scale$1051+1
  3899  00A4' 0808'              	movf	?___flmul,w
  3900  00A5' 00B0'              	movwf	_scale$1051
  3901                           
  3902                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3903  00A6' 300A               	movlw	10
  3904  00A7' 0082'              	movwf	___awmod@divisor
  3905  00A8' 3000               	movlw	0
  3906  00A9' 0083'              	movwf	___awmod@divisor+1
  3907  00AA' 0834'              	movf	scale@scl,w
  3908  00AB' 0084'              	movwf	___awmod@dividend
  3909  00AC' 0185'              	clrf	___awmod@dividend+1
  3910  00AD' 1B84'              	btfsc	___awmod@dividend,7
  3911  00AE' 0385'              	decf	___awmod@dividend+1,f
  3912  00AF' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3913  00B4' 0802'              	movf	?___awmod,w
  3914  00B5' 1283               	bcf	3,5	;RP0=0, select bank0
  3915  00B6' 1303               	bcf	3,6	;RP1=0, select bank0
  3916  00B7' 00A6'              	movwf	??_scale
  3917  00B8' 3001               	movlw	1
  3918  00B9'                    u6905:
  3919  00B9' 1003               	clrc
  3920  00BA' 0DA6'              	rlf	??_scale,f
  3921  00BB' 3EFF               	addlw	-1
  3922  00BC' 1D03               	skipz
  3923  00BD' 2800'              	goto	u6905
  3924  00BE' 1003               	clrc
  3925  00BF' 0D26'              	rlf	??_scale,w
  3926  00C0' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3927  00C1' 0084               	movwf	4
  3928  00C2' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3929  00C7' 00A7'              	movwf	??_scale+1
  3930  00C8' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3931  00CD' 00A8'              	movwf	??_scale+2
  3932  00CE' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3933  00D3' 00A9'              	movwf	??_scale+3
  3934  00D4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3935  00D9' 00AA'              	movwf	??_scale+4
  3936  00DA' 082A'              	movf	??_scale+4,w
  3937  00DB' 008B'              	movwf	___flmul@b+3
  3938  00DC' 0829'              	movf	??_scale+3,w
  3939  00DD' 008A'              	movwf	___flmul@b+2
  3940  00DE' 0828'              	movf	??_scale+2,w
  3941  00DF' 0089'              	movwf	___flmul@b+1
  3942  00E0' 0827'              	movf	??_scale+1,w
  3943  00E1' 0088'              	movwf	___flmul@b
  3944  00E2' 0833'              	movf	_scale$1051+3,w
  3945  00E3' 008F'              	movwf	___flmul@a+3
  3946  00E4' 0832'              	movf	_scale$1051+2,w
  3947  00E5' 008E'              	movwf	___flmul@a+2
  3948  00E6' 0831'              	movf	_scale$1051+1,w
  3949  00E7' 008D'              	movwf	___flmul@a+1
  3950  00E8' 0830'              	movf	_scale$1051,w
  3951  00E9' 008C'              	movwf	___flmul@a
  3952  00EA' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3953  00EF' 1283               	bcf	3,5	;RP0=0, select bank0
  3954  00F0' 1303               	bcf	3,6	;RP1=0, select bank0
  3955  00F1' 080B'              	movf	?___flmul+3,w
  3956  00F2' 00A5'              	movwf	?_scale+3
  3957  00F3' 080A'              	movf	?___flmul+2,w
  3958  00F4' 00A4'              	movwf	?_scale+2
  3959  00F5' 0809'              	movf	?___flmul+1,w
  3960  00F6' 00A3'              	movwf	?_scale+1
  3961  00F7' 0808'              	movf	?___flmul,w
  3962  00F8' 00A2'              	movwf	?_scale
  3963  00F9' 2800'              	goto	l304
  3964  00FA'                    l4105:
  3965  00FA' 0834'              	movf	scale@scl,w
  3966  00FB' 3A80               	xorlw	128
  3967  00FC' 3E75               	addlw	-139
  3968  00FD' 1C03               	skipc
  3969  00FE' 2800'              	goto	u6911
  3970  00FF' 2800'              	goto	u6910
  3971  0100'                    u6911:
  3972  0100' 2800'              	goto	l4111
  3973  0101'                    u6910:
  3974  0101'                    l4107:
  3975                           
  3976                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3977  0101' 300A               	movlw	10
  3978  0102' 0082'              	movwf	___awmod@divisor
  3979  0103' 3000               	movlw	0
  3980  0104' 0083'              	movwf	___awmod@divisor+1
  3981  0105' 0834'              	movf	scale@scl,w
  3982  0106' 0084'              	movwf	___awmod@dividend
  3983  0107' 0185'              	clrf	___awmod@dividend+1
  3984  0108' 1B84'              	btfsc	___awmod@dividend,7
  3985  0109' 0385'              	decf	___awmod@dividend+1,f
  3986  010A' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3987  010F' 0802'              	movf	?___awmod,w
  3988  0110' 1283               	bcf	3,5	;RP0=0, select bank0
  3989  0111' 1303               	bcf	3,6	;RP1=0, select bank0
  3990  0112' 00A6'              	movwf	??_scale
  3991  0113' 3001               	movlw	1
  3992  0114'                    u6925:
  3993  0114' 1003               	clrc
  3994  0115' 0DA6'              	rlf	??_scale,f
  3995  0116' 3EFF               	addlw	-1
  3996  0117' 1D03               	skipz
  3997  0118' 2800'              	goto	u6925
  3998  0119' 1003               	clrc
  3999  011A' 0D26'              	rlf	??_scale,w
  4000  011B' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4001  011C' 0084               	movwf	4
  4002  011D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4003  0122' 00A7'              	movwf	??_scale+1
  4004  0123' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4005  0128' 00A8'              	movwf	??_scale+2
  4006  0129' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4007  012E' 00A9'              	movwf	??_scale+3
  4008  012F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4009  0134' 00AA'              	movwf	??_scale+4
  4010  0135' 082A'              	movf	??_scale+4,w
  4011  0136' 008B'              	movwf	___flmul@b+3
  4012  0137' 0829'              	movf	??_scale+3,w
  4013  0138' 008A'              	movwf	___flmul@b+2
  4014  0139' 0828'              	movf	??_scale+2,w
  4015  013A' 0089'              	movwf	___flmul@b+1
  4016  013B' 0827'              	movf	??_scale+1,w
  4017  013C' 0088'              	movwf	___flmul@b
  4018  013D' 300A               	movlw	10
  4019  013E' 0080'              	movwf	___awdiv@divisor
  4020  013F' 3000               	movlw	0
  4021  0140' 0081'              	movwf	___awdiv@divisor+1
  4022  0141' 0834'              	movf	scale@scl,w
  4023  0142' 0082'              	movwf	___awdiv@dividend
  4024  0143' 0183'              	clrf	___awdiv@dividend+1
  4025  0144' 1B82'              	btfsc	___awdiv@dividend,7
  4026  0145' 0383'              	decf	___awdiv@dividend+1,f
  4027  0146' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  4028  014B' 1283               	bcf	3,5	;RP0=0, select bank0
  4029  014C' 1303               	bcf	3,6	;RP1=0, select bank0
  4030  014D' 0800'              	movf	?___awdiv,w
  4031  014E' 00AB'              	movwf	??_scale+5
  4032  014F' 3001               	movlw	1
  4033  0150'                    u6935:
  4034  0150' 1003               	clrc
  4035  0151' 0DAB'              	rlf	??_scale+5,f
  4036  0152' 3EFF               	addlw	-1
  4037  0153' 1D03               	skipz
  4038  0154' 2800'              	goto	u6935
  4039  0155' 1003               	clrc
  4040  0156' 0D2B'              	rlf	??_scale+5,w
  4041  0157' 3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4042  0158' 0084               	movwf	4
  4043  0159' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4044  015E' 00AC'              	movwf	??_scale+6
  4045  015F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4046  0164' 00AD'              	movwf	??_scale+7
  4047  0165' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4048  016A' 00AE'              	movwf	??_scale+8
  4049  016B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4050  0170' 00AF'              	movwf	??_scale+9
  4051  0171' 082F'              	movf	??_scale+9,w
  4052  0172' 008F'              	movwf	___flmul@a+3
  4053  0173' 082E'              	movf	??_scale+8,w
  4054  0174' 008E'              	movwf	___flmul@a+2
  4055  0175' 082D'              	movf	??_scale+7,w
  4056  0176' 008D'              	movwf	___flmul@a+1
  4057  0177' 082C'              	movf	??_scale+6,w
  4058  0178' 008C'              	movwf	___flmul@a
  4059  0179' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4060  017E' 1283               	bcf	3,5	;RP0=0, select bank0
  4061  017F' 1303               	bcf	3,6	;RP1=0, select bank0
  4062  0180' 080B'              	movf	?___flmul+3,w
  4063  0181' 00A5'              	movwf	?_scale+3
  4064  0182' 080A'              	movf	?___flmul+2,w
  4065  0183' 00A4'              	movwf	?_scale+2
  4066  0184' 0809'              	movf	?___flmul+1,w
  4067  0185' 00A3'              	movwf	?_scale+1
  4068  0186' 0808'              	movf	?___flmul,w
  4069  0187' 00A2'              	movwf	?_scale
  4070  0188' 2800'              	goto	l304
  4071  0189'                    l4111:
  4072                           
  4073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4074  0189' 0834'              	movf	scale@scl,w
  4075  018A' 00A6'              	movwf	??_scale
  4076  018B' 3001               	movlw	1
  4077  018C'                    u6945:
  4078  018C' 1003               	clrc
  4079  018D' 0DA6'              	rlf	??_scale,f
  4080  018E' 3EFF               	addlw	-1
  4081  018F' 1D03               	skipz
  4082  0190' 2800'              	goto	u6945
  4083  0191' 1003               	clrc
  4084  0192' 0D26'              	rlf	??_scale,w
  4085  0193' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4086  0194' 0084               	movwf	4
  4087  0195' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4088  019A' 00A7'              	movwf	??_scale+1
  4089  019B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4090  01A0' 00A8'              	movwf	??_scale+2
  4091  01A1' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4092  01A6' 00A9'              	movwf	??_scale+3
  4093  01A7' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4094  01AC' 00AA'              	movwf	??_scale+4
  4095  01AD' 082A'              	movf	??_scale+4,w
  4096  01AE' 00A5'              	movwf	?_scale+3
  4097  01AF' 0829'              	movf	??_scale+3,w
  4098  01B0' 00A4'              	movwf	?_scale+2
  4099  01B1' 0828'              	movf	??_scale+2,w
  4100  01B2' 00A3'              	movwf	?_scale+1
  4101  01B3' 0827'              	movf	??_scale+1,w
  4102  01B4' 00A2'              	movwf	?_scale
  4103  01B5' 2800'              	goto	l304
  4104  01B6'                    l4115:
  4105                           
  4106                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4107  01B6' 0834'              	movf	scale@scl,w
  4108  01B7' 3A80               	xorlw	128
  4109  01B8' 3E12               	addlw	-238
  4110  01B9' 1C03               	skipc
  4111  01BA' 2800'              	goto	u6951
  4112  01BB' 2800'              	goto	u6950
  4113  01BC'                    u6951:
  4114  01BC' 2800'              	goto	l4123
  4115  01BD'                    u6950:
  4116  01BD'                    l4117:
  4117                           
  4118                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4119  01BD' 300A               	movlw	10
  4120  01BE' 0080'              	movwf	___awdiv@divisor
  4121  01BF' 3000               	movlw	0
  4122  01C0' 0081'              	movwf	___awdiv@divisor+1
  4123  01C1' 0834'              	movf	scale@scl,w
  4124  01C2' 0084'              	movwf	___awmod@dividend
  4125  01C3' 0185'              	clrf	___awmod@dividend+1
  4126  01C4' 1B84'              	btfsc	___awmod@dividend,7
  4127  01C5' 0385'              	decf	___awmod@dividend+1,f
  4128  01C6' 3064               	movlw	100
  4129  01C7' 0082'              	movwf	___awmod@divisor
  4130  01C8' 3000               	movlw	0
  4131  01C9' 0083'              	movwf	___awmod@divisor+1
  4132  01CA' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  4133  01CF' 0803'              	movf	?___awmod+1,w
  4134  01D0' 1283               	bcf	3,5	;RP0=0, select bank0
  4135  01D1' 1303               	bcf	3,6	;RP1=0, select bank0
  4136  01D2' 0083'              	movwf	___awdiv@dividend+1
  4137  01D3' 0802'              	movf	?___awmod,w
  4138  01D4' 0082'              	movwf	___awdiv@dividend
  4139  01D5' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  4140  01DA' 1283               	bcf	3,5	;RP0=0, select bank0
  4141  01DB' 1303               	bcf	3,6	;RP1=0, select bank0
  4142  01DC' 0800'              	movf	?___awdiv,w
  4143  01DD' 00A6'              	movwf	??_scale
  4144  01DE' 3001               	movlw	1
  4145  01DF'                    u6965:
  4146  01DF' 1003               	clrc
  4147  01E0' 0DA6'              	rlf	??_scale,f
  4148  01E1' 3EFF               	addlw	-1
  4149  01E2' 1D03               	skipz
  4150  01E3' 2800'              	goto	u6965
  4151  01E4' 1003               	clrc
  4152  01E5' 0D26'              	rlf	??_scale,w
  4153  01E6' 3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4154  01E7' 0084               	movwf	4
  4155  01E8' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4156  01ED' 00A7'              	movwf	??_scale+1
  4157  01EE' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4158  01F3' 00A8'              	movwf	??_scale+2
  4159  01F4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4160  01F9' 00A9'              	movwf	??_scale+3
  4161  01FA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4162  01FF' 00AA'              	movwf	??_scale+4
  4163  0200' 082A'              	movf	??_scale+4,w
  4164  0201' 008B'              	movwf	___flmul@b+3
  4165  0202' 0829'              	movf	??_scale+3,w
  4166  0203' 008A'              	movwf	___flmul@b+2
  4167  0204' 0828'              	movf	??_scale+2,w
  4168  0205' 0089'              	movwf	___flmul@b+1
  4169  0206' 0827'              	movf	??_scale+1,w
  4170  0207' 0088'              	movwf	___flmul@b
  4171  0208' 3064               	movlw	100
  4172  0209' 0080'              	movwf	___awdiv@divisor
  4173  020A' 3000               	movlw	0
  4174  020B' 0081'              	movwf	___awdiv@divisor+1
  4175  020C' 0834'              	movf	scale@scl,w
  4176  020D' 0082'              	movwf	___awdiv@dividend
  4177  020E' 0183'              	clrf	___awdiv@dividend+1
  4178  020F' 1B82'              	btfsc	___awdiv@dividend,7
  4179  0210' 0383'              	decf	___awdiv@dividend+1,f
  4180  0211' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  4181  0216' 1283               	bcf	3,5	;RP0=0, select bank0
  4182  0217' 1303               	bcf	3,6	;RP1=0, select bank0
  4183  0218' 0800'              	movf	?___awdiv,w
  4184  0219' 00AB'              	movwf	??_scale+5
  4185  021A' 3001               	movlw	1
  4186  021B'                    u6975:
  4187  021B' 1003               	clrc
  4188  021C' 0DAB'              	rlf	??_scale+5,f
  4189  021D' 3EFF               	addlw	-1
  4190  021E' 1D03               	skipz
  4191  021F' 2800'              	goto	u6975
  4192  0220' 1003               	clrc
  4193  0221' 0D2B'              	rlf	??_scale+5,w
  4194  0222' 3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4195  0223' 0084               	movwf	4
  4196  0224' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4197  0229' 00AC'              	movwf	??_scale+6
  4198  022A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4199  022F' 00AD'              	movwf	??_scale+7
  4200  0230' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4201  0235' 00AE'              	movwf	??_scale+8
  4202  0236' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4203  023B' 00AF'              	movwf	??_scale+9
  4204  023C' 082F'              	movf	??_scale+9,w
  4205  023D' 008F'              	movwf	___flmul@a+3
  4206  023E' 082E'              	movf	??_scale+8,w
  4207  023F' 008E'              	movwf	___flmul@a+2
  4208  0240' 082D'              	movf	??_scale+7,w
  4209  0241' 008D'              	movwf	___flmul@a+1
  4210  0242' 082C'              	movf	??_scale+6,w
  4211  0243' 008C'              	movwf	___flmul@a
  4212  0244' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4213  0249' 1283               	bcf	3,5	;RP0=0, select bank0
  4214  024A' 1303               	bcf	3,6	;RP1=0, select bank0
  4215  024B' 080B'              	movf	?___flmul+3,w
  4216  024C' 00B3'              	movwf	_scale$1051+3
  4217  024D' 080A'              	movf	?___flmul+2,w
  4218  024E' 00B2'              	movwf	_scale$1051+2
  4219  024F' 0809'              	movf	?___flmul+1,w
  4220  0250' 00B1'              	movwf	_scale$1051+1
  4221  0251' 0808'              	movf	?___flmul,w
  4222  0252' 00B0'              	movwf	_scale$1051
  4223                           
  4224                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4225  0253' 300A               	movlw	10
  4226  0254' 0082'              	movwf	___awmod@divisor
  4227  0255' 3000               	movlw	0
  4228  0256' 0083'              	movwf	___awmod@divisor+1
  4229  0257' 0834'              	movf	scale@scl,w
  4230  0258' 0084'              	movwf	___awmod@dividend
  4231  0259' 0185'              	clrf	___awmod@dividend+1
  4232  025A' 1B84'              	btfsc	___awmod@dividend,7
  4233  025B' 0385'              	decf	___awmod@dividend+1,f
  4234  025C' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  4235  0261' 0802'              	movf	?___awmod,w
  4236  0262' 1283               	bcf	3,5	;RP0=0, select bank0
  4237  0263' 1303               	bcf	3,6	;RP1=0, select bank0
  4238  0264' 00A6'              	movwf	??_scale
  4239  0265' 3001               	movlw	1
  4240  0266'                    u6985:
  4241  0266' 1003               	clrc
  4242  0267' 0DA6'              	rlf	??_scale,f
  4243  0268' 3EFF               	addlw	-1
  4244  0269' 1D03               	skipz
  4245  026A' 2800'              	goto	u6985
  4246  026B' 1003               	clrc
  4247  026C' 0D26'              	rlf	??_scale,w
  4248  026D' 3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4249  026E' 0084               	movwf	4
  4250  026F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4251  0274' 00A7'              	movwf	??_scale+1
  4252  0275' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4253  027A' 00A8'              	movwf	??_scale+2
  4254  027B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4255  0280' 00A9'              	movwf	??_scale+3
  4256  0281' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4257  0286' 00AA'              	movwf	??_scale+4
  4258  0287' 082A'              	movf	??_scale+4,w
  4259  0288' 008B'              	movwf	___flmul@b+3
  4260  0289' 0829'              	movf	??_scale+3,w
  4261  028A' 008A'              	movwf	___flmul@b+2
  4262  028B' 0828'              	movf	??_scale+2,w
  4263  028C' 0089'              	movwf	___flmul@b+1
  4264  028D' 0827'              	movf	??_scale+1,w
  4265  028E' 0088'              	movwf	___flmul@b
  4266  028F' 0833'              	movf	_scale$1051+3,w
  4267  0290' 008F'              	movwf	___flmul@a+3
  4268  0291' 0832'              	movf	_scale$1051+2,w
  4269  0292' 008E'              	movwf	___flmul@a+2
  4270  0293' 0831'              	movf	_scale$1051+1,w
  4271  0294' 008D'              	movwf	___flmul@a+1
  4272  0295' 0830'              	movf	_scale$1051,w
  4273  0296' 008C'              	movwf	___flmul@a
  4274  0297' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4275  029C' 1283               	bcf	3,5	;RP0=0, select bank0
  4276  029D' 1303               	bcf	3,6	;RP1=0, select bank0
  4277  029E' 080B'              	movf	?___flmul+3,w
  4278  029F' 00A5'              	movwf	?_scale+3
  4279  02A0' 080A'              	movf	?___flmul+2,w
  4280  02A1' 00A4'              	movwf	?_scale+2
  4281  02A2' 0809'              	movf	?___flmul+1,w
  4282  02A3' 00A3'              	movwf	?_scale+1
  4283  02A4' 0808'              	movf	?___flmul,w
  4284  02A5' 00A2'              	movwf	?_scale
  4285  02A6' 2800'              	goto	l304
  4286  02A7'                    l4123:
  4287  02A7' 0834'              	movf	scale@scl,w
  4288  02A8' 3A80               	xorlw	128
  4289  02A9' 3E75               	addlw	-139
  4290  02AA' 1C03               	skipc
  4291  02AB' 2800'              	goto	u6991
  4292  02AC' 2800'              	goto	u6990
  4293  02AD'                    u6991:
  4294  02AD' 2800'              	goto	l4129
  4295  02AE'                    u6990:
  4296  02AE'                    l4125:
  4297                           
  4298                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4299  02AE' 300A               	movlw	10
  4300  02AF' 0082'              	movwf	___awmod@divisor
  4301  02B0' 3000               	movlw	0
  4302  02B1' 0083'              	movwf	___awmod@divisor+1
  4303  02B2' 0834'              	movf	scale@scl,w
  4304  02B3' 0084'              	movwf	___awmod@dividend
  4305  02B4' 0185'              	clrf	___awmod@dividend+1
  4306  02B5' 1B84'              	btfsc	___awmod@dividend,7
  4307  02B6' 0385'              	decf	___awmod@dividend+1,f
  4308  02B7' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  4309  02BC' 0802'              	movf	?___awmod,w
  4310  02BD' 1283               	bcf	3,5	;RP0=0, select bank0
  4311  02BE' 1303               	bcf	3,6	;RP1=0, select bank0
  4312  02BF' 00A6'              	movwf	??_scale
  4313  02C0' 3001               	movlw	1
  4314  02C1'                    u7005:
  4315  02C1' 1003               	clrc
  4316  02C2' 0DA6'              	rlf	??_scale,f
  4317  02C3' 3EFF               	addlw	-1
  4318  02C4' 1D03               	skipz
  4319  02C5' 2800'              	goto	u7005
  4320  02C6' 1003               	clrc
  4321  02C7' 0D26'              	rlf	??_scale,w
  4322  02C8' 3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4323  02C9' 0084               	movwf	4
  4324  02CA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4325  02CF' 00A7'              	movwf	??_scale+1
  4326  02D0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4327  02D5' 00A8'              	movwf	??_scale+2
  4328  02D6' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4329  02DB' 00A9'              	movwf	??_scale+3
  4330  02DC' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4331  02E1' 00AA'              	movwf	??_scale+4
  4332  02E2' 082A'              	movf	??_scale+4,w
  4333  02E3' 008B'              	movwf	___flmul@b+3
  4334  02E4' 0829'              	movf	??_scale+3,w
  4335  02E5' 008A'              	movwf	___flmul@b+2
  4336  02E6' 0828'              	movf	??_scale+2,w
  4337  02E7' 0089'              	movwf	___flmul@b+1
  4338  02E8' 0827'              	movf	??_scale+1,w
  4339  02E9' 0088'              	movwf	___flmul@b
  4340  02EA' 300A               	movlw	10
  4341  02EB' 0080'              	movwf	___awdiv@divisor
  4342  02EC' 3000               	movlw	0
  4343  02ED' 0081'              	movwf	___awdiv@divisor+1
  4344  02EE' 0834'              	movf	scale@scl,w
  4345  02EF' 0082'              	movwf	___awdiv@dividend
  4346  02F0' 0183'              	clrf	___awdiv@dividend+1
  4347  02F1' 1B82'              	btfsc	___awdiv@dividend,7
  4348  02F2' 0383'              	decf	___awdiv@dividend+1,f
  4349  02F3' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  4350  02F8' 1283               	bcf	3,5	;RP0=0, select bank0
  4351  02F9' 1303               	bcf	3,6	;RP1=0, select bank0
  4352  02FA' 0800'              	movf	?___awdiv,w
  4353  02FB' 00AB'              	movwf	??_scale+5
  4354  02FC' 3001               	movlw	1
  4355  02FD'                    u7015:
  4356  02FD' 1003               	clrc
  4357  02FE' 0DAB'              	rlf	??_scale+5,f
  4358  02FF' 3EFF               	addlw	-1
  4359  0300' 1D03               	skipz
  4360  0301' 2800'              	goto	u7015
  4361  0302' 1003               	clrc
  4362  0303' 0D2B'              	rlf	??_scale+5,w
  4363  0304' 3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4364  0305' 0084               	movwf	4
  4365  0306' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4366  030B' 00AC'              	movwf	??_scale+6
  4367  030C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4368  0311' 00AD'              	movwf	??_scale+7
  4369  0312' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4370  0317' 00AE'              	movwf	??_scale+8
  4371  0318' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4372  031D' 00AF'              	movwf	??_scale+9
  4373  031E' 082F'              	movf	??_scale+9,w
  4374  031F' 008F'              	movwf	___flmul@a+3
  4375  0320' 082E'              	movf	??_scale+8,w
  4376  0321' 008E'              	movwf	___flmul@a+2
  4377  0322' 082D'              	movf	??_scale+7,w
  4378  0323' 008D'              	movwf	___flmul@a+1
  4379  0324' 082C'              	movf	??_scale+6,w
  4380  0325' 008C'              	movwf	___flmul@a
  4381  0326' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4382  032B' 1283               	bcf	3,5	;RP0=0, select bank0
  4383  032C' 1303               	bcf	3,6	;RP1=0, select bank0
  4384  032D' 080B'              	movf	?___flmul+3,w
  4385  032E' 00A5'              	movwf	?_scale+3
  4386  032F' 080A'              	movf	?___flmul+2,w
  4387  0330' 00A4'              	movwf	?_scale+2
  4388  0331' 0809'              	movf	?___flmul+1,w
  4389  0332' 00A3'              	movwf	?_scale+1
  4390  0333' 0808'              	movf	?___flmul,w
  4391  0334' 00A2'              	movwf	?_scale
  4392  0335' 2800'              	goto	l304
  4393  0336'                    l4129:
  4394                           
  4395                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4396  0336' 0834'              	movf	scale@scl,w
  4397  0337' 00A6'              	movwf	??_scale
  4398  0338' 3001               	movlw	1
  4399  0339'                    u7025:
  4400  0339' 1003               	clrc
  4401  033A' 0DA6'              	rlf	??_scale,f
  4402  033B' 3EFF               	addlw	-1
  4403  033C' 1D03               	skipz
  4404  033D' 2800'              	goto	u7025
  4405  033E' 1003               	clrc
  4406  033F' 0D26'              	rlf	??_scale,w
  4407  0340' 3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4408  0341' 0084               	movwf	4
  4409  0342' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4410  0347' 00A7'              	movwf	??_scale+1
  4411  0348' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4412  034D' 00A8'              	movwf	??_scale+2
  4413  034E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4414  0353' 00A9'              	movwf	??_scale+3
  4415  0354' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4416  0359' 00AA'              	movwf	??_scale+4
  4417  035A' 082A'              	movf	??_scale+4,w
  4418  035B' 00A5'              	movwf	?_scale+3
  4419  035C' 0829'              	movf	??_scale+3,w
  4420  035D' 00A4'              	movwf	?_scale+2
  4421  035E' 0828'              	movf	??_scale+2,w
  4422  035F' 00A3'              	movwf	?_scale+1
  4423  0360' 0827'              	movf	??_scale+1,w
  4424  0361' 00A2'              	movwf	?_scale
  4425  0362'                    l304:
  4426  0362' 0008               	return
  4427  0363'                    __end_of_scale:
  4428                           
  4429                           	psect	text3
  4430  0000'                    __ptext3:	
  4431 ;; *************** function ___awmod *****************
  4432 ;; Defined at:
  4433 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  4434 ;; Parameters:    Size  Location     Type
  4435 ;;  divisor         2    2[COMMON] int 
  4436 ;;  dividend        2    4[COMMON] int 
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;  sign            1    8[COMMON] unsigned char 
  4439 ;;  counter         1    7[COMMON] unsigned char 
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  2    2[COMMON] int 
  4442 ;; Registers used:
  4443 ;;		wreg, status,2, status,0
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/0
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4449 ;;      Params:         4       0       0       0       0
  4450 ;;      Locals:         2       0       0       0       0
  4451 ;;      Temps:          1       0       0       0       0
  4452 ;;      Totals:         7       0       0       0       0
  4453 ;;Total ram usage:        7 bytes
  4454 ;; Hardware stack levels used: 1
  4455 ;; Hardware stack levels required when called: 1
  4456 ;; This function calls:
  4457 ;;		Nothing
  4458 ;; This function is called by:
  4459 ;;		_scale
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           
  4463  0000'                    ___awmod:	
  4464                           ;psect for function ___awmod
  4465                           
  4466  0000'                    l2469:	
  4467                           ;incstack = 0
  4468                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4469                           
  4470  0000' 0188'              	clrf	___awmod@sign
  4471  0001'                    l2471:
  4472  0001' 1F85'              	btfss	___awmod@dividend+1,7
  4473  0002' 2800'              	goto	u3311
  4474  0003' 2800'              	goto	u3310
  4475  0004'                    u3311:
  4476  0004' 2800'              	goto	l2477
  4477  0005'                    u3310:
  4478  0005'                    l2473:
  4479  0005' 0984'              	comf	___awmod@dividend,f
  4480  0006' 0985'              	comf	___awmod@dividend+1,f
  4481  0007' 0A84'              	incf	___awmod@dividend,f
  4482  0008' 1903               	skipnz
  4483  0009' 0A85'              	incf	___awmod@dividend+1,f
  4484  000A'                    l2475:
  4485  000A' 0188'              	clrf	___awmod@sign
  4486  000B' 0A88'              	incf	___awmod@sign,f
  4487  000C'                    l2477:
  4488  000C' 1F83'              	btfss	___awmod@divisor+1,7
  4489  000D' 2800'              	goto	u3321
  4490  000E' 2800'              	goto	u3320
  4491  000F'                    u3321:
  4492  000F' 2800'              	goto	l2481
  4493  0010'                    u3320:
  4494  0010'                    l2479:
  4495  0010' 0982'              	comf	___awmod@divisor,f
  4496  0011' 0983'              	comf	___awmod@divisor+1,f
  4497  0012' 0A82'              	incf	___awmod@divisor,f
  4498  0013' 1903               	skipnz
  4499  0014' 0A83'              	incf	___awmod@divisor+1,f
  4500  0015'                    l2481:
  4501  0015' 0802'              	movf	___awmod@divisor,w
  4502  0016' 0403'              	iorwf	___awmod@divisor+1,w
  4503  0017' 1903               	btfsc	3,2
  4504  0018' 2800'              	goto	u3331
  4505  0019' 2800'              	goto	u3330
  4506  001A'                    u3331:
  4507  001A' 2800'              	goto	l2499
  4508  001B'                    u3330:
  4509  001B'                    l2483:
  4510  001B' 0187'              	clrf	___awmod@counter
  4511  001C' 0A87'              	incf	___awmod@counter,f
  4512  001D' 2800'              	goto	l2489
  4513  001E'                    l2485:
  4514  001E' 3001               	movlw	1
  4515  001F'                    u3345:
  4516  001F' 1003               	clrc
  4517  0020' 0D82'              	rlf	___awmod@divisor,f
  4518  0021' 0D83'              	rlf	___awmod@divisor+1,f
  4519  0022' 3EFF               	addlw	-1
  4520  0023' 1D03               	skipz
  4521  0024' 2800'              	goto	u3345
  4522  0025'                    l2487:
  4523  0025' 3001               	movlw	1
  4524  0026' 0086'              	movwf	??___awmod
  4525  0027' 0806'              	movf	??___awmod,w
  4526  0028' 0787'              	addwf	___awmod@counter,f
  4527  0029'                    l2489:
  4528  0029' 1F83'              	btfss	___awmod@divisor+1,7
  4529  002A' 2800'              	goto	u3351
  4530  002B' 2800'              	goto	u3350
  4531  002C'                    u3351:
  4532  002C' 2800'              	goto	l2485
  4533  002D'                    u3350:
  4534  002D'                    l2491:
  4535  002D' 0803'              	movf	___awmod@divisor+1,w
  4536  002E' 0205'              	subwf	___awmod@dividend+1,w
  4537  002F' 1D03               	skipz
  4538  0030' 2800'              	goto	u3365
  4539  0031' 0802'              	movf	___awmod@divisor,w
  4540  0032' 0204'              	subwf	___awmod@dividend,w
  4541  0033'                    u3365:
  4542  0033' 1C03               	skipc
  4543  0034' 2800'              	goto	u3361
  4544  0035' 2800'              	goto	u3360
  4545  0036'                    u3361:
  4546  0036' 2800'              	goto	l2495
  4547  0037'                    u3360:
  4548  0037'                    l2493:
  4549  0037' 0802'              	movf	___awmod@divisor,w
  4550  0038' 0284'              	subwf	___awmod@dividend,f
  4551  0039' 0803'              	movf	___awmod@divisor+1,w
  4552  003A' 1C03               	skipc
  4553  003B' 0385'              	decf	___awmod@dividend+1,f
  4554  003C' 0285'              	subwf	___awmod@dividend+1,f
  4555  003D'                    l2495:
  4556  003D' 3001               	movlw	1
  4557  003E'                    u3375:
  4558  003E' 1003               	clrc
  4559  003F' 0C83'              	rrf	___awmod@divisor+1,f
  4560  0040' 0C82'              	rrf	___awmod@divisor,f
  4561  0041' 3EFF               	addlw	-1
  4562  0042' 1D03               	skipz
  4563  0043' 2800'              	goto	u3375
  4564  0044'                    l2497:
  4565  0044' 3001               	movlw	1
  4566  0045' 0287'              	subwf	___awmod@counter,f
  4567  0046' 1D03               	btfss	3,2
  4568  0047' 2800'              	goto	u3381
  4569  0048' 2800'              	goto	u3380
  4570  0049'                    u3381:
  4571  0049' 2800'              	goto	l2491
  4572  004A'                    u3380:
  4573  004A'                    l2499:
  4574  004A' 0808'              	movf	___awmod@sign,w
  4575  004B' 1903               	btfsc	3,2
  4576  004C' 2800'              	goto	u3391
  4577  004D' 2800'              	goto	u3390
  4578  004E'                    u3391:
  4579  004E' 2800'              	goto	l2503
  4580  004F'                    u3390:
  4581  004F'                    l2501:
  4582  004F' 0984'              	comf	___awmod@dividend,f
  4583  0050' 0985'              	comf	___awmod@dividend+1,f
  4584  0051' 0A84'              	incf	___awmod@dividend,f
  4585  0052' 1903               	skipnz
  4586  0053' 0A85'              	incf	___awmod@dividend+1,f
  4587  0054'                    l2503:
  4588  0054' 0805'              	movf	___awmod@dividend+1,w
  4589  0055' 0083'              	movwf	?___awmod+1
  4590  0056' 0804'              	movf	___awmod@dividend,w
  4591  0057' 0082'              	movwf	?___awmod
  4592  0058'                    l540:
  4593  0058' 0008               	return
  4594  0059'                    __end_of___awmod:
  4595                           
  4596                           	psect	text4
  4597  0000'                    __ptext4:	
  4598 ;; *************** function ___awdiv *****************
  4599 ;; Defined at:
  4600 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;  divisor         2    0[BANK0 ] int 
  4603 ;;  dividend        2    2[BANK0 ] int 
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;  quotient        2    6[BANK0 ] int 
  4606 ;;  sign            1    5[BANK0 ] unsigned char 
  4607 ;;  counter         1    4[BANK0 ] unsigned char 
  4608 ;; Return value:  Size  Location     Type
  4609 ;;                  2    0[BANK0 ] int 
  4610 ;; Registers used:
  4611 ;;		wreg, status,2, status,0
  4612 ;; Tracked objects:
  4613 ;;		On entry : 0/0
  4614 ;;		On exit  : 0/0
  4615 ;;		Unchanged: 0/0
  4616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4617 ;;      Params:         0       4       0       0       0
  4618 ;;      Locals:         0       4       0       0       0
  4619 ;;      Temps:          1       0       0       0       0
  4620 ;;      Totals:         1       8       0       0       0
  4621 ;;Total ram usage:        9 bytes
  4622 ;; Hardware stack levels used: 1
  4623 ;; Hardware stack levels required when called: 1
  4624 ;; This function calls:
  4625 ;;		Nothing
  4626 ;; This function is called by:
  4627 ;;		_scale
  4628 ;;		_sprintf
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632  0000'                    ___awdiv:	
  4633                           ;psect for function ___awdiv
  4634                           
  4635  0000'                    l2425:	
  4636                           ;incstack = 0
  4637                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4638                           
  4639  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4640  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4641  0002' 0185'              	clrf	___awdiv@sign
  4642  0003'                    l2427:
  4643  0003' 1F81'              	btfss	___awdiv@divisor+1,7
  4644  0004' 2800'              	goto	u3211
  4645  0005' 2800'              	goto	u3210
  4646  0006'                    u3211:
  4647  0006' 2800'              	goto	l2433
  4648  0007'                    u3210:
  4649  0007'                    l2429:
  4650  0007' 0980'              	comf	___awdiv@divisor,f
  4651  0008' 0981'              	comf	___awdiv@divisor+1,f
  4652  0009' 0A80'              	incf	___awdiv@divisor,f
  4653  000A' 1903               	skipnz
  4654  000B' 0A81'              	incf	___awdiv@divisor+1,f
  4655  000C'                    l2431:
  4656  000C' 0185'              	clrf	___awdiv@sign
  4657  000D' 0A85'              	incf	___awdiv@sign,f
  4658  000E'                    l2433:
  4659  000E' 1F83'              	btfss	___awdiv@dividend+1,7
  4660  000F' 2800'              	goto	u3221
  4661  0010' 2800'              	goto	u3220
  4662  0011'                    u3221:
  4663  0011' 2800'              	goto	l2439
  4664  0012'                    u3220:
  4665  0012'                    l2435:
  4666  0012' 0982'              	comf	___awdiv@dividend,f
  4667  0013' 0983'              	comf	___awdiv@dividend+1,f
  4668  0014' 0A82'              	incf	___awdiv@dividend,f
  4669  0015' 1903               	skipnz
  4670  0016' 0A83'              	incf	___awdiv@dividend+1,f
  4671  0017'                    l2437:
  4672  0017' 3001               	movlw	1
  4673  0018' 0089'              	movwf	??___awdiv
  4674  0019' 0809'              	movf	??___awdiv,w
  4675  001A' 0685'              	xorwf	___awdiv@sign,f
  4676  001B'                    l2439:
  4677  001B' 0186'              	clrf	___awdiv@quotient
  4678  001C' 0187'              	clrf	___awdiv@quotient+1
  4679  001D'                    l2441:
  4680  001D' 0800'              	movf	___awdiv@divisor,w
  4681  001E' 0401'              	iorwf	___awdiv@divisor+1,w
  4682  001F' 1903               	btfsc	3,2
  4683  0020' 2800'              	goto	u3231
  4684  0021' 2800'              	goto	u3230
  4685  0022'                    u3231:
  4686  0022' 2800'              	goto	l2461
  4687  0023'                    u3230:
  4688  0023'                    l2443:
  4689  0023' 0184'              	clrf	___awdiv@counter
  4690  0024' 0A84'              	incf	___awdiv@counter,f
  4691  0025' 2800'              	goto	l2449
  4692  0026'                    l2445:
  4693  0026' 3001               	movlw	1
  4694  0027'                    u3245:
  4695  0027' 1003               	clrc
  4696  0028' 0D80'              	rlf	___awdiv@divisor,f
  4697  0029' 0D81'              	rlf	___awdiv@divisor+1,f
  4698  002A' 3EFF               	addlw	-1
  4699  002B' 1D03               	skipz
  4700  002C' 2800'              	goto	u3245
  4701  002D'                    l2447:
  4702  002D' 3001               	movlw	1
  4703  002E' 0089'              	movwf	??___awdiv
  4704  002F' 0809'              	movf	??___awdiv,w
  4705  0030' 0784'              	addwf	___awdiv@counter,f
  4706  0031'                    l2449:
  4707  0031' 1F81'              	btfss	___awdiv@divisor+1,7
  4708  0032' 2800'              	goto	u3251
  4709  0033' 2800'              	goto	u3250
  4710  0034'                    u3251:
  4711  0034' 2800'              	goto	l2445
  4712  0035'                    u3250:
  4713  0035'                    l2451:
  4714  0035' 3001               	movlw	1
  4715  0036'                    u3265:
  4716  0036' 1003               	clrc
  4717  0037' 0D86'              	rlf	___awdiv@quotient,f
  4718  0038' 0D87'              	rlf	___awdiv@quotient+1,f
  4719  0039' 3EFF               	addlw	-1
  4720  003A' 1D03               	skipz
  4721  003B' 2800'              	goto	u3265
  4722  003C' 0801'              	movf	___awdiv@divisor+1,w
  4723  003D' 0203'              	subwf	___awdiv@dividend+1,w
  4724  003E' 1D03               	skipz
  4725  003F' 2800'              	goto	u3275
  4726  0040' 0800'              	movf	___awdiv@divisor,w
  4727  0041' 0202'              	subwf	___awdiv@dividend,w
  4728  0042'                    u3275:
  4729  0042' 1C03               	skipc
  4730  0043' 2800'              	goto	u3271
  4731  0044' 2800'              	goto	u3270
  4732  0045'                    u3271:
  4733  0045' 2800'              	goto	l2457
  4734  0046'                    u3270:
  4735  0046'                    l2453:
  4736  0046' 0800'              	movf	___awdiv@divisor,w
  4737  0047' 0282'              	subwf	___awdiv@dividend,f
  4738  0048' 0801'              	movf	___awdiv@divisor+1,w
  4739  0049' 1C03               	skipc
  4740  004A' 0383'              	decf	___awdiv@dividend+1,f
  4741  004B' 0283'              	subwf	___awdiv@dividend+1,f
  4742  004C'                    l2455:
  4743  004C' 1406'              	bsf	___awdiv@quotient,0
  4744  004D'                    l2457:
  4745  004D' 3001               	movlw	1
  4746  004E'                    u3285:
  4747  004E' 1003               	clrc
  4748  004F' 0C81'              	rrf	___awdiv@divisor+1,f
  4749  0050' 0C80'              	rrf	___awdiv@divisor,f
  4750  0051' 3EFF               	addlw	-1
  4751  0052' 1D03               	skipz
  4752  0053' 2800'              	goto	u3285
  4753  0054'                    l2459:
  4754  0054' 3001               	movlw	1
  4755  0055' 0284'              	subwf	___awdiv@counter,f
  4756  0056' 1D03               	btfss	3,2
  4757  0057' 2800'              	goto	u3291
  4758  0058' 2800'              	goto	u3290
  4759  0059'                    u3291:
  4760  0059' 2800'              	goto	l2451
  4761  005A'                    u3290:
  4762  005A'                    l2461:
  4763  005A' 0805'              	movf	___awdiv@sign,w
  4764  005B' 1903               	btfsc	3,2
  4765  005C' 2800'              	goto	u3301
  4766  005D' 2800'              	goto	u3300
  4767  005E'                    u3301:
  4768  005E' 2800'              	goto	l2465
  4769  005F'                    u3300:
  4770  005F'                    l2463:
  4771  005F' 0986'              	comf	___awdiv@quotient,f
  4772  0060' 0987'              	comf	___awdiv@quotient+1,f
  4773  0061' 0A86'              	incf	___awdiv@quotient,f
  4774  0062' 1903               	skipnz
  4775  0063' 0A87'              	incf	___awdiv@quotient+1,f
  4776  0064'                    l2465:
  4777  0064' 0807'              	movf	___awdiv@quotient+1,w
  4778  0065' 0081'              	movwf	?___awdiv+1
  4779  0066' 0806'              	movf	___awdiv@quotient,w
  4780  0067' 0080'              	movwf	?___awdiv
  4781  0068'                    l527:
  4782  0068' 0008               	return
  4783  0069'                    __end_of___awdiv:
  4784                           
  4785                           	psect	text5
  4786  0000'                    __ptext5:	
  4787 ;; *************** function _isdigit *****************
  4788 ;; Defined at:
  4789 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;  c               1    wreg     unsigned char 
  4792 ;; Auto vars:     Size  Location     Type
  4793 ;;  c               1    3[COMMON] unsigned char 
  4794 ;; Return value:  Size  Location     Type
  4795 ;;		None               void
  4796 ;; Registers used:
  4797 ;;		wreg, status,2, status,0
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4803 ;;      Params:         0       0       0       0       0
  4804 ;;      Locals:         2       0       0       0       0
  4805 ;;      Temps:          0       0       0       0       0
  4806 ;;      Totals:         2       0       0       0       0
  4807 ;;Total ram usage:        2 bytes
  4808 ;; Hardware stack levels used: 1
  4809 ;; Hardware stack levels required when called: 1
  4810 ;; This function calls:
  4811 ;;		Nothing
  4812 ;; This function is called by:
  4813 ;;		_sprintf
  4814 ;; This function uses a non-reentrant model
  4815 ;;
  4816                           
  4817  0000'                    _isdigit:	
  4818                           ;psect for function _isdigit
  4819                           
  4820                           
  4821                           ;incstack = 0
  4822                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4823                           ;isdigit@c stored from wreg
  4824  0000' 0083'              	movwf	isdigit@c
  4825  0001'                    l2977:
  4826  0001' 0182'              	clrf	_isdigit$870
  4827  0002'                    l2979:
  4828  0002' 303A               	movlw	58
  4829  0003' 0203'              	subwf	isdigit@c,w
  4830  0004' 1803               	skipnc
  4831  0005' 2800'              	goto	u4621
  4832  0006' 2800'              	goto	u4620
  4833  0007'                    u4621:
  4834  0007' 2800'              	goto	l2985
  4835  0008'                    u4620:
  4836  0008'                    l2981:
  4837  0008' 3030               	movlw	48
  4838  0009' 0203'              	subwf	isdigit@c,w
  4839  000A' 1C03               	skipc
  4840  000B' 2800'              	goto	u4631
  4841  000C' 2800'              	goto	u4630
  4842  000D'                    u4631:
  4843  000D' 2800'              	goto	l2985
  4844  000E'                    u4630:
  4845  000E'                    l2983:
  4846  000E' 0182'              	clrf	_isdigit$870
  4847  000F' 0A82'              	incf	_isdigit$870,f
  4848  0010'                    l2985:
  4849  0010' 0C02'              	rrf	_isdigit$870,w
  4850  0011'                    l861:
  4851  0011' 0008               	return
  4852  0012'                    __end_of_isdigit:
  4853                           
  4854                           	psect	text6
  4855  0000'                    __ptext6:	
  4856 ;; *************** function _fround *****************
  4857 ;; Defined at:
  4858 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;  prec            1    wreg     unsigned char 
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;  prec            1   53[BANK0 ] unsigned char 
  4863 ;; Return value:  Size  Location     Type
  4864 ;;                  4   34[BANK0 ] unsigned char 
  4865 ;; Registers used:
  4866 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4872 ;;      Params:         0       4       0       0       0
  4873 ;;      Locals:         0       9       0       0       0
  4874 ;;      Temps:          0       7       0       0       0
  4875 ;;      Totals:         0      20       0       0       0
  4876 ;;Total ram usage:       20 bytes
  4877 ;; Hardware stack levels used: 1
  4878 ;; Hardware stack levels required when called: 3
  4879 ;; This function calls:
  4880 ;;		___flmul
  4881 ;;		___lwdiv
  4882 ;;		___lwmod
  4883 ;; This function is called by:
  4884 ;;		_sprintf
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888  0000'                    _fround:	
  4889                           ;psect for function _fround
  4890                           
  4891                           
  4892                           ;incstack = 0
  4893                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4894                           ;fround@prec stored from wreg
  4895  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4896  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4897  0002' 00B5'              	movwf	fround@prec
  4898  0003'                    l4075:
  4899                           
  4900                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4901  0003' 306E               	movlw	110
  4902  0004' 0235'              	subwf	fround@prec,w
  4903  0005' 1C03               	skipc
  4904  0006' 2800'              	goto	u6781
  4905  0007' 2800'              	goto	u6780
  4906  0008'                    u6781:
  4907  0008' 2800'              	goto	l4083
  4908  0009'                    u6780:
  4909  0009'                    l4077:
  4910                           
  4911                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4912  0009' 303F               	movlw	63
  4913  000A' 008B'              	movwf	___flmul@b+3
  4914  000B' 3000               	movlw	0
  4915  000C' 008A'              	movwf	___flmul@b+2
  4916  000D' 3000               	movlw	0
  4917  000E' 0089'              	movwf	___flmul@b+1
  4918  000F' 3000               	movlw	0
  4919  0010' 0088'              	movwf	___flmul@b
  4920  0011' 3064               	movlw	100
  4921  0012' 0082'              	movwf	___lwdiv@divisor
  4922  0013' 3000               	movlw	0
  4923  0014' 0083'              	movwf	___lwdiv@divisor+1
  4924  0015' 0835'              	movf	fround@prec,w
  4925  0016' 00A6'              	movwf	??_fround
  4926  0017' 01A7'              	clrf	??_fround+1
  4927  0018' 0826'              	movf	??_fround,w
  4928  0019' 0084'              	movwf	___lwdiv@dividend
  4929  001A' 0827'              	movf	??_fround+1,w
  4930  001B' 0085'              	movwf	___lwdiv@dividend+1
  4931  001C' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  4932  0021' 0802'              	movf	?___lwdiv,w
  4933  0022' 1283               	bcf	3,5	;RP0=0, select bank0
  4934  0023' 1303               	bcf	3,6	;RP1=0, select bank0
  4935  0024' 00A8'              	movwf	??_fround+2
  4936  0025' 3001               	movlw	1
  4937  0026'                    u6795:
  4938  0026' 1003               	clrc
  4939  0027' 0DA8'              	rlf	??_fround+2,f
  4940  0028' 3EFF               	addlw	-1
  4941  0029' 1D03               	skipz
  4942  002A' 2800'              	goto	u6795
  4943  002B' 1003               	clrc
  4944  002C' 0D28'              	rlf	??_fround+2,w
  4945  002D' 3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4946  002E' 0084               	movwf	4
  4947  002F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4948  0034' 00A9'              	movwf	??_fround+3
  4949  0035' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4950  003A' 00AA'              	movwf	??_fround+4
  4951  003B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4952  0040' 00AB'              	movwf	??_fround+5
  4953  0041' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4954  0046' 00AC'              	movwf	??_fround+6
  4955  0047' 082C'              	movf	??_fround+6,w
  4956  0048' 008F'              	movwf	___flmul@a+3
  4957  0049' 082B'              	movf	??_fround+5,w
  4958  004A' 008E'              	movwf	___flmul@a+2
  4959  004B' 082A'              	movf	??_fround+4,w
  4960  004C' 008D'              	movwf	___flmul@a+1
  4961  004D' 0829'              	movf	??_fround+3,w
  4962  004E' 008C'              	movwf	___flmul@a
  4963  004F' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4964  0054' 1283               	bcf	3,5	;RP0=0, select bank0
  4965  0055' 1303               	bcf	3,6	;RP1=0, select bank0
  4966  0056' 080B'              	movf	?___flmul+3,w
  4967  0057' 00B4'              	movwf	_fround$1049+3
  4968  0058' 080A'              	movf	?___flmul+2,w
  4969  0059' 00B3'              	movwf	_fround$1049+2
  4970  005A' 0809'              	movf	?___flmul+1,w
  4971  005B' 00B2'              	movwf	_fround$1049+1
  4972  005C' 0808'              	movf	?___flmul,w
  4973  005D' 00B1'              	movwf	_fround$1049
  4974                           
  4975                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4976  005E' 300A               	movlw	10
  4977  005F' 0082'              	movwf	___lwdiv@divisor
  4978  0060' 3000               	movlw	0
  4979  0061' 0083'              	movwf	___lwdiv@divisor+1
  4980  0062' 0835'              	movf	fround@prec,w
  4981  0063' 00A6'              	movwf	??_fround
  4982  0064' 01A7'              	clrf	??_fround+1
  4983  0065' 0826'              	movf	??_fround,w
  4984  0066' 0082'              	movwf	___lwmod@dividend
  4985  0067' 0827'              	movf	??_fround+1,w
  4986  0068' 0083'              	movwf	___lwmod@dividend+1
  4987  0069' 3064               	movlw	100
  4988  006A' 0080'              	movwf	___lwmod@divisor
  4989  006B' 3000               	movlw	0
  4990  006C' 0081'              	movwf	___lwmod@divisor+1
  4991  006D' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  4992  0072' 1283               	bcf	3,5	;RP0=0, select bank0
  4993  0073' 1303               	bcf	3,6	;RP1=0, select bank0
  4994  0074' 0801'              	movf	?___lwmod+1,w
  4995  0075' 0085'              	movwf	___lwdiv@dividend+1
  4996  0076' 0800'              	movf	?___lwmod,w
  4997  0077' 0084'              	movwf	___lwdiv@dividend
  4998  0078' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  4999  007D' 0802'              	movf	?___lwdiv,w
  5000  007E' 1283               	bcf	3,5	;RP0=0, select bank0
  5001  007F' 1303               	bcf	3,6	;RP1=0, select bank0
  5002  0080' 00A8'              	movwf	??_fround+2
  5003  0081' 3001               	movlw	1
  5004  0082'                    u6805:
  5005  0082' 1003               	clrc
  5006  0083' 0DA8'              	rlf	??_fround+2,f
  5007  0084' 3EFF               	addlw	-1
  5008  0085' 1D03               	skipz
  5009  0086' 2800'              	goto	u6805
  5010  0087' 1003               	clrc
  5011  0088' 0D28'              	rlf	??_fround+2,w
  5012  0089' 3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5013  008A' 0084               	movwf	4
  5014  008B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5015  0090' 00A9'              	movwf	??_fround+3
  5016  0091' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5017  0096' 00AA'              	movwf	??_fround+4
  5018  0097' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5019  009C' 00AB'              	movwf	??_fround+5
  5020  009D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5021  00A2' 00AC'              	movwf	??_fround+6
  5022  00A3' 082C'              	movf	??_fround+6,w
  5023  00A4' 008B'              	movwf	___flmul@b+3
  5024  00A5' 082B'              	movf	??_fround+5,w
  5025  00A6' 008A'              	movwf	___flmul@b+2
  5026  00A7' 082A'              	movf	??_fround+4,w
  5027  00A8' 0089'              	movwf	___flmul@b+1
  5028  00A9' 0829'              	movf	??_fround+3,w
  5029  00AA' 0088'              	movwf	___flmul@b
  5030  00AB' 0834'              	movf	_fround$1049+3,w
  5031  00AC' 008F'              	movwf	___flmul@a+3
  5032  00AD' 0833'              	movf	_fround$1049+2,w
  5033  00AE' 008E'              	movwf	___flmul@a+2
  5034  00AF' 0832'              	movf	_fround$1049+1,w
  5035  00B0' 008D'              	movwf	___flmul@a+1
  5036  00B1' 0831'              	movf	_fround$1049,w
  5037  00B2' 008C'              	movwf	___flmul@a
  5038  00B3' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  5039  00B8' 1283               	bcf	3,5	;RP0=0, select bank0
  5040  00B9' 1303               	bcf	3,6	;RP1=0, select bank0
  5041  00BA' 080B'              	movf	?___flmul+3,w
  5042  00BB' 00B0'              	movwf	_fround$1050+3
  5043  00BC' 080A'              	movf	?___flmul+2,w
  5044  00BD' 00AF'              	movwf	_fround$1050+2
  5045  00BE' 0809'              	movf	?___flmul+1,w
  5046  00BF' 00AE'              	movwf	_fround$1050+1
  5047  00C0' 0808'              	movf	?___flmul,w
  5048  00C1' 00AD'              	movwf	_fround$1050
  5049                           
  5050                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5051  00C2' 300A               	movlw	10
  5052  00C3' 0080'              	movwf	___lwmod@divisor
  5053  00C4' 3000               	movlw	0
  5054  00C5' 0081'              	movwf	___lwmod@divisor+1
  5055  00C6' 0835'              	movf	fround@prec,w
  5056  00C7' 00A6'              	movwf	??_fround
  5057  00C8' 01A7'              	clrf	??_fround+1
  5058  00C9' 0826'              	movf	??_fround,w
  5059  00CA' 0082'              	movwf	___lwmod@dividend
  5060  00CB' 0827'              	movf	??_fround+1,w
  5061  00CC' 0083'              	movwf	___lwmod@dividend+1
  5062  00CD' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  5063  00D2' 1283               	bcf	3,5	;RP0=0, select bank0
  5064  00D3' 1303               	bcf	3,6	;RP1=0, select bank0
  5065  00D4' 0800'              	movf	?___lwmod,w
  5066  00D5' 00A8'              	movwf	??_fround+2
  5067  00D6' 3001               	movlw	1
  5068  00D7'                    u6815:
  5069  00D7' 1003               	clrc
  5070  00D8' 0DA8'              	rlf	??_fround+2,f
  5071  00D9' 3EFF               	addlw	-1
  5072  00DA' 1D03               	skipz
  5073  00DB' 2800'              	goto	u6815
  5074  00DC' 1003               	clrc
  5075  00DD' 0D28'              	rlf	??_fround+2,w
  5076  00DE' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5077  00DF' 0084               	movwf	4
  5078  00E0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5079  00E5' 00A9'              	movwf	??_fround+3
  5080  00E6' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5081  00EB' 00AA'              	movwf	??_fround+4
  5082  00EC' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5083  00F1' 00AB'              	movwf	??_fround+5
  5084  00F2' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5085  00F7' 00AC'              	movwf	??_fround+6
  5086  00F8' 082C'              	movf	??_fround+6,w
  5087  00F9' 008B'              	movwf	___flmul@b+3
  5088  00FA' 082B'              	movf	??_fround+5,w
  5089  00FB' 008A'              	movwf	___flmul@b+2
  5090  00FC' 082A'              	movf	??_fround+4,w
  5091  00FD' 0089'              	movwf	___flmul@b+1
  5092  00FE' 0829'              	movf	??_fround+3,w
  5093  00FF' 0088'              	movwf	___flmul@b
  5094  0100' 0830'              	movf	_fround$1050+3,w
  5095  0101' 008F'              	movwf	___flmul@a+3
  5096  0102' 082F'              	movf	_fround$1050+2,w
  5097  0103' 008E'              	movwf	___flmul@a+2
  5098  0104' 082E'              	movf	_fround$1050+1,w
  5099  0105' 008D'              	movwf	___flmul@a+1
  5100  0106' 082D'              	movf	_fround$1050,w
  5101  0107' 008C'              	movwf	___flmul@a
  5102  0108' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  5103  010D' 1283               	bcf	3,5	;RP0=0, select bank0
  5104  010E' 1303               	bcf	3,6	;RP1=0, select bank0
  5105  010F' 080B'              	movf	?___flmul+3,w
  5106  0110' 00A5'              	movwf	?_fround+3
  5107  0111' 080A'              	movf	?___flmul+2,w
  5108  0112' 00A4'              	movwf	?_fround+2
  5109  0113' 0809'              	movf	?___flmul+1,w
  5110  0114' 00A3'              	movwf	?_fround+1
  5111  0115' 0808'              	movf	?___flmul,w
  5112  0116' 00A2'              	movwf	?_fround
  5113  0117' 2800'              	goto	l297
  5114  0118'                    l4083:
  5115  0118' 300B               	movlw	11
  5116  0119' 0235'              	subwf	fround@prec,w
  5117  011A' 1C03               	skipc
  5118  011B' 2800'              	goto	u6821
  5119  011C' 2800'              	goto	u6820
  5120  011D'                    u6821:
  5121  011D' 2800'              	goto	l4089
  5122  011E'                    u6820:
  5123  011E'                    l4085:
  5124                           
  5125                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5126  011E' 303F               	movlw	63
  5127  011F' 008B'              	movwf	___flmul@b+3
  5128  0120' 3000               	movlw	0
  5129  0121' 008A'              	movwf	___flmul@b+2
  5130  0122' 3000               	movlw	0
  5131  0123' 0089'              	movwf	___flmul@b+1
  5132  0124' 3000               	movlw	0
  5133  0125' 0088'              	movwf	___flmul@b
  5134  0126' 300A               	movlw	10
  5135  0127' 0082'              	movwf	___lwdiv@divisor
  5136  0128' 3000               	movlw	0
  5137  0129' 0083'              	movwf	___lwdiv@divisor+1
  5138  012A' 0835'              	movf	fround@prec,w
  5139  012B' 00A6'              	movwf	??_fround
  5140  012C' 01A7'              	clrf	??_fround+1
  5141  012D' 0826'              	movf	??_fround,w
  5142  012E' 0084'              	movwf	___lwdiv@dividend
  5143  012F' 0827'              	movf	??_fround+1,w
  5144  0130' 0085'              	movwf	___lwdiv@dividend+1
  5145  0131' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  5146  0136' 0802'              	movf	?___lwdiv,w
  5147  0137' 1283               	bcf	3,5	;RP0=0, select bank0
  5148  0138' 1303               	bcf	3,6	;RP1=0, select bank0
  5149  0139' 00A8'              	movwf	??_fround+2
  5150  013A' 3001               	movlw	1
  5151  013B'                    u6835:
  5152  013B' 1003               	clrc
  5153  013C' 0DA8'              	rlf	??_fround+2,f
  5154  013D' 3EFF               	addlw	-1
  5155  013E' 1D03               	skipz
  5156  013F' 2800'              	goto	u6835
  5157  0140' 1003               	clrc
  5158  0141' 0D28'              	rlf	??_fround+2,w
  5159  0142' 3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5160  0143' 0084               	movwf	4
  5161  0144' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5162  0149' 00A9'              	movwf	??_fround+3
  5163  014A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5164  014F' 00AA'              	movwf	??_fround+4
  5165  0150' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5166  0155' 00AB'              	movwf	??_fround+5
  5167  0156' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5168  015B' 00AC'              	movwf	??_fround+6
  5169  015C' 082C'              	movf	??_fround+6,w
  5170  015D' 008F'              	movwf	___flmul@a+3
  5171  015E' 082B'              	movf	??_fround+5,w
  5172  015F' 008E'              	movwf	___flmul@a+2
  5173  0160' 082A'              	movf	??_fround+4,w
  5174  0161' 008D'              	movwf	___flmul@a+1
  5175  0162' 0829'              	movf	??_fround+3,w
  5176  0163' 008C'              	movwf	___flmul@a
  5177  0164' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  5178  0169' 1283               	bcf	3,5	;RP0=0, select bank0
  5179  016A' 1303               	bcf	3,6	;RP1=0, select bank0
  5180  016B' 080B'              	movf	?___flmul+3,w
  5181  016C' 00B4'              	movwf	_fround$1049+3
  5182  016D' 080A'              	movf	?___flmul+2,w
  5183  016E' 00B3'              	movwf	_fround$1049+2
  5184  016F' 0809'              	movf	?___flmul+1,w
  5185  0170' 00B2'              	movwf	_fround$1049+1
  5186  0171' 0808'              	movf	?___flmul,w
  5187  0172' 00B1'              	movwf	_fround$1049
  5188                           
  5189                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5190  0173' 300A               	movlw	10
  5191  0174' 0080'              	movwf	___lwmod@divisor
  5192  0175' 3000               	movlw	0
  5193  0176' 0081'              	movwf	___lwmod@divisor+1
  5194  0177' 0835'              	movf	fround@prec,w
  5195  0178' 00A6'              	movwf	??_fround
  5196  0179' 01A7'              	clrf	??_fround+1
  5197  017A' 0826'              	movf	??_fround,w
  5198  017B' 0082'              	movwf	___lwmod@dividend
  5199  017C' 0827'              	movf	??_fround+1,w
  5200  017D' 0083'              	movwf	___lwmod@dividend+1
  5201  017E' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  5202  0183' 1283               	bcf	3,5	;RP0=0, select bank0
  5203  0184' 1303               	bcf	3,6	;RP1=0, select bank0
  5204  0185' 0800'              	movf	?___lwmod,w
  5205  0186' 00A8'              	movwf	??_fround+2
  5206  0187' 3001               	movlw	1
  5207  0188'                    u6845:
  5208  0188' 1003               	clrc
  5209  0189' 0DA8'              	rlf	??_fround+2,f
  5210  018A' 3EFF               	addlw	-1
  5211  018B' 1D03               	skipz
  5212  018C' 2800'              	goto	u6845
  5213  018D' 1003               	clrc
  5214  018E' 0D28'              	rlf	??_fround+2,w
  5215  018F' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5216  0190' 0084               	movwf	4
  5217  0191' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5218  0196' 00A9'              	movwf	??_fround+3
  5219  0197' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5220  019C' 00AA'              	movwf	??_fround+4
  5221  019D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5222  01A2' 00AB'              	movwf	??_fround+5
  5223  01A3' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5224  01A8' 00AC'              	movwf	??_fround+6
  5225  01A9' 082C'              	movf	??_fround+6,w
  5226  01AA' 008B'              	movwf	___flmul@b+3
  5227  01AB' 082B'              	movf	??_fround+5,w
  5228  01AC' 008A'              	movwf	___flmul@b+2
  5229  01AD' 082A'              	movf	??_fround+4,w
  5230  01AE' 0089'              	movwf	___flmul@b+1
  5231  01AF' 0829'              	movf	??_fround+3,w
  5232  01B0' 0088'              	movwf	___flmul@b
  5233  01B1' 0834'              	movf	_fround$1049+3,w
  5234  01B2' 008F'              	movwf	___flmul@a+3
  5235  01B3' 0833'              	movf	_fround$1049+2,w
  5236  01B4' 008E'              	movwf	___flmul@a+2
  5237  01B5' 0832'              	movf	_fround$1049+1,w
  5238  01B6' 008D'              	movwf	___flmul@a+1
  5239  01B7' 0831'              	movf	_fround$1049,w
  5240  01B8' 008C'              	movwf	___flmul@a
  5241  01B9' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  5242  01BE' 1283               	bcf	3,5	;RP0=0, select bank0
  5243  01BF' 1303               	bcf	3,6	;RP1=0, select bank0
  5244  01C0' 080B'              	movf	?___flmul+3,w
  5245  01C1' 00A5'              	movwf	?_fround+3
  5246  01C2' 080A'              	movf	?___flmul+2,w
  5247  01C3' 00A4'              	movwf	?_fround+2
  5248  01C4' 0809'              	movf	?___flmul+1,w
  5249  01C5' 00A3'              	movwf	?_fround+1
  5250  01C6' 0808'              	movf	?___flmul,w
  5251  01C7' 00A2'              	movwf	?_fround
  5252  01C8' 2800'              	goto	l297
  5253  01C9'                    l4089:
  5254                           
  5255                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5256  01C9' 303F               	movlw	63
  5257  01CA' 008B'              	movwf	___flmul@b+3
  5258  01CB' 3000               	movlw	0
  5259  01CC' 008A'              	movwf	___flmul@b+2
  5260  01CD' 3000               	movlw	0
  5261  01CE' 0089'              	movwf	___flmul@b+1
  5262  01CF' 3000               	movlw	0
  5263  01D0' 0088'              	movwf	___flmul@b
  5264  01D1' 0835'              	movf	fround@prec,w
  5265  01D2' 00A6'              	movwf	??_fround
  5266  01D3' 3001               	movlw	1
  5267  01D4'                    u6855:
  5268  01D4' 1003               	clrc
  5269  01D5' 0DA6'              	rlf	??_fround,f
  5270  01D6' 3EFF               	addlw	-1
  5271  01D7' 1D03               	skipz
  5272  01D8' 2800'              	goto	u6855
  5273  01D9' 1003               	clrc
  5274  01DA' 0D26'              	rlf	??_fround,w
  5275  01DB' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5276  01DC' 0084               	movwf	4
  5277  01DD' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5278  01E2' 00A7'              	movwf	??_fround+1
  5279  01E3' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5280  01E8' 00A8'              	movwf	??_fround+2
  5281  01E9' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5282  01EE' 00A9'              	movwf	??_fround+3
  5283  01EF' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5284  01F4' 00AA'              	movwf	??_fround+4
  5285  01F5' 082A'              	movf	??_fround+4,w
  5286  01F6' 008F'              	movwf	___flmul@a+3
  5287  01F7' 0829'              	movf	??_fround+3,w
  5288  01F8' 008E'              	movwf	___flmul@a+2
  5289  01F9' 0828'              	movf	??_fround+2,w
  5290  01FA' 008D'              	movwf	___flmul@a+1
  5291  01FB' 0827'              	movf	??_fround+1,w
  5292  01FC' 008C'              	movwf	___flmul@a
  5293  01FD' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  5294  0202' 1283               	bcf	3,5	;RP0=0, select bank0
  5295  0203' 1303               	bcf	3,6	;RP1=0, select bank0
  5296  0204' 080B'              	movf	?___flmul+3,w
  5297  0205' 00A5'              	movwf	?_fround+3
  5298  0206' 080A'              	movf	?___flmul+2,w
  5299  0207' 00A4'              	movwf	?_fround+2
  5300  0208' 0809'              	movf	?___flmul+1,w
  5301  0209' 00A3'              	movwf	?_fround+1
  5302  020A' 0808'              	movf	?___flmul,w
  5303  020B' 00A2'              	movwf	?_fround
  5304  020C'                    l297:
  5305  020C' 0008               	return
  5306  020D'                    __end_of_fround:
  5307                           
  5308                           	psect	text7
  5309  0000'                    __ptext7:	
  5310 ;; *************** function ___lwmod *****************
  5311 ;; Defined at:
  5312 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  5313 ;; Parameters:    Size  Location     Type
  5314 ;;  divisor         2    0[BANK0 ] unsigned int 
  5315 ;;  dividend        2    2[BANK0 ] unsigned int 
  5316 ;; Auto vars:     Size  Location     Type
  5317 ;;  counter         1    5[BANK0 ] unsigned char 
  5318 ;; Return value:  Size  Location     Type
  5319 ;;                  2    0[BANK0 ] unsigned int 
  5320 ;; Registers used:
  5321 ;;		wreg, status,2, status,0
  5322 ;; Tracked objects:
  5323 ;;		On entry : 0/0
  5324 ;;		On exit  : 0/0
  5325 ;;		Unchanged: 0/0
  5326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5327 ;;      Params:         0       4       0       0       0
  5328 ;;      Locals:         0       1       0       0       0
  5329 ;;      Temps:          0       1       0       0       0
  5330 ;;      Totals:         0       6       0       0       0
  5331 ;;Total ram usage:        6 bytes
  5332 ;; Hardware stack levels used: 1
  5333 ;; Hardware stack levels required when called: 1
  5334 ;; This function calls:
  5335 ;;		Nothing
  5336 ;; This function is called by:
  5337 ;;		_main
  5338 ;;		_fround
  5339 ;; This function uses a non-reentrant model
  5340 ;;
  5341                           
  5342  0000'                    ___lwmod:	
  5343                           ;psect for function ___lwmod
  5344                           
  5345  0000'                    l3883:	
  5346                           ;incstack = 0
  5347                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5348                           
  5349  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  5350  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  5351  0002' 0800'              	movf	___lwmod@divisor,w
  5352  0003' 0401'              	iorwf	___lwmod@divisor+1,w
  5353  0004' 1903               	btfsc	3,2
  5354  0005' 2800'              	goto	u6341
  5355  0006' 2800'              	goto	u6340
  5356  0007'                    u6341:
  5357  0007' 2800'              	goto	l3901
  5358  0008'                    u6340:
  5359  0008'                    l3885:
  5360  0008' 0185'              	clrf	___lwmod@counter
  5361  0009' 0A85'              	incf	___lwmod@counter,f
  5362  000A' 2800'              	goto	l3891
  5363  000B'                    l3887:
  5364  000B' 3001               	movlw	1
  5365  000C'                    u6355:
  5366  000C' 1003               	clrc
  5367  000D' 0D80'              	rlf	___lwmod@divisor,f
  5368  000E' 0D81'              	rlf	___lwmod@divisor+1,f
  5369  000F' 3EFF               	addlw	-1
  5370  0010' 1D03               	skipz
  5371  0011' 2800'              	goto	u6355
  5372  0012'                    l3889:
  5373  0012' 3001               	movlw	1
  5374  0013' 0084'              	movwf	??___lwmod
  5375  0014' 0804'              	movf	??___lwmod,w
  5376  0015' 0785'              	addwf	___lwmod@counter,f
  5377  0016'                    l3891:
  5378  0016' 1F81'              	btfss	___lwmod@divisor+1,7
  5379  0017' 2800'              	goto	u6361
  5380  0018' 2800'              	goto	u6360
  5381  0019'                    u6361:
  5382  0019' 2800'              	goto	l3887
  5383  001A'                    u6360:
  5384  001A'                    l3893:
  5385  001A' 0801'              	movf	___lwmod@divisor+1,w
  5386  001B' 0203'              	subwf	___lwmod@dividend+1,w
  5387  001C' 1D03               	skipz
  5388  001D' 2800'              	goto	u6375
  5389  001E' 0800'              	movf	___lwmod@divisor,w
  5390  001F' 0202'              	subwf	___lwmod@dividend,w
  5391  0020'                    u6375:
  5392  0020' 1C03               	skipc
  5393  0021' 2800'              	goto	u6371
  5394  0022' 2800'              	goto	u6370
  5395  0023'                    u6371:
  5396  0023' 2800'              	goto	l3897
  5397  0024'                    u6370:
  5398  0024'                    l3895:
  5399  0024' 0800'              	movf	___lwmod@divisor,w
  5400  0025' 0282'              	subwf	___lwmod@dividend,f
  5401  0026' 0801'              	movf	___lwmod@divisor+1,w
  5402  0027' 1C03               	skipc
  5403  0028' 0383'              	decf	___lwmod@dividend+1,f
  5404  0029' 0283'              	subwf	___lwmod@dividend+1,f
  5405  002A'                    l3897:
  5406  002A' 3001               	movlw	1
  5407  002B'                    u6385:
  5408  002B' 1003               	clrc
  5409  002C' 0C81'              	rrf	___lwmod@divisor+1,f
  5410  002D' 0C80'              	rrf	___lwmod@divisor,f
  5411  002E' 3EFF               	addlw	-1
  5412  002F' 1D03               	skipz
  5413  0030' 2800'              	goto	u6385
  5414  0031'                    l3899:
  5415  0031' 3001               	movlw	1
  5416  0032' 0285'              	subwf	___lwmod@counter,f
  5417  0033' 1D03               	btfss	3,2
  5418  0034' 2800'              	goto	u6391
  5419  0035' 2800'              	goto	u6390
  5420  0036'                    u6391:
  5421  0036' 2800'              	goto	l3893
  5422  0037'                    u6390:
  5423  0037'                    l3901:
  5424  0037' 0803'              	movf	___lwmod@dividend+1,w
  5425  0038' 0081'              	movwf	?___lwmod+1
  5426  0039' 0802'              	movf	___lwmod@dividend,w
  5427  003A' 0080'              	movwf	?___lwmod
  5428  003B'                    l690:
  5429  003B' 0008               	return
  5430  003C'                    __end_of___lwmod:
  5431                           
  5432                           	psect	text8
  5433  0000'                    __ptext8:	
  5434 ;; *************** function ___lwdiv *****************
  5435 ;; Defined at:
  5436 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  5437 ;; Parameters:    Size  Location     Type
  5438 ;;  divisor         2    2[COMMON] unsigned int 
  5439 ;;  dividend        2    4[COMMON] unsigned int 
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;  quotient        2    7[COMMON] unsigned int 
  5442 ;;  counter         1    9[COMMON] unsigned char 
  5443 ;; Return value:  Size  Location     Type
  5444 ;;                  2    2[COMMON] unsigned int 
  5445 ;; Registers used:
  5446 ;;		wreg, status,2, status,0
  5447 ;; Tracked objects:
  5448 ;;		On entry : 0/0
  5449 ;;		On exit  : 0/0
  5450 ;;		Unchanged: 0/0
  5451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5452 ;;      Params:         4       0       0       0       0
  5453 ;;      Locals:         3       0       0       0       0
  5454 ;;      Temps:          1       0       0       0       0
  5455 ;;      Totals:         8       0       0       0       0
  5456 ;;Total ram usage:        8 bytes
  5457 ;; Hardware stack levels used: 1
  5458 ;; Hardware stack levels required when called: 1
  5459 ;; This function calls:
  5460 ;;		Nothing
  5461 ;; This function is called by:
  5462 ;;		_main
  5463 ;;		_fround
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466                           
  5467  0000'                    ___lwdiv:	
  5468                           ;psect for function ___lwdiv
  5469                           
  5470  0000'                    l2507:	
  5471                           ;incstack = 0
  5472                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5473                           
  5474  0000' 0187'              	clrf	___lwdiv@quotient
  5475  0001' 0188'              	clrf	___lwdiv@quotient+1
  5476  0002'                    l2509:
  5477  0002' 0802'              	movf	___lwdiv@divisor,w
  5478  0003' 0403'              	iorwf	___lwdiv@divisor+1,w
  5479  0004' 1903               	btfsc	3,2
  5480  0005' 2800'              	goto	u3401
  5481  0006' 2800'              	goto	u3400
  5482  0007'                    u3401:
  5483  0007' 2800'              	goto	l2529
  5484  0008'                    u3400:
  5485  0008'                    l2511:
  5486  0008' 0189'              	clrf	___lwdiv@counter
  5487  0009' 0A89'              	incf	___lwdiv@counter,f
  5488  000A' 2800'              	goto	l2517
  5489  000B'                    l2513:
  5490  000B' 3001               	movlw	1
  5491  000C'                    u3415:
  5492  000C' 1003               	clrc
  5493  000D' 0D82'              	rlf	___lwdiv@divisor,f
  5494  000E' 0D83'              	rlf	___lwdiv@divisor+1,f
  5495  000F' 3EFF               	addlw	-1
  5496  0010' 1D03               	skipz
  5497  0011' 2800'              	goto	u3415
  5498  0012'                    l2515:
  5499  0012' 3001               	movlw	1
  5500  0013' 0086'              	movwf	??___lwdiv
  5501  0014' 0806'              	movf	??___lwdiv,w
  5502  0015' 0789'              	addwf	___lwdiv@counter,f
  5503  0016'                    l2517:
  5504  0016' 1F83'              	btfss	___lwdiv@divisor+1,7
  5505  0017' 2800'              	goto	u3421
  5506  0018' 2800'              	goto	u3420
  5507  0019'                    u3421:
  5508  0019' 2800'              	goto	l2513
  5509  001A'                    u3420:
  5510  001A'                    l2519:
  5511  001A' 3001               	movlw	1
  5512  001B'                    u3435:
  5513  001B' 1003               	clrc
  5514  001C' 0D87'              	rlf	___lwdiv@quotient,f
  5515  001D' 0D88'              	rlf	___lwdiv@quotient+1,f
  5516  001E' 3EFF               	addlw	-1
  5517  001F' 1D03               	skipz
  5518  0020' 2800'              	goto	u3435
  5519  0021' 0803'              	movf	___lwdiv@divisor+1,w
  5520  0022' 0205'              	subwf	___lwdiv@dividend+1,w
  5521  0023' 1D03               	skipz
  5522  0024' 2800'              	goto	u3445
  5523  0025' 0802'              	movf	___lwdiv@divisor,w
  5524  0026' 0204'              	subwf	___lwdiv@dividend,w
  5525  0027'                    u3445:
  5526  0027' 1C03               	skipc
  5527  0028' 2800'              	goto	u3441
  5528  0029' 2800'              	goto	u3440
  5529  002A'                    u3441:
  5530  002A' 2800'              	goto	l2525
  5531  002B'                    u3440:
  5532  002B'                    l2521:
  5533  002B' 0802'              	movf	___lwdiv@divisor,w
  5534  002C' 0284'              	subwf	___lwdiv@dividend,f
  5535  002D' 0803'              	movf	___lwdiv@divisor+1,w
  5536  002E' 1C03               	skipc
  5537  002F' 0385'              	decf	___lwdiv@dividend+1,f
  5538  0030' 0285'              	subwf	___lwdiv@dividend+1,f
  5539  0031'                    l2523:
  5540  0031' 1407'              	bsf	___lwdiv@quotient,0
  5541  0032'                    l2525:
  5542  0032' 3001               	movlw	1
  5543  0033'                    u3455:
  5544  0033' 1003               	clrc
  5545  0034' 0C83'              	rrf	___lwdiv@divisor+1,f
  5546  0035' 0C82'              	rrf	___lwdiv@divisor,f
  5547  0036' 3EFF               	addlw	-1
  5548  0037' 1D03               	skipz
  5549  0038' 2800'              	goto	u3455
  5550  0039'                    l2527:
  5551  0039' 3001               	movlw	1
  5552  003A' 0289'              	subwf	___lwdiv@counter,f
  5553  003B' 1D03               	btfss	3,2
  5554  003C' 2800'              	goto	u3461
  5555  003D' 2800'              	goto	u3460
  5556  003E'                    u3461:
  5557  003E' 2800'              	goto	l2519
  5558  003F'                    u3460:
  5559  003F'                    l2529:
  5560  003F' 0808'              	movf	___lwdiv@quotient+1,w
  5561  0040' 0083'              	movwf	?___lwdiv+1
  5562  0041' 0807'              	movf	___lwdiv@quotient,w
  5563  0042' 0082'              	movwf	?___lwdiv
  5564  0043'                    l680:
  5565  0043' 0008               	return
  5566  0044'                    __end_of___lwdiv:
  5567                           
  5568                           	psect	text9
  5569  0000'                    __ptext9:	
  5570 ;; *************** function ___flmul *****************
  5571 ;; Defined at:
  5572 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  5573 ;; Parameters:    Size  Location     Type
  5574 ;;  b               4    8[BANK0 ] unsigned int 
  5575 ;;  a               4   12[BANK0 ] unsigned int 
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;  prod            4   28[BANK0 ] struct .
  5578 ;;  grs             4   23[BANK0 ] unsigned long 
  5579 ;;  temp            2   32[BANK0 ] struct .
  5580 ;;  bexp            1   27[BANK0 ] unsigned char 
  5581 ;;  aexp            1   22[BANK0 ] unsigned char 
  5582 ;;  sign            1   21[BANK0 ] unsigned char 
  5583 ;; Return value:  Size  Location     Type
  5584 ;;                  4    8[BANK0 ] unsigned char 
  5585 ;; Registers used:
  5586 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5592 ;;      Params:         0       8       0       0       0
  5593 ;;      Locals:         0      13       0       0       0
  5594 ;;      Temps:          0       5       0       0       0
  5595 ;;      Totals:         0      26       0       0       0
  5596 ;;Total ram usage:       26 bytes
  5597 ;; Hardware stack levels used: 1
  5598 ;; Hardware stack levels required when called: 2
  5599 ;; This function calls:
  5600 ;;		__Umul8_16
  5601 ;; This function is called by:
  5602 ;;		_main
  5603 ;;		_fround
  5604 ;;		_scale
  5605 ;;		_sprintf
  5606 ;; This function uses a non-reentrant model
  5607 ;;
  5608                           
  5609  0000'                    ___flmul:	
  5610                           ;psect for function ___flmul
  5611                           
  5612  0000'                    l3905:	
  5613                           ;incstack = 0
  5614                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5615                           
  5616  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  5617  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  5618  0002' 080B'              	movf	___flmul@b+3,w
  5619  0003' 3980               	andlw	128
  5620  0004' 0095'              	movwf	___flmul@sign
  5621  0005'                    l3907:
  5622  0005' 080B'              	movf	___flmul@b+3,w
  5623  0006' 0090'              	movwf	??___flmul
  5624  0007' 0710'              	addwf	??___flmul,w
  5625  0008' 009B'              	movwf	___flmul@bexp
  5626  0009'                    l3909:
  5627  0009' 1F8A'              	btfss	___flmul@b+2,7
  5628  000A' 2800'              	goto	u6401
  5629  000B' 2800'              	goto	u6400
  5630  000C'                    u6401:
  5631  000C' 2800'              	goto	l3913
  5632  000D'                    u6400:
  5633  000D'                    l3911:
  5634  000D' 141B'              	bsf	___flmul@bexp,0
  5635  000E'                    l3913:
  5636  000E' 081B'              	movf	___flmul@bexp,w
  5637  000F' 1903               	btfsc	3,2
  5638  0010' 2800'              	goto	u6411
  5639  0011' 2800'              	goto	u6410
  5640  0012'                    u6411:
  5641  0012' 2800'              	goto	l3921
  5642  0013'                    u6410:
  5643  0013'                    l3915:
  5644  0013' 0A1B'              	incf	___flmul@bexp,w
  5645  0014' 1D03               	btfss	3,2
  5646  0015' 2800'              	goto	u6421
  5647  0016' 2800'              	goto	u6420
  5648  0017'                    u6421:
  5649  0017' 2800'              	goto	l3919
  5650  0018'                    u6420:
  5651  0018'                    l3917:
  5652  0018' 3000               	movlw	0
  5653  0019' 008B'              	movwf	___flmul@b+3
  5654  001A' 3000               	movlw	0
  5655  001B' 008A'              	movwf	___flmul@b+2
  5656  001C' 3000               	movlw	0
  5657  001D' 0089'              	movwf	___flmul@b+1
  5658  001E' 3000               	movlw	0
  5659  001F' 0088'              	movwf	___flmul@b
  5660  0020'                    l3919:
  5661  0020' 178A'              	bsf	___flmul@b+2,7
  5662  0021' 2800'              	goto	l3923
  5663  0022'                    l3921:
  5664  0022' 3000               	movlw	0
  5665  0023' 008B'              	movwf	___flmul@b+3
  5666  0024' 3000               	movlw	0
  5667  0025' 008A'              	movwf	___flmul@b+2
  5668  0026' 3000               	movlw	0
  5669  0027' 0089'              	movwf	___flmul@b+1
  5670  0028' 3000               	movlw	0
  5671  0029' 0088'              	movwf	___flmul@b
  5672  002A'                    l3923:
  5673  002A' 080F'              	movf	___flmul@a+3,w
  5674  002B' 3980               	andlw	128
  5675  002C' 0090'              	movwf	??___flmul
  5676  002D' 0810'              	movf	??___flmul,w
  5677  002E' 0695'              	xorwf	___flmul@sign,f
  5678  002F'                    l3925:
  5679  002F' 080F'              	movf	___flmul@a+3,w
  5680  0030' 0090'              	movwf	??___flmul
  5681  0031' 0710'              	addwf	??___flmul,w
  5682  0032' 0096'              	movwf	___flmul@aexp
  5683  0033'                    l3927:
  5684  0033' 1F8E'              	btfss	___flmul@a+2,7
  5685  0034' 2800'              	goto	u6431
  5686  0035' 2800'              	goto	u6430
  5687  0036'                    u6431:
  5688  0036' 2800'              	goto	l3931
  5689  0037'                    u6430:
  5690  0037'                    l3929:
  5691  0037' 1416'              	bsf	___flmul@aexp,0
  5692  0038'                    l3931:
  5693  0038' 0816'              	movf	___flmul@aexp,w
  5694  0039' 1903               	btfsc	3,2
  5695  003A' 2800'              	goto	u6441
  5696  003B' 2800'              	goto	u6440
  5697  003C'                    u6441:
  5698  003C' 2800'              	goto	l3939
  5699  003D'                    u6440:
  5700  003D'                    l3933:
  5701  003D' 0A16'              	incf	___flmul@aexp,w
  5702  003E' 1D03               	btfss	3,2
  5703  003F' 2800'              	goto	u6451
  5704  0040' 2800'              	goto	u6450
  5705  0041'                    u6451:
  5706  0041' 2800'              	goto	l3937
  5707  0042'                    u6450:
  5708  0042'                    l3935:
  5709  0042' 3000               	movlw	0
  5710  0043' 008F'              	movwf	___flmul@a+3
  5711  0044' 3000               	movlw	0
  5712  0045' 008E'              	movwf	___flmul@a+2
  5713  0046' 3000               	movlw	0
  5714  0047' 008D'              	movwf	___flmul@a+1
  5715  0048' 3000               	movlw	0
  5716  0049' 008C'              	movwf	___flmul@a
  5717  004A'                    l3937:
  5718  004A' 178E'              	bsf	___flmul@a+2,7
  5719  004B' 2800'              	goto	l3941
  5720  004C'                    l3939:
  5721  004C' 3000               	movlw	0
  5722  004D' 008F'              	movwf	___flmul@a+3
  5723  004E' 3000               	movlw	0
  5724  004F' 008E'              	movwf	___flmul@a+2
  5725  0050' 3000               	movlw	0
  5726  0051' 008D'              	movwf	___flmul@a+1
  5727  0052' 3000               	movlw	0
  5728  0053' 008C'              	movwf	___flmul@a
  5729  0054'                    l3941:
  5730  0054' 0816'              	movf	___flmul@aexp,w
  5731  0055' 1903               	btfsc	3,2
  5732  0056' 2800'              	goto	u6461
  5733  0057' 2800'              	goto	u6460
  5734  0058'                    u6461:
  5735  0058' 2800'              	goto	l3945
  5736  0059'                    u6460:
  5737  0059'                    l3943:
  5738  0059' 081B'              	movf	___flmul@bexp,w
  5739  005A' 1D03               	btfss	3,2
  5740  005B' 2800'              	goto	u6471
  5741  005C' 2800'              	goto	u6470
  5742  005D'                    u6471:
  5743  005D' 2800'              	goto	l3949
  5744  005E'                    u6470:
  5745  005E'                    l3945:
  5746  005E' 3000               	movlw	0
  5747  005F' 008B'              	movwf	?___flmul+3
  5748  0060' 3000               	movlw	0
  5749  0061' 008A'              	movwf	?___flmul+2
  5750  0062' 3000               	movlw	0
  5751  0063' 0089'              	movwf	?___flmul+1
  5752  0064' 3000               	movlw	0
  5753  0065' 0088'              	movwf	?___flmul
  5754  0066' 2800'              	goto	l797
  5755  0067'                    l3949:
  5756  0067' 0808'              	movf	___flmul@b,w
  5757  0068' 0082'              	movwf	__Umul8_16@multiplicand
  5758  0069' 080E'              	movf	___flmul@a+2,w
  5759  006A' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  5760  006F' 0803'              	movf	?__Umul8_16+1,w
  5761  0070' 1283               	bcf	3,5	;RP0=0, select bank0
  5762  0071' 1303               	bcf	3,6	;RP1=0, select bank0
  5763  0072' 00A1'              	movwf	___flmul@temp+1
  5764  0073' 0802'              	movf	?__Umul8_16,w
  5765  0074' 00A0'              	movwf	___flmul@temp
  5766  0075'                    l3951:
  5767  0075' 0820'              	movf	___flmul@temp,w
  5768  0076' 0090'              	movwf	??___flmul
  5769  0077' 0191'              	clrf	??___flmul+1
  5770  0078' 0192'              	clrf	??___flmul+2
  5771  0079' 0193'              	clrf	??___flmul+3
  5772  007A' 0813'              	movf	??___flmul+3,w
  5773  007B' 009A'              	movwf	___flmul@grs+3
  5774  007C' 0812'              	movf	??___flmul+2,w
  5775  007D' 0099'              	movwf	___flmul@grs+2
  5776  007E' 0811'              	movf	??___flmul+1,w
  5777  007F' 0098'              	movwf	___flmul@grs+1
  5778  0080' 0810'              	movf	??___flmul,w
  5779  0081' 0097'              	movwf	___flmul@grs
  5780  0082'                    l3953:
  5781  0082' 0821'              	movf	___flmul@temp+1,w
  5782  0083' 0090'              	movwf	??___flmul
  5783  0084' 0191'              	clrf	??___flmul+1
  5784  0085' 0192'              	clrf	??___flmul+2
  5785  0086' 0193'              	clrf	??___flmul+3
  5786  0087' 0813'              	movf	??___flmul+3,w
  5787  0088' 009F'              	movwf	___flmul@prod+3
  5788  0089' 0812'              	movf	??___flmul+2,w
  5789  008A' 009E'              	movwf	___flmul@prod+2
  5790  008B' 0811'              	movf	??___flmul+1,w
  5791  008C' 009D'              	movwf	___flmul@prod+1
  5792  008D' 0810'              	movf	??___flmul,w
  5793  008E' 009C'              	movwf	___flmul@prod
  5794  008F' 0809'              	movf	___flmul@b+1,w
  5795  0090' 0082'              	movwf	__Umul8_16@multiplicand
  5796  0091' 080D'              	movf	___flmul@a+1,w
  5797  0092' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  5798  0097' 0803'              	movf	?__Umul8_16+1,w
  5799  0098' 1283               	bcf	3,5	;RP0=0, select bank0
  5800  0099' 1303               	bcf	3,6	;RP1=0, select bank0
  5801  009A' 00A1'              	movwf	___flmul@temp+1
  5802  009B' 0802'              	movf	?__Umul8_16,w
  5803  009C' 00A0'              	movwf	___flmul@temp
  5804  009D'                    l3955:
  5805  009D' 0820'              	movf	___flmul@temp,w
  5806  009E' 0090'              	movwf	??___flmul
  5807  009F' 0191'              	clrf	??___flmul+1
  5808  00A0' 0192'              	clrf	??___flmul+2
  5809  00A1' 0193'              	clrf	??___flmul+3
  5810  00A2' 0810'              	movf	??___flmul,w
  5811  00A3' 0797'              	addwf	___flmul@grs,f
  5812  00A4' 0811'              	movf	??___flmul+1,w
  5813  00A5' 1103               	clrz
  5814  00A6' 1803               	skipnc
  5815  00A7' 3E01               	addlw	1
  5816  00A8' 1903               	skipnz
  5817  00A9' 2800'              	goto	u6481
  5818  00AA' 0798'              	addwf	___flmul@grs+1,f
  5819  00AB'                    u6481:
  5820  00AB' 0812'              	movf	??___flmul+2,w
  5821  00AC' 1103               	clrz
  5822  00AD' 1803               	skipnc
  5823  00AE' 3E01               	addlw	1
  5824  00AF' 1903               	skipnz
  5825  00B0' 2800'              	goto	u6482
  5826  00B1' 0799'              	addwf	___flmul@grs+2,f
  5827  00B2'                    u6482:
  5828  00B2' 0813'              	movf	??___flmul+3,w
  5829  00B3' 1103               	clrz
  5830  00B4' 1803               	skipnc
  5831  00B5' 3E01               	addlw	1
  5832  00B6' 1903               	skipnz
  5833  00B7' 2800'              	goto	u6483
  5834  00B8' 079A'              	addwf	___flmul@grs+3,f
  5835  00B9'                    u6483:
  5836  00B9'                    l3957:
  5837  00B9' 0821'              	movf	___flmul@temp+1,w
  5838  00BA' 0090'              	movwf	??___flmul
  5839  00BB' 0191'              	clrf	??___flmul+1
  5840  00BC' 0192'              	clrf	??___flmul+2
  5841  00BD' 0193'              	clrf	??___flmul+3
  5842  00BE' 0810'              	movf	??___flmul,w
  5843  00BF' 079C'              	addwf	___flmul@prod,f
  5844  00C0' 0811'              	movf	??___flmul+1,w
  5845  00C1' 1103               	clrz
  5846  00C2' 1803               	skipnc
  5847  00C3' 3E01               	addlw	1
  5848  00C4' 1903               	skipnz
  5849  00C5' 2800'              	goto	u6491
  5850  00C6' 079D'              	addwf	___flmul@prod+1,f
  5851  00C7'                    u6491:
  5852  00C7' 0812'              	movf	??___flmul+2,w
  5853  00C8' 1103               	clrz
  5854  00C9' 1803               	skipnc
  5855  00CA' 3E01               	addlw	1
  5856  00CB' 1903               	skipnz
  5857  00CC' 2800'              	goto	u6492
  5858  00CD' 079E'              	addwf	___flmul@prod+2,f
  5859  00CE'                    u6492:
  5860  00CE' 0813'              	movf	??___flmul+3,w
  5861  00CF' 1103               	clrz
  5862  00D0' 1803               	skipnc
  5863  00D1' 3E01               	addlw	1
  5864  00D2' 1903               	skipnz
  5865  00D3' 2800'              	goto	u6493
  5866  00D4' 079F'              	addwf	___flmul@prod+3,f
  5867  00D5'                    u6493:
  5868  00D5' 080A'              	movf	___flmul@b+2,w
  5869  00D6' 0082'              	movwf	__Umul8_16@multiplicand
  5870  00D7' 080C'              	movf	___flmul@a,w
  5871  00D8' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  5872  00DD' 0803'              	movf	?__Umul8_16+1,w
  5873  00DE' 1283               	bcf	3,5	;RP0=0, select bank0
  5874  00DF' 1303               	bcf	3,6	;RP1=0, select bank0
  5875  00E0' 00A1'              	movwf	___flmul@temp+1
  5876  00E1' 0802'              	movf	?__Umul8_16,w
  5877  00E2' 00A0'              	movwf	___flmul@temp
  5878  00E3'                    l3959:
  5879  00E3' 0820'              	movf	___flmul@temp,w
  5880  00E4' 0090'              	movwf	??___flmul
  5881  00E5' 0191'              	clrf	??___flmul+1
  5882  00E6' 0192'              	clrf	??___flmul+2
  5883  00E7' 0193'              	clrf	??___flmul+3
  5884  00E8' 0810'              	movf	??___flmul,w
  5885  00E9' 0797'              	addwf	___flmul@grs,f
  5886  00EA' 0811'              	movf	??___flmul+1,w
  5887  00EB' 1103               	clrz
  5888  00EC' 1803               	skipnc
  5889  00ED' 3E01               	addlw	1
  5890  00EE' 1903               	skipnz
  5891  00EF' 2800'              	goto	u6501
  5892  00F0' 0798'              	addwf	___flmul@grs+1,f
  5893  00F1'                    u6501:
  5894  00F1' 0812'              	movf	??___flmul+2,w
  5895  00F2' 1103               	clrz
  5896  00F3' 1803               	skipnc
  5897  00F4' 3E01               	addlw	1
  5898  00F5' 1903               	skipnz
  5899  00F6' 2800'              	goto	u6502
  5900  00F7' 0799'              	addwf	___flmul@grs+2,f
  5901  00F8'                    u6502:
  5902  00F8' 0813'              	movf	??___flmul+3,w
  5903  00F9' 1103               	clrz
  5904  00FA' 1803               	skipnc
  5905  00FB' 3E01               	addlw	1
  5906  00FC' 1903               	skipnz
  5907  00FD' 2800'              	goto	u6503
  5908  00FE' 079A'              	addwf	___flmul@grs+3,f
  5909  00FF'                    u6503:
  5910  00FF'                    l3961:
  5911  00FF' 0821'              	movf	___flmul@temp+1,w
  5912  0100' 0090'              	movwf	??___flmul
  5913  0101' 0191'              	clrf	??___flmul+1
  5914  0102' 0192'              	clrf	??___flmul+2
  5915  0103' 0193'              	clrf	??___flmul+3
  5916  0104' 0810'              	movf	??___flmul,w
  5917  0105' 079C'              	addwf	___flmul@prod,f
  5918  0106' 0811'              	movf	??___flmul+1,w
  5919  0107' 1103               	clrz
  5920  0108' 1803               	skipnc
  5921  0109' 3E01               	addlw	1
  5922  010A' 1903               	skipnz
  5923  010B' 2800'              	goto	u6511
  5924  010C' 079D'              	addwf	___flmul@prod+1,f
  5925  010D'                    u6511:
  5926  010D' 0812'              	movf	??___flmul+2,w
  5927  010E' 1103               	clrz
  5928  010F' 1803               	skipnc
  5929  0110' 3E01               	addlw	1
  5930  0111' 1903               	skipnz
  5931  0112' 2800'              	goto	u6512
  5932  0113' 079E'              	addwf	___flmul@prod+2,f
  5933  0114'                    u6512:
  5934  0114' 0813'              	movf	??___flmul+3,w
  5935  0115' 1103               	clrz
  5936  0116' 1803               	skipnc
  5937  0117' 3E01               	addlw	1
  5938  0118' 1903               	skipnz
  5939  0119' 2800'              	goto	u6513
  5940  011A' 079F'              	addwf	___flmul@prod+3,f
  5941  011B'                    u6513:
  5942  011B'                    l3963:
  5943  011B' 3008               	movlw	8
  5944  011C' 0090'              	movwf	??___flmul
  5945  011D'                    u6525:
  5946  011D' 1003               	clrc
  5947  011E' 0D97'              	rlf	___flmul@grs,f
  5948  011F' 0D98'              	rlf	___flmul@grs+1,f
  5949  0120' 0D99'              	rlf	___flmul@grs+2,f
  5950  0121' 0D9A'              	rlf	___flmul@grs+3,f
  5951  0122' 0B90'              	decfsz	??___flmul,f
  5952  0123' 2800'              	goto	u6525
  5953  0124'                    l3965:
  5954  0124' 0809'              	movf	___flmul@b+1,w
  5955  0125' 0082'              	movwf	__Umul8_16@multiplicand
  5956  0126' 080C'              	movf	___flmul@a,w
  5957  0127' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  5958  012C' 0803'              	movf	?__Umul8_16+1,w
  5959  012D' 1283               	bcf	3,5	;RP0=0, select bank0
  5960  012E' 1303               	bcf	3,6	;RP1=0, select bank0
  5961  012F' 00A1'              	movwf	___flmul@temp+1
  5962  0130' 0802'              	movf	?__Umul8_16,w
  5963  0131' 00A0'              	movwf	___flmul@temp
  5964  0132'                    l3967:
  5965  0132' 0820'              	movf	___flmul@temp,w
  5966  0133' 0090'              	movwf	??___flmul
  5967  0134' 0821'              	movf	___flmul@temp+1,w
  5968  0135' 0091'              	movwf	??___flmul+1
  5969  0136' 0192'              	clrf	??___flmul+2
  5970  0137' 0193'              	clrf	??___flmul+3
  5971  0138' 0810'              	movf	??___flmul,w
  5972  0139' 0797'              	addwf	___flmul@grs,f
  5973  013A' 0811'              	movf	??___flmul+1,w
  5974  013B' 1103               	clrz
  5975  013C' 1803               	skipnc
  5976  013D' 3E01               	addlw	1
  5977  013E' 1903               	skipnz
  5978  013F' 2800'              	goto	u6531
  5979  0140' 0798'              	addwf	___flmul@grs+1,f
  5980  0141'                    u6531:
  5981  0141' 0812'              	movf	??___flmul+2,w
  5982  0142' 1103               	clrz
  5983  0143' 1803               	skipnc
  5984  0144' 3E01               	addlw	1
  5985  0145' 1903               	skipnz
  5986  0146' 2800'              	goto	u6532
  5987  0147' 0799'              	addwf	___flmul@grs+2,f
  5988  0148'                    u6532:
  5989  0148' 0813'              	movf	??___flmul+3,w
  5990  0149' 1103               	clrz
  5991  014A' 1803               	skipnc
  5992  014B' 3E01               	addlw	1
  5993  014C' 1903               	skipnz
  5994  014D' 2800'              	goto	u6533
  5995  014E' 079A'              	addwf	___flmul@grs+3,f
  5996  014F'                    u6533:
  5997  014F'                    l3969:
  5998  014F' 0808'              	movf	___flmul@b,w
  5999  0150' 0082'              	movwf	__Umul8_16@multiplicand
  6000  0151' 080D'              	movf	___flmul@a+1,w
  6001  0152' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  6002  0157' 0803'              	movf	?__Umul8_16+1,w
  6003  0158' 1283               	bcf	3,5	;RP0=0, select bank0
  6004  0159' 1303               	bcf	3,6	;RP1=0, select bank0
  6005  015A' 00A1'              	movwf	___flmul@temp+1
  6006  015B' 0802'              	movf	?__Umul8_16,w
  6007  015C' 00A0'              	movwf	___flmul@temp
  6008  015D'                    l3971:
  6009  015D' 0820'              	movf	___flmul@temp,w
  6010  015E' 0090'              	movwf	??___flmul
  6011  015F' 0821'              	movf	___flmul@temp+1,w
  6012  0160' 0091'              	movwf	??___flmul+1
  6013  0161' 0192'              	clrf	??___flmul+2
  6014  0162' 0193'              	clrf	??___flmul+3
  6015  0163' 0810'              	movf	??___flmul,w
  6016  0164' 0797'              	addwf	___flmul@grs,f
  6017  0165' 0811'              	movf	??___flmul+1,w
  6018  0166' 1103               	clrz
  6019  0167' 1803               	skipnc
  6020  0168' 3E01               	addlw	1
  6021  0169' 1903               	skipnz
  6022  016A' 2800'              	goto	u6541
  6023  016B' 0798'              	addwf	___flmul@grs+1,f
  6024  016C'                    u6541:
  6025  016C' 0812'              	movf	??___flmul+2,w
  6026  016D' 1103               	clrz
  6027  016E' 1803               	skipnc
  6028  016F' 3E01               	addlw	1
  6029  0170' 1903               	skipnz
  6030  0171' 2800'              	goto	u6542
  6031  0172' 0799'              	addwf	___flmul@grs+2,f
  6032  0173'                    u6542:
  6033  0173' 0813'              	movf	??___flmul+3,w
  6034  0174' 1103               	clrz
  6035  0175' 1803               	skipnc
  6036  0176' 3E01               	addlw	1
  6037  0177' 1903               	skipnz
  6038  0178' 2800'              	goto	u6543
  6039  0179' 079A'              	addwf	___flmul@grs+3,f
  6040  017A'                    u6543:
  6041  017A'                    l3973:
  6042  017A' 3008               	movlw	8
  6043  017B' 0090'              	movwf	??___flmul
  6044  017C'                    u6555:
  6045  017C' 1003               	clrc
  6046  017D' 0D97'              	rlf	___flmul@grs,f
  6047  017E' 0D98'              	rlf	___flmul@grs+1,f
  6048  017F' 0D99'              	rlf	___flmul@grs+2,f
  6049  0180' 0D9A'              	rlf	___flmul@grs+3,f
  6050  0181' 0B90'              	decfsz	??___flmul,f
  6051  0182' 2800'              	goto	u6555
  6052  0183' 0808'              	movf	___flmul@b,w
  6053  0184' 0082'              	movwf	__Umul8_16@multiplicand
  6054  0185' 080C'              	movf	___flmul@a,w
  6055  0186' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  6056  018B' 0803'              	movf	?__Umul8_16+1,w
  6057  018C' 1283               	bcf	3,5	;RP0=0, select bank0
  6058  018D' 1303               	bcf	3,6	;RP1=0, select bank0
  6059  018E' 00A1'              	movwf	___flmul@temp+1
  6060  018F' 0802'              	movf	?__Umul8_16,w
  6061  0190' 00A0'              	movwf	___flmul@temp
  6062  0191'                    l3975:
  6063  0191' 0820'              	movf	___flmul@temp,w
  6064  0192' 0090'              	movwf	??___flmul
  6065  0193' 0821'              	movf	___flmul@temp+1,w
  6066  0194' 0091'              	movwf	??___flmul+1
  6067  0195' 0192'              	clrf	??___flmul+2
  6068  0196' 0193'              	clrf	??___flmul+3
  6069  0197' 0810'              	movf	??___flmul,w
  6070  0198' 0797'              	addwf	___flmul@grs,f
  6071  0199' 0811'              	movf	??___flmul+1,w
  6072  019A' 1103               	clrz
  6073  019B' 1803               	skipnc
  6074  019C' 3E01               	addlw	1
  6075  019D' 1903               	skipnz
  6076  019E' 2800'              	goto	u6561
  6077  019F' 0798'              	addwf	___flmul@grs+1,f
  6078  01A0'                    u6561:
  6079  01A0' 0812'              	movf	??___flmul+2,w
  6080  01A1' 1103               	clrz
  6081  01A2' 1803               	skipnc
  6082  01A3' 3E01               	addlw	1
  6083  01A4' 1903               	skipnz
  6084  01A5' 2800'              	goto	u6562
  6085  01A6' 0799'              	addwf	___flmul@grs+2,f
  6086  01A7'                    u6562:
  6087  01A7' 0813'              	movf	??___flmul+3,w
  6088  01A8' 1103               	clrz
  6089  01A9' 1803               	skipnc
  6090  01AA' 3E01               	addlw	1
  6091  01AB' 1903               	skipnz
  6092  01AC' 2800'              	goto	u6563
  6093  01AD' 079A'              	addwf	___flmul@grs+3,f
  6094  01AE'                    u6563:
  6095  01AE'                    l3977:
  6096  01AE' 0809'              	movf	___flmul@b+1,w
  6097  01AF' 0082'              	movwf	__Umul8_16@multiplicand
  6098  01B0' 080E'              	movf	___flmul@a+2,w
  6099  01B1' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  6100  01B6' 0803'              	movf	?__Umul8_16+1,w
  6101  01B7' 1283               	bcf	3,5	;RP0=0, select bank0
  6102  01B8' 1303               	bcf	3,6	;RP1=0, select bank0
  6103  01B9' 00A1'              	movwf	___flmul@temp+1
  6104  01BA' 0802'              	movf	?__Umul8_16,w
  6105  01BB' 00A0'              	movwf	___flmul@temp
  6106  01BC' 0820'              	movf	___flmul@temp,w
  6107  01BD' 0090'              	movwf	??___flmul
  6108  01BE' 0821'              	movf	___flmul@temp+1,w
  6109  01BF' 0091'              	movwf	??___flmul+1
  6110  01C0' 0192'              	clrf	??___flmul+2
  6111  01C1' 0193'              	clrf	??___flmul+3
  6112  01C2' 0810'              	movf	??___flmul,w
  6113  01C3' 079C'              	addwf	___flmul@prod,f
  6114  01C4' 0811'              	movf	??___flmul+1,w
  6115  01C5' 1103               	clrz
  6116  01C6' 1803               	skipnc
  6117  01C7' 3E01               	addlw	1
  6118  01C8' 1903               	skipnz
  6119  01C9' 2800'              	goto	u6571
  6120  01CA' 079D'              	addwf	___flmul@prod+1,f
  6121  01CB'                    u6571:
  6122  01CB' 0812'              	movf	??___flmul+2,w
  6123  01CC' 1103               	clrz
  6124  01CD' 1803               	skipnc
  6125  01CE' 3E01               	addlw	1
  6126  01CF' 1903               	skipnz
  6127  01D0' 2800'              	goto	u6572
  6128  01D1' 079E'              	addwf	___flmul@prod+2,f
  6129  01D2'                    u6572:
  6130  01D2' 0813'              	movf	??___flmul+3,w
  6131  01D3' 1103               	clrz
  6132  01D4' 1803               	skipnc
  6133  01D5' 3E01               	addlw	1
  6134  01D6' 1903               	skipnz
  6135  01D7' 2800'              	goto	u6573
  6136  01D8' 079F'              	addwf	___flmul@prod+3,f
  6137  01D9'                    u6573:
  6138  01D9'                    l3979:
  6139  01D9' 080A'              	movf	___flmul@b+2,w
  6140  01DA' 0082'              	movwf	__Umul8_16@multiplicand
  6141  01DB' 080D'              	movf	___flmul@a+1,w
  6142  01DC' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  6143  01E1' 0803'              	movf	?__Umul8_16+1,w
  6144  01E2' 1283               	bcf	3,5	;RP0=0, select bank0
  6145  01E3' 1303               	bcf	3,6	;RP1=0, select bank0
  6146  01E4' 00A1'              	movwf	___flmul@temp+1
  6147  01E5' 0802'              	movf	?__Umul8_16,w
  6148  01E6' 00A0'              	movwf	___flmul@temp
  6149  01E7'                    l3981:
  6150  01E7' 0820'              	movf	___flmul@temp,w
  6151  01E8' 0090'              	movwf	??___flmul
  6152  01E9' 0821'              	movf	___flmul@temp+1,w
  6153  01EA' 0091'              	movwf	??___flmul+1
  6154  01EB' 0192'              	clrf	??___flmul+2
  6155  01EC' 0193'              	clrf	??___flmul+3
  6156  01ED' 0810'              	movf	??___flmul,w
  6157  01EE' 079C'              	addwf	___flmul@prod,f
  6158  01EF' 0811'              	movf	??___flmul+1,w
  6159  01F0' 1103               	clrz
  6160  01F1' 1803               	skipnc
  6161  01F2' 3E01               	addlw	1
  6162  01F3' 1903               	skipnz
  6163  01F4' 2800'              	goto	u6581
  6164  01F5' 079D'              	addwf	___flmul@prod+1,f
  6165  01F6'                    u6581:
  6166  01F6' 0812'              	movf	??___flmul+2,w
  6167  01F7' 1103               	clrz
  6168  01F8' 1803               	skipnc
  6169  01F9' 3E01               	addlw	1
  6170  01FA' 1903               	skipnz
  6171  01FB' 2800'              	goto	u6582
  6172  01FC' 079E'              	addwf	___flmul@prod+2,f
  6173  01FD'                    u6582:
  6174  01FD' 0813'              	movf	??___flmul+3,w
  6175  01FE' 1103               	clrz
  6176  01FF' 1803               	skipnc
  6177  0200' 3E01               	addlw	1
  6178  0201' 1903               	skipnz
  6179  0202' 2800'              	goto	u6583
  6180  0203' 079F'              	addwf	___flmul@prod+3,f
  6181  0204'                    u6583:
  6182  0204' 080A'              	movf	___flmul@b+2,w
  6183  0205' 0082'              	movwf	__Umul8_16@multiplicand
  6184  0206' 080E'              	movf	___flmul@a+2,w
  6185  0207' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  6186  020C' 0803'              	movf	?__Umul8_16+1,w
  6187  020D' 1283               	bcf	3,5	;RP0=0, select bank0
  6188  020E' 1303               	bcf	3,6	;RP1=0, select bank0
  6189  020F' 00A1'              	movwf	___flmul@temp+1
  6190  0210' 0802'              	movf	?__Umul8_16,w
  6191  0211' 00A0'              	movwf	___flmul@temp
  6192  0212'                    l3983:
  6193  0212' 0820'              	movf	___flmul@temp,w
  6194  0213' 0090'              	movwf	??___flmul
  6195  0214' 0821'              	movf	___flmul@temp+1,w
  6196  0215' 0091'              	movwf	??___flmul+1
  6197  0216' 0192'              	clrf	??___flmul+2
  6198  0217' 0193'              	clrf	??___flmul+3
  6199  0218' 3008               	movlw	8
  6200  0219'                    u6595:
  6201  0219' 1003               	clrc
  6202  021A' 0D90'              	rlf	??___flmul,f
  6203  021B' 0D91'              	rlf	??___flmul+1,f
  6204  021C' 0D92'              	rlf	??___flmul+2,f
  6205  021D' 0D93'              	rlf	??___flmul+3,f
  6206  021E'                    u6590:
  6207  021E' 3EFF               	addlw	-1
  6208  021F' 1D03               	skipz
  6209  0220' 2800'              	goto	u6595
  6210  0221' 0810'              	movf	??___flmul,w
  6211  0222' 079C'              	addwf	___flmul@prod,f
  6212  0223' 0811'              	movf	??___flmul+1,w
  6213  0224' 1103               	clrz
  6214  0225' 1803               	skipnc
  6215  0226' 3E01               	addlw	1
  6216  0227' 1903               	skipnz
  6217  0228' 2800'              	goto	u6601
  6218  0229' 079D'              	addwf	___flmul@prod+1,f
  6219  022A'                    u6601:
  6220  022A' 0812'              	movf	??___flmul+2,w
  6221  022B' 1103               	clrz
  6222  022C' 1803               	skipnc
  6223  022D' 3E01               	addlw	1
  6224  022E' 1903               	skipnz
  6225  022F' 2800'              	goto	u6602
  6226  0230' 079E'              	addwf	___flmul@prod+2,f
  6227  0231'                    u6602:
  6228  0231' 0813'              	movf	??___flmul+3,w
  6229  0232' 1103               	clrz
  6230  0233' 1803               	skipnc
  6231  0234' 3E01               	addlw	1
  6232  0235' 1903               	skipnz
  6233  0236' 2800'              	goto	u6603
  6234  0237' 079F'              	addwf	___flmul@prod+3,f
  6235  0238'                    u6603:
  6236  0238'                    l3985:
  6237  0238' 0817'              	movf	___flmul@grs,w
  6238  0239' 0090'              	movwf	??___flmul
  6239  023A' 0818'              	movf	___flmul@grs+1,w
  6240  023B' 0091'              	movwf	??___flmul+1
  6241  023C' 0819'              	movf	___flmul@grs+2,w
  6242  023D' 0092'              	movwf	??___flmul+2
  6243  023E' 081A'              	movf	___flmul@grs+3,w
  6244  023F' 0093'              	movwf	??___flmul+3
  6245  0240' 3018               	movlw	24
  6246  0241'                    u6615:
  6247  0241' 1003               	clrc
  6248  0242' 0C93'              	rrf	??___flmul+3,f
  6249  0243' 0C92'              	rrf	??___flmul+2,f
  6250  0244' 0C91'              	rrf	??___flmul+1,f
  6251  0245' 0C90'              	rrf	??___flmul,f
  6252  0246'                    u6610:
  6253  0246' 3EFF               	addlw	-1
  6254  0247' 1D03               	skipz
  6255  0248' 2800'              	goto	u6615
  6256  0249' 0810'              	movf	??___flmul,w
  6257  024A' 079C'              	addwf	___flmul@prod,f
  6258  024B' 0811'              	movf	??___flmul+1,w
  6259  024C' 1103               	clrz
  6260  024D' 1803               	skipnc
  6261  024E' 3E01               	addlw	1
  6262  024F' 1903               	skipnz
  6263  0250' 2800'              	goto	u6621
  6264  0251' 079D'              	addwf	___flmul@prod+1,f
  6265  0252'                    u6621:
  6266  0252' 0812'              	movf	??___flmul+2,w
  6267  0253' 1103               	clrz
  6268  0254' 1803               	skipnc
  6269  0255' 3E01               	addlw	1
  6270  0256' 1903               	skipnz
  6271  0257' 2800'              	goto	u6622
  6272  0258' 079E'              	addwf	___flmul@prod+2,f
  6273  0259'                    u6622:
  6274  0259' 0813'              	movf	??___flmul+3,w
  6275  025A' 1103               	clrz
  6276  025B' 1803               	skipnc
  6277  025C' 3E01               	addlw	1
  6278  025D' 1903               	skipnz
  6279  025E' 2800'              	goto	u6623
  6280  025F' 079F'              	addwf	___flmul@prod+3,f
  6281  0260'                    u6623:
  6282  0260'                    l3987:
  6283  0260' 3008               	movlw	8
  6284  0261' 0090'              	movwf	??___flmul
  6285  0262'                    u6635:
  6286  0262' 1003               	clrc
  6287  0263' 0D97'              	rlf	___flmul@grs,f
  6288  0264' 0D98'              	rlf	___flmul@grs+1,f
  6289  0265' 0D99'              	rlf	___flmul@grs+2,f
  6290  0266' 0D9A'              	rlf	___flmul@grs+3,f
  6291  0267' 0B90'              	decfsz	??___flmul,f
  6292  0268' 2800'              	goto	u6635
  6293  0269'                    l3989:
  6294  0269' 081B'              	movf	___flmul@bexp,w
  6295  026A' 0716'              	addwf	___flmul@aexp,w
  6296  026B' 0090'              	movwf	??___flmul
  6297  026C' 0191'              	clrf	??___flmul+1
  6298  026D' 0D91'              	rlf	??___flmul+1,f
  6299  026E' 0810'              	movf	??___flmul,w
  6300  026F' 3E82               	addlw	130
  6301  0270' 00A0'              	movwf	___flmul@temp
  6302  0271' 0811'              	movf	??___flmul+1,w
  6303  0272' 1803               	skipnc
  6304  0273' 3E01               	addlw	1
  6305  0274' 3EFF               	addlw	255
  6306  0275' 00A1'              	movwf	___flmul@temp+1
  6307  0276' 2800'              	goto	l4001
  6308  0277'                    l3991:
  6309  0277' 3001               	movlw	1
  6310  0278' 0090'              	movwf	??___flmul
  6311  0279'                    u6645:
  6312  0279' 1003               	clrc
  6313  027A' 0D9C'              	rlf	___flmul@prod,f
  6314  027B' 0D9D'              	rlf	___flmul@prod+1,f
  6315  027C' 0D9E'              	rlf	___flmul@prod+2,f
  6316  027D' 0D9F'              	rlf	___flmul@prod+3,f
  6317  027E' 0B90'              	decfsz	??___flmul,f
  6318  027F' 2800'              	goto	u6645
  6319  0280'                    l3993:
  6320  0280' 1F9A'              	btfss	___flmul@grs+3,7
  6321  0281' 2800'              	goto	u6651
  6322  0282' 2800'              	goto	u6650
  6323  0283'                    u6651:
  6324  0283' 2800'              	goto	l3997
  6325  0284'                    u6650:
  6326  0284'                    l3995:
  6327  0284' 141C'              	bsf	___flmul@prod,0
  6328  0285'                    l3997:
  6329  0285' 3001               	movlw	1
  6330  0286' 0090'              	movwf	??___flmul
  6331  0287'                    u6665:
  6332  0287' 1003               	clrc
  6333  0288' 0D97'              	rlf	___flmul@grs,f
  6334  0289' 0D98'              	rlf	___flmul@grs+1,f
  6335  028A' 0D99'              	rlf	___flmul@grs+2,f
  6336  028B' 0D9A'              	rlf	___flmul@grs+3,f
  6337  028C' 0B90'              	decfsz	??___flmul,f
  6338  028D' 2800'              	goto	u6665
  6339  028E'                    l3999:
  6340  028E' 30FF               	movlw	255
  6341  028F' 07A0'              	addwf	___flmul@temp,f
  6342  0290' 1803               	skipnc
  6343  0291' 0AA1'              	incf	___flmul@temp+1,f
  6344  0292' 30FF               	movlw	255
  6345  0293' 07A1'              	addwf	___flmul@temp+1,f
  6346  0294'                    l4001:
  6347  0294' 1F9E'              	btfss	___flmul@prod+2,7
  6348  0295' 2800'              	goto	u6671
  6349  0296' 2800'              	goto	u6670
  6350  0297'                    u6671:
  6351  0297' 2800'              	goto	l3991
  6352  0298'                    u6670:
  6353  0298'                    l4003:
  6354  0298' 0196'              	clrf	___flmul@aexp
  6355  0299'                    l4005:
  6356  0299' 1F9A'              	btfss	___flmul@grs+3,7
  6357  029A' 2800'              	goto	u6681
  6358  029B' 2800'              	goto	u6680
  6359  029C'                    u6681:
  6360  029C' 2800'              	goto	l4013
  6361  029D'                    u6680:
  6362  029D'                    l4007:
  6363  029D' 30FF               	movlw	255
  6364  029E' 0517'              	andwf	___flmul@grs,w
  6365  029F' 0090'              	movwf	??___flmul
  6366  02A0' 30FF               	movlw	255
  6367  02A1' 0518'              	andwf	___flmul@grs+1,w
  6368  02A2' 0091'              	movwf	??___flmul+1
  6369  02A3' 30FF               	movlw	255
  6370  02A4' 0519'              	andwf	___flmul@grs+2,w
  6371  02A5' 0092'              	movwf	??___flmul+2
  6372  02A6' 307F               	movlw	127
  6373  02A7' 051A'              	andwf	___flmul@grs+3,w
  6374  02A8' 0093'              	movwf	??___flmul+3
  6375  02A9' 0813'              	movf	??___flmul+3,w
  6376  02AA' 0412'              	iorwf	??___flmul+2,w
  6377  02AB' 0411'              	iorwf	??___flmul+1,w
  6378  02AC' 0410'              	iorwf	??___flmul,w
  6379  02AD' 1903               	skipnz
  6380  02AE' 2800'              	goto	u6691
  6381  02AF' 2800'              	goto	u6690
  6382  02B0'                    u6691:
  6383  02B0' 2800'              	goto	l803
  6384  02B1'                    u6690:
  6385  02B1'                    l4009:
  6386  02B1' 0196'              	clrf	___flmul@aexp
  6387  02B2' 0A96'              	incf	___flmul@aexp,f
  6388  02B3' 2800'              	goto	l4013
  6389  02B4'                    l803:
  6390  02B4' 1C1C'              	btfss	___flmul@prod,0
  6391  02B5' 2800'              	goto	u6701
  6392  02B6' 2800'              	goto	u6700
  6393  02B7'                    u6701:
  6394  02B7' 2800'              	goto	l4013
  6395  02B8'                    u6700:
  6396  02B8' 2800'              	goto	l4009
  6397  02B9'                    l4013:
  6398  02B9' 0816'              	movf	___flmul@aexp,w
  6399  02BA' 1903               	btfsc	3,2
  6400  02BB' 2800'              	goto	u6711
  6401  02BC' 2800'              	goto	u6710
  6402  02BD'                    u6711:
  6403  02BD' 2800'              	goto	l4023
  6404  02BE'                    u6710:
  6405  02BE'                    l4015:
  6406  02BE' 3001               	movlw	1
  6407  02BF' 079C'              	addwf	___flmul@prod,f
  6408  02C0' 3000               	movlw	0
  6409  02C1' 1803               	skipnc
  6410  02C2' 3001               	movlw	1
  6411  02C3' 079D'              	addwf	___flmul@prod+1,f
  6412  02C4' 3000               	movlw	0
  6413  02C5' 1803               	skipnc
  6414  02C6' 3001               	movlw	1
  6415  02C7' 079E'              	addwf	___flmul@prod+2,f
  6416  02C8' 3000               	movlw	0
  6417  02C9' 1803               	skipnc
  6418  02CA' 3001               	movlw	1
  6419  02CB' 079F'              	addwf	___flmul@prod+3,f
  6420  02CC'                    l4017:
  6421  02CC' 1C1F'              	btfss	___flmul@prod+3,0
  6422  02CD' 2800'              	goto	u6721
  6423  02CE' 2800'              	goto	u6720
  6424  02CF'                    u6721:
  6425  02CF' 2800'              	goto	l4023
  6426  02D0'                    u6720:
  6427  02D0'                    l4019:
  6428  02D0' 081C'              	movf	___flmul@prod,w
  6429  02D1' 0090'              	movwf	??___flmul
  6430  02D2' 081D'              	movf	___flmul@prod+1,w
  6431  02D3' 0091'              	movwf	??___flmul+1
  6432  02D4' 081E'              	movf	___flmul@prod+2,w
  6433  02D5' 0092'              	movwf	??___flmul+2
  6434  02D6' 081F'              	movf	___flmul@prod+3,w
  6435  02D7' 0093'              	movwf	??___flmul+3
  6436  02D8' 3001               	movlw	1
  6437  02D9' 0094'              	movwf	??___flmul+4
  6438  02DA'                    u6735:
  6439  02DA' 0D13'              	rlf	??___flmul+3,w
  6440  02DB' 0C93'              	rrf	??___flmul+3,f
  6441  02DC' 0C92'              	rrf	??___flmul+2,f
  6442  02DD' 0C91'              	rrf	??___flmul+1,f
  6443  02DE' 0C90'              	rrf	??___flmul,f
  6444  02DF'                    u6730:
  6445  02DF' 0B94'              	decfsz	??___flmul+4,f
  6446  02E0' 2800'              	goto	u6735
  6447  02E1' 0813'              	movf	??___flmul+3,w
  6448  02E2' 009F'              	movwf	___flmul@prod+3
  6449  02E3' 0812'              	movf	??___flmul+2,w
  6450  02E4' 009E'              	movwf	___flmul@prod+2
  6451  02E5' 0811'              	movf	??___flmul+1,w
  6452  02E6' 009D'              	movwf	___flmul@prod+1
  6453  02E7' 0810'              	movf	??___flmul,w
  6454  02E8' 009C'              	movwf	___flmul@prod
  6455  02E9'                    l4021:
  6456  02E9' 3001               	movlw	1
  6457  02EA' 07A0'              	addwf	___flmul@temp,f
  6458  02EB' 1803               	skipnc
  6459  02EC' 0AA1'              	incf	___flmul@temp+1,f
  6460  02ED' 3000               	movlw	0
  6461  02EE' 07A1'              	addwf	___flmul@temp+1,f
  6462  02EF'                    l4023:
  6463  02EF' 0821'              	movf	___flmul@temp+1,w
  6464  02F0' 3A80               	xorlw	128
  6465  02F1' 00FF               	movwf	btemp+1
  6466  02F2' 3080               	movlw	128
  6467  02F3' 027F               	subwf	btemp+1,w
  6468  02F4' 1D03               	skipz
  6469  02F5' 2800'              	goto	u6745
  6470  02F6' 30FF               	movlw	255
  6471  02F7' 0220'              	subwf	___flmul@temp,w
  6472  02F8'                    u6745:
  6473  02F8' 1C03               	skipc
  6474  02F9' 2800'              	goto	u6741
  6475  02FA' 2800'              	goto	u6740
  6476  02FB'                    u6741:
  6477  02FB' 2800'              	goto	l4027
  6478  02FC'                    u6740:
  6479  02FC'                    l4025:
  6480  02FC' 307F               	movlw	127
  6481  02FD' 1283               	bcf	3,5	;RP0=0, select bank0
  6482  02FE' 1303               	bcf	3,6	;RP1=0, select bank0
  6483  02FF' 009F'              	movwf	___flmul@prod+3
  6484  0300' 3080               	movlw	128
  6485  0301' 009E'              	movwf	___flmul@prod+2
  6486  0302' 3000               	movlw	0
  6487  0303' 009D'              	movwf	___flmul@prod+1
  6488  0304' 3000               	movlw	0
  6489  0305' 009C'              	movwf	___flmul@prod
  6490  0306' 2800'              	goto	l809
  6491  0307'                    l4027:
  6492  0307' 1283               	bcf	3,5	;RP0=0, select bank0
  6493  0308' 1303               	bcf	3,6	;RP1=0, select bank0
  6494  0309' 0821'              	movf	___flmul@temp+1,w
  6495  030A' 3A80               	xorlw	128
  6496  030B' 00FF               	movwf	btemp+1
  6497  030C' 3080               	movlw	128
  6498  030D' 027F               	subwf	btemp+1,w
  6499  030E' 1D03               	skipz
  6500  030F' 2800'              	goto	u6755
  6501  0310' 3001               	movlw	1
  6502  0311' 0220'              	subwf	___flmul@temp,w
  6503  0312'                    u6755:
  6504  0312' 1803               	skipnc
  6505  0313' 2800'              	goto	u6751
  6506  0314' 2800'              	goto	u6750
  6507  0315'                    u6751:
  6508  0315' 2800'              	goto	l4033
  6509  0316'                    u6750:
  6510  0316'                    l4029:
  6511  0316' 3000               	movlw	0
  6512  0317' 1283               	bcf	3,5	;RP0=0, select bank0
  6513  0318' 1303               	bcf	3,6	;RP1=0, select bank0
  6514  0319' 009F'              	movwf	___flmul@prod+3
  6515  031A' 3000               	movlw	0
  6516  031B' 009E'              	movwf	___flmul@prod+2
  6517  031C' 3000               	movlw	0
  6518  031D' 009D'              	movwf	___flmul@prod+1
  6519  031E' 3000               	movlw	0
  6520  031F' 009C'              	movwf	___flmul@prod
  6521  0320'                    l4031:
  6522  0320' 0195'              	clrf	___flmul@sign
  6523  0321' 2800'              	goto	l809
  6524  0322'                    l4033:
  6525  0322' 1283               	bcf	3,5	;RP0=0, select bank0
  6526  0323' 1303               	bcf	3,6	;RP1=0, select bank0
  6527  0324' 0820'              	movf	___flmul@temp,w
  6528  0325' 009B'              	movwf	___flmul@bexp
  6529  0326' 30FF               	movlw	255
  6530  0327' 059C'              	andwf	___flmul@prod,f
  6531  0328' 30FF               	movlw	255
  6532  0329' 059D'              	andwf	___flmul@prod+1,f
  6533  032A' 307F               	movlw	127
  6534  032B' 059E'              	andwf	___flmul@prod+2,f
  6535  032C' 3000               	movlw	0
  6536  032D' 059F'              	andwf	___flmul@prod+3,f
  6537  032E'                    l4035:
  6538  032E' 1C1B'              	btfss	___flmul@bexp,0
  6539  032F' 2800'              	goto	u6761
  6540  0330' 2800'              	goto	u6760
  6541  0331'                    u6761:
  6542  0331' 2800'              	goto	l4039
  6543  0332'                    u6760:
  6544  0332'                    l4037:
  6545  0332' 179E'              	bsf	___flmul@prod+2,7
  6546  0333'                    l4039:
  6547  0333' 081B'              	movf	___flmul@bexp,w
  6548  0334' 0090'              	movwf	??___flmul
  6549  0335' 1003               	clrc
  6550  0336' 0C10'              	rrf	??___flmul,w
  6551  0337' 009F'              	movwf	___flmul@prod+3
  6552  0338'                    l809:
  6553  0338' 0815'              	movf	___flmul@sign,w
  6554  0339' 0090'              	movwf	??___flmul
  6555  033A' 0810'              	movf	??___flmul,w
  6556  033B' 049F'              	iorwf	___flmul@prod+3,f
  6557  033C'                    l4041:
  6558  033C' 081F'              	movf	___flmul@prod+3,w
  6559  033D' 008B'              	movwf	?___flmul+3
  6560  033E' 081E'              	movf	___flmul@prod+2,w
  6561  033F' 008A'              	movwf	?___flmul+2
  6562  0340' 081D'              	movf	___flmul@prod+1,w
  6563  0341' 0089'              	movwf	?___flmul+1
  6564  0342' 081C'              	movf	___flmul@prod,w
  6565  0343' 0088'              	movwf	?___flmul
  6566  0344'                    l797:
  6567  0344' 0008               	return
  6568  0345'                    __end_of___flmul:
  6569                           
  6570                           	psect	text10
  6571  0000'                    __ptext10:	
  6572 ;; *************** function __Umul8_16 *****************
  6573 ;; Defined at:
  6574 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  6575 ;; Parameters:    Size  Location     Type
  6576 ;;  multiplier      1    wreg     unsigned char 
  6577 ;;  multiplicand    1    2[COMMON] unsigned char 
  6578 ;; Auto vars:     Size  Location     Type
  6579 ;;  multiplier      1    4[BANK0 ] unsigned char 
  6580 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  6581 ;;  product         2    0[BANK0 ] unsigned int 
  6582 ;; Return value:  Size  Location     Type
  6583 ;;                  2    2[COMMON] unsigned int 
  6584 ;; Registers used:
  6585 ;;		wreg, status,2, status,0
  6586 ;; Tracked objects:
  6587 ;;		On entry : 0/0
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6591 ;;      Params:         2       0       0       0       0
  6592 ;;      Locals:         0       5       0       0       0
  6593 ;;      Temps:          2       0       0       0       0
  6594 ;;      Totals:         4       5       0       0       0
  6595 ;;Total ram usage:        9 bytes
  6596 ;; Hardware stack levels used: 1
  6597 ;; Hardware stack levels required when called: 1
  6598 ;; This function calls:
  6599 ;;		Nothing
  6600 ;; This function is called by:
  6601 ;;		___flmul
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           
  6605  0000'                    __Umul8_16:	
  6606                           ;psect for function __Umul8_16
  6607                           
  6608                           
  6609                           ;incstack = 0
  6610                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6611                           ;__Umul8_16@multiplier stored from wreg
  6612  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  6613  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  6614  0002' 0084'              	movwf	__Umul8_16@multiplier
  6615  0003'                    l3859:
  6616  0003' 0180'              	clrf	__Umul8_16@product
  6617  0004' 0181'              	clrf	__Umul8_16@product+1
  6618  0005'                    l3861:
  6619  0005' 0802'              	movf	__Umul8_16@multiplicand,w
  6620  0006' 0084'              	movwf	??__Umul8_16
  6621  0007' 0185'              	clrf	??__Umul8_16+1
  6622  0008' 0804'              	movf	??__Umul8_16,w
  6623  0009' 0082'              	movwf	__Umul8_16@word_mpld
  6624  000A' 0805'              	movf	??__Umul8_16+1,w
  6625  000B' 0083'              	movwf	__Umul8_16@word_mpld+1
  6626  000C'                    l3863:
  6627  000C' 1C04'              	btfss	__Umul8_16@multiplier,0
  6628  000D' 2800'              	goto	u6271
  6629  000E' 2800'              	goto	u6270
  6630  000F'                    u6271:
  6631  000F' 2800'              	goto	l816
  6632  0010'                    u6270:
  6633  0010'                    l3865:
  6634  0010' 0802'              	movf	__Umul8_16@word_mpld,w
  6635  0011' 0780'              	addwf	__Umul8_16@product,f
  6636  0012' 1803               	skipnc
  6637  0013' 0A81'              	incf	__Umul8_16@product+1,f
  6638  0014' 0803'              	movf	__Umul8_16@word_mpld+1,w
  6639  0015' 0781'              	addwf	__Umul8_16@product+1,f
  6640  0016'                    l816:
  6641  0016' 3001               	movlw	1
  6642  0017'                    u6285:
  6643  0017' 1003               	clrc
  6644  0018' 0D82'              	rlf	__Umul8_16@word_mpld,f
  6645  0019' 0D83'              	rlf	__Umul8_16@word_mpld+1,f
  6646  001A' 3EFF               	addlw	-1
  6647  001B' 1D03               	skipz
  6648  001C' 2800'              	goto	u6285
  6649  001D' 1003               	clrc
  6650  001E' 0C84'              	rrf	__Umul8_16@multiplier,f
  6651  001F'                    l3867:
  6652  001F' 0804'              	movf	__Umul8_16@multiplier,w
  6653  0020' 1D03               	btfss	3,2
  6654  0021' 2800'              	goto	u6291
  6655  0022' 2800'              	goto	u6290
  6656  0023'                    u6291:
  6657  0023' 2800'              	goto	l3863
  6658  0024'                    u6290:
  6659  0024'                    l3869:
  6660  0024' 0801'              	movf	__Umul8_16@product+1,w
  6661  0025' 0083'              	movwf	?__Umul8_16+1
  6662  0026' 0800'              	movf	__Umul8_16@product,w
  6663  0027' 0082'              	movwf	?__Umul8_16
  6664  0028'                    l818:
  6665  0028' 0008               	return
  6666  0029'                    __end_of__Umul8_16:
  6667                           
  6668                           	psect	text11
  6669  0000'                    __ptext11:	
  6670 ;; *************** function __tdiv_to_l_ *****************
  6671 ;; Defined at:
  6672 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftdivl.c"
  6673 ;; Parameters:    Size  Location     Type
  6674 ;;  f1              4    2[COMMON] float 
  6675 ;;  f2              4    6[COMMON] float 
  6676 ;; Auto vars:     Size  Location     Type
  6677 ;;  quot            4    3[BANK0 ] unsigned long 
  6678 ;;  exp1            1    8[BANK0 ] unsigned char 
  6679 ;;  cntr            1    7[BANK0 ] unsigned char 
  6680 ;; Return value:  Size  Location     Type
  6681 ;;                  4    2[COMMON] unsigned long 
  6682 ;; Registers used:
  6683 ;;		wreg, status,2, status,0
  6684 ;; Tracked objects:
  6685 ;;		On entry : 0/0
  6686 ;;		On exit  : 0/0
  6687 ;;		Unchanged: 0/0
  6688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6689 ;;      Params:         8       0       0       0       0
  6690 ;;      Locals:         0       6       0       0       0
  6691 ;;      Temps:          0       3       0       0       0
  6692 ;;      Totals:         8       9       0       0       0
  6693 ;;Total ram usage:       17 bytes
  6694 ;; Hardware stack levels used: 1
  6695 ;; Hardware stack levels required when called: 1
  6696 ;; This function calls:
  6697 ;;		Nothing
  6698 ;; This function is called by:
  6699 ;;		_sprintf
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703  0000'                    __tdiv_to_l_:	
  6704                           ;psect for function __tdiv_to_l_
  6705                           
  6706  0000'                    l2989:	
  6707                           ;incstack = 0
  6708                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6709                           
  6710  0000' 0802'              	movf	__tdiv_to_l_@f1,w
  6711  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  6712  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  6713  0003' 0080'              	movwf	??__tdiv_to_l_
  6714  0004' 0803'              	movf	__tdiv_to_l_@f1+1,w
  6715  0005' 0081'              	movwf	??__tdiv_to_l_+1
  6716  0006' 0804'              	movf	__tdiv_to_l_@f1+2,w
  6717  0007' 0082'              	movwf	??__tdiv_to_l_+2
  6718  0008' 1003               	clrc
  6719  0009' 0D01'              	rlf	??__tdiv_to_l_+1,w
  6720  000A' 0D02'              	rlf	??__tdiv_to_l_+2,w
  6721  000B' 0088'              	movwf	__tdiv_to_l_@exp1
  6722  000C' 0808'              	movf	__tdiv_to_l_@exp1,w
  6723  000D' 1D03               	btfss	3,2
  6724  000E' 2800'              	goto	u4641
  6725  000F' 2800'              	goto	u4640
  6726  0010'                    u4641:
  6727  0010' 2800'              	goto	l2995
  6728  0011'                    u4640:
  6729  0011'                    l2991:
  6730  0011' 3000               	movlw	0
  6731  0012' 0085'              	movwf	?__tdiv_to_l_+3
  6732  0013' 3000               	movlw	0
  6733  0014' 0084'              	movwf	?__tdiv_to_l_+2
  6734  0015' 3000               	movlw	0
  6735  0016' 0083'              	movwf	?__tdiv_to_l_+1
  6736  0017' 3000               	movlw	0
  6737  0018' 0082'              	movwf	?__tdiv_to_l_
  6738  0019' 2800'              	goto	l591
  6739  001A'                    l2995:
  6740  001A' 0806'              	movf	__tdiv_to_l_@f2,w
  6741  001B' 0080'              	movwf	??__tdiv_to_l_
  6742  001C' 0807'              	movf	__tdiv_to_l_@f2+1,w
  6743  001D' 0081'              	movwf	??__tdiv_to_l_+1
  6744  001E' 0808'              	movf	__tdiv_to_l_@f2+2,w
  6745  001F' 0082'              	movwf	??__tdiv_to_l_+2
  6746  0020' 1003               	clrc
  6747  0021' 0D01'              	rlf	??__tdiv_to_l_+1,w
  6748  0022' 0D02'              	rlf	??__tdiv_to_l_+2,w
  6749  0023' 0087'              	movwf	__tdiv_to_l_@cntr
  6750  0024' 0807'              	movf	__tdiv_to_l_@cntr,w
  6751  0025' 1D03               	btfss	3,2
  6752  0026' 2800'              	goto	u4651
  6753  0027' 2800'              	goto	u4650
  6754  0028'                    u4651:
  6755  0028' 2800'              	goto	l592
  6756  0029'                    u4650:
  6757  0029' 2800'              	goto	l2991
  6758  002A'                    l592:
  6759  002A' 1783'              	bsf	__tdiv_to_l_@f1+1,7
  6760  002B'                    l3001:
  6761  002B' 30FF               	movlw	255
  6762  002C' 0582'              	andwf	__tdiv_to_l_@f1,f
  6763  002D' 30FF               	movlw	255
  6764  002E' 0583'              	andwf	__tdiv_to_l_@f1+1,f
  6765  002F' 3000               	movlw	0
  6766  0030' 0584'              	andwf	__tdiv_to_l_@f1+2,f
  6767  0031'                    l3003:
  6768  0031' 1787'              	bsf	__tdiv_to_l_@f2+1,7
  6769  0032' 30FF               	movlw	255
  6770  0033' 0586'              	andwf	__tdiv_to_l_@f2,f
  6771  0034' 30FF               	movlw	255
  6772  0035' 0587'              	andwf	__tdiv_to_l_@f2+1,f
  6773  0036' 3000               	movlw	0
  6774  0037' 0588'              	andwf	__tdiv_to_l_@f2+2,f
  6775  0038' 3000               	movlw	0
  6776  0039' 0086'              	movwf	__tdiv_to_l_@quot+3
  6777  003A' 3000               	movlw	0
  6778  003B' 0085'              	movwf	__tdiv_to_l_@quot+2
  6779  003C' 3000               	movlw	0
  6780  003D' 0084'              	movwf	__tdiv_to_l_@quot+1
  6781  003E' 3000               	movlw	0
  6782  003F' 0083'              	movwf	__tdiv_to_l_@quot
  6783  0040'                    l3005:
  6784  0040' 307F               	movlw	127
  6785  0041' 0288'              	subwf	__tdiv_to_l_@exp1,f
  6786  0042'                    l3007:
  6787  0042' 3098               	movlw	152
  6788  0043' 0707'              	addwf	__tdiv_to_l_@cntr,w
  6789  0044' 0080'              	movwf	??__tdiv_to_l_
  6790  0045' 0800'              	movf	??__tdiv_to_l_,w
  6791  0046' 0288'              	subwf	__tdiv_to_l_@exp1,f
  6792  0047' 3018               	movlw	24
  6793  0048' 0087'              	movwf	__tdiv_to_l_@cntr
  6794  0049'                    l3009:
  6795  0049' 3001               	movlw	1
  6796  004A' 0080'              	movwf	??__tdiv_to_l_
  6797  004B'                    u4665:
  6798  004B' 1003               	clrc
  6799  004C' 0D83'              	rlf	__tdiv_to_l_@quot,f
  6800  004D' 0D84'              	rlf	__tdiv_to_l_@quot+1,f
  6801  004E' 0D85'              	rlf	__tdiv_to_l_@quot+2,f
  6802  004F' 0D86'              	rlf	__tdiv_to_l_@quot+3,f
  6803  0050' 0B80'              	decfsz	??__tdiv_to_l_,f
  6804  0051' 2800'              	goto	u4665
  6805  0052'                    l3011:
  6806  0052' 0808'              	movf	__tdiv_to_l_@f2+2,w
  6807  0053' 0204'              	subwf	__tdiv_to_l_@f1+2,w
  6808  0054' 1D03               	skipz
  6809  0055' 2800'              	goto	u4675
  6810  0056' 0807'              	movf	__tdiv_to_l_@f2+1,w
  6811  0057' 0203'              	subwf	__tdiv_to_l_@f1+1,w
  6812  0058' 1D03               	skipz
  6813  0059' 2800'              	goto	u4675
  6814  005A' 0806'              	movf	__tdiv_to_l_@f2,w
  6815  005B' 0202'              	subwf	__tdiv_to_l_@f1,w
  6816  005C'                    u4675:
  6817  005C' 1C03               	skipc
  6818  005D' 2800'              	goto	u4671
  6819  005E' 2800'              	goto	u4670
  6820  005F'                    u4671:
  6821  005F' 2800'              	goto	l3017
  6822  0060'                    u4670:
  6823  0060'                    l3013:
  6824  0060' 0806'              	movf	__tdiv_to_l_@f2,w
  6825  0061' 0282'              	subwf	__tdiv_to_l_@f1,f
  6826  0062' 0807'              	movf	__tdiv_to_l_@f2+1,w
  6827  0063' 1C03               	skipc
  6828  0064' 0F07'              	incfsz	__tdiv_to_l_@f2+1,w
  6829  0065' 0283'              	subwf	__tdiv_to_l_@f1+1,f
  6830  0066' 0808'              	movf	__tdiv_to_l_@f2+2,w
  6831  0067' 1C03               	skipc
  6832  0068' 0A08'              	incf	__tdiv_to_l_@f2+2,w
  6833  0069' 0284'              	subwf	__tdiv_to_l_@f1+2,f
  6834  006A'                    l3015:
  6835  006A' 1403'              	bsf	__tdiv_to_l_@quot,0
  6836  006B'                    l3017:
  6837  006B' 3001               	movlw	1
  6838  006C'                    u4685:
  6839  006C' 1003               	clrc
  6840  006D' 0D82'              	rlf	__tdiv_to_l_@f1,f
  6841  006E' 0D83'              	rlf	__tdiv_to_l_@f1+1,f
  6842  006F' 0D84'              	rlf	__tdiv_to_l_@f1+2,f
  6843  0070' 3EFF               	addlw	-1
  6844  0071' 1D03               	skipz
  6845  0072' 2800'              	goto	u4685
  6846  0073'                    l3019:
  6847  0073' 3001               	movlw	1
  6848  0074' 0287'              	subwf	__tdiv_to_l_@cntr,f
  6849  0075' 1D03               	btfss	3,2
  6850  0076' 2800'              	goto	u4691
  6851  0077' 2800'              	goto	u4690
  6852  0078'                    u4691:
  6853  0078' 2800'              	goto	l3009
  6854  0079'                    u4690:
  6855  0079'                    l595:
  6856  0079' 1F88'              	btfss	__tdiv_to_l_@exp1,7
  6857  007A' 2800'              	goto	u4701
  6858  007B' 2800'              	goto	u4700
  6859  007C'                    u4701:
  6860  007C' 2800'              	goto	l3029
  6861  007D'                    u4700:
  6862  007D'                    l3021:
  6863  007D' 0808'              	movf	__tdiv_to_l_@exp1,w
  6864  007E' 3A80               	xorlw	128
  6865  007F' 3E97               	addlw	151
  6866  0080' 1803               	skipnc
  6867  0081' 2800'              	goto	u4711
  6868  0082' 2800'              	goto	u4710
  6869  0083'                    u4711:
  6870  0083' 2800'              	goto	l3027
  6871  0084'                    u4710:
  6872  0084' 2800'              	goto	l2991
  6873  0085'                    l3027:
  6874  0085' 3001               	movlw	1
  6875  0086'                    u4725:
  6876  0086' 1003               	clrc
  6877  0087' 0C86'              	rrf	__tdiv_to_l_@quot+3,f
  6878  0088' 0C85'              	rrf	__tdiv_to_l_@quot+2,f
  6879  0089' 0C84'              	rrf	__tdiv_to_l_@quot+1,f
  6880  008A' 0C83'              	rrf	__tdiv_to_l_@quot,f
  6881  008B' 3EFF               	addlw	-1
  6882  008C' 1D03               	skipz
  6883  008D' 2800'              	goto	u4725
  6884  008E' 3001               	movlw	1
  6885  008F' 0080'              	movwf	??__tdiv_to_l_
  6886  0090' 0800'              	movf	??__tdiv_to_l_,w
  6887  0091' 0788'              	addwf	__tdiv_to_l_@exp1,f
  6888  0092' 1D03               	btfss	3,2
  6889  0093' 2800'              	goto	u4731
  6890  0094' 2800'              	goto	u4730
  6891  0095'                    u4731:
  6892  0095' 2800'              	goto	l3027
  6893  0096'                    u4730:
  6894  0096' 2800'              	goto	l3037
  6895  0097'                    l3029:
  6896  0097' 3018               	movlw	24
  6897  0098' 0208'              	subwf	__tdiv_to_l_@exp1,w
  6898  0099' 1C03               	skipc
  6899  009A' 2800'              	goto	u4741
  6900  009B' 2800'              	goto	u4740
  6901  009C'                    u4741:
  6902  009C' 2800'              	goto	l602
  6903  009D'                    u4740:
  6904  009D' 2800'              	goto	l2991
  6905  009E'                    l3035:
  6906  009E' 3001               	movlw	1
  6907  009F' 0080'              	movwf	??__tdiv_to_l_
  6908  00A0'                    u4755:
  6909  00A0' 1003               	clrc
  6910  00A1' 0D83'              	rlf	__tdiv_to_l_@quot,f
  6911  00A2' 0D84'              	rlf	__tdiv_to_l_@quot+1,f
  6912  00A3' 0D85'              	rlf	__tdiv_to_l_@quot+2,f
  6913  00A4' 0D86'              	rlf	__tdiv_to_l_@quot+3,f
  6914  00A5' 0B80'              	decfsz	??__tdiv_to_l_,f
  6915  00A6' 2800'              	goto	u4755
  6916  00A7' 3001               	movlw	1
  6917  00A8' 0288'              	subwf	__tdiv_to_l_@exp1,f
  6918  00A9'                    l602:
  6919  00A9' 0808'              	movf	__tdiv_to_l_@exp1,w
  6920  00AA' 1D03               	btfss	3,2
  6921  00AB' 2800'              	goto	u4761
  6922  00AC' 2800'              	goto	u4760
  6923  00AD'                    u4761:
  6924  00AD' 2800'              	goto	l3035
  6925  00AE'                    u4760:
  6926  00AE'                    l3037:
  6927  00AE' 0806'              	movf	__tdiv_to_l_@quot+3,w
  6928  00AF' 0085'              	movwf	?__tdiv_to_l_+3
  6929  00B0' 0805'              	movf	__tdiv_to_l_@quot+2,w
  6930  00B1' 0084'              	movwf	?__tdiv_to_l_+2
  6931  00B2' 0804'              	movf	__tdiv_to_l_@quot+1,w
  6932  00B3' 0083'              	movwf	?__tdiv_to_l_+1
  6933  00B4' 0803'              	movf	__tdiv_to_l_@quot,w
  6934  00B5' 0082'              	movwf	?__tdiv_to_l_
  6935  00B6'                    l591:
  6936  00B6' 0008               	return
  6937  00B7'                    __end_of__tdiv_to_l_:
  6938                           
  6939                           	psect	text12
  6940  0000'                    __ptext12:	
  6941 ;; *************** function __div_to_l_ *****************
  6942 ;; Defined at:
  6943 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fldivl.c"
  6944 ;; Parameters:    Size  Location     Type
  6945 ;;  f1              4    2[COMMON] unsigned long 
  6946 ;;  f2              4    6[COMMON] unsigned long 
  6947 ;; Auto vars:     Size  Location     Type
  6948 ;;  quot            4    1[BANK0 ] unsigned long 
  6949 ;;  exp1            1    6[BANK0 ] unsigned char 
  6950 ;;  cntr            1    5[BANK0 ] unsigned char 
  6951 ;; Return value:  Size  Location     Type
  6952 ;;                  4    2[COMMON] unsigned long 
  6953 ;; Registers used:
  6954 ;;		wreg, status,2, status,0
  6955 ;; Tracked objects:
  6956 ;;		On entry : 0/0
  6957 ;;		On exit  : 0/0
  6958 ;;		Unchanged: 0/0
  6959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6960 ;;      Params:         8       0       0       0       0
  6961 ;;      Locals:         0       6       0       0       0
  6962 ;;      Temps:          0       1       0       0       0
  6963 ;;      Totals:         8       7       0       0       0
  6964 ;;Total ram usage:       15 bytes
  6965 ;; Hardware stack levels used: 1
  6966 ;; Hardware stack levels required when called: 1
  6967 ;; This function calls:
  6968 ;;		Nothing
  6969 ;; This function is called by:
  6970 ;;		_sprintf
  6971 ;; This function uses a non-reentrant model
  6972 ;;
  6973                           
  6974  0000'                    __div_to_l_:	
  6975                           ;psect for function __div_to_l_
  6976                           
  6977  0000'                    l4133:	
  6978                           ;incstack = 0
  6979                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6980                           
  6981  0000' 1003               	clrc
  6982  0001' 0D04'              	rlf	__div_to_l_@f1+2,w
  6983  0002' 0D05'              	rlf	__div_to_l_@f1+3,w
  6984  0003' 1283               	bcf	3,5	;RP0=0, select bank0
  6985  0004' 1303               	bcf	3,6	;RP1=0, select bank0
  6986  0005' 0086'              	movwf	__div_to_l_@exp1
  6987  0006' 0806'              	movf	__div_to_l_@exp1,w
  6988  0007' 1D03               	btfss	3,2
  6989  0008' 2800'              	goto	u7031
  6990  0009' 2800'              	goto	u7030
  6991  000A'                    u7031:
  6992  000A' 2800'              	goto	l4139
  6993  000B'                    u7030:
  6994  000B'                    l4135:
  6995  000B' 3000               	movlw	0
  6996  000C' 0085'              	movwf	?__div_to_l_+3
  6997  000D' 3000               	movlw	0
  6998  000E' 0084'              	movwf	?__div_to_l_+2
  6999  000F' 3000               	movlw	0
  7000  0010' 0083'              	movwf	?__div_to_l_+1
  7001  0011' 3000               	movlw	0
  7002  0012' 0082'              	movwf	?__div_to_l_
  7003  0013' 2800'              	goto	l544
  7004  0014'                    l4139:
  7005  0014' 1003               	clrc
  7006  0015' 0D08'              	rlf	__div_to_l_@f2+2,w
  7007  0016' 0D09'              	rlf	__div_to_l_@f2+3,w
  7008  0017' 0085'              	movwf	__div_to_l_@cntr
  7009  0018' 0805'              	movf	__div_to_l_@cntr,w
  7010  0019' 1D03               	btfss	3,2
  7011  001A' 2800'              	goto	u7041
  7012  001B' 2800'              	goto	u7040
  7013  001C'                    u7041:
  7014  001C' 2800'              	goto	l545
  7015  001D'                    u7040:
  7016  001D' 2800'              	goto	l4135
  7017  001E'                    l545:
  7018  001E' 1784'              	bsf	__div_to_l_@f1+2,7
  7019  001F'                    l4145:
  7020  001F' 30FF               	movlw	255
  7021  0020' 0582'              	andwf	__div_to_l_@f1,f
  7022  0021' 30FF               	movlw	255
  7023  0022' 0583'              	andwf	__div_to_l_@f1+1,f
  7024  0023' 30FF               	movlw	255
  7025  0024' 0584'              	andwf	__div_to_l_@f1+2,f
  7026  0025' 3000               	movlw	0
  7027  0026' 0585'              	andwf	__div_to_l_@f1+3,f
  7028  0027'                    l4147:
  7029  0027' 1788'              	bsf	__div_to_l_@f2+2,7
  7030  0028' 30FF               	movlw	255
  7031  0029' 0586'              	andwf	__div_to_l_@f2,f
  7032  002A' 30FF               	movlw	255
  7033  002B' 0587'              	andwf	__div_to_l_@f2+1,f
  7034  002C' 30FF               	movlw	255
  7035  002D' 0588'              	andwf	__div_to_l_@f2+2,f
  7036  002E' 3000               	movlw	0
  7037  002F' 0589'              	andwf	__div_to_l_@f2+3,f
  7038  0030' 3000               	movlw	0
  7039  0031' 0084'              	movwf	__div_to_l_@quot+3
  7040  0032' 3000               	movlw	0
  7041  0033' 0083'              	movwf	__div_to_l_@quot+2
  7042  0034' 3000               	movlw	0
  7043  0035' 0082'              	movwf	__div_to_l_@quot+1
  7044  0036' 3000               	movlw	0
  7045  0037' 0081'              	movwf	__div_to_l_@quot
  7046  0038'                    l4149:
  7047  0038' 307F               	movlw	127
  7048  0039' 0286'              	subwf	__div_to_l_@exp1,f
  7049  003A'                    l4151:
  7050  003A' 30A0               	movlw	160
  7051  003B' 0705'              	addwf	__div_to_l_@cntr,w
  7052  003C' 0080'              	movwf	??__div_to_l_
  7053  003D' 0800'              	movf	??__div_to_l_,w
  7054  003E' 0286'              	subwf	__div_to_l_@exp1,f
  7055  003F' 3020               	movlw	32
  7056  0040' 0085'              	movwf	__div_to_l_@cntr
  7057  0041'                    l4153:
  7058  0041' 3001               	movlw	1
  7059  0042' 0080'              	movwf	??__div_to_l_
  7060  0043'                    u7055:
  7061  0043' 1003               	clrc
  7062  0044' 0D81'              	rlf	__div_to_l_@quot,f
  7063  0045' 0D82'              	rlf	__div_to_l_@quot+1,f
  7064  0046' 0D83'              	rlf	__div_to_l_@quot+2,f
  7065  0047' 0D84'              	rlf	__div_to_l_@quot+3,f
  7066  0048' 0B80'              	decfsz	??__div_to_l_,f
  7067  0049' 2800'              	goto	u7055
  7068  004A'                    l4155:
  7069  004A' 0809'              	movf	__div_to_l_@f2+3,w
  7070  004B' 0205'              	subwf	__div_to_l_@f1+3,w
  7071  004C' 1D03               	skipz
  7072  004D' 2800'              	goto	u7065
  7073  004E' 0808'              	movf	__div_to_l_@f2+2,w
  7074  004F' 0204'              	subwf	__div_to_l_@f1+2,w
  7075  0050' 1D03               	skipz
  7076  0051' 2800'              	goto	u7065
  7077  0052' 0807'              	movf	__div_to_l_@f2+1,w
  7078  0053' 0203'              	subwf	__div_to_l_@f1+1,w
  7079  0054' 1D03               	skipz
  7080  0055' 2800'              	goto	u7065
  7081  0056' 0806'              	movf	__div_to_l_@f2,w
  7082  0057' 0202'              	subwf	__div_to_l_@f1,w
  7083  0058'                    u7065:
  7084  0058' 1C03               	skipc
  7085  0059' 2800'              	goto	u7061
  7086  005A' 2800'              	goto	u7060
  7087  005B'                    u7061:
  7088  005B' 2800'              	goto	l4161
  7089  005C'                    u7060:
  7090  005C'                    l4157:
  7091  005C' 0806'              	movf	__div_to_l_@f2,w
  7092  005D' 0282'              	subwf	__div_to_l_@f1,f
  7093  005E' 0807'              	movf	__div_to_l_@f2+1,w
  7094  005F' 1C03               	skipc
  7095  0060' 0F07'              	incfsz	__div_to_l_@f2+1,w
  7096  0061' 0283'              	subwf	__div_to_l_@f1+1,f
  7097  0062' 0808'              	movf	__div_to_l_@f2+2,w
  7098  0063' 1C03               	skipc
  7099  0064' 0F08'              	incfsz	__div_to_l_@f2+2,w
  7100  0065' 0284'              	subwf	__div_to_l_@f1+2,f
  7101  0066' 0809'              	movf	__div_to_l_@f2+3,w
  7102  0067' 1C03               	skipc
  7103  0068' 0F09'              	incfsz	__div_to_l_@f2+3,w
  7104  0069' 0285'              	subwf	__div_to_l_@f1+3,f
  7105  006A'                    l4159:
  7106  006A' 1401'              	bsf	__div_to_l_@quot,0
  7107  006B'                    l4161:
  7108  006B' 3001               	movlw	1
  7109  006C' 0080'              	movwf	??__div_to_l_
  7110  006D'                    u7075:
  7111  006D' 1003               	clrc
  7112  006E' 0D82'              	rlf	__div_to_l_@f1,f
  7113  006F' 0D83'              	rlf	__div_to_l_@f1+1,f
  7114  0070' 0D84'              	rlf	__div_to_l_@f1+2,f
  7115  0071' 0D85'              	rlf	__div_to_l_@f1+3,f
  7116  0072' 0B80'              	decfsz	??__div_to_l_,f
  7117  0073' 2800'              	goto	u7075
  7118  0074'                    l4163:
  7119  0074' 3001               	movlw	1
  7120  0075' 0285'              	subwf	__div_to_l_@cntr,f
  7121  0076' 1D03               	btfss	3,2
  7122  0077' 2800'              	goto	u7081
  7123  0078' 2800'              	goto	u7080
  7124  0079'                    u7081:
  7125  0079' 2800'              	goto	l4153
  7126  007A'                    u7080:
  7127  007A'                    l548:
  7128  007A' 1F86'              	btfss	__div_to_l_@exp1,7
  7129  007B' 2800'              	goto	u7091
  7130  007C' 2800'              	goto	u7090
  7131  007D'                    u7091:
  7132  007D' 2800'              	goto	l4173
  7133  007E'                    u7090:
  7134  007E'                    l4165:
  7135  007E' 0806'              	movf	__div_to_l_@exp1,w
  7136  007F' 3A80               	xorlw	128
  7137  0080' 3E9F               	addlw	159
  7138  0081' 1803               	skipnc
  7139  0082' 2800'              	goto	u7101
  7140  0083' 2800'              	goto	u7100
  7141  0084'                    u7101:
  7142  0084' 2800'              	goto	l4171
  7143  0085'                    u7100:
  7144  0085' 2800'              	goto	l4135
  7145  0086'                    l4171:
  7146  0086' 3001               	movlw	1
  7147  0087'                    u7115:
  7148  0087' 1003               	clrc
  7149  0088' 0C84'              	rrf	__div_to_l_@quot+3,f
  7150  0089' 0C83'              	rrf	__div_to_l_@quot+2,f
  7151  008A' 0C82'              	rrf	__div_to_l_@quot+1,f
  7152  008B' 0C81'              	rrf	__div_to_l_@quot,f
  7153  008C' 3EFF               	addlw	-1
  7154  008D' 1D03               	skipz
  7155  008E' 2800'              	goto	u7115
  7156  008F' 3001               	movlw	1
  7157  0090' 0080'              	movwf	??__div_to_l_
  7158  0091' 0800'              	movf	??__div_to_l_,w
  7159  0092' 0786'              	addwf	__div_to_l_@exp1,f
  7160  0093' 1D03               	btfss	3,2
  7161  0094' 2800'              	goto	u7121
  7162  0095' 2800'              	goto	u7120
  7163  0096'                    u7121:
  7164  0096' 2800'              	goto	l4171
  7165  0097'                    u7120:
  7166  0097' 2800'              	goto	l4181
  7167  0098'                    l4173:
  7168  0098' 3020               	movlw	32
  7169  0099' 0206'              	subwf	__div_to_l_@exp1,w
  7170  009A' 1C03               	skipc
  7171  009B' 2800'              	goto	u7131
  7172  009C' 2800'              	goto	u7130
  7173  009D'                    u7131:
  7174  009D' 2800'              	goto	l555
  7175  009E'                    u7130:
  7176  009E' 2800'              	goto	l4135
  7177  009F'                    l4179:
  7178  009F' 3001               	movlw	1
  7179  00A0' 0080'              	movwf	??__div_to_l_
  7180  00A1'                    u7145:
  7181  00A1' 1003               	clrc
  7182  00A2' 0D81'              	rlf	__div_to_l_@quot,f
  7183  00A3' 0D82'              	rlf	__div_to_l_@quot+1,f
  7184  00A4' 0D83'              	rlf	__div_to_l_@quot+2,f
  7185  00A5' 0D84'              	rlf	__div_to_l_@quot+3,f
  7186  00A6' 0B80'              	decfsz	??__div_to_l_,f
  7187  00A7' 2800'              	goto	u7145
  7188  00A8' 3001               	movlw	1
  7189  00A9' 0286'              	subwf	__div_to_l_@exp1,f
  7190  00AA'                    l555:
  7191  00AA' 0806'              	movf	__div_to_l_@exp1,w
  7192  00AB' 1D03               	btfss	3,2
  7193  00AC' 2800'              	goto	u7151
  7194  00AD' 2800'              	goto	u7150
  7195  00AE'                    u7151:
  7196  00AE' 2800'              	goto	l4179
  7197  00AF'                    u7150:
  7198  00AF'                    l4181:
  7199  00AF' 0804'              	movf	__div_to_l_@quot+3,w
  7200  00B0' 0085'              	movwf	?__div_to_l_+3
  7201  00B1' 0803'              	movf	__div_to_l_@quot+2,w
  7202  00B2' 0084'              	movwf	?__div_to_l_+2
  7203  00B3' 0802'              	movf	__div_to_l_@quot+1,w
  7204  00B4' 0083'              	movwf	?__div_to_l_+1
  7205  00B5' 0801'              	movf	__div_to_l_@quot,w
  7206  00B6' 0082'              	movwf	?__div_to_l_
  7207  00B7'                    l544:
  7208  00B7' 0008               	return
  7209  00B8'                    __end_of__div_to_l_:
  7210                           
  7211                           	psect	text13
  7212  0000'                    __ptext13:	
  7213 ;; *************** function ___xxtofl *****************
  7214 ;; Defined at:
  7215 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;  sign            1    wreg     unsigned char 
  7218 ;;  val             4    2[COMMON] long 
  7219 ;; Auto vars:     Size  Location     Type
  7220 ;;  sign            1    0[BANK0 ] unsigned char 
  7221 ;;  arg             4    2[BANK0 ] unsigned long 
  7222 ;;  exp             1    1[BANK0 ] unsigned char 
  7223 ;; Return value:  Size  Location     Type
  7224 ;;                  4    2[COMMON] unsigned char 
  7225 ;; Registers used:
  7226 ;;		wreg, status,2, status,0
  7227 ;; Tracked objects:
  7228 ;;		On entry : 0/0
  7229 ;;		On exit  : 0/0
  7230 ;;		Unchanged: 0/0
  7231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7232 ;;      Params:         4       0       0       0       0
  7233 ;;      Locals:         0       6       0       0       0
  7234 ;;      Temps:          4       0       0       0       0
  7235 ;;      Totals:         8       6       0       0       0
  7236 ;;Total ram usage:       14 bytes
  7237 ;; Hardware stack levels used: 1
  7238 ;; Hardware stack levels required when called: 1
  7239 ;; This function calls:
  7240 ;;		Nothing
  7241 ;; This function is called by:
  7242 ;;		_main
  7243 ;;		_sprintf
  7244 ;; This function uses a non-reentrant model
  7245 ;;
  7246                           
  7247  0000'                    ___xxtofl:	
  7248                           ;psect for function ___xxtofl
  7249                           
  7250                           
  7251                           ;incstack = 0
  7252                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7253                           ;___xxtofl@sign stored from wreg
  7254  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  7255  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  7256  0002' 0080'              	movwf	___xxtofl@sign
  7257  0003'                    l3233:
  7258  0003' 0800'              	movf	___xxtofl@sign,w
  7259  0004' 1903               	btfsc	3,2
  7260  0005' 2800'              	goto	u5281
  7261  0006' 2800'              	goto	u5280
  7262  0007'                    u5281:
  7263  0007' 2800'              	goto	l3239
  7264  0008'                    u5280:
  7265  0008'                    l3235:
  7266  0008' 1F85'              	btfss	___xxtofl@val+3,7
  7267  0009' 2800'              	goto	u5291
  7268  000A' 2800'              	goto	u5290
  7269  000B'                    u5291:
  7270  000B' 2800'              	goto	l3239
  7271  000C'                    u5290:
  7272  000C'                    l3237:
  7273  000C' 0902'              	comf	___xxtofl@val,w
  7274  000D' 0082'              	movwf	___xxtofl@arg
  7275  000E' 0903'              	comf	___xxtofl@val+1,w
  7276  000F' 0083'              	movwf	___xxtofl@arg+1
  7277  0010' 0904'              	comf	___xxtofl@val+2,w
  7278  0011' 0084'              	movwf	___xxtofl@arg+2
  7279  0012' 0905'              	comf	___xxtofl@val+3,w
  7280  0013' 0085'              	movwf	___xxtofl@arg+3
  7281  0014' 0A82'              	incf	___xxtofl@arg,f
  7282  0015' 1903               	skipnz
  7283  0016' 0A83'              	incf	___xxtofl@arg+1,f
  7284  0017' 1903               	skipnz
  7285  0018' 0A84'              	incf	___xxtofl@arg+2,f
  7286  0019' 1903               	skipnz
  7287  001A' 0A85'              	incf	___xxtofl@arg+3,f
  7288  001B' 2800'              	goto	l841
  7289  001C'                    l3239:
  7290  001C' 0805'              	movf	___xxtofl@val+3,w
  7291  001D' 0085'              	movwf	___xxtofl@arg+3
  7292  001E' 0804'              	movf	___xxtofl@val+2,w
  7293  001F' 0084'              	movwf	___xxtofl@arg+2
  7294  0020' 0803'              	movf	___xxtofl@val+1,w
  7295  0021' 0083'              	movwf	___xxtofl@arg+1
  7296  0022' 0802'              	movf	___xxtofl@val,w
  7297  0023' 0082'              	movwf	___xxtofl@arg
  7298  0024'                    l841:
  7299  0024' 0805'              	movf	___xxtofl@val+3,w
  7300  0025' 0404'              	iorwf	___xxtofl@val+2,w
  7301  0026' 0403'              	iorwf	___xxtofl@val+1,w
  7302  0027' 0402'              	iorwf	___xxtofl@val,w
  7303  0028' 1D03               	skipz
  7304  0029' 2800'              	goto	u5301
  7305  002A' 2800'              	goto	u5300
  7306  002B'                    u5301:
  7307  002B' 2800'              	goto	l3245
  7308  002C'                    u5300:
  7309  002C'                    l3241:
  7310  002C' 3000               	movlw	0
  7311  002D' 0085'              	movwf	?___xxtofl+3
  7312  002E' 3000               	movlw	0
  7313  002F' 0084'              	movwf	?___xxtofl+2
  7314  0030' 3000               	movlw	0
  7315  0031' 0083'              	movwf	?___xxtofl+1
  7316  0032' 3000               	movlw	0
  7317  0033' 0082'              	movwf	?___xxtofl
  7318  0034' 2800'              	goto	l843
  7319  0035'                    l3245:
  7320  0035' 3096               	movlw	150
  7321  0036' 0081'              	movwf	___xxtofl@exp
  7322  0037' 2800'              	goto	l3249
  7323  0038'                    l3247:
  7324  0038' 3001               	movlw	1
  7325  0039' 0086'              	movwf	??___xxtofl
  7326  003A' 0806'              	movf	??___xxtofl,w
  7327  003B' 0781'              	addwf	___xxtofl@exp,f
  7328  003C' 3001               	movlw	1
  7329  003D'                    u5315:
  7330  003D' 1003               	clrc
  7331  003E' 0C85'              	rrf	___xxtofl@arg+3,f
  7332  003F' 0C84'              	rrf	___xxtofl@arg+2,f
  7333  0040' 0C83'              	rrf	___xxtofl@arg+1,f
  7334  0041' 0C82'              	rrf	___xxtofl@arg,f
  7335  0042' 3EFF               	addlw	-1
  7336  0043' 1D03               	skipz
  7337  0044' 2800'              	goto	u5315
  7338  0045'                    l3249:
  7339  0045' 30FE               	movlw	254
  7340  0046' 0505'              	andwf	___xxtofl@arg+3,w
  7341  0047' 1D03               	btfss	3,2
  7342  0048' 2800'              	goto	u5321
  7343  0049' 2800'              	goto	u5320
  7344  004A'                    u5321:
  7345  004A' 2800'              	goto	l3247
  7346  004B'                    u5320:
  7347  004B' 2800'              	goto	l847
  7348  004C'                    l3251:
  7349  004C' 3001               	movlw	1
  7350  004D' 0086'              	movwf	??___xxtofl
  7351  004E' 0806'              	movf	??___xxtofl,w
  7352  004F' 0781'              	addwf	___xxtofl@exp,f
  7353  0050'                    l3253:
  7354  0050' 3001               	movlw	1
  7355  0051' 0782'              	addwf	___xxtofl@arg,f
  7356  0052' 3000               	movlw	0
  7357  0053' 1803               	skipnc
  7358  0054' 3001               	movlw	1
  7359  0055' 0783'              	addwf	___xxtofl@arg+1,f
  7360  0056' 3000               	movlw	0
  7361  0057' 1803               	skipnc
  7362  0058' 3001               	movlw	1
  7363  0059' 0784'              	addwf	___xxtofl@arg+2,f
  7364  005A' 3000               	movlw	0
  7365  005B' 1803               	skipnc
  7366  005C' 3001               	movlw	1
  7367  005D' 0785'              	addwf	___xxtofl@arg+3,f
  7368  005E'                    l3255:
  7369  005E' 3001               	movlw	1
  7370  005F'                    u5335:
  7371  005F' 1003               	clrc
  7372  0060' 0C85'              	rrf	___xxtofl@arg+3,f
  7373  0061' 0C84'              	rrf	___xxtofl@arg+2,f
  7374  0062' 0C83'              	rrf	___xxtofl@arg+1,f
  7375  0063' 0C82'              	rrf	___xxtofl@arg,f
  7376  0064' 3EFF               	addlw	-1
  7377  0065' 1D03               	skipz
  7378  0066' 2800'              	goto	u5335
  7379  0067'                    l847:
  7380  0067' 30FF               	movlw	255
  7381  0068' 0505'              	andwf	___xxtofl@arg+3,w
  7382  0069' 1D03               	btfss	3,2
  7383  006A' 2800'              	goto	u5341
  7384  006B' 2800'              	goto	u5340
  7385  006C'                    u5341:
  7386  006C' 2800'              	goto	l3251
  7387  006D'                    u5340:
  7388  006D' 2800'              	goto	l3259
  7389  006E'                    l3257:
  7390  006E' 3001               	movlw	1
  7391  006F' 0281'              	subwf	___xxtofl@exp,f
  7392  0070' 3001               	movlw	1
  7393  0071' 0086'              	movwf	??___xxtofl
  7394  0072'                    u5355:
  7395  0072' 1003               	clrc
  7396  0073' 0D82'              	rlf	___xxtofl@arg,f
  7397  0074' 0D83'              	rlf	___xxtofl@arg+1,f
  7398  0075' 0D84'              	rlf	___xxtofl@arg+2,f
  7399  0076' 0D85'              	rlf	___xxtofl@arg+3,f
  7400  0077' 0B86'              	decfsz	??___xxtofl,f
  7401  0078' 2800'              	goto	u5355
  7402  0079'                    l3259:
  7403  0079' 1B84'              	btfsc	___xxtofl@arg+2,7
  7404  007A' 2800'              	goto	u5361
  7405  007B' 2800'              	goto	u5360
  7406  007C'                    u5361:
  7407  007C' 2800'              	goto	l854
  7408  007D'                    u5360:
  7409  007D'                    l3261:
  7410  007D' 3002               	movlw	2
  7411  007E' 0201'              	subwf	___xxtofl@exp,w
  7412  007F' 1803               	skipnc
  7413  0080' 2800'              	goto	u5371
  7414  0081' 2800'              	goto	u5370
  7415  0082'                    u5371:
  7416  0082' 2800'              	goto	l3257
  7417  0083'                    u5370:
  7418  0083'                    l854:
  7419  0083' 1801'              	btfsc	___xxtofl@exp,0
  7420  0084' 2800'              	goto	u5381
  7421  0085' 2800'              	goto	u5380
  7422  0086'                    u5381:
  7423  0086' 2800'              	goto	l855
  7424  0087'                    u5380:
  7425  0087'                    l3263:
  7426  0087' 30FF               	movlw	255
  7427  0088' 0582'              	andwf	___xxtofl@arg,f
  7428  0089' 30FF               	movlw	255
  7429  008A' 0583'              	andwf	___xxtofl@arg+1,f
  7430  008B' 307F               	movlw	127
  7431  008C' 0584'              	andwf	___xxtofl@arg+2,f
  7432  008D' 30FF               	movlw	255
  7433  008E' 0585'              	andwf	___xxtofl@arg+3,f
  7434  008F'                    l855:
  7435  008F' 1003               	clrc
  7436  0090' 0C81'              	rrf	___xxtofl@exp,f
  7437  0091'                    l3265:
  7438  0091' 0801'              	movf	___xxtofl@exp,w
  7439  0092' 0086'              	movwf	??___xxtofl
  7440  0093' 0187'              	clrf	??___xxtofl+1
  7441  0094' 0188'              	clrf	??___xxtofl+2
  7442  0095' 0189'              	clrf	??___xxtofl+3
  7443  0096' 3018               	movlw	24
  7444  0097'                    u5395:
  7445  0097' 1003               	clrc
  7446  0098' 0D86'              	rlf	??___xxtofl,f
  7447  0099' 0D87'              	rlf	??___xxtofl+1,f
  7448  009A' 0D88'              	rlf	??___xxtofl+2,f
  7449  009B' 0D89'              	rlf	??___xxtofl+3,f
  7450  009C'                    u5390:
  7451  009C' 3EFF               	addlw	-1
  7452  009D' 1D03               	skipz
  7453  009E' 2800'              	goto	u5395
  7454  009F' 0806'              	movf	??___xxtofl,w
  7455  00A0' 0482'              	iorwf	___xxtofl@arg,f
  7456  00A1' 0807'              	movf	??___xxtofl+1,w
  7457  00A2' 0483'              	iorwf	___xxtofl@arg+1,f
  7458  00A3' 0808'              	movf	??___xxtofl+2,w
  7459  00A4' 0484'              	iorwf	___xxtofl@arg+2,f
  7460  00A5' 0809'              	movf	??___xxtofl+3,w
  7461  00A6' 0485'              	iorwf	___xxtofl@arg+3,f
  7462  00A7'                    l3267:
  7463  00A7' 0800'              	movf	___xxtofl@sign,w
  7464  00A8' 1903               	btfsc	3,2
  7465  00A9' 2800'              	goto	u5401
  7466  00AA' 2800'              	goto	u5400
  7467  00AB'                    u5401:
  7468  00AB' 2800'              	goto	l3273
  7469  00AC'                    u5400:
  7470  00AC'                    l3269:
  7471  00AC' 1F85'              	btfss	___xxtofl@val+3,7
  7472  00AD' 2800'              	goto	u5411
  7473  00AE' 2800'              	goto	u5410
  7474  00AF'                    u5411:
  7475  00AF' 2800'              	goto	l3273
  7476  00B0'                    u5410:
  7477  00B0'                    l3271:
  7478  00B0' 1785'              	bsf	___xxtofl@arg+3,7
  7479  00B1'                    l3273:
  7480  00B1' 0805'              	movf	___xxtofl@arg+3,w
  7481  00B2' 0085'              	movwf	?___xxtofl+3
  7482  00B3' 0804'              	movf	___xxtofl@arg+2,w
  7483  00B4' 0084'              	movwf	?___xxtofl+2
  7484  00B5' 0803'              	movf	___xxtofl@arg+1,w
  7485  00B6' 0083'              	movwf	?___xxtofl+1
  7486  00B7' 0802'              	movf	___xxtofl@arg,w
  7487  00B8' 0082'              	movwf	?___xxtofl
  7488  00B9'                    l843:
  7489  00B9' 0008               	return
  7490  00BA'                    __end_of___xxtofl:
  7491                           
  7492                           	psect	text14
  7493  0000'                    __ptext14:	
  7494 ;; *************** function ___wmul *****************
  7495 ;; Defined at:
  7496 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  7497 ;; Parameters:    Size  Location     Type
  7498 ;;  multiplier      2    2[COMMON] unsigned int 
  7499 ;;  multiplicand    2    4[COMMON] unsigned int 
  7500 ;; Auto vars:     Size  Location     Type
  7501 ;;  product         2    6[COMMON] unsigned int 
  7502 ;; Return value:  Size  Location     Type
  7503 ;;                  2    2[COMMON] unsigned int 
  7504 ;; Registers used:
  7505 ;;		wreg, status,2, status,0
  7506 ;; Tracked objects:
  7507 ;;		On entry : 0/0
  7508 ;;		On exit  : 0/0
  7509 ;;		Unchanged: 0/0
  7510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7511 ;;      Params:         4       0       0       0       0
  7512 ;;      Locals:         2       0       0       0       0
  7513 ;;      Temps:          0       0       0       0       0
  7514 ;;      Totals:         6       0       0       0       0
  7515 ;;Total ram usage:        6 bytes
  7516 ;; Hardware stack levels used: 1
  7517 ;; Hardware stack levels required when called: 1
  7518 ;; This function calls:
  7519 ;;		Nothing
  7520 ;; This function is called by:
  7521 ;;		_sprintf
  7522 ;; This function uses a non-reentrant model
  7523 ;;
  7524                           
  7525  0000'                    ___wmul:	
  7526                           ;psect for function ___wmul
  7527                           
  7528  0000'                    l3093:	
  7529                           ;incstack = 0
  7530                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7531                           
  7532  0000' 0186'              	clrf	___wmul@product
  7533  0001' 0187'              	clrf	___wmul@product+1
  7534  0002'                    l3095:
  7535  0002' 1C02'              	btfss	___wmul@multiplier,0
  7536  0003' 2800'              	goto	u4901
  7537  0004' 2800'              	goto	u4900
  7538  0005'                    u4901:
  7539  0005' 2800'              	goto	l374
  7540  0006'                    u4900:
  7541  0006'                    l3097:
  7542  0006' 0804'              	movf	___wmul@multiplicand,w
  7543  0007' 0786'              	addwf	___wmul@product,f
  7544  0008' 1803               	skipnc
  7545  0009' 0A87'              	incf	___wmul@product+1,f
  7546  000A' 0805'              	movf	___wmul@multiplicand+1,w
  7547  000B' 0787'              	addwf	___wmul@product+1,f
  7548  000C'                    l374:
  7549  000C' 3001               	movlw	1
  7550  000D'                    u4915:
  7551  000D' 1003               	clrc
  7552  000E' 0D84'              	rlf	___wmul@multiplicand,f
  7553  000F' 0D85'              	rlf	___wmul@multiplicand+1,f
  7554  0010' 3EFF               	addlw	-1
  7555  0011' 1D03               	skipz
  7556  0012' 2800'              	goto	u4915
  7557  0013'                    l3099:
  7558  0013' 3001               	movlw	1
  7559  0014'                    u4925:
  7560  0014' 1003               	clrc
  7561  0015' 0C83'              	rrf	___wmul@multiplier+1,f
  7562  0016' 0C82'              	rrf	___wmul@multiplier,f
  7563  0017' 3EFF               	addlw	-1
  7564  0018' 1D03               	skipz
  7565  0019' 2800'              	goto	u4925
  7566  001A'                    l3101:
  7567  001A' 0802'              	movf	___wmul@multiplier,w
  7568  001B' 0403'              	iorwf	___wmul@multiplier+1,w
  7569  001C' 1D03               	btfss	3,2
  7570  001D' 2800'              	goto	u4931
  7571  001E' 2800'              	goto	u4930
  7572  001F'                    u4931:
  7573  001F' 2800'              	goto	l3095
  7574  0020'                    u4930:
  7575  0020'                    l3103:
  7576  0020' 0807'              	movf	___wmul@product+1,w
  7577  0021' 0083'              	movwf	?___wmul+1
  7578  0022' 0806'              	movf	___wmul@product,w
  7579  0023' 0082'              	movwf	?___wmul
  7580  0024'                    l376:
  7581  0024' 0008               	return
  7582  0025'                    __end_of___wmul:
  7583                           
  7584                           	psect	text15
  7585  0000'                    __ptext15:	
  7586 ;; *************** function ___llmod *****************
  7587 ;; Defined at:
  7588 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  7589 ;; Parameters:    Size  Location     Type
  7590 ;;  divisor         4    2[COMMON] unsigned long 
  7591 ;;  dividend        4    6[COMMON] unsigned long 
  7592 ;; Auto vars:     Size  Location     Type
  7593 ;;  counter         1    1[BANK0 ] unsigned char 
  7594 ;; Return value:  Size  Location     Type
  7595 ;;                  4    2[COMMON] unsigned long 
  7596 ;; Registers used:
  7597 ;;		wreg, status,2, status,0
  7598 ;; Tracked objects:
  7599 ;;		On entry : 0/0
  7600 ;;		On exit  : 0/0
  7601 ;;		Unchanged: 0/0
  7602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7603 ;;      Params:         8       0       0       0       0
  7604 ;;      Locals:         0       1       0       0       0
  7605 ;;      Temps:          0       1       0       0       0
  7606 ;;      Totals:         8       2       0       0       0
  7607 ;;Total ram usage:       10 bytes
  7608 ;; Hardware stack levels used: 1
  7609 ;; Hardware stack levels required when called: 1
  7610 ;; This function calls:
  7611 ;;		Nothing
  7612 ;; This function is called by:
  7613 ;;		_sprintf
  7614 ;; This function uses a non-reentrant model
  7615 ;;
  7616                           
  7617  0000'                    ___llmod:	
  7618                           ;psect for function ___llmod
  7619                           
  7620  0000'                    l4209:	
  7621                           ;incstack = 0
  7622                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7623                           
  7624  0000' 0805'              	movf	___llmod@divisor+3,w
  7625  0001' 0404'              	iorwf	___llmod@divisor+2,w
  7626  0002' 0403'              	iorwf	___llmod@divisor+1,w
  7627  0003' 0402'              	iorwf	___llmod@divisor,w
  7628  0004' 1903               	skipnz
  7629  0005' 2800'              	goto	u7231
  7630  0006' 2800'              	goto	u7230
  7631  0007'                    u7231:
  7632  0007' 2800'              	goto	l4225
  7633  0008'                    u7230:
  7634  0008'                    l4211:
  7635  0008' 1283               	bcf	3,5	;RP0=0, select bank0
  7636  0009' 1303               	bcf	3,6	;RP1=0, select bank0
  7637  000A' 0181'              	clrf	___llmod@counter
  7638  000B' 0A81'              	incf	___llmod@counter,f
  7639  000C' 2800'              	goto	l4215
  7640  000D'                    l4213:
  7641  000D' 3001               	movlw	1
  7642  000E' 0080'              	movwf	??___llmod
  7643  000F'                    u7245:
  7644  000F' 1003               	clrc
  7645  0010' 0D82'              	rlf	___llmod@divisor,f
  7646  0011' 0D83'              	rlf	___llmod@divisor+1,f
  7647  0012' 0D84'              	rlf	___llmod@divisor+2,f
  7648  0013' 0D85'              	rlf	___llmod@divisor+3,f
  7649  0014' 0B80'              	decfsz	??___llmod,f
  7650  0015' 2800'              	goto	u7245
  7651  0016' 3001               	movlw	1
  7652  0017' 0080'              	movwf	??___llmod
  7653  0018' 0800'              	movf	??___llmod,w
  7654  0019' 0781'              	addwf	___llmod@counter,f
  7655  001A'                    l4215:
  7656  001A' 1F85'              	btfss	___llmod@divisor+3,7
  7657  001B' 2800'              	goto	u7251
  7658  001C' 2800'              	goto	u7250
  7659  001D'                    u7251:
  7660  001D' 2800'              	goto	l4213
  7661  001E'                    u7250:
  7662  001E'                    l4217:
  7663  001E' 0805'              	movf	___llmod@divisor+3,w
  7664  001F' 0209'              	subwf	___llmod@dividend+3,w
  7665  0020' 1D03               	skipz
  7666  0021' 2800'              	goto	u7265
  7667  0022' 0804'              	movf	___llmod@divisor+2,w
  7668  0023' 0208'              	subwf	___llmod@dividend+2,w
  7669  0024' 1D03               	skipz
  7670  0025' 2800'              	goto	u7265
  7671  0026' 0803'              	movf	___llmod@divisor+1,w
  7672  0027' 0207'              	subwf	___llmod@dividend+1,w
  7673  0028' 1D03               	skipz
  7674  0029' 2800'              	goto	u7265
  7675  002A' 0802'              	movf	___llmod@divisor,w
  7676  002B' 0206'              	subwf	___llmod@dividend,w
  7677  002C'                    u7265:
  7678  002C' 1C03               	skipc
  7679  002D' 2800'              	goto	u7261
  7680  002E' 2800'              	goto	u7260
  7681  002F'                    u7261:
  7682  002F' 2800'              	goto	l4221
  7683  0030'                    u7260:
  7684  0030'                    l4219:
  7685  0030' 0802'              	movf	___llmod@divisor,w
  7686  0031' 0286'              	subwf	___llmod@dividend,f
  7687  0032' 0803'              	movf	___llmod@divisor+1,w
  7688  0033' 1C03               	skipc
  7689  0034' 0F03'              	incfsz	___llmod@divisor+1,w
  7690  0035' 0287'              	subwf	___llmod@dividend+1,f
  7691  0036' 0804'              	movf	___llmod@divisor+2,w
  7692  0037' 1C03               	skipc
  7693  0038' 0F04'              	incfsz	___llmod@divisor+2,w
  7694  0039' 0288'              	subwf	___llmod@dividend+2,f
  7695  003A' 0805'              	movf	___llmod@divisor+3,w
  7696  003B' 1C03               	skipc
  7697  003C' 0F05'              	incfsz	___llmod@divisor+3,w
  7698  003D' 0289'              	subwf	___llmod@dividend+3,f
  7699  003E'                    l4221:
  7700  003E' 3001               	movlw	1
  7701  003F'                    u7275:
  7702  003F' 1003               	clrc
  7703  0040' 0C85'              	rrf	___llmod@divisor+3,f
  7704  0041' 0C84'              	rrf	___llmod@divisor+2,f
  7705  0042' 0C83'              	rrf	___llmod@divisor+1,f
  7706  0043' 0C82'              	rrf	___llmod@divisor,f
  7707  0044' 3EFF               	addlw	-1
  7708  0045' 1D03               	skipz
  7709  0046' 2800'              	goto	u7275
  7710  0047'                    l4223:
  7711  0047' 3001               	movlw	1
  7712  0048' 0281'              	subwf	___llmod@counter,f
  7713  0049' 1D03               	btfss	3,2
  7714  004A' 2800'              	goto	u7281
  7715  004B' 2800'              	goto	u7280
  7716  004C'                    u7281:
  7717  004C' 2800'              	goto	l4217
  7718  004D'                    u7280:
  7719  004D'                    l4225:
  7720  004D' 0809'              	movf	___llmod@dividend+3,w
  7721  004E' 0085'              	movwf	?___llmod+3
  7722  004F' 0808'              	movf	___llmod@dividend+2,w
  7723  0050' 0084'              	movwf	?___llmod+2
  7724  0051' 0807'              	movf	___llmod@dividend+1,w
  7725  0052' 0083'              	movwf	?___llmod+1
  7726  0053' 0806'              	movf	___llmod@dividend,w
  7727  0054' 0082'              	movwf	?___llmod
  7728  0055'                    l630:
  7729  0055' 0008               	return
  7730  0056'                    __end_of___llmod:
  7731                           
  7732                           	psect	text16
  7733  0000'                    __ptext16:	
  7734 ;; *************** function ___lldiv *****************
  7735 ;; Defined at:
  7736 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  7737 ;; Parameters:    Size  Location     Type
  7738 ;;  divisor         4    2[COMMON] unsigned long 
  7739 ;;  dividend        4    6[COMMON] unsigned long 
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;  quotient        4    1[BANK0 ] unsigned long 
  7742 ;;  counter         1    5[BANK0 ] unsigned char 
  7743 ;; Return value:  Size  Location     Type
  7744 ;;                  4    2[COMMON] unsigned long 
  7745 ;; Registers used:
  7746 ;;		wreg, status,2, status,0
  7747 ;; Tracked objects:
  7748 ;;		On entry : 0/0
  7749 ;;		On exit  : 0/0
  7750 ;;		Unchanged: 0/0
  7751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7752 ;;      Params:         8       0       0       0       0
  7753 ;;      Locals:         0       5       0       0       0
  7754 ;;      Temps:          0       1       0       0       0
  7755 ;;      Totals:         8       6       0       0       0
  7756 ;;Total ram usage:       14 bytes
  7757 ;; Hardware stack levels used: 1
  7758 ;; Hardware stack levels required when called: 1
  7759 ;; This function calls:
  7760 ;;		Nothing
  7761 ;; This function is called by:
  7762 ;;		_sprintf
  7763 ;; This function uses a non-reentrant model
  7764 ;;
  7765                           
  7766  0000'                    ___lldiv:	
  7767                           ;psect for function ___lldiv
  7768                           
  7769  0000'                    l4185:	
  7770                           ;incstack = 0
  7771                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7772                           
  7773  0000' 3000               	movlw	0
  7774  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  7775  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  7776  0003' 0084'              	movwf	___lldiv@quotient+3
  7777  0004' 3000               	movlw	0
  7778  0005' 0083'              	movwf	___lldiv@quotient+2
  7779  0006' 3000               	movlw	0
  7780  0007' 0082'              	movwf	___lldiv@quotient+1
  7781  0008' 3000               	movlw	0
  7782  0009' 0081'              	movwf	___lldiv@quotient
  7783  000A' 0805'              	movf	___lldiv@divisor+3,w
  7784  000B' 0404'              	iorwf	___lldiv@divisor+2,w
  7785  000C' 0403'              	iorwf	___lldiv@divisor+1,w
  7786  000D' 0402'              	iorwf	___lldiv@divisor,w
  7787  000E' 1903               	skipnz
  7788  000F' 2800'              	goto	u7161
  7789  0010' 2800'              	goto	u7160
  7790  0011'                    u7161:
  7791  0011' 2800'              	goto	l4205
  7792  0012'                    u7160:
  7793  0012'                    l4187:
  7794  0012' 0185'              	clrf	___lldiv@counter
  7795  0013' 0A85'              	incf	___lldiv@counter,f
  7796  0014' 2800'              	goto	l4191
  7797  0015'                    l4189:
  7798  0015' 3001               	movlw	1
  7799  0016' 0080'              	movwf	??___lldiv
  7800  0017'                    u7175:
  7801  0017' 1003               	clrc
  7802  0018' 0D82'              	rlf	___lldiv@divisor,f
  7803  0019' 0D83'              	rlf	___lldiv@divisor+1,f
  7804  001A' 0D84'              	rlf	___lldiv@divisor+2,f
  7805  001B' 0D85'              	rlf	___lldiv@divisor+3,f
  7806  001C' 0B80'              	decfsz	??___lldiv,f
  7807  001D' 2800'              	goto	u7175
  7808  001E' 3001               	movlw	1
  7809  001F' 0080'              	movwf	??___lldiv
  7810  0020' 0800'              	movf	??___lldiv,w
  7811  0021' 0785'              	addwf	___lldiv@counter,f
  7812  0022'                    l4191:
  7813  0022' 1F85'              	btfss	___lldiv@divisor+3,7
  7814  0023' 2800'              	goto	u7181
  7815  0024' 2800'              	goto	u7180
  7816  0025'                    u7181:
  7817  0025' 2800'              	goto	l4189
  7818  0026'                    u7180:
  7819  0026'                    l4193:
  7820  0026' 3001               	movlw	1
  7821  0027' 0080'              	movwf	??___lldiv
  7822  0028'                    u7195:
  7823  0028' 1003               	clrc
  7824  0029' 0D81'              	rlf	___lldiv@quotient,f
  7825  002A' 0D82'              	rlf	___lldiv@quotient+1,f
  7826  002B' 0D83'              	rlf	___lldiv@quotient+2,f
  7827  002C' 0D84'              	rlf	___lldiv@quotient+3,f
  7828  002D' 0B80'              	decfsz	??___lldiv,f
  7829  002E' 2800'              	goto	u7195
  7830  002F'                    l4195:
  7831  002F' 0805'              	movf	___lldiv@divisor+3,w
  7832  0030' 0209'              	subwf	___lldiv@dividend+3,w
  7833  0031' 1D03               	skipz
  7834  0032' 2800'              	goto	u7205
  7835  0033' 0804'              	movf	___lldiv@divisor+2,w
  7836  0034' 0208'              	subwf	___lldiv@dividend+2,w
  7837  0035' 1D03               	skipz
  7838  0036' 2800'              	goto	u7205
  7839  0037' 0803'              	movf	___lldiv@divisor+1,w
  7840  0038' 0207'              	subwf	___lldiv@dividend+1,w
  7841  0039' 1D03               	skipz
  7842  003A' 2800'              	goto	u7205
  7843  003B' 0802'              	movf	___lldiv@divisor,w
  7844  003C' 0206'              	subwf	___lldiv@dividend,w
  7845  003D'                    u7205:
  7846  003D' 1C03               	skipc
  7847  003E' 2800'              	goto	u7201
  7848  003F' 2800'              	goto	u7200
  7849  0040'                    u7201:
  7850  0040' 2800'              	goto	l4201
  7851  0041'                    u7200:
  7852  0041'                    l4197:
  7853  0041' 0802'              	movf	___lldiv@divisor,w
  7854  0042' 0286'              	subwf	___lldiv@dividend,f
  7855  0043' 0803'              	movf	___lldiv@divisor+1,w
  7856  0044' 1C03               	skipc
  7857  0045' 0F03'              	incfsz	___lldiv@divisor+1,w
  7858  0046' 0287'              	subwf	___lldiv@dividend+1,f
  7859  0047' 0804'              	movf	___lldiv@divisor+2,w
  7860  0048' 1C03               	skipc
  7861  0049' 0F04'              	incfsz	___lldiv@divisor+2,w
  7862  004A' 0288'              	subwf	___lldiv@dividend+2,f
  7863  004B' 0805'              	movf	___lldiv@divisor+3,w
  7864  004C' 1C03               	skipc
  7865  004D' 0F05'              	incfsz	___lldiv@divisor+3,w
  7866  004E' 0289'              	subwf	___lldiv@dividend+3,f
  7867  004F'                    l4199:
  7868  004F' 1401'              	bsf	___lldiv@quotient,0
  7869  0050'                    l4201:
  7870  0050' 3001               	movlw	1
  7871  0051'                    u7215:
  7872  0051' 1003               	clrc
  7873  0052' 0C85'              	rrf	___lldiv@divisor+3,f
  7874  0053' 0C84'              	rrf	___lldiv@divisor+2,f
  7875  0054' 0C83'              	rrf	___lldiv@divisor+1,f
  7876  0055' 0C82'              	rrf	___lldiv@divisor,f
  7877  0056' 3EFF               	addlw	-1
  7878  0057' 1D03               	skipz
  7879  0058' 2800'              	goto	u7215
  7880  0059'                    l4203:
  7881  0059' 3001               	movlw	1
  7882  005A' 0285'              	subwf	___lldiv@counter,f
  7883  005B' 1D03               	btfss	3,2
  7884  005C' 2800'              	goto	u7221
  7885  005D' 2800'              	goto	u7220
  7886  005E'                    u7221:
  7887  005E' 2800'              	goto	l4193
  7888  005F'                    u7220:
  7889  005F'                    l4205:
  7890  005F' 0804'              	movf	___lldiv@quotient+3,w
  7891  0060' 0085'              	movwf	?___lldiv+3
  7892  0061' 0803'              	movf	___lldiv@quotient+2,w
  7893  0062' 0084'              	movwf	?___lldiv+2
  7894  0063' 0802'              	movf	___lldiv@quotient+1,w
  7895  0064' 0083'              	movwf	?___lldiv+1
  7896  0065' 0801'              	movf	___lldiv@quotient,w
  7897  0066' 0082'              	movwf	?___lldiv
  7898  0067'                    l410:
  7899  0067' 0008               	return
  7900  0068'                    __end_of___lldiv:
  7901                           
  7902                           	psect	text17
  7903  0000'                    __ptext17:	
  7904 ;; *************** function ___fltol *****************
  7905 ;; Defined at:
  7906 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  7907 ;; Parameters:    Size  Location     Type
  7908 ;;  f1              4   53[BANK0 ] unsigned long 
  7909 ;; Auto vars:     Size  Location     Type
  7910 ;;  exp1            1   62[BANK0 ] unsigned char 
  7911 ;;  sign1           1   61[BANK0 ] unsigned char 
  7912 ;; Return value:  Size  Location     Type
  7913 ;;                  4   53[BANK0 ] long 
  7914 ;; Registers used:
  7915 ;;		wreg, status,2, status,0
  7916 ;; Tracked objects:
  7917 ;;		On entry : 0/0
  7918 ;;		On exit  : 0/0
  7919 ;;		Unchanged: 0/0
  7920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7921 ;;      Params:         0       4       0       0       0
  7922 ;;      Locals:         0       2       0       0       0
  7923 ;;      Temps:          0       4       0       0       0
  7924 ;;      Totals:         0      10       0       0       0
  7925 ;;Total ram usage:       10 bytes
  7926 ;; Hardware stack levels used: 1
  7927 ;; Hardware stack levels required when called: 1
  7928 ;; This function calls:
  7929 ;;		Nothing
  7930 ;; This function is called by:
  7931 ;;		_sprintf
  7932 ;; This function uses a non-reentrant model
  7933 ;;
  7934                           
  7935  0000'                    ___fltol:	
  7936                           ;psect for function ___fltol
  7937                           
  7938  0000'                    l3171:	
  7939                           ;incstack = 0
  7940                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7941                           
  7942  0000' 1003               	clrc
  7943  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  7944  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  7945  0003' 0D37'              	rlf	___fltol@f1+2,w
  7946  0004' 0D38'              	rlf	___fltol@f1+3,w
  7947  0005' 00BE'              	movwf	___fltol@exp1
  7948  0006' 083E'              	movf	___fltol@exp1,w
  7949  0007' 1D03               	btfss	3,2
  7950  0008' 2800'              	goto	u5121
  7951  0009' 2800'              	goto	u5120
  7952  000A'                    u5121:
  7953  000A' 2800'              	goto	l3177
  7954  000B'                    u5120:
  7955  000B'                    l3173:
  7956  000B' 3000               	movlw	0
  7957  000C' 00B8'              	movwf	?___fltol+3
  7958  000D' 3000               	movlw	0
  7959  000E' 00B7'              	movwf	?___fltol+2
  7960  000F' 3000               	movlw	0
  7961  0010' 00B6'              	movwf	?___fltol+1
  7962  0011' 3000               	movlw	0
  7963  0012' 00B5'              	movwf	?___fltol
  7964  0013' 2800'              	goto	l577
  7965  0014'                    l3177:
  7966  0014' 0835'              	movf	___fltol@f1,w
  7967  0015' 00B9'              	movwf	??___fltol
  7968  0016' 0836'              	movf	___fltol@f1+1,w
  7969  0017' 00BA'              	movwf	??___fltol+1
  7970  0018' 0837'              	movf	___fltol@f1+2,w
  7971  0019' 00BB'              	movwf	??___fltol+2
  7972  001A' 0838'              	movf	___fltol@f1+3,w
  7973  001B' 00BC'              	movwf	??___fltol+3
  7974  001C' 301F               	movlw	31
  7975  001D'                    u5135:
  7976  001D' 1003               	clrc
  7977  001E' 0CBC'              	rrf	??___fltol+3,f
  7978  001F' 0CBB'              	rrf	??___fltol+2,f
  7979  0020' 0CBA'              	rrf	??___fltol+1,f
  7980  0021' 0CB9'              	rrf	??___fltol,f
  7981  0022'                    u5130:
  7982  0022' 3EFF               	addlw	-1
  7983  0023' 1D03               	skipz
  7984  0024' 2800'              	goto	u5135
  7985  0025' 0839'              	movf	??___fltol,w
  7986  0026' 00BD'              	movwf	___fltol@sign1
  7987  0027'                    l3179:
  7988  0027' 17B7'              	bsf	___fltol@f1+2,7
  7989  0028'                    l3181:
  7990  0028' 30FF               	movlw	255
  7991  0029' 05B5'              	andwf	___fltol@f1,f
  7992  002A' 30FF               	movlw	255
  7993  002B' 05B6'              	andwf	___fltol@f1+1,f
  7994  002C' 30FF               	movlw	255
  7995  002D' 05B7'              	andwf	___fltol@f1+2,f
  7996  002E' 3000               	movlw	0
  7997  002F' 05B8'              	andwf	___fltol@f1+3,f
  7998  0030'                    l3183:
  7999  0030' 3096               	movlw	150
  8000  0031' 02BE'              	subwf	___fltol@exp1,f
  8001  0032'                    l3185:
  8002  0032' 1FBE'              	btfss	___fltol@exp1,7
  8003  0033' 2800'              	goto	u5141
  8004  0034' 2800'              	goto	u5140
  8005  0035'                    u5141:
  8006  0035' 2800'              	goto	l3195
  8007  0036'                    u5140:
  8008  0036'                    l3187:
  8009  0036' 083E'              	movf	___fltol@exp1,w
  8010  0037' 3A80               	xorlw	128
  8011  0038' 3E97               	addlw	151
  8012  0039' 1803               	skipnc
  8013  003A' 2800'              	goto	u5151
  8014  003B' 2800'              	goto	u5150
  8015  003C'                    u5151:
  8016  003C' 2800'              	goto	l3193
  8017  003D'                    u5150:
  8018  003D' 2800'              	goto	l3173
  8019  003E'                    l3193:
  8020  003E' 3001               	movlw	1
  8021  003F'                    u5165:
  8022  003F' 1003               	clrc
  8023  0040' 0CB8'              	rrf	___fltol@f1+3,f
  8024  0041' 0CB7'              	rrf	___fltol@f1+2,f
  8025  0042' 0CB6'              	rrf	___fltol@f1+1,f
  8026  0043' 0CB5'              	rrf	___fltol@f1,f
  8027  0044' 3EFF               	addlw	-1
  8028  0045' 1D03               	skipz
  8029  0046' 2800'              	goto	u5165
  8030  0047' 3001               	movlw	1
  8031  0048' 00B9'              	movwf	??___fltol
  8032  0049' 0839'              	movf	??___fltol,w
  8033  004A' 07BE'              	addwf	___fltol@exp1,f
  8034  004B' 1D03               	btfss	3,2
  8035  004C' 2800'              	goto	u5171
  8036  004D' 2800'              	goto	u5170
  8037  004E'                    u5171:
  8038  004E' 2800'              	goto	l3193
  8039  004F'                    u5170:
  8040  004F' 2800'              	goto	l3203
  8041  0050'                    l3195:
  8042  0050' 3020               	movlw	32
  8043  0051' 023E'              	subwf	___fltol@exp1,w
  8044  0052' 1C03               	skipc
  8045  0053' 2800'              	goto	u5181
  8046  0054' 2800'              	goto	u5180
  8047  0055'                    u5181:
  8048  0055' 2800'              	goto	l584
  8049  0056'                    u5180:
  8050  0056' 2800'              	goto	l3173
  8051  0057'                    l3201:
  8052  0057' 3001               	movlw	1
  8053  0058' 00B9'              	movwf	??___fltol
  8054  0059'                    u5195:
  8055  0059' 1003               	clrc
  8056  005A' 0DB5'              	rlf	___fltol@f1,f
  8057  005B' 0DB6'              	rlf	___fltol@f1+1,f
  8058  005C' 0DB7'              	rlf	___fltol@f1+2,f
  8059  005D' 0DB8'              	rlf	___fltol@f1+3,f
  8060  005E' 0BB9'              	decfsz	??___fltol,f
  8061  005F' 2800'              	goto	u5195
  8062  0060' 3001               	movlw	1
  8063  0061' 02BE'              	subwf	___fltol@exp1,f
  8064  0062'                    l584:
  8065  0062' 083E'              	movf	___fltol@exp1,w
  8066  0063' 1D03               	btfss	3,2
  8067  0064' 2800'              	goto	u5201
  8068  0065' 2800'              	goto	u5200
  8069  0066'                    u5201:
  8070  0066' 2800'              	goto	l3201
  8071  0067'                    u5200:
  8072  0067'                    l3203:
  8073  0067' 083D'              	movf	___fltol@sign1,w
  8074  0068' 1903               	btfsc	3,2
  8075  0069' 2800'              	goto	u5211
  8076  006A' 2800'              	goto	u5210
  8077  006B'                    u5211:
  8078  006B' 2800'              	goto	l587
  8079  006C'                    u5210:
  8080  006C'                    l3205:
  8081  006C' 09B5'              	comf	___fltol@f1,f
  8082  006D' 09B6'              	comf	___fltol@f1+1,f
  8083  006E' 09B7'              	comf	___fltol@f1+2,f
  8084  006F' 09B8'              	comf	___fltol@f1+3,f
  8085  0070' 0AB5'              	incf	___fltol@f1,f
  8086  0071' 1903               	skipnz
  8087  0072' 0AB6'              	incf	___fltol@f1+1,f
  8088  0073' 1903               	skipnz
  8089  0074' 0AB7'              	incf	___fltol@f1+2,f
  8090  0075' 1903               	skipnz
  8091  0076' 0AB8'              	incf	___fltol@f1+3,f
  8092  0077'                    l587:
  8093  0077'                    l577:
  8094  0077' 0008               	return
  8095  0078'                    __end_of___fltol:
  8096                           
  8097                           	psect	text18
  8098  0000'                    __ptext18:	
  8099 ;; *************** function ___flsub *****************
  8100 ;; Defined at:
  8101 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  8102 ;; Parameters:    Size  Location     Type
  8103 ;;  a               4    0[BANK1 ] long 
  8104 ;;  b               4    4[BANK1 ] long 
  8105 ;; Auto vars:     Size  Location     Type
  8106 ;;		None
  8107 ;; Return value:  Size  Location     Type
  8108 ;;                  4    0[BANK1 ] long 
  8109 ;; Registers used:
  8110 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8111 ;; Tracked objects:
  8112 ;;		On entry : 0/0
  8113 ;;		On exit  : 0/0
  8114 ;;		Unchanged: 0/0
  8115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8116 ;;      Params:         0       0       8       0       0
  8117 ;;      Locals:         0       0       0       0       0
  8118 ;;      Temps:          0       0       0       0       0
  8119 ;;      Totals:         0       0       8       0       0
  8120 ;;Total ram usage:        8 bytes
  8121 ;; Hardware stack levels used: 1
  8122 ;; Hardware stack levels required when called: 2
  8123 ;; This function calls:
  8124 ;;		___fladd
  8125 ;; This function is called by:
  8126 ;;		_sprintf
  8127 ;; This function uses a non-reentrant model
  8128 ;;
  8129                           
  8130  0000'                    ___flsub:	
  8131                           ;psect for function ___flsub
  8132                           
  8133  0000'                    l3227:	
  8134                           ;incstack = 0
  8135                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8136                           
  8137  0000' 3080               	movlw	128
  8138  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  8139  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  8140  0003' 0680'              	xorwf	(___flsub@a+3)^(0+128),f
  8141  0004'                    l3229:
  8142  0004' 0800'              	movf	(___flsub@b+3)^(0+128),w
  8143  0005' 1283               	bcf	3,5	;RP0=0, select bank0
  8144  0006' 1303               	bcf	3,6	;RP1=0, select bank0
  8145  0007' 00B9'              	movwf	___fladd@b+3
  8146  0008' 1683               	bsf	3,5	;RP0=1, select bank1
  8147  0009' 1303               	bcf	3,6	;RP1=0, select bank1
  8148  000A' 0800'              	movf	(___flsub@b+2)^(0+128),w
  8149  000B' 1283               	bcf	3,5	;RP0=0, select bank0
  8150  000C' 1303               	bcf	3,6	;RP1=0, select bank0
  8151  000D' 00B8'              	movwf	___fladd@b+2
  8152  000E' 1683               	bsf	3,5	;RP0=1, select bank1
  8153  000F' 1303               	bcf	3,6	;RP1=0, select bank1
  8154  0010' 0800'              	movf	(___flsub@b+1)^(0+128),w
  8155  0011' 1283               	bcf	3,5	;RP0=0, select bank0
  8156  0012' 1303               	bcf	3,6	;RP1=0, select bank0
  8157  0013' 00B7'              	movwf	___fladd@b+1
  8158  0014' 1683               	bsf	3,5	;RP0=1, select bank1
  8159  0015' 1303               	bcf	3,6	;RP1=0, select bank1
  8160  0016' 0800'              	movf	___flsub@b^(0+128),w
  8161  0017' 1283               	bcf	3,5	;RP0=0, select bank0
  8162  0018' 1303               	bcf	3,6	;RP1=0, select bank0
  8163  0019' 00B6'              	movwf	___fladd@b
  8164  001A' 1683               	bsf	3,5	;RP0=1, select bank1
  8165  001B' 1303               	bcf	3,6	;RP1=0, select bank1
  8166  001C' 0800'              	movf	(___flsub@a+3)^(0+128),w
  8167  001D' 1283               	bcf	3,5	;RP0=0, select bank0
  8168  001E' 1303               	bcf	3,6	;RP1=0, select bank0
  8169  001F' 00BD'              	movwf	___fladd@a+3
  8170  0020' 1683               	bsf	3,5	;RP0=1, select bank1
  8171  0021' 1303               	bcf	3,6	;RP1=0, select bank1
  8172  0022' 0800'              	movf	(___flsub@a+2)^(0+128),w
  8173  0023' 1283               	bcf	3,5	;RP0=0, select bank0
  8174  0024' 1303               	bcf	3,6	;RP1=0, select bank0
  8175  0025' 00BC'              	movwf	___fladd@a+2
  8176  0026' 1683               	bsf	3,5	;RP0=1, select bank1
  8177  0027' 1303               	bcf	3,6	;RP1=0, select bank1
  8178  0028' 0800'              	movf	(___flsub@a+1)^(0+128),w
  8179  0029' 1283               	bcf	3,5	;RP0=0, select bank0
  8180  002A' 1303               	bcf	3,6	;RP1=0, select bank0
  8181  002B' 00BB'              	movwf	___fladd@a+1
  8182  002C' 1683               	bsf	3,5	;RP0=1, select bank1
  8183  002D' 1303               	bcf	3,6	;RP1=0, select bank1
  8184  002E' 0800'              	movf	___flsub@a^(0+128),w
  8185  002F' 1283               	bcf	3,5	;RP0=0, select bank0
  8186  0030' 1303               	bcf	3,6	;RP1=0, select bank0
  8187  0031' 00BA'              	movwf	___fladd@a
  8188  0032' 120A' 118A' 2000' 120A' 118A' 	fcall	___fladd
  8189  0037' 1283               	bcf	3,5	;RP0=0, select bank0
  8190  0038' 1303               	bcf	3,6	;RP1=0, select bank0
  8191  0039' 0839'              	movf	?___fladd+3,w
  8192  003A' 1683               	bsf	3,5	;RP0=1, select bank1
  8193  003B' 1303               	bcf	3,6	;RP1=0, select bank1
  8194  003C' 0080'              	movwf	(?___flsub+3)^(0+128)
  8195  003D' 1283               	bcf	3,5	;RP0=0, select bank0
  8196  003E' 1303               	bcf	3,6	;RP1=0, select bank0
  8197  003F' 0838'              	movf	?___fladd+2,w
  8198  0040' 1683               	bsf	3,5	;RP0=1, select bank1
  8199  0041' 1303               	bcf	3,6	;RP1=0, select bank1
  8200  0042' 0080'              	movwf	(?___flsub+2)^(0+128)
  8201  0043' 1283               	bcf	3,5	;RP0=0, select bank0
  8202  0044' 1303               	bcf	3,6	;RP1=0, select bank0
  8203  0045' 0837'              	movf	?___fladd+1,w
  8204  0046' 1683               	bsf	3,5	;RP0=1, select bank1
  8205  0047' 1303               	bcf	3,6	;RP1=0, select bank1
  8206  0048' 0080'              	movwf	(?___flsub+1)^(0+128)
  8207  0049' 1283               	bcf	3,5	;RP0=0, select bank0
  8208  004A' 1303               	bcf	3,6	;RP1=0, select bank0
  8209  004B' 0836'              	movf	?___fladd,w
  8210  004C' 1683               	bsf	3,5	;RP0=1, select bank1
  8211  004D' 1303               	bcf	3,6	;RP1=0, select bank1
  8212  004E' 0080'              	movwf	?___flsub^(0+128)
  8213  004F'                    l747:
  8214  004F' 0008               	return
  8215  0050'                    __end_of___flsub:
  8216                           
  8217                           	psect	text19
  8218  0000'                    __ptext19:	
  8219 ;; *************** function ___fladd *****************
  8220 ;; Defined at:
  8221 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  8222 ;; Parameters:    Size  Location     Type
  8223 ;;  b               4   54[BANK0 ] long 
  8224 ;;  a               4   58[BANK0 ] long 
  8225 ;; Auto vars:     Size  Location     Type
  8226 ;;  grs             1   73[BANK0 ] unsigned char 
  8227 ;;  bexp            1   72[BANK0 ] unsigned char 
  8228 ;;  aexp            1   71[BANK0 ] unsigned char 
  8229 ;;  signs           1   70[BANK0 ] unsigned char 
  8230 ;; Return value:  Size  Location     Type
  8231 ;;                  4   54[BANK0 ] unsigned char 
  8232 ;; Registers used:
  8233 ;;		wreg, status,2, status,0, btemp+1
  8234 ;; Tracked objects:
  8235 ;;		On entry : 0/0
  8236 ;;		On exit  : 0/0
  8237 ;;		Unchanged: 0/0
  8238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8239 ;;      Params:         0       8       0       0       0
  8240 ;;      Locals:         0       4       0       0       0
  8241 ;;      Temps:          0       8       0       0       0
  8242 ;;      Totals:         0      20       0       0       0
  8243 ;;Total ram usage:       20 bytes
  8244 ;; Hardware stack levels used: 1
  8245 ;; Hardware stack levels required when called: 1
  8246 ;; This function calls:
  8247 ;;		Nothing
  8248 ;; This function is called by:
  8249 ;;		_sprintf
  8250 ;;		___flsub
  8251 ;; This function uses a non-reentrant model
  8252 ;;
  8253                           
  8254  0000'                    ___fladd:	
  8255                           ;psect for function ___fladd
  8256                           
  8257  0000'                    l2555:	
  8258                           ;incstack = 0
  8259                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8260                           
  8261  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8262  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8263  0002' 0839'              	movf	___fladd@b+3,w
  8264  0003' 3980               	andlw	128
  8265  0004' 00C6'              	movwf	___fladd@signs
  8266  0005'                    l2557:
  8267  0005' 0839'              	movf	___fladd@b+3,w
  8268  0006' 00BE'              	movwf	??___fladd
  8269  0007' 073E'              	addwf	??___fladd,w
  8270  0008' 00C8'              	movwf	___fladd@bexp
  8271  0009'                    l2559:
  8272  0009' 1FB8'              	btfss	___fladd@b+2,7
  8273  000A' 2800'              	goto	u3531
  8274  000B' 2800'              	goto	u3530
  8275  000C'                    u3531:
  8276  000C' 2800'              	goto	l2563
  8277  000D'                    u3530:
  8278  000D'                    l2561:
  8279  000D' 1448'              	bsf	___fladd@bexp,0
  8280  000E'                    l2563:
  8281  000E' 0848'              	movf	___fladd@bexp,w
  8282  000F' 1903               	btfsc	3,2
  8283  0010' 2800'              	goto	u3541
  8284  0011' 2800'              	goto	u3540
  8285  0012'                    u3541:
  8286  0012' 2800'              	goto	l2573
  8287  0013'                    u3540:
  8288  0013'                    l2565:
  8289  0013' 0A48'              	incf	___fladd@bexp,w
  8290  0014' 1D03               	btfss	3,2
  8291  0015' 2800'              	goto	u3551
  8292  0016' 2800'              	goto	u3550
  8293  0017'                    u3551:
  8294  0017' 2800'              	goto	l2569
  8295  0018'                    u3550:
  8296  0018'                    l2567:
  8297  0018' 3000               	movlw	0
  8298  0019' 00B9'              	movwf	___fladd@b+3
  8299  001A' 3000               	movlw	0
  8300  001B' 00B8'              	movwf	___fladd@b+2
  8301  001C' 3000               	movlw	0
  8302  001D' 00B7'              	movwf	___fladd@b+1
  8303  001E' 3000               	movlw	0
  8304  001F' 00B6'              	movwf	___fladd@b
  8305  0020'                    l2569:
  8306  0020' 17B8'              	bsf	___fladd@b+2,7
  8307  0021'                    l2571:
  8308  0021' 01B9'              	clrf	___fladd@b+3
  8309  0022' 2800'              	goto	l2575
  8310  0023'                    l2573:
  8311  0023' 3000               	movlw	0
  8312  0024' 00B9'              	movwf	___fladd@b+3
  8313  0025' 3000               	movlw	0
  8314  0026' 00B8'              	movwf	___fladd@b+2
  8315  0027' 3000               	movlw	0
  8316  0028' 00B7'              	movwf	___fladd@b+1
  8317  0029' 3000               	movlw	0
  8318  002A' 00B6'              	movwf	___fladd@b
  8319  002B'                    l2575:
  8320  002B' 083D'              	movf	___fladd@a+3,w
  8321  002C' 3980               	andlw	128
  8322  002D' 00C7'              	movwf	___fladd@aexp
  8323  002E'                    l2577:
  8324  002E' 0847'              	movf	___fladd@aexp,w
  8325  002F' 0646'              	xorwf	___fladd@signs,w
  8326  0030' 1903               	skipnz
  8327  0031' 2800'              	goto	u3561
  8328  0032' 2800'              	goto	u3560
  8329  0033'                    u3561:
  8330  0033' 2800'              	goto	l2581
  8331  0034'                    u3560:
  8332  0034'                    l2579:
  8333  0034' 1746'              	bsf	___fladd@signs,6
  8334  0035'                    l2581:
  8335  0035' 083D'              	movf	___fladd@a+3,w
  8336  0036' 00BE'              	movwf	??___fladd
  8337  0037' 073E'              	addwf	??___fladd,w
  8338  0038' 00C7'              	movwf	___fladd@aexp
  8339  0039'                    l2583:
  8340  0039' 1FBC'              	btfss	___fladd@a+2,7
  8341  003A' 2800'              	goto	u3571
  8342  003B' 2800'              	goto	u3570
  8343  003C'                    u3571:
  8344  003C' 2800'              	goto	l2587
  8345  003D'                    u3570:
  8346  003D'                    l2585:
  8347  003D' 1447'              	bsf	___fladd@aexp,0
  8348  003E'                    l2587:
  8349  003E' 0847'              	movf	___fladd@aexp,w
  8350  003F' 1903               	btfsc	3,2
  8351  0040' 2800'              	goto	u3581
  8352  0041' 2800'              	goto	u3580
  8353  0042'                    u3581:
  8354  0042' 2800'              	goto	l2597
  8355  0043'                    u3580:
  8356  0043'                    l2589:
  8357  0043' 0A47'              	incf	___fladd@aexp,w
  8358  0044' 1D03               	btfss	3,2
  8359  0045' 2800'              	goto	u3591
  8360  0046' 2800'              	goto	u3590
  8361  0047'                    u3591:
  8362  0047' 2800'              	goto	l2593
  8363  0048'                    u3590:
  8364  0048'                    l2591:
  8365  0048' 3000               	movlw	0
  8366  0049' 00BD'              	movwf	___fladd@a+3
  8367  004A' 3000               	movlw	0
  8368  004B' 00BC'              	movwf	___fladd@a+2
  8369  004C' 3000               	movlw	0
  8370  004D' 00BB'              	movwf	___fladd@a+1
  8371  004E' 3000               	movlw	0
  8372  004F' 00BA'              	movwf	___fladd@a
  8373  0050'                    l2593:
  8374  0050' 17BC'              	bsf	___fladd@a+2,7
  8375  0051'                    l2595:
  8376  0051' 01BD'              	clrf	___fladd@a+3
  8377  0052' 2800'              	goto	l701
  8378  0053'                    l2597:
  8379  0053' 3000               	movlw	0
  8380  0054' 00BD'              	movwf	___fladd@a+3
  8381  0055' 3000               	movlw	0
  8382  0056' 00BC'              	movwf	___fladd@a+2
  8383  0057' 3000               	movlw	0
  8384  0058' 00BB'              	movwf	___fladd@a+1
  8385  0059' 3000               	movlw	0
  8386  005A' 00BA'              	movwf	___fladd@a
  8387  005B'                    l701:
  8388  005B' 0848'              	movf	___fladd@bexp,w
  8389  005C' 0247'              	subwf	___fladd@aexp,w
  8390  005D' 1803               	skipnc
  8391  005E' 2800'              	goto	u3601
  8392  005F' 2800'              	goto	u3600
  8393  0060'                    u3601:
  8394  0060' 2800'              	goto	l2633
  8395  0061'                    u3600:
  8396  0061'                    l2599:
  8397  0061' 1F46'              	btfss	___fladd@signs,6
  8398  0062' 2800'              	goto	u3611
  8399  0063' 2800'              	goto	u3610
  8400  0064'                    u3611:
  8401  0064' 2800'              	goto	l2603
  8402  0065'                    u3610:
  8403  0065'                    l2601:
  8404  0065' 3080               	movlw	128
  8405  0066' 00BE'              	movwf	??___fladd
  8406  0067' 083E'              	movf	??___fladd,w
  8407  0068' 06C6'              	xorwf	___fladd@signs,f
  8408  0069'                    l2603:
  8409  0069' 0848'              	movf	___fladd@bexp,w
  8410  006A' 00C9'              	movwf	___fladd@grs
  8411  006B'                    l2605:
  8412  006B' 0847'              	movf	___fladd@aexp,w
  8413  006C' 00C8'              	movwf	___fladd@bexp
  8414  006D'                    l2607:
  8415  006D' 0849'              	movf	___fladd@grs,w
  8416  006E' 00C7'              	movwf	___fladd@aexp
  8417  006F'                    l2609:
  8418  006F' 0836'              	movf	___fladd@b,w
  8419  0070' 00C9'              	movwf	___fladd@grs
  8420  0071'                    l2611:
  8421  0071' 083A'              	movf	___fladd@a,w
  8422  0072' 00B6'              	movwf	___fladd@b
  8423  0073'                    l2613:
  8424  0073' 0849'              	movf	___fladd@grs,w
  8425  0074' 00BA'              	movwf	___fladd@a
  8426  0075'                    l2615:
  8427  0075' 0837'              	movf	___fladd@b+1,w
  8428  0076' 00C9'              	movwf	___fladd@grs
  8429  0077'                    l2617:
  8430  0077' 083B'              	movf	___fladd@a+1,w
  8431  0078' 00B7'              	movwf	___fladd@b+1
  8432  0079'                    l2619:
  8433  0079' 0849'              	movf	___fladd@grs,w
  8434  007A' 00BB'              	movwf	___fladd@a+1
  8435  007B'                    l2621:
  8436  007B' 0838'              	movf	___fladd@b+2,w
  8437  007C' 00C9'              	movwf	___fladd@grs
  8438  007D'                    l2623:
  8439  007D' 083C'              	movf	___fladd@a+2,w
  8440  007E' 00B8'              	movwf	___fladd@b+2
  8441  007F'                    l2625:
  8442  007F' 0849'              	movf	___fladd@grs,w
  8443  0080' 00BC'              	movwf	___fladd@a+2
  8444  0081'                    l2627:
  8445  0081' 0839'              	movf	___fladd@b+3,w
  8446  0082' 00C9'              	movwf	___fladd@grs
  8447  0083'                    l2629:
  8448  0083' 083D'              	movf	___fladd@a+3,w
  8449  0084' 00B9'              	movwf	___fladd@b+3
  8450  0085'                    l2631:
  8451  0085' 0849'              	movf	___fladd@grs,w
  8452  0086' 00BD'              	movwf	___fladd@a+3
  8453  0087'                    l2633:
  8454  0087' 01C9'              	clrf	___fladd@grs
  8455  0088'                    l2635:
  8456  0088' 0847'              	movf	___fladd@aexp,w
  8457  0089' 00BE'              	movwf	??___fladd
  8458  008A' 01BF'              	clrf	??___fladd+1
  8459  008B' 083F'              	movf	??___fladd+1,w
  8460  008C' 00C1'              	movwf	??___fladd+3
  8461  008D' 0848'              	movf	___fladd@bexp,w
  8462  008E' 023E'              	subwf	??___fladd,w
  8463  008F' 00C0'              	movwf	??___fladd+2
  8464  0090' 1C03               	skipc
  8465  0091' 03C1'              	decf	??___fladd+3,f
  8466  0092' 0841'              	movf	??___fladd+3,w
  8467  0093' 3A80               	xorlw	128
  8468  0094' 00FF               	movwf	btemp+1
  8469  0095' 3080               	movlw	128
  8470  0096' 027F               	subwf	btemp+1,w
  8471  0097' 1D03               	skipz
  8472  0098' 2800'              	goto	u3625
  8473  0099' 301A               	movlw	26
  8474  009A' 0240'              	subwf	??___fladd+2,w
  8475  009B'                    u3625:
  8476  009B' 1C03               	skipc
  8477  009C' 2800'              	goto	u3621
  8478  009D' 2800'              	goto	u3620
  8479  009E'                    u3621:
  8480  009E' 2800'              	goto	l2651
  8481  009F'                    u3620:
  8482  009F'                    l2637:
  8483  009F' 1283               	bcf	3,5	;RP0=0, select bank0
  8484  00A0' 1303               	bcf	3,6	;RP1=0, select bank0
  8485  00A1' 0839'              	movf	___fladd@b+3,w
  8486  00A2' 0438'              	iorwf	___fladd@b+2,w
  8487  00A3' 0437'              	iorwf	___fladd@b+1,w
  8488  00A4' 0436'              	iorwf	___fladd@b,w
  8489  00A5' 1D03               	skipz
  8490  00A6' 2800'              	goto	u3631
  8491  00A7' 2800'              	goto	u3630
  8492  00A8'                    u3631:
  8493  00A8' 3001               	movlw	1
  8494  00A9' 2800'              	goto	u3640
  8495  00AA'                    u3630:
  8496  00AA' 3000               	movlw	0
  8497  00AB'                    u3640:
  8498  00AB' 00C9'              	movwf	___fladd@grs
  8499  00AC' 3000               	movlw	0
  8500  00AD' 00B9'              	movwf	___fladd@b+3
  8501  00AE' 3000               	movlw	0
  8502  00AF' 00B8'              	movwf	___fladd@b+2
  8503  00B0' 3000               	movlw	0
  8504  00B1' 00B7'              	movwf	___fladd@b+1
  8505  00B2' 3000               	movlw	0
  8506  00B3' 00B6'              	movwf	___fladd@b
  8507  00B4' 0847'              	movf	___fladd@aexp,w
  8508  00B5' 00C8'              	movwf	___fladd@bexp
  8509  00B6' 2800'              	goto	l705
  8510  00B7'                    l707:
  8511  00B7' 1C49'              	btfss	___fladd@grs,0
  8512  00B8' 2800'              	goto	u3651
  8513  00B9' 2800'              	goto	u3650
  8514  00BA'                    u3651:
  8515  00BA' 2800'              	goto	l2641
  8516  00BB'                    u3650:
  8517  00BB'                    l2639:
  8518  00BB' 0849'              	movf	___fladd@grs,w
  8519  00BC' 00BE'              	movwf	??___fladd
  8520  00BD' 1003               	clrc
  8521  00BE' 0C3E'              	rrf	??___fladd,w
  8522  00BF' 3801               	iorlw	1
  8523  00C0' 00C9'              	movwf	___fladd@grs
  8524  00C1' 2800'              	goto	l2643
  8525  00C2'                    l2641:
  8526  00C2' 1003               	clrc
  8527  00C3' 0CC9'              	rrf	___fladd@grs,f
  8528  00C4'                    l2643:
  8529  00C4' 1C36'              	btfss	___fladd@b,0
  8530  00C5' 2800'              	goto	u3661
  8531  00C6' 2800'              	goto	u3660
  8532  00C7'                    u3661:
  8533  00C7' 2800'              	goto	l2647
  8534  00C8'                    u3660:
  8535  00C8'                    l2645:
  8536  00C8' 17C9'              	bsf	___fladd@grs,7
  8537  00C9'                    l2647:
  8538  00C9' 3001               	movlw	1
  8539  00CA' 00BE'              	movwf	??___fladd
  8540  00CB'                    u3675:
  8541  00CB' 0D39'              	rlf	___fladd@b+3,w
  8542  00CC' 0CB9'              	rrf	___fladd@b+3,f
  8543  00CD' 0CB8'              	rrf	___fladd@b+2,f
  8544  00CE' 0CB7'              	rrf	___fladd@b+1,f
  8545  00CF' 0CB6'              	rrf	___fladd@b,f
  8546  00D0' 0B80'              	decfsz	??___fladd& (0+127),f
  8547  00D1' 2800'              	goto	u3675
  8548  00D2'                    l2649:
  8549  00D2' 3001               	movlw	1
  8550  00D3' 00BE'              	movwf	??___fladd
  8551  00D4' 083E'              	movf	??___fladd,w
  8552  00D5' 07C8'              	addwf	___fladd@bexp,f
  8553  00D6'                    l2651:
  8554  00D6' 1283               	bcf	3,5	;RP0=0, select bank0
  8555  00D7' 1303               	bcf	3,6	;RP1=0, select bank0
  8556  00D8' 0847'              	movf	___fladd@aexp,w
  8557  00D9' 0248'              	subwf	___fladd@bexp,w
  8558  00DA' 1C03               	skipc
  8559  00DB' 2800'              	goto	u3681
  8560  00DC' 2800'              	goto	u3680
  8561  00DD'                    u3681:
  8562  00DD' 2800'              	goto	l707
  8563  00DE'                    u3680:
  8564  00DE'                    l705:
  8565  00DE' 1B46'              	btfsc	___fladd@signs,6
  8566  00DF' 2800'              	goto	u3691
  8567  00E0' 2800'              	goto	u3690
  8568  00E1'                    u3691:
  8569  00E1' 2800'              	goto	l2677
  8570  00E2'                    u3690:
  8571  00E2'                    l2653:
  8572  00E2' 0848'              	movf	___fladd@bexp,w
  8573  00E3' 1D03               	btfss	3,2
  8574  00E4' 2800'              	goto	u3701
  8575  00E5' 2800'              	goto	u3700
  8576  00E6'                    u3701:
  8577  00E6' 2800'              	goto	l2659
  8578  00E7'                    u3700:
  8579  00E7'                    l2655:
  8580  00E7' 3000               	movlw	0
  8581  00E8' 00B9'              	movwf	?___fladd+3
  8582  00E9' 3000               	movlw	0
  8583  00EA' 00B8'              	movwf	?___fladd+2
  8584  00EB' 3000               	movlw	0
  8585  00EC' 00B7'              	movwf	?___fladd+1
  8586  00ED' 3000               	movlw	0
  8587  00EE' 00B6'              	movwf	?___fladd
  8588  00EF' 2800'              	goto	l714
  8589  00F0'                    l2659:
  8590  00F0' 083A'              	movf	___fladd@a,w
  8591  00F1' 07B6'              	addwf	___fladd@b,f
  8592  00F2' 083B'              	movf	___fladd@a+1,w
  8593  00F3' 1103               	clrz
  8594  00F4' 1803               	skipnc
  8595  00F5' 3E01               	addlw	1
  8596  00F6' 1903               	skipnz
  8597  00F7' 2800'              	goto	u3711
  8598  00F8' 07B7'              	addwf	___fladd@b+1,f
  8599  00F9'                    u3711:
  8600  00F9' 083C'              	movf	___fladd@a+2,w
  8601  00FA' 1103               	clrz
  8602  00FB' 1803               	skipnc
  8603  00FC' 3E01               	addlw	1
  8604  00FD' 1903               	skipnz
  8605  00FE' 2800'              	goto	u3712
  8606  00FF' 07B8'              	addwf	___fladd@b+2,f
  8607  0100'                    u3712:
  8608  0100' 083D'              	movf	___fladd@a+3,w
  8609  0101' 1103               	clrz
  8610  0102' 1803               	skipnc
  8611  0103' 3E01               	addlw	1
  8612  0104' 1903               	skipnz
  8613  0105' 2800'              	goto	u3713
  8614  0106' 07B9'              	addwf	___fladd@b+3,f
  8615  0107'                    u3713:
  8616  0107'                    l2661:
  8617  0107' 1C39'              	btfss	___fladd@b+3,0
  8618  0108' 2800'              	goto	u3721
  8619  0109' 2800'              	goto	u3720
  8620  010A'                    u3721:
  8621  010A' 2800'              	goto	l2711
  8622  010B'                    u3720:
  8623  010B'                    l2663:
  8624  010B' 1C49'              	btfss	___fladd@grs,0
  8625  010C' 2800'              	goto	u3731
  8626  010D' 2800'              	goto	u3730
  8627  010E'                    u3731:
  8628  010E' 2800'              	goto	l2667
  8629  010F'                    u3730:
  8630  010F'                    l2665:
  8631  010F' 0849'              	movf	___fladd@grs,w
  8632  0110' 00BE'              	movwf	??___fladd
  8633  0111' 1003               	clrc
  8634  0112' 0C3E'              	rrf	??___fladd,w
  8635  0113' 3801               	iorlw	1
  8636  0114' 00C9'              	movwf	___fladd@grs
  8637  0115' 2800'              	goto	l2669
  8638  0116'                    l2667:
  8639  0116' 1003               	clrc
  8640  0117' 0CC9'              	rrf	___fladd@grs,f
  8641  0118'                    l2669:
  8642  0118' 1C36'              	btfss	___fladd@b,0
  8643  0119' 2800'              	goto	u3741
  8644  011A' 2800'              	goto	u3740
  8645  011B'                    u3741:
  8646  011B' 2800'              	goto	l2673
  8647  011C'                    u3740:
  8648  011C'                    l2671:
  8649  011C' 17C9'              	bsf	___fladd@grs,7
  8650  011D'                    l2673:
  8651  011D' 3001               	movlw	1
  8652  011E' 00BE'              	movwf	??___fladd
  8653  011F'                    u3755:
  8654  011F' 0D39'              	rlf	___fladd@b+3,w
  8655  0120' 0CB9'              	rrf	___fladd@b+3,f
  8656  0121' 0CB8'              	rrf	___fladd@b+2,f
  8657  0122' 0CB7'              	rrf	___fladd@b+1,f
  8658  0123' 0CB6'              	rrf	___fladd@b,f
  8659  0124' 0B80'              	decfsz	??___fladd& (0+127),f
  8660  0125' 2800'              	goto	u3755
  8661  0126'                    l2675:
  8662  0126' 3001               	movlw	1
  8663  0127' 00BE'              	movwf	??___fladd
  8664  0128' 083E'              	movf	??___fladd,w
  8665  0129' 07C8'              	addwf	___fladd@bexp,f
  8666  012A' 2800'              	goto	l2711
  8667  012B'                    l2677:
  8668  012B' 0839'              	movf	___fladd@b+3,w
  8669  012C' 3A80               	xorlw	128
  8670  012D' 00FF               	movwf	btemp+1
  8671  012E' 083D'              	movf	___fladd@a+3,w
  8672  012F' 3A80               	xorlw	128
  8673  0130' 027F               	subwf	btemp+1,w
  8674  0131' 1D03               	skipz
  8675  0132' 2800'              	goto	u3763
  8676  0133' 083C'              	movf	___fladd@a+2,w
  8677  0134' 0238'              	subwf	___fladd@b+2,w
  8678  0135' 1D03               	skipz
  8679  0136' 2800'              	goto	u3763
  8680  0137' 083B'              	movf	___fladd@a+1,w
  8681  0138' 0237'              	subwf	___fladd@b+1,w
  8682  0139' 1D03               	skipz
  8683  013A' 2800'              	goto	u3763
  8684  013B' 083A'              	movf	___fladd@a,w
  8685  013C' 0236'              	subwf	___fladd@b,w
  8686  013D'                    u3763:
  8687  013D' 1803               	skipnc
  8688  013E' 2800'              	goto	u3761
  8689  013F' 2800'              	goto	u3760
  8690  0140'                    u3761:
  8691  0140' 2800'              	goto	l2687
  8692  0141'                    u3760:
  8693  0141'                    l2679:
  8694  0141' 30FF               	movlw	255
  8695  0142' 00BE'              	movwf	??___fladd
  8696  0143' 30FF               	movlw	255
  8697  0144' 00BF'              	movwf	??___fladd+1
  8698  0145' 30FF               	movlw	255
  8699  0146' 00C0'              	movwf	??___fladd+2
  8700  0147' 30FF               	movlw	255
  8701  0148' 00C1'              	movwf	??___fladd+3
  8702  0149' 083A'              	movf	___fladd@a,w
  8703  014A' 00C2'              	movwf	??___fladd+4
  8704  014B' 083B'              	movf	___fladd@a+1,w
  8705  014C' 00C3'              	movwf	??___fladd+5
  8706  014D' 083C'              	movf	___fladd@a+2,w
  8707  014E' 00C4'              	movwf	??___fladd+6
  8708  014F' 083D'              	movf	___fladd@a+3,w
  8709  0150' 00C5'              	movwf	??___fladd+7
  8710  0151' 0836'              	movf	___fladd@b,w
  8711  0152' 02C2'              	subwf	??___fladd+4,f
  8712  0153' 0837'              	movf	___fladd@b+1,w
  8713  0154' 1C03               	skipc
  8714  0155' 0F37'              	incfsz	___fladd@b+1,w
  8715  0156' 2800'              	goto	u3771
  8716  0157' 2800'              	goto	u3772
  8717  0158'                    u3771:
  8718  0158' 02C3'              	subwf	??___fladd+5,f
  8719  0159'                    u3772:
  8720  0159' 0838'              	movf	___fladd@b+2,w
  8721  015A' 1C03               	skipc
  8722  015B' 0F38'              	incfsz	___fladd@b+2,w
  8723  015C' 2800'              	goto	u3773
  8724  015D' 2800'              	goto	u3774
  8725  015E'                    u3773:
  8726  015E' 02C4'              	subwf	??___fladd+6,f
  8727  015F'                    u3774:
  8728  015F' 0839'              	movf	___fladd@b+3,w
  8729  0160' 1C03               	skipc
  8730  0161' 0F39'              	incfsz	___fladd@b+3,w
  8731  0162' 2800'              	goto	u3775
  8732  0163' 2800'              	goto	u3776
  8733  0164'                    u3775:
  8734  0164' 02C5'              	subwf	??___fladd+7,f
  8735  0165'                    u3776:
  8736  0165' 0842'              	movf	??___fladd+4,w
  8737  0166' 07BE'              	addwf	??___fladd,f
  8738  0167' 0843'              	movf	??___fladd+5,w
  8739  0168' 1803               	skipnc
  8740  0169' 0F43'              	incfsz	??___fladd+5,w
  8741  016A' 2800'              	goto	u3780
  8742  016B' 2800'              	goto	u3781
  8743  016C'                    u3780:
  8744  016C' 07BF'              	addwf	??___fladd+1,f
  8745  016D'                    u3781:
  8746  016D' 0844'              	movf	??___fladd+6,w
  8747  016E' 1803               	skipnc
  8748  016F' 0F44'              	incfsz	??___fladd+6,w
  8749  0170' 2800'              	goto	u3782
  8750  0171' 2800'              	goto	u3783
  8751  0172'                    u3782:
  8752  0172' 07C0'              	addwf	??___fladd+2,f
  8753  0173'                    u3783:
  8754  0173' 0845'              	movf	??___fladd+7,w
  8755  0174' 1803               	skipnc
  8756  0175' 0A45'              	incf	??___fladd+7,w
  8757  0176' 07C1'              	addwf	??___fladd+3,f
  8758  0177' 0841'              	movf	??___fladd+3,w
  8759  0178' 00B9'              	movwf	___fladd@b+3
  8760  0179' 0840'              	movf	??___fladd+2,w
  8761  017A' 00B8'              	movwf	___fladd@b+2
  8762  017B' 083F'              	movf	??___fladd+1,w
  8763  017C' 00B7'              	movwf	___fladd@b+1
  8764  017D' 083E'              	movf	??___fladd,w
  8765  017E' 00B6'              	movwf	___fladd@b
  8766  017F'                    l2681:
  8767  017F' 3080               	movlw	128
  8768  0180' 00BE'              	movwf	??___fladd
  8769  0181' 083E'              	movf	??___fladd,w
  8770  0182' 06C6'              	xorwf	___fladd@signs,f
  8771  0183' 09C9'              	comf	___fladd@grs,f
  8772  0184' 0AC9'              	incf	___fladd@grs,f
  8773  0185'                    l2683:
  8774  0185' 0849'              	movf	___fladd@grs,w
  8775  0186' 1D03               	btfss	3,2
  8776  0187' 2800'              	goto	u3791
  8777  0188' 2800'              	goto	u3790
  8778  0189'                    u3791:
  8779  0189' 2800'              	goto	l722
  8780  018A'                    u3790:
  8781  018A'                    l2685:
  8782  018A' 3001               	movlw	1
  8783  018B' 07B6'              	addwf	___fladd@b,f
  8784  018C' 3000               	movlw	0
  8785  018D' 1803               	skipnc
  8786  018E' 3001               	movlw	1
  8787  018F' 07B7'              	addwf	___fladd@b+1,f
  8788  0190' 3000               	movlw	0
  8789  0191' 1803               	skipnc
  8790  0192' 3001               	movlw	1
  8791  0193' 07B8'              	addwf	___fladd@b+2,f
  8792  0194' 3000               	movlw	0
  8793  0195' 1803               	skipnc
  8794  0196' 3001               	movlw	1
  8795  0197' 07B9'              	addwf	___fladd@b+3,f
  8796  0198' 2800'              	goto	l722
  8797  0199'                    l2687:
  8798  0199' 083A'              	movf	___fladd@a,w
  8799  019A' 02B6'              	subwf	___fladd@b,f
  8800  019B' 083B'              	movf	___fladd@a+1,w
  8801  019C' 1C03               	skipc
  8802  019D' 0F3B'              	incfsz	___fladd@a+1,w
  8803  019E' 02B7'              	subwf	___fladd@b+1,f
  8804  019F' 083C'              	movf	___fladd@a+2,w
  8805  01A0' 1C03               	skipc
  8806  01A1' 0F3C'              	incfsz	___fladd@a+2,w
  8807  01A2' 02B8'              	subwf	___fladd@b+2,f
  8808  01A3' 083D'              	movf	___fladd@a+3,w
  8809  01A4' 1C03               	skipc
  8810  01A5' 0F3D'              	incfsz	___fladd@a+3,w
  8811  01A6' 02B9'              	subwf	___fladd@b+3,f
  8812  01A7'                    l722:
  8813  01A7' 0839'              	movf	___fladd@b+3,w
  8814  01A8' 0438'              	iorwf	___fladd@b+2,w
  8815  01A9' 0437'              	iorwf	___fladd@b+1,w
  8816  01AA' 0436'              	iorwf	___fladd@b,w
  8817  01AB' 1D03               	skipz
  8818  01AC' 2800'              	goto	u3801
  8819  01AD' 2800'              	goto	u3800
  8820  01AE'                    u3801:
  8821  01AE' 2800'              	goto	l2709
  8822  01AF'                    u3800:
  8823  01AF'                    l2689:
  8824  01AF' 0849'              	movf	___fladd@grs,w
  8825  01B0' 1D03               	btfss	3,2
  8826  01B1' 2800'              	goto	u3811
  8827  01B2' 2800'              	goto	u3810
  8828  01B3'                    u3811:
  8829  01B3' 2800'              	goto	l2709
  8830  01B4'                    u3810:
  8831  01B4'                    l2691:
  8832  01B4' 3000               	movlw	0
  8833  01B5' 00B9'              	movwf	?___fladd+3
  8834  01B6' 3000               	movlw	0
  8835  01B7' 00B8'              	movwf	?___fladd+2
  8836  01B8' 3000               	movlw	0
  8837  01B9' 00B7'              	movwf	?___fladd+1
  8838  01BA' 3000               	movlw	0
  8839  01BB' 00B6'              	movwf	?___fladd
  8840  01BC' 2800'              	goto	l714
  8841  01BD'                    l2695:
  8842  01BD' 3001               	movlw	1
  8843  01BE' 00BE'              	movwf	??___fladd
  8844  01BF'                    u3825:
  8845  01BF' 1003               	clrc
  8846  01C0' 0DB6'              	rlf	___fladd@b,f
  8847  01C1' 0DB7'              	rlf	___fladd@b+1,f
  8848  01C2' 0DB8'              	rlf	___fladd@b+2,f
  8849  01C3' 0DB9'              	rlf	___fladd@b+3,f
  8850  01C4' 0BBE'              	decfsz	??___fladd,f
  8851  01C5' 2800'              	goto	u3825
  8852  01C6'                    l2697:
  8853  01C6' 1FC9'              	btfss	___fladd@grs,7
  8854  01C7' 2800'              	goto	u3831
  8855  01C8' 2800'              	goto	u3830
  8856  01C9'                    u3831:
  8857  01C9' 2800'              	goto	l726
  8858  01CA'                    u3830:
  8859  01CA'                    l2699:
  8860  01CA' 1436'              	bsf	___fladd@b,0
  8861  01CB'                    l726:
  8862  01CB' 1C49'              	btfss	___fladd@grs,0
  8863  01CC' 2800'              	goto	u3841
  8864  01CD' 2800'              	goto	u3840
  8865  01CE'                    u3841:
  8866  01CE' 2800'              	goto	l2703
  8867  01CF'                    u3840:
  8868  01CF'                    l2701:
  8869  01CF' 1403               	setc
  8870  01D0' 0DC9'              	rlf	___fladd@grs,f
  8871  01D1' 2800'              	goto	l2705
  8872  01D2'                    l2703:
  8873  01D2' 1003               	clrc
  8874  01D3' 0DC9'              	rlf	___fladd@grs,f
  8875  01D4'                    l2705:
  8876  01D4' 0848'              	movf	___fladd@bexp,w
  8877  01D5' 1903               	btfsc	3,2
  8878  01D6' 2800'              	goto	u3851
  8879  01D7' 2800'              	goto	u3850
  8880  01D8'                    u3851:
  8881  01D8' 2800'              	goto	l2709
  8882  01D9'                    u3850:
  8883  01D9'                    l2707:
  8884  01D9' 3001               	movlw	1
  8885  01DA' 02C8'              	subwf	___fladd@bexp,f
  8886  01DB'                    l2709:
  8887  01DB' 1FB8'              	btfss	___fladd@b+2,7
  8888  01DC' 2800'              	goto	u3861
  8889  01DD' 2800'              	goto	u3860
  8890  01DE'                    u3861:
  8891  01DE' 2800'              	goto	l2695
  8892  01DF'                    u3860:
  8893  01DF'                    l2711:
  8894  01DF' 01C7'              	clrf	___fladd@aexp
  8895  01E0'                    l2713:
  8896  01E0' 1FC9'              	btfss	___fladd@grs,7
  8897  01E1' 2800'              	goto	u3871
  8898  01E2' 2800'              	goto	u3870
  8899  01E3'                    u3871:
  8900  01E3' 2800'              	goto	l2721
  8901  01E4'                    u3870:
  8902  01E4'                    l2715:
  8903  01E4' 0849'              	movf	___fladd@grs,w
  8904  01E5' 397F               	andlw	127
  8905  01E6' 1903               	btfsc	3,2
  8906  01E7' 2800'              	goto	u3881
  8907  01E8' 2800'              	goto	u3880
  8908  01E9'                    u3881:
  8909  01E9' 2800'              	goto	l732
  8910  01EA'                    u3880:
  8911  01EA'                    l2717:
  8912  01EA' 01C7'              	clrf	___fladd@aexp
  8913  01EB' 0AC7'              	incf	___fladd@aexp,f
  8914  01EC' 2800'              	goto	l2721
  8915  01ED'                    l732:
  8916  01ED' 1C36'              	btfss	___fladd@b,0
  8917  01EE' 2800'              	goto	u3891
  8918  01EF' 2800'              	goto	u3890
  8919  01F0'                    u3891:
  8920  01F0' 2800'              	goto	l2721
  8921  01F1'                    u3890:
  8922  01F1' 2800'              	goto	l2717
  8923  01F2'                    l2721:
  8924  01F2' 0847'              	movf	___fladd@aexp,w
  8925  01F3' 1903               	btfsc	3,2
  8926  01F4' 2800'              	goto	u3901
  8927  01F5' 2800'              	goto	u3900
  8928  01F6'                    u3901:
  8929  01F6' 2800'              	goto	l735
  8930  01F7'                    u3900:
  8931  01F7'                    l2723:
  8932  01F7' 3001               	movlw	1
  8933  01F8' 07B6'              	addwf	___fladd@b,f
  8934  01F9' 3000               	movlw	0
  8935  01FA' 1803               	skipnc
  8936  01FB' 3001               	movlw	1
  8937  01FC' 07B7'              	addwf	___fladd@b+1,f
  8938  01FD' 3000               	movlw	0
  8939  01FE' 1803               	skipnc
  8940  01FF' 3001               	movlw	1
  8941  0200' 07B8'              	addwf	___fladd@b+2,f
  8942  0201' 3000               	movlw	0
  8943  0202' 1803               	skipnc
  8944  0203' 3001               	movlw	1
  8945  0204' 07B9'              	addwf	___fladd@b+3,f
  8946  0205'                    l2725:
  8947  0205' 1C39'              	btfss	___fladd@b+3,0
  8948  0206' 2800'              	goto	u3911
  8949  0207' 2800'              	goto	u3910
  8950  0208'                    u3911:
  8951  0208' 2800'              	goto	l735
  8952  0209'                    u3910:
  8953  0209'                    l2727:
  8954  0209' 0836'              	movf	___fladd@b,w
  8955  020A' 00BE'              	movwf	??___fladd
  8956  020B' 0837'              	movf	___fladd@b+1,w
  8957  020C' 00BF'              	movwf	??___fladd+1
  8958  020D' 0838'              	movf	___fladd@b+2,w
  8959  020E' 00C0'              	movwf	??___fladd+2
  8960  020F' 0839'              	movf	___fladd@b+3,w
  8961  0210' 00C1'              	movwf	??___fladd+3
  8962  0211' 3001               	movlw	1
  8963  0212' 00C2'              	movwf	??___fladd+4
  8964  0213'                    u3925:
  8965  0213' 0D41'              	rlf	??___fladd+3,w
  8966  0214' 0CC1'              	rrf	??___fladd+3,f
  8967  0215' 0CC0'              	rrf	??___fladd+2,f
  8968  0216' 0CBF'              	rrf	??___fladd+1,f
  8969  0217' 0CBE'              	rrf	??___fladd,f
  8970  0218'                    u3920:
  8971  0218' 0BC2'              	decfsz	??___fladd+4,f
  8972  0219' 2800'              	goto	u3925
  8973  021A' 0841'              	movf	??___fladd+3,w
  8974  021B' 00B9'              	movwf	___fladd@b+3
  8975  021C' 0840'              	movf	??___fladd+2,w
  8976  021D' 00B8'              	movwf	___fladd@b+2
  8977  021E' 083F'              	movf	??___fladd+1,w
  8978  021F' 00B7'              	movwf	___fladd@b+1
  8979  0220' 083E'              	movf	??___fladd,w
  8980  0221' 00B6'              	movwf	___fladd@b
  8981  0222' 0A48'              	incf	___fladd@bexp,w
  8982  0223' 1903               	btfsc	3,2
  8983  0224' 2800'              	goto	u3931
  8984  0225' 2800'              	goto	u3930
  8985  0226'                    u3931:
  8986  0226' 2800'              	goto	l735
  8987  0227'                    u3930:
  8988  0227'                    l2729:
  8989  0227' 3001               	movlw	1
  8990  0228' 00BE'              	movwf	??___fladd
  8991  0229' 083E'              	movf	??___fladd,w
  8992  022A' 07C8'              	addwf	___fladd@bexp,f
  8993  022B'                    l735:
  8994  022B' 0A48'              	incf	___fladd@bexp,w
  8995  022C' 1903               	btfsc	3,2
  8996  022D' 2800'              	goto	u3941
  8997  022E' 2800'              	goto	u3940
  8998  022F'                    u3941:
  8999  022F' 2800'              	goto	l2733
  9000  0230'                    u3940:
  9001  0230'                    l2731:
  9002  0230' 0848'              	movf	___fladd@bexp,w
  9003  0231' 1D03               	btfss	3,2
  9004  0232' 2800'              	goto	u3951
  9005  0233' 2800'              	goto	u3950
  9006  0234'                    u3951:
  9007  0234' 2800'              	goto	l2739
  9008  0235'                    u3950:
  9009  0235'                    l2733:
  9010  0235' 3000               	movlw	0
  9011  0236' 00B9'              	movwf	___fladd@b+3
  9012  0237' 3000               	movlw	0
  9013  0238' 00B8'              	movwf	___fladd@b+2
  9014  0239' 3000               	movlw	0
  9015  023A' 00B7'              	movwf	___fladd@b+1
  9016  023B' 3000               	movlw	0
  9017  023C' 00B6'              	movwf	___fladd@b
  9018  023D'                    l2735:
  9019  023D' 0848'              	movf	___fladd@bexp,w
  9020  023E' 1D03               	btfss	3,2
  9021  023F' 2800'              	goto	u3961
  9022  0240' 2800'              	goto	u3960
  9023  0241'                    u3961:
  9024  0241' 2800'              	goto	l2739
  9025  0242'                    u3960:
  9026  0242'                    l2737:
  9027  0242' 01C6'              	clrf	___fladd@signs
  9028  0243'                    l2739:
  9029  0243' 1C48'              	btfss	___fladd@bexp,0
  9030  0244' 2800'              	goto	u3971
  9031  0245' 2800'              	goto	u3970
  9032  0246'                    u3971:
  9033  0246' 2800'              	goto	l2743
  9034  0247'                    u3970:
  9035  0247'                    l2741:
  9036  0247' 17B8'              	bsf	___fladd@b+2,7
  9037  0248' 2800'              	goto	l743
  9038  0249'                    l2743:
  9039  0249' 307F               	movlw	127
  9040  024A' 00BE'              	movwf	??___fladd
  9041  024B' 083E'              	movf	??___fladd,w
  9042  024C' 05B8'              	andwf	___fladd@b+2,f
  9043  024D'                    l743:
  9044  024D' 0848'              	movf	___fladd@bexp,w
  9045  024E' 00BE'              	movwf	??___fladd
  9046  024F' 1003               	clrc
  9047  0250' 0C3E'              	rrf	??___fladd,w
  9048  0251' 00B9'              	movwf	___fladd@b+3
  9049  0252'                    l2745:
  9050  0252' 1FC6'              	btfss	___fladd@signs,7
  9051  0253' 2800'              	goto	u3981
  9052  0254' 2800'              	goto	u3980
  9053  0255'                    u3981:
  9054  0255' 2800'              	goto	l744
  9055  0256'                    u3980:
  9056  0256'                    l2747:
  9057  0256' 17B9'              	bsf	___fladd@b+3,7
  9058  0257'                    l744:
  9059  0257'                    l714:
  9060  0257' 0008               	return
  9061  0258'                    __end_of___fladd:
  9062                           
  9063                           	psect	text20
  9064  0000'                    __ptext20:	
  9065 ;; *************** function ___flneg *****************
  9066 ;; Defined at:
  9067 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flneg.c"
  9068 ;; Parameters:    Size  Location     Type
  9069 ;;  f1              4    2[COMMON] unsigned char 
  9070 ;; Auto vars:     Size  Location     Type
  9071 ;;		None
  9072 ;; Return value:  Size  Location     Type
  9073 ;;                  4    2[COMMON] unsigned char 
  9074 ;; Registers used:
  9075 ;;		wreg
  9076 ;; Tracked objects:
  9077 ;;		On entry : 0/0
  9078 ;;		On exit  : 0/0
  9079 ;;		Unchanged: 0/0
  9080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9081 ;;      Params:         4       0       0       0       0
  9082 ;;      Locals:         0       0       0       0       0
  9083 ;;      Temps:          0       0       0       0       0
  9084 ;;      Totals:         4       0       0       0       0
  9085 ;;Total ram usage:        4 bytes
  9086 ;; Hardware stack levels used: 1
  9087 ;; Hardware stack levels required when called: 1
  9088 ;; This function calls:
  9089 ;;		Nothing
  9090 ;; This function is called by:
  9091 ;;		_sprintf
  9092 ;; This function uses a non-reentrant model
  9093 ;;
  9094                           
  9095  0000'                    ___flneg:	
  9096                           ;psect for function ___flneg
  9097                           
  9098  0000'                    l3163:	
  9099                           ;incstack = 0
  9100                           ; Regs used in ___flneg: [wreg]
  9101                           
  9102  0000' 0805'              	movf	___flneg@f1+3,w
  9103  0001' 0404'              	iorwf	___flneg@f1+2,w
  9104  0002' 0403'              	iorwf	___flneg@f1+1,w
  9105  0003' 0402'              	iorwf	___flneg@f1,w
  9106  0004' 1903               	skipnz
  9107  0005' 2800'              	goto	u5111
  9108  0006' 2800'              	goto	u5110
  9109  0007'                    u5111:
  9110  0007' 2800'              	goto	l3167
  9111  0008'                    u5110:
  9112  0008'                    l3165:
  9113  0008' 3080               	movlw	128
  9114  0009' 0685'              	xorwf	___flneg@f1+3,f
  9115  000A'                    l3167:
  9116  000A'                    l573:
  9117  000A' 0008               	return
  9118  000B'                    __end_of___flneg:
  9119                           
  9120                           	psect	text21
  9121  0000'                    __ptext21:	
  9122 ;; *************** function ___flge *****************
  9123 ;; Defined at:
  9124 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flge.c"
  9125 ;; Parameters:    Size  Location     Type
  9126 ;;  ff1             4    2[COMMON] unsigned char 
  9127 ;;  ff2             4    6[COMMON] unsigned char 
  9128 ;; Auto vars:     Size  Location     Type
  9129 ;;		None
  9130 ;; Return value:  Size  Location     Type
  9131 ;;		None               void
  9132 ;; Registers used:
  9133 ;;		wreg, status,2, status,0
  9134 ;; Tracked objects:
  9135 ;;		On entry : 0/0
  9136 ;;		On exit  : 0/0
  9137 ;;		Unchanged: 0/0
  9138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9139 ;;      Params:         8       0       0       0       0
  9140 ;;      Locals:         0       0       0       0       0
  9141 ;;      Temps:          0       4       0       0       0
  9142 ;;      Totals:         8       4       0       0       0
  9143 ;;Total ram usage:       12 bytes
  9144 ;; Hardware stack levels used: 1
  9145 ;; Hardware stack levels required when called: 1
  9146 ;; This function calls:
  9147 ;;		Nothing
  9148 ;; This function is called by:
  9149 ;;		_sprintf
  9150 ;; This function uses a non-reentrant model
  9151 ;;
  9152                           
  9153  0000'                    ___flge:	
  9154                           ;psect for function ___flge
  9155                           
  9156  0000'                    l3143:	
  9157                           ;incstack = 0
  9158                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9159                           
  9160  0000' 3000               	movlw	0
  9161  0001' 0502'              	andwf	___flge@ff1,w
  9162  0002' 1283               	bcf	3,5	;RP0=0, select bank0
  9163  0003' 1303               	bcf	3,6	;RP1=0, select bank0
  9164  0004' 0080'              	movwf	??___flge
  9165  0005' 3000               	movlw	0
  9166  0006' 0503'              	andwf	___flge@ff1+1,w
  9167  0007' 0081'              	movwf	??___flge+1
  9168  0008' 3080               	movlw	128
  9169  0009' 0504'              	andwf	___flge@ff1+2,w
  9170  000A' 0082'              	movwf	??___flge+2
  9171  000B' 307F               	movlw	127
  9172  000C' 0505'              	andwf	___flge@ff1+3,w
  9173  000D' 0083'              	movwf	??___flge+3
  9174  000E' 0803'              	movf	??___flge+3,w
  9175  000F' 0402'              	iorwf	??___flge+2,w
  9176  0010' 0401'              	iorwf	??___flge+1,w
  9177  0011' 0400'              	iorwf	??___flge,w
  9178  0012' 1D03               	skipz
  9179  0013' 2800'              	goto	u5041
  9180  0014' 2800'              	goto	u5040
  9181  0015'                    u5041:
  9182  0015' 2800'              	goto	l565
  9183  0016'                    u5040:
  9184  0016'                    l3145:
  9185  0016' 3000               	movlw	0
  9186  0017' 0085'              	movwf	___flge@ff1+3
  9187  0018' 3000               	movlw	0
  9188  0019' 0084'              	movwf	___flge@ff1+2
  9189  001A' 3000               	movlw	0
  9190  001B' 0083'              	movwf	___flge@ff1+1
  9191  001C' 3000               	movlw	0
  9192  001D' 0082'              	movwf	___flge@ff1
  9193  001E'                    l565:
  9194  001E' 3000               	movlw	0
  9195  001F' 0506'              	andwf	___flge@ff2,w
  9196  0020' 0080'              	movwf	??___flge
  9197  0021' 3000               	movlw	0
  9198  0022' 0507'              	andwf	___flge@ff2+1,w
  9199  0023' 0081'              	movwf	??___flge+1
  9200  0024' 3080               	movlw	128
  9201  0025' 0508'              	andwf	___flge@ff2+2,w
  9202  0026' 0082'              	movwf	??___flge+2
  9203  0027' 307F               	movlw	127
  9204  0028' 0509'              	andwf	___flge@ff2+3,w
  9205  0029' 0083'              	movwf	??___flge+3
  9206  002A' 0803'              	movf	??___flge+3,w
  9207  002B' 0402'              	iorwf	??___flge+2,w
  9208  002C' 0401'              	iorwf	??___flge+1,w
  9209  002D' 0400'              	iorwf	??___flge,w
  9210  002E' 1D03               	skipz
  9211  002F' 2800'              	goto	u5051
  9212  0030' 2800'              	goto	u5050
  9213  0031'                    u5051:
  9214  0031' 2800'              	goto	l3149
  9215  0032'                    u5050:
  9216  0032'                    l3147:
  9217  0032' 3000               	movlw	0
  9218  0033' 0089'              	movwf	___flge@ff2+3
  9219  0034' 3000               	movlw	0
  9220  0035' 0088'              	movwf	___flge@ff2+2
  9221  0036' 3000               	movlw	0
  9222  0037' 0087'              	movwf	___flge@ff2+1
  9223  0038' 3000               	movlw	0
  9224  0039' 0086'              	movwf	___flge@ff2
  9225  003A'                    l3149:
  9226  003A' 1F85'              	btfss	___flge@ff1+3,7
  9227  003B' 2800'              	goto	u5061
  9228  003C' 2800'              	goto	u5060
  9229  003D'                    u5061:
  9230  003D' 2800'              	goto	l3153
  9231  003E'                    u5060:
  9232  003E'                    l3151:
  9233  003E' 3000               	movlw	0
  9234  003F' 0080'              	movwf	??___flge
  9235  0040' 3000               	movlw	0
  9236  0041' 0081'              	movwf	??___flge+1
  9237  0042' 3000               	movlw	0
  9238  0043' 0082'              	movwf	??___flge+2
  9239  0044' 3080               	movlw	128
  9240  0045' 0083'              	movwf	??___flge+3
  9241  0046' 0802'              	movf	___flge@ff1,w
  9242  0047' 0280'              	subwf	??___flge,f
  9243  0048' 0803'              	movf	___flge@ff1+1,w
  9244  0049' 1C03               	skipc
  9245  004A' 0F03'              	incfsz	___flge@ff1+1,w
  9246  004B' 2800'              	goto	u5071
  9247  004C' 2800'              	goto	u5072
  9248  004D'                    u5071:
  9249  004D' 0281'              	subwf	??___flge+1,f
  9250  004E'                    u5072:
  9251  004E' 0804'              	movf	___flge@ff1+2,w
  9252  004F' 1C03               	skipc
  9253  0050' 0F04'              	incfsz	___flge@ff1+2,w
  9254  0051' 2800'              	goto	u5073
  9255  0052' 2800'              	goto	u5074
  9256  0053'                    u5073:
  9257  0053' 0282'              	subwf	??___flge+2,f
  9258  0054'                    u5074:
  9259  0054' 0805'              	movf	___flge@ff1+3,w
  9260  0055' 1C03               	skipc
  9261  0056' 0F05'              	incfsz	___flge@ff1+3,w
  9262  0057' 2800'              	goto	u5075
  9263  0058' 2800'              	goto	u5076
  9264  0059'                    u5075:
  9265  0059' 0283'              	subwf	??___flge+3,f
  9266  005A'                    u5076:
  9267  005A' 0803'              	movf	??___flge+3,w
  9268  005B' 0085'              	movwf	___flge@ff1+3
  9269  005C' 0802'              	movf	??___flge+2,w
  9270  005D' 0084'              	movwf	___flge@ff1+2
  9271  005E' 0801'              	movf	??___flge+1,w
  9272  005F' 0083'              	movwf	___flge@ff1+1
  9273  0060' 0800'              	movf	??___flge,w
  9274  0061' 0082'              	movwf	___flge@ff1
  9275  0062'                    l3153:
  9276  0062' 1F89'              	btfss	___flge@ff2+3,7
  9277  0063' 2800'              	goto	u5081
  9278  0064' 2800'              	goto	u5080
  9279  0065'                    u5081:
  9280  0065' 2800'              	goto	l568
  9281  0066'                    u5080:
  9282  0066'                    l3155:
  9283  0066' 3000               	movlw	0
  9284  0067' 0080'              	movwf	??___flge
  9285  0068' 3000               	movlw	0
  9286  0069' 0081'              	movwf	??___flge+1
  9287  006A' 3000               	movlw	0
  9288  006B' 0082'              	movwf	??___flge+2
  9289  006C' 3080               	movlw	128
  9290  006D' 0083'              	movwf	??___flge+3
  9291  006E' 0806'              	movf	___flge@ff2,w
  9292  006F' 0280'              	subwf	??___flge,f
  9293  0070' 0807'              	movf	___flge@ff2+1,w
  9294  0071' 1C03               	skipc
  9295  0072' 0F07'              	incfsz	___flge@ff2+1,w
  9296  0073' 2800'              	goto	u5091
  9297  0074' 2800'              	goto	u5092
  9298  0075'                    u5091:
  9299  0075' 0281'              	subwf	??___flge+1,f
  9300  0076'                    u5092:
  9301  0076' 0808'              	movf	___flge@ff2+2,w
  9302  0077' 1C03               	skipc
  9303  0078' 0F08'              	incfsz	___flge@ff2+2,w
  9304  0079' 2800'              	goto	u5093
  9305  007A' 2800'              	goto	u5094
  9306  007B'                    u5093:
  9307  007B' 0282'              	subwf	??___flge+2,f
  9308  007C'                    u5094:
  9309  007C' 0809'              	movf	___flge@ff2+3,w
  9310  007D' 1C03               	skipc
  9311  007E' 0F09'              	incfsz	___flge@ff2+3,w
  9312  007F' 2800'              	goto	u5095
  9313  0080' 2800'              	goto	u5096
  9314  0081'                    u5095:
  9315  0081' 0283'              	subwf	??___flge+3,f
  9316  0082'                    u5096:
  9317  0082' 0803'              	movf	??___flge+3,w
  9318  0083' 0089'              	movwf	___flge@ff2+3
  9319  0084' 0802'              	movf	??___flge+2,w
  9320  0085' 0088'              	movwf	___flge@ff2+2
  9321  0086' 0801'              	movf	??___flge+1,w
  9322  0087' 0087'              	movwf	___flge@ff2+1
  9323  0088' 0800'              	movf	??___flge,w
  9324  0089' 0086'              	movwf	___flge@ff2
  9325  008A'                    l568:
  9326  008A' 3080               	movlw	128
  9327  008B' 0685'              	xorwf	___flge@ff1+3,f
  9328  008C' 3080               	movlw	128
  9329  008D' 0689'              	xorwf	___flge@ff2+3,f
  9330  008E' 0809'              	movf	___flge@ff2+3,w
  9331  008F' 0205'              	subwf	___flge@ff1+3,w
  9332  0090' 1D03               	skipz
  9333  0091' 2800'              	goto	u5105
  9334  0092' 0808'              	movf	___flge@ff2+2,w
  9335  0093' 0204'              	subwf	___flge@ff1+2,w
  9336  0094' 1D03               	skipz
  9337  0095' 2800'              	goto	u5105
  9338  0096' 0807'              	movf	___flge@ff2+1,w
  9339  0097' 0203'              	subwf	___flge@ff1+1,w
  9340  0098' 1D03               	skipz
  9341  0099' 2800'              	goto	u5105
  9342  009A' 0806'              	movf	___flge@ff2,w
  9343  009B' 0202'              	subwf	___flge@ff1,w
  9344  009C'                    u5105:
  9345  009C' 1803               	skipnc
  9346  009D' 2800'              	goto	u5101
  9347  009E' 2800'              	goto	u5100
  9348  009F'                    u5101:
  9349  009F' 2800'              	goto	l3159
  9350  00A0'                    u5100:
  9351  00A0'                    l3157:
  9352  00A0' 1003               	clrc
  9353  00A1' 2800'              	goto	l569
  9354  00A2'                    l3159:
  9355  00A2' 1403               	setc
  9356  00A3'                    l569:
  9357  00A3' 0008               	return
  9358  00A4'                    __end_of___flge:
  9359                           
  9360                           	psect	text22
  9361  0000'                    __ptext22:	
  9362 ;; *************** function ___fleq *****************
  9363 ;; Defined at:
  9364 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fleq.c"
  9365 ;; Parameters:    Size  Location     Type
  9366 ;;  ff1             4    2[COMMON] unsigned char 
  9367 ;;  ff2             4    6[COMMON] unsigned char 
  9368 ;; Auto vars:     Size  Location     Type
  9369 ;;		None
  9370 ;; Return value:  Size  Location     Type
  9371 ;;		None               void
  9372 ;; Registers used:
  9373 ;;		wreg, status,2, status,0
  9374 ;; Tracked objects:
  9375 ;;		On entry : 0/0
  9376 ;;		On exit  : 0/0
  9377 ;;		Unchanged: 0/0
  9378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9379 ;;      Params:         8       0       0       0       0
  9380 ;;      Locals:         0       0       0       0       0
  9381 ;;      Temps:          0       4       0       0       0
  9382 ;;      Totals:         8       4       0       0       0
  9383 ;;Total ram usage:       12 bytes
  9384 ;; Hardware stack levels used: 1
  9385 ;; Hardware stack levels required when called: 1
  9386 ;; This function calls:
  9387 ;;		Nothing
  9388 ;; This function is called by:
  9389 ;;		_sprintf
  9390 ;; This function uses a non-reentrant model
  9391 ;;
  9392                           
  9393  0000'                    ___fleq:	
  9394                           ;psect for function ___fleq
  9395                           
  9396  0000'                    l3131:	
  9397                           ;incstack = 0
  9398                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9399                           
  9400  0000' 3000               	movlw	0
  9401  0001' 0502'              	andwf	___fleq@ff1,w
  9402  0002' 1283               	bcf	3,5	;RP0=0, select bank0
  9403  0003' 1303               	bcf	3,6	;RP1=0, select bank0
  9404  0004' 0080'              	movwf	??___fleq
  9405  0005' 3000               	movlw	0
  9406  0006' 0503'              	andwf	___fleq@ff1+1,w
  9407  0007' 0081'              	movwf	??___fleq+1
  9408  0008' 3080               	movlw	128
  9409  0009' 0504'              	andwf	___fleq@ff1+2,w
  9410  000A' 0082'              	movwf	??___fleq+2
  9411  000B' 307F               	movlw	127
  9412  000C' 0505'              	andwf	___fleq@ff1+3,w
  9413  000D' 0083'              	movwf	??___fleq+3
  9414  000E' 0803'              	movf	??___fleq+3,w
  9415  000F' 0402'              	iorwf	??___fleq+2,w
  9416  0010' 0401'              	iorwf	??___fleq+1,w
  9417  0011' 0400'              	iorwf	??___fleq,w
  9418  0012' 1D03               	skipz
  9419  0013' 2800'              	goto	u5011
  9420  0014' 2800'              	goto	u5010
  9421  0015'                    u5011:
  9422  0015' 2800'              	goto	l560
  9423  0016'                    u5010:
  9424  0016'                    l3133:
  9425  0016' 3000               	movlw	0
  9426  0017' 0085'              	movwf	___fleq@ff1+3
  9427  0018' 3000               	movlw	0
  9428  0019' 0084'              	movwf	___fleq@ff1+2
  9429  001A' 3000               	movlw	0
  9430  001B' 0083'              	movwf	___fleq@ff1+1
  9431  001C' 3000               	movlw	0
  9432  001D' 0082'              	movwf	___fleq@ff1
  9433  001E'                    l560:
  9434  001E' 3000               	movlw	0
  9435  001F' 0506'              	andwf	___fleq@ff2,w
  9436  0020' 0080'              	movwf	??___fleq
  9437  0021' 3000               	movlw	0
  9438  0022' 0507'              	andwf	___fleq@ff2+1,w
  9439  0023' 0081'              	movwf	??___fleq+1
  9440  0024' 3080               	movlw	128
  9441  0025' 0508'              	andwf	___fleq@ff2+2,w
  9442  0026' 0082'              	movwf	??___fleq+2
  9443  0027' 307F               	movlw	127
  9444  0028' 0509'              	andwf	___fleq@ff2+3,w
  9445  0029' 0083'              	movwf	??___fleq+3
  9446  002A' 0803'              	movf	??___fleq+3,w
  9447  002B' 0402'              	iorwf	??___fleq+2,w
  9448  002C' 0401'              	iorwf	??___fleq+1,w
  9449  002D' 0400'              	iorwf	??___fleq,w
  9450  002E' 1D03               	skipz
  9451  002F' 2800'              	goto	u5021
  9452  0030' 2800'              	goto	u5020
  9453  0031'                    u5021:
  9454  0031' 2800'              	goto	l561
  9455  0032'                    u5020:
  9456  0032'                    l3135:
  9457  0032' 3000               	movlw	0
  9458  0033' 0089'              	movwf	___fleq@ff2+3
  9459  0034' 3000               	movlw	0
  9460  0035' 0088'              	movwf	___fleq@ff2+2
  9461  0036' 3000               	movlw	0
  9462  0037' 0087'              	movwf	___fleq@ff2+1
  9463  0038' 3000               	movlw	0
  9464  0039' 0086'              	movwf	___fleq@ff2
  9465  003A'                    l561:
  9466  003A' 0809'              	movf	___fleq@ff2+3,w
  9467  003B' 0605'              	xorwf	___fleq@ff1+3,w
  9468  003C' 1D03               	skipz
  9469  003D' 2800'              	goto	u5035
  9470  003E' 0808'              	movf	___fleq@ff2+2,w
  9471  003F' 0604'              	xorwf	___fleq@ff1+2,w
  9472  0040' 1D03               	skipz
  9473  0041' 2800'              	goto	u5035
  9474  0042' 0807'              	movf	___fleq@ff2+1,w
  9475  0043' 0603'              	xorwf	___fleq@ff1+1,w
  9476  0044' 1D03               	skipz
  9477  0045' 2800'              	goto	u5035
  9478  0046' 0806'              	movf	___fleq@ff2,w
  9479  0047' 0602'              	xorwf	___fleq@ff1,w
  9480  0048'                    u5035:
  9481  0048' 1903               	skipnz
  9482  0049' 2800'              	goto	u5031
  9483  004A' 2800'              	goto	u5030
  9484  004B'                    u5031:
  9485  004B' 2800'              	goto	l3139
  9486  004C'                    u5030:
  9487  004C'                    l3137:
  9488  004C' 1003               	clrc
  9489  004D' 2800'              	goto	l562
  9490  004E'                    l3139:
  9491  004E' 1403               	setc
  9492  004F'                    l562:
  9493  004F' 0008               	return
  9494  0050'                    __end_of___fleq:
  9495                           
  9496                           	psect	text23
  9497  0000'                    __ptext23:	
  9498 ;; *************** function _setup *****************
  9499 ;; Defined at:
  9500 ;;		line 234 in file "main.c"
  9501 ;; Parameters:    Size  Location     Type
  9502 ;;		None
  9503 ;; Auto vars:     Size  Location     Type
  9504 ;;		None
  9505 ;; Return value:  Size  Location     Type
  9506 ;;                  1    wreg      void 
  9507 ;; Registers used:
  9508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  9509 ;; Tracked objects:
  9510 ;;		On entry : 0/0
  9511 ;;		On exit  : 0/0
  9512 ;;		Unchanged: 0/0
  9513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9514 ;;      Params:         0       0       0       0       0
  9515 ;;      Locals:         0       0       0       0       0
  9516 ;;      Temps:          0       0       0       0       0
  9517 ;;      Totals:         0       0       0       0       0
  9518 ;;Total ram usage:        0 bytes
  9519 ;; Hardware stack levels used: 1
  9520 ;; Hardware stack levels required when called: 2
  9521 ;; This function calls:
  9522 ;;		_I2C_Master_Init
  9523 ;; This function is called by:
  9524 ;;		_main
  9525 ;; This function uses a non-reentrant model
  9526 ;;
  9527                           
  9528  0000'                    _setup:	
  9529                           ;psect for function _setup
  9530                           
  9531  0000'                    l3277:	
  9532                           ;incstack = 0
  9533                           ; Regs used in _setup: [allreg]
  9534                           
  9535                           
  9536                           ;main.c: 237:     ANSEL = 0b00000000;
  9537  0000' 1683               	bsf	3,5	;RP0=1, select bank3
  9538  0001' 1703               	bsf	3,6	;RP1=1, select bank3
  9539  0002' 0188               	clrf	8	;volatile
  9540                           
  9541                           ;main.c: 238:     ANSELH = 0;
  9542  0003' 0189               	clrf	9	;volatile
  9543                           
  9544                           ;main.c: 241:     TRISA = 0b00000000;
  9545  0004' 1683               	bsf	3,5	;RP0=1, select bank1
  9546  0005' 1303               	bcf	3,6	;RP1=0, select bank1
  9547  0006' 0185               	clrf	5	;volatile
  9548  0007'                    l3279:
  9549                           
  9550                           ;main.c: 242:     TRISB = 0b00011111;
  9551  0007' 301F               	movlw	31
  9552  0008' 0086               	movwf	6	;volatile
  9553  0009'                    l3281:
  9554                           
  9555                           ;main.c: 244:     TRISD = 0b00000000;
  9556  0009' 0188               	clrf	8	;volatile
  9557  000A'                    l3283:
  9558                           
  9559                           ;main.c: 245:     TRISE = 0b00000000;
  9560  000A' 0189               	clrf	9	;volatile
  9561  000B'                    l3285:
  9562                           
  9563                           ;main.c: 247:     PORTA = 0b00000000;
  9564  000B' 1283               	bcf	3,5	;RP0=0, select bank0
  9565  000C' 1303               	bcf	3,6	;RP1=0, select bank0
  9566  000D' 0185               	clrf	5	;volatile
  9567  000E'                    l3287:
  9568                           
  9569                           ;main.c: 248:     PORTB = 0b00000000;
  9570  000E' 0186               	clrf	6	;volatile
  9571  000F'                    l3289:
  9572                           
  9573                           ;main.c: 250:     PORTD = 0b00000000;
  9574  000F' 0188               	clrf	8	;volatile
  9575  0010'                    l3291:
  9576                           
  9577                           ;main.c: 251:     PORTE = 0b00000000;
  9578  0010' 0189               	clrf	9	;volatile
  9579  0011'                    l3293:
  9580                           
  9581                           ;main.c: 255:     IOCB = 0b00011111;
  9582  0011' 301F               	movlw	31
  9583  0012' 1683               	bsf	3,5	;RP0=1, select bank1
  9584  0013' 1303               	bcf	3,6	;RP1=0, select bank1
  9585  0014' 0096               	movwf	22	;volatile
  9586  0015'                    l3295:
  9587                           
  9588                           ;main.c: 256:     OPTION_REGbits.nRBPU = 0;
  9589  0015' 1381               	bcf	1,7	;volatile
  9590  0016'                    l3297:
  9591                           
  9592                           ;main.c: 257:     INTCONbits.RBIE = 1;
  9593  0016' 158B               	bsf	11,3	;volatile
  9594  0017'                    l3299:
  9595                           
  9596                           ;main.c: 260:     INTCONbits.GIE = 1;
  9597  0017' 178B               	bsf	11,7	;volatile
  9598  0018'                    l3301:
  9599                           
  9600                           ;main.c: 261:     INTCONbits.PEIE = 0;
  9601  0018' 130B               	bcf	11,6	;volatile
  9602  0019'                    l3303:
  9603                           
  9604                           ;main.c: 262:     PIE1bits.SSPIE = 0;
  9605  0019' 118C               	bcf	12,3	;volatile
  9606  001A'                    l3305:
  9607                           
  9608                           ;main.c: 263:     PIE1bits.ADIE = 0;
  9609  001A' 130C               	bcf	12,6	;volatile
  9610  001B'                    l3307:
  9611                           
  9612                           ;main.c: 264:     INTCONbits.TMR0IE = 0;
  9613  001B' 128B               	bcf	11,5	;volatile
  9614  001C'                    l3309:
  9615                           
  9616                           ;main.c: 266:     PIR1bits.SSPIF = 0;
  9617  001C' 1283               	bcf	3,5	;RP0=0, select bank0
  9618  001D' 1303               	bcf	3,6	;RP1=0, select bank0
  9619  001E' 118C               	bcf	12,3	;volatile
  9620  001F'                    l3311:
  9621                           
  9622                           ;main.c: 267:     PIR1bits.ADIF = 0;
  9623  001F' 130C               	bcf	12,6	;volatile
  9624  0020'                    l3313:
  9625                           
  9626                           ;main.c: 268:     INTCONbits.RBIF = 0;
  9627  0020' 100B               	bcf	11,0	;volatile
  9628  0021'                    l3315:
  9629                           
  9630                           ;main.c: 269:     INTCONbits.T0IF = 0;
  9631  0021' 110B               	bcf	11,2	;volatile
  9632  0022'                    l3317:
  9633                           
  9634                           ;main.c: 272:     OSCCONbits.IRCF = 0b101;
  9635  0022' 1683               	bsf	3,5	;RP0=1, select bank1
  9636  0023' 1303               	bcf	3,6	;RP1=0, select bank1
  9637  0024' 080F               	movf	15,w	;volatile
  9638  0025' 398F               	andlw	-113
  9639  0026' 3850               	iorlw	80
  9640  0027' 008F               	movwf	15	;volatile
  9641  0028'                    l3319:
  9642                           
  9643                           ;main.c: 273:     OSCCONbits.SCS = 1;
  9644  0028' 140F               	bsf	15,0	;volatile
  9645  0029'                    l3321:
  9646                           
  9647                           ;main.c: 274:     I2C_Master_Init(100000);
  9648  0029' 3000               	movlw	0
  9649  002A' 0083'              	movwf	_I2C_Master_Init$0+3
  9650  002B' 3001               	movlw	1
  9651  002C' 0082'              	movwf	_I2C_Master_Init$0+2
  9652  002D' 3086               	movlw	134
  9653  002E' 0081'              	movwf	_I2C_Master_Init$0+1
  9654  002F' 30A0               	movlw	160
  9655  0030' 0080'              	movwf	_I2C_Master_Init$0
  9656  0031' 120A' 118A' 2000' 120A' 118A' 	fcall	_I2C_Master_Init
  9657  0036'                    l140:
  9658  0036' 0008               	return
  9659  0037'                    __end_of_setup:
  9660                           
  9661                           	psect	text24
  9662  0000'                    __ptext24:	
  9663 ;; *************** function ___fldiv *****************
  9664 ;; Defined at:
  9665 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcdiv.c"
  9666 ;; Parameters:    Size  Location     Type
  9667 ;;  a               4   34[BANK0 ] void 
  9668 ;;  b               4   38[BANK0 ] void 
  9669 ;; Auto vars:     Size  Location     Type
  9670 ;;  grs             4   54[BANK0 ] unsigned long 
  9671 ;;  rem             4   47[BANK0 ] unsigned long 
  9672 ;;  new_exp         2   52[BANK0 ] int 
  9673 ;;  aexp            1   59[BANK0 ] unsigned char 
  9674 ;;  bexp            1   58[BANK0 ] unsigned char 
  9675 ;;  sign            1   51[BANK0 ] unsigned char 
  9676 ;; Return value:  Size  Location     Type
  9677 ;;                  4   34[BANK0 ] unsigned char 
  9678 ;; Registers used:
  9679 ;;		wreg, status,2, status,0, btemp+1
  9680 ;; Tracked objects:
  9681 ;;		On entry : 0/0
  9682 ;;		On exit  : 0/0
  9683 ;;		Unchanged: 0/0
  9684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9685 ;;      Params:         0       8       0       0       0
  9686 ;;      Locals:         0      13       0       0       0
  9687 ;;      Temps:          0       5       0       0       0
  9688 ;;      Totals:         0      26       0       0       0
  9689 ;;Total ram usage:       26 bytes
  9690 ;; Hardware stack levels used: 1
  9691 ;; Hardware stack levels required when called: 1
  9692 ;; This function calls:
  9693 ;;		Nothing
  9694 ;; This function is called by:
  9695 ;;		_main
  9696 ;; This function uses a non-reentrant model
  9697 ;;
  9698                           
  9699  0000'                    ___fldiv:	
  9700                           ;psect for function ___fldiv
  9701                           
  9702  0000'                    l3569:	
  9703                           ;incstack = 0
  9704                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  9705                           
  9706  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  9707  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  9708  0002' 0829'              	movf	___fldiv@b+3,w
  9709  0003' 3980               	andlw	128
  9710  0004' 00B3'              	movwf	___fldiv@sign
  9711  0005'                    l3571:
  9712  0005' 0829'              	movf	___fldiv@b+3,w
  9713  0006' 00AA'              	movwf	??___fldiv
  9714  0007' 072A'              	addwf	??___fldiv,w
  9715  0008' 00BA'              	movwf	___fldiv@bexp
  9716  0009'                    l3573:
  9717  0009' 1FA8'              	btfss	___fldiv@b+2,7
  9718  000A' 2800'              	goto	u5841
  9719  000B' 2800'              	goto	u5840
  9720  000C'                    u5841:
  9721  000C' 2800'              	goto	l3577
  9722  000D'                    u5840:
  9723  000D'                    l3575:
  9724  000D' 143A'              	bsf	___fldiv@bexp,0
  9725  000E'                    l3577:
  9726  000E' 083A'              	movf	___fldiv@bexp,w
  9727  000F' 1903               	btfsc	3,2
  9728  0010' 2800'              	goto	u5851
  9729  0011' 2800'              	goto	u5850
  9730  0012'                    u5851:
  9731  0012' 2800'              	goto	l3587
  9732  0013'                    u5850:
  9733  0013'                    l3579:
  9734  0013' 0A3A'              	incf	___fldiv@bexp,w
  9735  0014' 1D03               	btfss	3,2
  9736  0015' 2800'              	goto	u5861
  9737  0016' 2800'              	goto	u5860
  9738  0017'                    u5861:
  9739  0017' 2800'              	goto	l3583
  9740  0018'                    u5860:
  9741  0018'                    l3581:
  9742  0018' 3000               	movlw	0
  9743  0019' 00A9'              	movwf	___fldiv@b+3
  9744  001A' 3000               	movlw	0
  9745  001B' 00A8'              	movwf	___fldiv@b+2
  9746  001C' 3000               	movlw	0
  9747  001D' 00A7'              	movwf	___fldiv@b+1
  9748  001E' 3000               	movlw	0
  9749  001F' 00A6'              	movwf	___fldiv@b
  9750  0020'                    l3583:
  9751  0020' 17A8'              	bsf	___fldiv@b+2,7
  9752  0021'                    l3585:
  9753  0021' 01A9'              	clrf	___fldiv@b+3
  9754  0022' 2800'              	goto	l3589
  9755  0023'                    l3587:
  9756  0023' 3000               	movlw	0
  9757  0024' 00A9'              	movwf	___fldiv@b+3
  9758  0025' 3000               	movlw	0
  9759  0026' 00A8'              	movwf	___fldiv@b+2
  9760  0027' 3000               	movlw	0
  9761  0028' 00A7'              	movwf	___fldiv@b+1
  9762  0029' 3000               	movlw	0
  9763  002A' 00A6'              	movwf	___fldiv@b
  9764  002B'                    l3589:
  9765  002B' 0825'              	movf	___fldiv@a+3,w
  9766  002C' 3980               	andlw	128
  9767  002D' 00AA'              	movwf	??___fldiv
  9768  002E' 082A'              	movf	??___fldiv,w
  9769  002F' 06B3'              	xorwf	___fldiv@sign,f
  9770  0030'                    l3591:
  9771  0030' 0825'              	movf	___fldiv@a+3,w
  9772  0031' 00AA'              	movwf	??___fldiv
  9773  0032' 072A'              	addwf	??___fldiv,w
  9774  0033' 00BB'              	movwf	___fldiv@aexp
  9775  0034'                    l3593:
  9776  0034' 1FA4'              	btfss	___fldiv@a+2,7
  9777  0035' 2800'              	goto	u5871
  9778  0036' 2800'              	goto	u5870
  9779  0037'                    u5871:
  9780  0037' 2800'              	goto	l3597
  9781  0038'                    u5870:
  9782  0038'                    l3595:
  9783  0038' 143B'              	bsf	___fldiv@aexp,0
  9784  0039'                    l3597:
  9785  0039' 083B'              	movf	___fldiv@aexp,w
  9786  003A' 1903               	btfsc	3,2
  9787  003B' 2800'              	goto	u5881
  9788  003C' 2800'              	goto	u5880
  9789  003D'                    u5881:
  9790  003D' 2800'              	goto	l3607
  9791  003E'                    u5880:
  9792  003E'                    l3599:
  9793  003E' 0A3B'              	incf	___fldiv@aexp,w
  9794  003F' 1D03               	btfss	3,2
  9795  0040' 2800'              	goto	u5891
  9796  0041' 2800'              	goto	u5890
  9797  0042'                    u5891:
  9798  0042' 2800'              	goto	l3603
  9799  0043'                    u5890:
  9800  0043'                    l3601:
  9801  0043' 3000               	movlw	0
  9802  0044' 00A5'              	movwf	___fldiv@a+3
  9803  0045' 3000               	movlw	0
  9804  0046' 00A4'              	movwf	___fldiv@a+2
  9805  0047' 3000               	movlw	0
  9806  0048' 00A3'              	movwf	___fldiv@a+1
  9807  0049' 3000               	movlw	0
  9808  004A' 00A2'              	movwf	___fldiv@a
  9809  004B'                    l3603:
  9810  004B' 17A4'              	bsf	___fldiv@a+2,7
  9811  004C'                    l3605:
  9812  004C' 01A5'              	clrf	___fldiv@a+3
  9813  004D' 2800'              	goto	l757
  9814  004E'                    l3607:
  9815  004E' 3000               	movlw	0
  9816  004F' 00A5'              	movwf	___fldiv@a+3
  9817  0050' 3000               	movlw	0
  9818  0051' 00A4'              	movwf	___fldiv@a+2
  9819  0052' 3000               	movlw	0
  9820  0053' 00A3'              	movwf	___fldiv@a+1
  9821  0054' 3000               	movlw	0
  9822  0055' 00A2'              	movwf	___fldiv@a
  9823  0056'                    l757:
  9824  0056' 0825'              	movf	___fldiv@a+3,w
  9825  0057' 0424'              	iorwf	___fldiv@a+2,w
  9826  0058' 0423'              	iorwf	___fldiv@a+1,w
  9827  0059' 0422'              	iorwf	___fldiv@a,w
  9828  005A' 1D03               	skipz
  9829  005B' 2800'              	goto	u5901
  9830  005C' 2800'              	goto	u5900
  9831  005D'                    u5901:
  9832  005D' 2800'              	goto	l3617
  9833  005E'                    u5900:
  9834  005E'                    l3609:
  9835  005E' 3000               	movlw	0
  9836  005F' 00A9'              	movwf	___fldiv@b+3
  9837  0060' 3000               	movlw	0
  9838  0061' 00A8'              	movwf	___fldiv@b+2
  9839  0062' 3000               	movlw	0
  9840  0063' 00A7'              	movwf	___fldiv@b+1
  9841  0064' 3000               	movlw	0
  9842  0065' 00A6'              	movwf	___fldiv@b
  9843  0066' 3080               	movlw	128
  9844  0067' 04A8'              	iorwf	___fldiv@b+2,f
  9845  0068' 307F               	movlw	127
  9846  0069' 04A9'              	iorwf	___fldiv@b+3,f
  9847  006A'                    l3611:
  9848  006A' 0833'              	movf	___fldiv@sign,w
  9849  006B' 00AA'              	movwf	??___fldiv
  9850  006C' 082A'              	movf	??___fldiv,w
  9851  006D' 04A9'              	iorwf	___fldiv@b+3,f
  9852  006E'                    l3613:
  9853  006E' 0829'              	movf	___fldiv@b+3,w
  9854  006F' 00A5'              	movwf	?___fldiv+3
  9855  0070' 0828'              	movf	___fldiv@b+2,w
  9856  0071' 00A4'              	movwf	?___fldiv+2
  9857  0072' 0827'              	movf	___fldiv@b+1,w
  9858  0073' 00A3'              	movwf	?___fldiv+1
  9859  0074' 0826'              	movf	___fldiv@b,w
  9860  0075' 00A2'              	movwf	?___fldiv
  9861  0076' 2800'              	goto	l759
  9862  0077'                    l3617:
  9863  0077' 083A'              	movf	___fldiv@bexp,w
  9864  0078' 1D03               	btfss	3,2
  9865  0079' 2800'              	goto	u5911
  9866  007A' 2800'              	goto	u5910
  9867  007B'                    u5911:
  9868  007B' 2800'              	goto	l3623
  9869  007C'                    u5910:
  9870  007C'                    l3619:
  9871  007C' 3000               	movlw	0
  9872  007D' 00A5'              	movwf	?___fldiv+3
  9873  007E' 3000               	movlw	0
  9874  007F' 00A4'              	movwf	?___fldiv+2
  9875  0080' 3000               	movlw	0
  9876  0081' 00A3'              	movwf	?___fldiv+1
  9877  0082' 3000               	movlw	0
  9878  0083' 00A2'              	movwf	?___fldiv
  9879  0084' 2800'              	goto	l759
  9880  0085'                    l3623:
  9881  0085' 083A'              	movf	___fldiv@bexp,w
  9882  0086' 00AA'              	movwf	??___fldiv
  9883  0087' 01AB'              	clrf	??___fldiv+1
  9884  0088' 082B'              	movf	??___fldiv+1,w
  9885  0089' 00AD'              	movwf	??___fldiv+3
  9886  008A' 083B'              	movf	___fldiv@aexp,w
  9887  008B' 022A'              	subwf	??___fldiv,w
  9888  008C' 00AC'              	movwf	??___fldiv+2
  9889  008D' 1C03               	skipc
  9890  008E' 03AD'              	decf	??___fldiv+3,f
  9891  008F' 082C'              	movf	??___fldiv+2,w
  9892  0090' 3E7F               	addlw	127
  9893  0091' 00B4'              	movwf	___fldiv@new_exp
  9894  0092' 082D'              	movf	??___fldiv+3,w
  9895  0093' 1803               	skipnc
  9896  0094' 3E01               	addlw	1
  9897  0095' 3E00               	addlw	0
  9898  0096' 00B5'              	movwf	___fldiv@new_exp+1
  9899  0097'                    l3625:
  9900  0097' 0829'              	movf	___fldiv@b+3,w
  9901  0098' 00B2'              	movwf	___fldiv@rem+3
  9902  0099' 0828'              	movf	___fldiv@b+2,w
  9903  009A' 00B1'              	movwf	___fldiv@rem+2
  9904  009B' 0827'              	movf	___fldiv@b+1,w
  9905  009C' 00B0'              	movwf	___fldiv@rem+1
  9906  009D' 0826'              	movf	___fldiv@b,w
  9907  009E' 00AF'              	movwf	___fldiv@rem
  9908  009F'                    l3627:
  9909  009F' 3000               	movlw	0
  9910  00A0' 00A9'              	movwf	___fldiv@b+3
  9911  00A1' 3000               	movlw	0
  9912  00A2' 00A8'              	movwf	___fldiv@b+2
  9913  00A3' 3000               	movlw	0
  9914  00A4' 00A7'              	movwf	___fldiv@b+1
  9915  00A5' 3000               	movlw	0
  9916  00A6' 00A6'              	movwf	___fldiv@b
  9917  00A7'                    l3629:
  9918  00A7' 3000               	movlw	0
  9919  00A8' 00B9'              	movwf	___fldiv@grs+3
  9920  00A9' 3000               	movlw	0
  9921  00AA' 00B8'              	movwf	___fldiv@grs+2
  9922  00AB' 3000               	movlw	0
  9923  00AC' 00B7'              	movwf	___fldiv@grs+1
  9924  00AD' 3000               	movlw	0
  9925  00AE' 00B6'              	movwf	___fldiv@grs
  9926  00AF'                    l3631:
  9927  00AF' 01BB'              	clrf	___fldiv@aexp
  9928  00B0' 2800'              	goto	l3651
  9929  00B1'                    l3633:
  9930  00B1' 083B'              	movf	___fldiv@aexp,w
  9931  00B2' 1903               	btfsc	3,2
  9932  00B3' 2800'              	goto	u5921
  9933  00B4' 2800'              	goto	u5920
  9934  00B5'                    u5921:
  9935  00B5' 2800'              	goto	l3643
  9936  00B6'                    u5920:
  9937  00B6'                    l3635:
  9938  00B6' 3001               	movlw	1
  9939  00B7' 00AA'              	movwf	??___fldiv
  9940  00B8'                    u5935:
  9941  00B8' 1003               	clrc
  9942  00B9' 0DAF'              	rlf	___fldiv@rem,f
  9943  00BA' 0DB0'              	rlf	___fldiv@rem+1,f
  9944  00BB' 0DB1'              	rlf	___fldiv@rem+2,f
  9945  00BC' 0DB2'              	rlf	___fldiv@rem+3,f
  9946  00BD' 0BAA'              	decfsz	??___fldiv,f
  9947  00BE' 2800'              	goto	u5935
  9948  00BF' 3001               	movlw	1
  9949  00C0' 00AA'              	movwf	??___fldiv
  9950  00C1'                    u5945:
  9951  00C1' 1003               	clrc
  9952  00C2' 0DA6'              	rlf	___fldiv@b,f
  9953  00C3' 0DA7'              	rlf	___fldiv@b+1,f
  9954  00C4' 0DA8'              	rlf	___fldiv@b+2,f
  9955  00C5' 0DA9'              	rlf	___fldiv@b+3,f
  9956  00C6' 0BAA'              	decfsz	??___fldiv,f
  9957  00C7' 2800'              	goto	u5945
  9958  00C8'                    l3637:
  9959  00C8' 1FB9'              	btfss	___fldiv@grs+3,7
  9960  00C9' 2800'              	goto	u5951
  9961  00CA' 2800'              	goto	u5950
  9962  00CB'                    u5951:
  9963  00CB' 2800'              	goto	l3641
  9964  00CC'                    u5950:
  9965  00CC'                    l3639:
  9966  00CC' 1426'              	bsf	___fldiv@b,0
  9967  00CD'                    l3641:
  9968  00CD' 3001               	movlw	1
  9969  00CE' 00AA'              	movwf	??___fldiv
  9970  00CF'                    u5965:
  9971  00CF' 1003               	clrc
  9972  00D0' 0DB6'              	rlf	___fldiv@grs,f
  9973  00D1' 0DB7'              	rlf	___fldiv@grs+1,f
  9974  00D2' 0DB8'              	rlf	___fldiv@grs+2,f
  9975  00D3' 0DB9'              	rlf	___fldiv@grs+3,f
  9976  00D4' 0BAA'              	decfsz	??___fldiv,f
  9977  00D5' 2800'              	goto	u5965
  9978  00D6'                    l3643:
  9979  00D6' 0825'              	movf	___fldiv@a+3,w
  9980  00D7' 0232'              	subwf	___fldiv@rem+3,w
  9981  00D8' 1D03               	skipz
  9982  00D9' 2800'              	goto	u5975
  9983  00DA' 0824'              	movf	___fldiv@a+2,w
  9984  00DB' 0231'              	subwf	___fldiv@rem+2,w
  9985  00DC' 1D03               	skipz
  9986  00DD' 2800'              	goto	u5975
  9987  00DE' 0823'              	movf	___fldiv@a+1,w
  9988  00DF' 0230'              	subwf	___fldiv@rem+1,w
  9989  00E0' 1D03               	skipz
  9990  00E1' 2800'              	goto	u5975
  9991  00E2' 0822'              	movf	___fldiv@a,w
  9992  00E3' 022F'              	subwf	___fldiv@rem,w
  9993  00E4'                    u5975:
  9994  00E4' 1C03               	skipc
  9995  00E5' 2800'              	goto	u5971
  9996  00E6' 2800'              	goto	u5970
  9997  00E7'                    u5971:
  9998  00E7' 2800'              	goto	l3649
  9999  00E8'                    u5970:
 10000  00E8'                    l3645:
 10001  00E8' 1739'              	bsf	___fldiv@grs+3,6
 10002  00E9'                    l3647:
 10003  00E9' 0822'              	movf	___fldiv@a,w
 10004  00EA' 02AF'              	subwf	___fldiv@rem,f
 10005  00EB' 0823'              	movf	___fldiv@a+1,w
 10006  00EC' 1C03               	skipc
 10007  00ED' 0F23'              	incfsz	___fldiv@a+1,w
 10008  00EE' 02B0'              	subwf	___fldiv@rem+1,f
 10009  00EF' 0824'              	movf	___fldiv@a+2,w
 10010  00F0' 1C03               	skipc
 10011  00F1' 0F24'              	incfsz	___fldiv@a+2,w
 10012  00F2' 02B1'              	subwf	___fldiv@rem+2,f
 10013  00F3' 0825'              	movf	___fldiv@a+3,w
 10014  00F4' 1C03               	skipc
 10015  00F5' 0F25'              	incfsz	___fldiv@a+3,w
 10016  00F6' 02B2'              	subwf	___fldiv@rem+3,f
 10017  00F7'                    l3649:
 10018  00F7' 3001               	movlw	1
 10019  00F8' 00AA'              	movwf	??___fldiv
 10020  00F9' 082A'              	movf	??___fldiv,w
 10021  00FA' 07BB'              	addwf	___fldiv@aexp,f
 10022  00FB'                    l3651:
 10023  00FB' 301A               	movlw	26
 10024  00FC' 023B'              	subwf	___fldiv@aexp,w
 10025  00FD' 1C03               	skipc
 10026  00FE' 2800'              	goto	u5981
 10027  00FF' 2800'              	goto	u5980
 10028  0100'                    u5981:
 10029  0100' 2800'              	goto	l3633
 10030  0101'                    u5980:
 10031  0101'                    l3653:
 10032  0101' 0832'              	movf	___fldiv@rem+3,w
 10033  0102' 0431'              	iorwf	___fldiv@rem+2,w
 10034  0103' 0430'              	iorwf	___fldiv@rem+1,w
 10035  0104' 042F'              	iorwf	___fldiv@rem,w
 10036  0105' 1903               	skipnz
 10037  0106' 2800'              	goto	u5991
 10038  0107' 2800'              	goto	u5990
 10039  0108'                    u5991:
 10040  0108' 2800'              	goto	l3667
 10041  0109'                    u5990:
 10042  0109'                    l3655:
 10043  0109' 1436'              	bsf	___fldiv@grs,0
 10044  010A' 2800'              	goto	l3667
 10045  010B'                    l3657:
 10046  010B' 3001               	movlw	1
 10047  010C' 00AA'              	movwf	??___fldiv
 10048  010D'                    u6005:
 10049  010D' 1003               	clrc
 10050  010E' 0DA6'              	rlf	___fldiv@b,f
 10051  010F' 0DA7'              	rlf	___fldiv@b+1,f
 10052  0110' 0DA8'              	rlf	___fldiv@b+2,f
 10053  0111' 0DA9'              	rlf	___fldiv@b+3,f
 10054  0112' 0BAA'              	decfsz	??___fldiv,f
 10055  0113' 2800'              	goto	u6005
 10056  0114'                    l3659:
 10057  0114' 1FB9'              	btfss	___fldiv@grs+3,7
 10058  0115' 2800'              	goto	u6011
 10059  0116' 2800'              	goto	u6010
 10060  0117'                    u6011:
 10061  0117' 2800'              	goto	l3663
 10062  0118'                    u6010:
 10063  0118'                    l3661:
 10064  0118' 1426'              	bsf	___fldiv@b,0
 10065  0119'                    l3663:
 10066  0119' 3001               	movlw	1
 10067  011A' 00AA'              	movwf	??___fldiv
 10068  011B'                    u6025:
 10069  011B' 1003               	clrc
 10070  011C' 0DB6'              	rlf	___fldiv@grs,f
 10071  011D' 0DB7'              	rlf	___fldiv@grs+1,f
 10072  011E' 0DB8'              	rlf	___fldiv@grs+2,f
 10073  011F' 0DB9'              	rlf	___fldiv@grs+3,f
 10074  0120' 0BAA'              	decfsz	??___fldiv,f
 10075  0121' 2800'              	goto	u6025
 10076  0122'                    l3665:
 10077  0122' 30FF               	movlw	255
 10078  0123' 07B4'              	addwf	___fldiv@new_exp,f
 10079  0124' 1803               	skipnc
 10080  0125' 0AB5'              	incf	___fldiv@new_exp+1,f
 10081  0126' 30FF               	movlw	255
 10082  0127' 07B5'              	addwf	___fldiv@new_exp+1,f
 10083  0128'                    l3667:
 10084  0128' 1FA8'              	btfss	___fldiv@b+2,7
 10085  0129' 2800'              	goto	u6031
 10086  012A' 2800'              	goto	u6030
 10087  012B'                    u6031:
 10088  012B' 2800'              	goto	l3657
 10089  012C'                    u6030:
 10090  012C'                    l3669:
 10091  012C' 01BB'              	clrf	___fldiv@aexp
 10092  012D'                    l3671:
 10093  012D' 1FB9'              	btfss	___fldiv@grs+3,7
 10094  012E' 2800'              	goto	u6041
 10095  012F' 2800'              	goto	u6040
 10096  0130'                    u6041:
 10097  0130' 2800'              	goto	l3679
 10098  0131'                    u6040:
 10099  0131'                    l3673:
 10100  0131' 30FF               	movlw	255
 10101  0132' 0536'              	andwf	___fldiv@grs,w
 10102  0133' 00AA'              	movwf	??___fldiv
 10103  0134' 30FF               	movlw	255
 10104  0135' 0537'              	andwf	___fldiv@grs+1,w
 10105  0136' 00AB'              	movwf	??___fldiv+1
 10106  0137' 30FF               	movlw	255
 10107  0138' 0538'              	andwf	___fldiv@grs+2,w
 10108  0139' 00AC'              	movwf	??___fldiv+2
 10109  013A' 307F               	movlw	127
 10110  013B' 0539'              	andwf	___fldiv@grs+3,w
 10111  013C' 00AD'              	movwf	??___fldiv+3
 10112  013D' 082D'              	movf	??___fldiv+3,w
 10113  013E' 042C'              	iorwf	??___fldiv+2,w
 10114  013F' 042B'              	iorwf	??___fldiv+1,w
 10115  0140' 042A'              	iorwf	??___fldiv,w
 10116  0141' 1903               	skipnz
 10117  0142' 2800'              	goto	u6051
 10118  0143' 2800'              	goto	u6050
 10119  0144'                    u6051:
 10120  0144' 2800'              	goto	l773
 10121  0145'                    u6050:
 10122  0145'                    l3675:
 10123  0145' 01BB'              	clrf	___fldiv@aexp
 10124  0146' 0ABB'              	incf	___fldiv@aexp,f
 10125  0147' 2800'              	goto	l3679
 10126  0148'                    l773:
 10127  0148' 1C26'              	btfss	___fldiv@b,0
 10128  0149' 2800'              	goto	u6061
 10129  014A' 2800'              	goto	u6060
 10130  014B'                    u6061:
 10131  014B' 2800'              	goto	l3679
 10132  014C'                    u6060:
 10133  014C' 2800'              	goto	l3675
 10134  014D'                    l3679:
 10135  014D' 083B'              	movf	___fldiv@aexp,w
 10136  014E' 1903               	btfsc	3,2
 10137  014F' 2800'              	goto	u6071
 10138  0150' 2800'              	goto	u6070
 10139  0151'                    u6071:
 10140  0151' 2800'              	goto	l3689
 10141  0152'                    u6070:
 10142  0152'                    l3681:
 10143  0152' 3001               	movlw	1
 10144  0153' 07A6'              	addwf	___fldiv@b,f
 10145  0154' 3000               	movlw	0
 10146  0155' 1803               	skipnc
 10147  0156' 3001               	movlw	1
 10148  0157' 07A7'              	addwf	___fldiv@b+1,f
 10149  0158' 3000               	movlw	0
 10150  0159' 1803               	skipnc
 10151  015A' 3001               	movlw	1
 10152  015B' 07A8'              	addwf	___fldiv@b+2,f
 10153  015C' 3000               	movlw	0
 10154  015D' 1803               	skipnc
 10155  015E' 3001               	movlw	1
 10156  015F' 07A9'              	addwf	___fldiv@b+3,f
 10157  0160'                    l3683:
 10158  0160' 1C29'              	btfss	___fldiv@b+3,0
 10159  0161' 2800'              	goto	u6081
 10160  0162' 2800'              	goto	u6080
 10161  0163'                    u6081:
 10162  0163' 2800'              	goto	l3689
 10163  0164'                    u6080:
 10164  0164'                    l3685:
 10165  0164' 0826'              	movf	___fldiv@b,w
 10166  0165' 00AA'              	movwf	??___fldiv
 10167  0166' 0827'              	movf	___fldiv@b+1,w
 10168  0167' 00AB'              	movwf	??___fldiv+1
 10169  0168' 0828'              	movf	___fldiv@b+2,w
 10170  0169' 00AC'              	movwf	??___fldiv+2
 10171  016A' 0829'              	movf	___fldiv@b+3,w
 10172  016B' 00AD'              	movwf	??___fldiv+3
 10173  016C' 3001               	movlw	1
 10174  016D' 00AE'              	movwf	??___fldiv+4
 10175  016E'                    u6095:
 10176  016E' 0D2D'              	rlf	??___fldiv+3,w
 10177  016F' 0CAD'              	rrf	??___fldiv+3,f
 10178  0170' 0CAC'              	rrf	??___fldiv+2,f
 10179  0171' 0CAB'              	rrf	??___fldiv+1,f
 10180  0172' 0CAA'              	rrf	??___fldiv,f
 10181  0173'                    u6090:
 10182  0173' 0BAE'              	decfsz	??___fldiv+4,f
 10183  0174' 2800'              	goto	u6095
 10184  0175' 082D'              	movf	??___fldiv+3,w
 10185  0176' 00A9'              	movwf	___fldiv@b+3
 10186  0177' 082C'              	movf	??___fldiv+2,w
 10187  0178' 00A8'              	movwf	___fldiv@b+2
 10188  0179' 082B'              	movf	??___fldiv+1,w
 10189  017A' 00A7'              	movwf	___fldiv@b+1
 10190  017B' 082A'              	movf	??___fldiv,w
 10191  017C' 00A6'              	movwf	___fldiv@b
 10192  017D'                    l3687:
 10193  017D' 3001               	movlw	1
 10194  017E' 07B4'              	addwf	___fldiv@new_exp,f
 10195  017F' 1803               	skipnc
 10196  0180' 0AB5'              	incf	___fldiv@new_exp+1,f
 10197  0181' 3000               	movlw	0
 10198  0182' 07B5'              	addwf	___fldiv@new_exp+1,f
 10199  0183'                    l3689:
 10200  0183' 0835'              	movf	___fldiv@new_exp+1,w
 10201  0184' 3A80               	xorlw	128
 10202  0185' 00FF               	movwf	btemp+1
 10203  0186' 3080               	movlw	128
 10204  0187' 027F               	subwf	btemp+1,w
 10205  0188' 1D03               	skipz
 10206  0189' 2800'              	goto	u6105
 10207  018A' 30FF               	movlw	255
 10208  018B' 0234'              	subwf	___fldiv@new_exp,w
 10209  018C'                    u6105:
 10210  018C' 1C03               	skipc
 10211  018D' 2800'              	goto	u6101
 10212  018E' 2800'              	goto	u6100
 10213  018F'                    u6101:
 10214  018F' 2800'              	goto	l3693
 10215  0190'                    u6100:
 10216  0190'                    l3691:
 10217  0190' 30FF               	movlw	255
 10218  0191' 1283               	bcf	3,5	;RP0=0, select bank0
 10219  0192' 1303               	bcf	3,6	;RP1=0, select bank0
 10220  0193' 00B4'              	movwf	___fldiv@new_exp
 10221  0194' 3000               	movlw	0
 10222  0195' 00B5'              	movwf	___fldiv@new_exp+1
 10223  0196' 3000               	movlw	0
 10224  0197' 00A9'              	movwf	___fldiv@b+3
 10225  0198' 3000               	movlw	0
 10226  0199' 00A8'              	movwf	___fldiv@b+2
 10227  019A' 3000               	movlw	0
 10228  019B' 00A7'              	movwf	___fldiv@b+1
 10229  019C' 3000               	movlw	0
 10230  019D' 00A6'              	movwf	___fldiv@b
 10231  019E'                    l3693:
 10232  019E' 1283               	bcf	3,5	;RP0=0, select bank0
 10233  019F' 1303               	bcf	3,6	;RP1=0, select bank0
 10234  01A0' 0835'              	movf	___fldiv@new_exp+1,w
 10235  01A1' 3A80               	xorlw	128
 10236  01A2' 00FF               	movwf	btemp+1
 10237  01A3' 3080               	movlw	128
 10238  01A4' 027F               	subwf	btemp+1,w
 10239  01A5' 1D03               	skipz
 10240  01A6' 2800'              	goto	u6115
 10241  01A7' 3001               	movlw	1
 10242  01A8' 0234'              	subwf	___fldiv@new_exp,w
 10243  01A9'                    u6115:
 10244  01A9' 1803               	skipnc
 10245  01AA' 2800'              	goto	u6111
 10246  01AB' 2800'              	goto	u6110
 10247  01AC'                    u6111:
 10248  01AC' 2800'              	goto	l779
 10249  01AD'                    u6110:
 10250  01AD'                    l3695:
 10251  01AD' 1283               	bcf	3,5	;RP0=0, select bank0
 10252  01AE' 1303               	bcf	3,6	;RP1=0, select bank0
 10253  01AF' 01B4'              	clrf	___fldiv@new_exp
 10254  01B0' 01B5'              	clrf	___fldiv@new_exp+1
 10255  01B1'                    l3697:
 10256  01B1' 3000               	movlw	0
 10257  01B2' 00A9'              	movwf	___fldiv@b+3
 10258  01B3' 3000               	movlw	0
 10259  01B4' 00A8'              	movwf	___fldiv@b+2
 10260  01B5' 3000               	movlw	0
 10261  01B6' 00A7'              	movwf	___fldiv@b+1
 10262  01B7' 3000               	movlw	0
 10263  01B8' 00A6'              	movwf	___fldiv@b
 10264  01B9'                    l3699:
 10265  01B9' 01B3'              	clrf	___fldiv@sign
 10266  01BA'                    l779:
 10267  01BA' 1283               	bcf	3,5	;RP0=0, select bank0
 10268  01BB' 1303               	bcf	3,6	;RP1=0, select bank0
 10269  01BC' 0834'              	movf	___fldiv@new_exp,w
 10270  01BD' 00BA'              	movwf	___fldiv@bexp
 10271  01BE'                    l3701:
 10272  01BE' 1C3A'              	btfss	___fldiv@bexp,0
 10273  01BF' 2800'              	goto	u6121
 10274  01C0' 2800'              	goto	u6120
 10275  01C1'                    u6121:
 10276  01C1' 2800'              	goto	l3705
 10277  01C2'                    u6120:
 10278  01C2'                    l3703:
 10279  01C2' 17A8'              	bsf	___fldiv@b+2,7
 10280  01C3' 2800'              	goto	l781
 10281  01C4'                    l3705:
 10282  01C4' 307F               	movlw	127
 10283  01C5' 00AA'              	movwf	??___fldiv
 10284  01C6' 082A'              	movf	??___fldiv,w
 10285  01C7' 05A8'              	andwf	___fldiv@b+2,f
 10286  01C8'                    l781:
 10287  01C8' 083A'              	movf	___fldiv@bexp,w
 10288  01C9' 00AA'              	movwf	??___fldiv
 10289  01CA' 1003               	clrc
 10290  01CB' 0C2A'              	rrf	??___fldiv,w
 10291  01CC' 00A9'              	movwf	___fldiv@b+3
 10292  01CD' 0833'              	movf	___fldiv@sign,w
 10293  01CE' 00AA'              	movwf	??___fldiv
 10294  01CF' 082A'              	movf	??___fldiv,w
 10295  01D0' 04A9'              	iorwf	___fldiv@b+3,f
 10296  01D1' 2800'              	goto	l3613
 10297  01D2'                    l759:
 10298  01D2' 0008               	return
 10299  01D3'                    __end_of___fldiv:
 10300                           
 10301                           	psect	text25
 10302  0000'                    __ptext25:	
 10303 ;; *************** function _Lcd_Write_String *****************
 10304 ;; Defined at:
 10305 ;;		line 98 in file "LCD.c"
 10306 ;; Parameters:    Size  Location     Type
 10307 ;;  a               2    7[COMMON] PTR unsigned char 
 10308 ;;		 -> STR_7(2), STR_6(2), STR_5(2), ADC1(4), 
 10309 ;;		 -> STR_3(5), STR_2(3), STR_1(13), 
 10310 ;; Auto vars:     Size  Location     Type
 10311 ;;  i               2    3[BANK0 ] int 
 10312 ;; Return value:  Size  Location     Type
 10313 ;;                  1    wreg      void 
 10314 ;; Registers used:
 10315 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10316 ;; Tracked objects:
 10317 ;;		On entry : 0/0
 10318 ;;		On exit  : 0/0
 10319 ;;		Unchanged: 0/0
 10320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10321 ;;      Params:         2       0       0       0       0
 10322 ;;      Locals:         0       2       0       0       0
 10323 ;;      Temps:          0       3       0       0       0
 10324 ;;      Totals:         2       5       0       0       0
 10325 ;;Total ram usage:        7 bytes
 10326 ;; Hardware stack levels used: 1
 10327 ;; Hardware stack levels required when called: 3
 10328 ;; This function calls:
 10329 ;;		_Lcd_Write_Char
 10330 ;; This function is called by:
 10331 ;;		_main
 10332 ;; This function uses a non-reentrant model
 10333 ;;
 10334                           
 10335  0000'                    _Lcd_Write_String:	
 10336                           ;psect for function _Lcd_Write_String
 10337                           
 10338  0000'                    l4261:	
 10339                           ;incstack = 0
 10340                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10341                           
 10342                           
 10343                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
 10344  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 10345  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 10346  0002' 0183'              	clrf	Lcd_Write_String@i
 10347  0003' 0184'              	clrf	Lcd_Write_String@i+1
 10348  0004' 2800'              	goto	l4267
 10349  0005'                    l4263:
 10350                           
 10351                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
 10352  0005' 0803'              	movf	Lcd_Write_String@i,w
 10353  0006' 0707'              	addwf	Lcd_Write_String@a,w
 10354  0007' 0081'              	movwf	??_Lcd_Write_String+1
 10355  0008' 0808'              	movf	Lcd_Write_String@a+1,w
 10356  0009' 0080'              	movwf	??_Lcd_Write_String
 10357  000A' 1803               	skipnc
 10358  000B' 0A80'              	incf	??_Lcd_Write_String,f
 10359  000C' 1F83'              	btfss	Lcd_Write_String@i,7
 10360  000D' 2800'              	goto	u7330
 10361  000E' 0380'              	decf	??_Lcd_Write_String,f
 10362  000F'                    u7330:
 10363  000F' 1283               	bcf	3,5	;RP0=0, select bank0
 10364  0010' 1303               	bcf	3,6	;RP1=0, select bank0
 10365  0011' 0800'              	movf	??_Lcd_Write_String,w
 10366  0012' 0082'              	movwf	??_Lcd_Write_String+2
 10367  0013' 0802'              	movf	??_Lcd_Write_String+2,w
 10368  0014' 00FF               	movwf	btemp+1
 10369  0015' 0801'              	movf	??_Lcd_Write_String+1,w
 10370  0016' 0084               	movwf	4
 10371  0017' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 10372  001C' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_Char
 10373  0021'                    l4265:
 10374  0021' 3001               	movlw	1
 10375  0022' 1283               	bcf	3,5	;RP0=0, select bank0
 10376  0023' 1303               	bcf	3,6	;RP1=0, select bank0
 10377  0024' 0783'              	addwf	Lcd_Write_String@i,f
 10378  0025' 1803               	skipnc
 10379  0026' 0A84'              	incf	Lcd_Write_String@i+1,f
 10380  0027' 3000               	movlw	0
 10381  0028' 0784'              	addwf	Lcd_Write_String@i+1,f
 10382  0029'                    l4267:
 10383  0029' 0803'              	movf	Lcd_Write_String@i,w
 10384  002A' 0707'              	addwf	Lcd_Write_String@a,w
 10385  002B' 0081'              	movwf	??_Lcd_Write_String+1
 10386  002C' 0808'              	movf	Lcd_Write_String@a+1,w
 10387  002D' 0080'              	movwf	??_Lcd_Write_String
 10388  002E' 1803               	skipnc
 10389  002F' 0A80'              	incf	??_Lcd_Write_String,f
 10390  0030' 1F83'              	btfss	Lcd_Write_String@i,7
 10391  0031' 2800'              	goto	u7340
 10392  0032' 0380'              	decf	??_Lcd_Write_String,f
 10393  0033'                    u7340:
 10394  0033' 1283               	bcf	3,5	;RP0=0, select bank0
 10395  0034' 1303               	bcf	3,6	;RP1=0, select bank0
 10396  0035' 0800'              	movf	??_Lcd_Write_String,w
 10397  0036' 0082'              	movwf	??_Lcd_Write_String+2
 10398  0037' 0802'              	movf	??_Lcd_Write_String+2,w
 10399  0038' 00FF               	movwf	btemp+1
 10400  0039' 0801'              	movf	??_Lcd_Write_String+1,w
 10401  003A' 0084               	movwf	4
 10402  003B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 10403  0040' 3A00               	xorlw	0
 10404  0041' 1D03               	skipz
 10405  0042' 2800'              	goto	u7351
 10406  0043' 2800'              	goto	u7350
 10407  0044'                    u7351:
 10408  0044' 2800'              	goto	l4263
 10409  0045'                    u7350:
 10410  0045'                    l189:
 10411  0045' 0008               	return
 10412  0046'                    __end_of_Lcd_Write_String:
 10413                           
 10414                           	psect	text26
 10415  0000'                    __ptext26:	
 10416 ;; *************** function _Lcd_Write_Char *****************
 10417 ;; Defined at:
 10418 ;;		line 83 in file "LCD.c"
 10419 ;; Parameters:    Size  Location     Type
 10420 ;;  a               1    wreg     unsigned char 
 10421 ;; Auto vars:     Size  Location     Type
 10422 ;;  a               1    6[COMMON] unsigned char 
 10423 ;;  y               1    5[COMMON] unsigned char 
 10424 ;;  temp            1    4[COMMON] unsigned char 
 10425 ;; Return value:  Size  Location     Type
 10426 ;;                  1    wreg      void 
 10427 ;; Registers used:
 10428 ;;		wreg, status,2, status,0, pclath, cstack
 10429 ;; Tracked objects:
 10430 ;;		On entry : 0/0
 10431 ;;		On exit  : 0/0
 10432 ;;		Unchanged: 0/0
 10433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10434 ;;      Params:         0       0       0       0       0
 10435 ;;      Locals:         3       0       0       0       0
 10436 ;;      Temps:          1       0       0       0       0
 10437 ;;      Totals:         4       0       0       0       0
 10438 ;;Total ram usage:        4 bytes
 10439 ;; Hardware stack levels used: 1
 10440 ;; Hardware stack levels required when called: 2
 10441 ;; This function calls:
 10442 ;;		_Lcd_Port
 10443 ;; This function is called by:
 10444 ;;		_main
 10445 ;;		_Lcd_Write_String
 10446 ;; This function uses a non-reentrant model
 10447 ;;
 10448                           
 10449  0000'                    _Lcd_Write_Char:	
 10450                           ;psect for function _Lcd_Write_Char
 10451                           
 10452                           
 10453                           ;incstack = 0
 10454                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10455                           ;Lcd_Write_Char@a stored from wreg
 10456  0000' 0086'              	movwf	Lcd_Write_Char@a
 10457  0001'                    l4045:
 10458                           
 10459                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
 10460  0001' 0806'              	movf	Lcd_Write_Char@a,w
 10461  0002' 390F               	andlw	15
 10462  0003' 0084'              	movwf	Lcd_Write_Char@temp
 10463                           
 10464                           ;LCD.c: 86:     y = a & 0xF0;
 10465  0004' 0806'              	movf	Lcd_Write_Char@a,w
 10466  0005' 39F0               	andlw	240
 10467  0006' 0085'              	movwf	Lcd_Write_Char@y
 10468  0007'                    l4047:
 10469                           
 10470                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
 10471  0007' 1283               	bcf	3,5	;RP0=0, select bank0
 10472  0008' 1303               	bcf	3,6	;RP1=0, select bank0
 10473  0009' 1508               	bsf	8,2	;volatile
 10474  000A'                    l4049:
 10475                           
 10476                           ;LCD.c: 88:     Lcd_Port(y >> 4);
 10477  000A' 0805'              	movf	Lcd_Write_Char@y,w
 10478  000B' 0083'              	movwf	??_Lcd_Write_Char
 10479  000C' 3004               	movlw	4
 10480  000D'                    u6775:
 10481  000D' 1003               	clrc
 10482  000E' 0C83'              	rrf	??_Lcd_Write_Char,f
 10483  000F' 3EFF               	addlw	-1
 10484  0010' 1D03               	skipz
 10485  0011' 2800'              	goto	u6775
 10486  0012' 0803'              	movf	??_Lcd_Write_Char,w
 10487  0013' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Port
 10488  0018'                    l4051:
 10489                           
 10490                           ;LCD.c: 89:     RD3 = 1;
 10491  0018' 1283               	bcf	3,5	;RP0=0, select bank0
 10492  0019' 1303               	bcf	3,6	;RP1=0, select bank0
 10493  001A' 1588               	bsf	8,3	;volatile
 10494  001B'                    l4053:
 10495                           
 10496                           ;LCD.c: 90:     _delay((unsigned long)((40)*(2000000/4000000.0)));
 10497  001B' 3006               	movlw	6
 10498  001C' 0083'              	movwf	??_Lcd_Write_Char
 10499  001D'                    u7767:
 10500  001D' 0B83'              	decfsz	??_Lcd_Write_Char,f
 10501  001E' 2800'              	goto	u7767
 10502  001F' 0000               	nop
 10503  0020'                    l4055:
 10504                           
 10505                           ;LCD.c: 91:     RD3 = 0;
 10506  0020' 1283               	bcf	3,5	;RP0=0, select bank0
 10507  0021' 1303               	bcf	3,6	;RP1=0, select bank0
 10508  0022' 1188               	bcf	8,3	;volatile
 10509  0023'                    l4057:
 10510                           
 10511                           ;LCD.c: 92:     Lcd_Port(temp);
 10512  0023' 0804'              	movf	Lcd_Write_Char@temp,w
 10513  0024' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Port
 10514  0029'                    l4059:
 10515                           
 10516                           ;LCD.c: 93:     RD3 = 1;
 10517  0029' 1283               	bcf	3,5	;RP0=0, select bank0
 10518  002A' 1303               	bcf	3,6	;RP1=0, select bank0
 10519  002B' 1588               	bsf	8,3	;volatile
 10520  002C'                    l4061:
 10521                           
 10522                           ;LCD.c: 94:     _delay((unsigned long)((40)*(2000000/4000000.0)));
 10523  002C' 3006               	movlw	6
 10524  002D' 0083'              	movwf	??_Lcd_Write_Char
 10525  002E'                    u7777:
 10526  002E' 0B83'              	decfsz	??_Lcd_Write_Char,f
 10527  002F' 2800'              	goto	u7777
 10528  0030' 0000               	nop
 10529  0031'                    l4063:
 10530                           
 10531                           ;LCD.c: 95:     RD3 = 0;
 10532  0031' 1283               	bcf	3,5	;RP0=0, select bank0
 10533  0032' 1303               	bcf	3,6	;RP1=0, select bank0
 10534  0033' 1188               	bcf	8,3	;volatile
 10535  0034'                    l183:
 10536  0034' 0008               	return
 10537  0035'                    __end_of_Lcd_Write_Char:
 10538                           
 10539                           	psect	text27
 10540  0000'                    __ptext27:	
 10541 ;; *************** function _Lcd_Set_Cursor *****************
 10542 ;; Defined at:
 10543 ;;		line 48 in file "LCD.c"
 10544 ;; Parameters:    Size  Location     Type
 10545 ;;  a               1    wreg     unsigned char 
 10546 ;;  b               1    6[COMMON] unsigned char 
 10547 ;; Auto vars:     Size  Location     Type
 10548 ;;  a               1    0[BANK0 ] unsigned char 
 10549 ;;  temp            1    3[BANK0 ] unsigned char 
 10550 ;;  y               1    2[BANK0 ] unsigned char 
 10551 ;;  z               1    1[BANK0 ] unsigned char 
 10552 ;; Return value:  Size  Location     Type
 10553 ;;                  1    wreg      void 
 10554 ;; Registers used:
 10555 ;;		wreg, status,2, status,0, pclath, cstack
 10556 ;; Tracked objects:
 10557 ;;		On entry : 0/0
 10558 ;;		On exit  : 0/0
 10559 ;;		Unchanged: 0/0
 10560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10561 ;;      Params:         1       0       0       0       0
 10562 ;;      Locals:         0       4       0       0       0
 10563 ;;      Temps:          1       0       0       0       0
 10564 ;;      Totals:         2       4       0       0       0
 10565 ;;Total ram usage:        6 bytes
 10566 ;; Hardware stack levels used: 1
 10567 ;; Hardware stack levels required when called: 3
 10568 ;; This function calls:
 10569 ;;		_Lcd_Cmd
 10570 ;; This function is called by:
 10571 ;;		_main
 10572 ;; This function uses a non-reentrant model
 10573 ;;
 10574                           
 10575  0000'                    _Lcd_Set_Cursor:	
 10576                           ;psect for function _Lcd_Set_Cursor
 10577                           
 10578                           
 10579                           ;incstack = 0
 10580                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 10581                           ;Lcd_Set_Cursor@a stored from wreg
 10582  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 10583  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 10584  0002' 0080'              	movwf	Lcd_Set_Cursor@a
 10585  0003'                    l4241:
 10586                           
 10587                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
 10588  0003' 0300'              	decf	Lcd_Set_Cursor@a,w
 10589  0004' 1D03               	btfss	3,2
 10590  0005' 2800'              	goto	u7291
 10591  0006' 2800'              	goto	u7290
 10592  0007'                    u7291:
 10593  0007' 2800'              	goto	l4251
 10594  0008'                    u7290:
 10595  0008'                    l4243:
 10596                           
 10597                           ;LCD.c: 51:         temp = 0x80 + b - 1;
 10598  0008' 0806'              	movf	Lcd_Set_Cursor@b,w
 10599  0009' 3E7F               	addlw	127
 10600  000A' 0083'              	movwf	Lcd_Set_Cursor@temp
 10601                           
 10602                           ;LCD.c: 52:         z = temp >> 4;
 10603  000B' 0803'              	movf	Lcd_Set_Cursor@temp,w
 10604  000C' 0087'              	movwf	??_Lcd_Set_Cursor
 10605  000D' 3004               	movlw	4
 10606  000E'                    u7305:
 10607  000E' 1003               	clrc
 10608  000F' 0C87'              	rrf	??_Lcd_Set_Cursor,f
 10609  0010' 3EFF               	addlw	-1
 10610  0011' 1D03               	skipz
 10611  0012' 2800'              	goto	u7305
 10612  0013' 0807'              	movf	??_Lcd_Set_Cursor,w
 10613  0014' 0081'              	movwf	Lcd_Set_Cursor@z
 10614  0015'                    l4245:
 10615                           
 10616                           ;LCD.c: 53:         y = temp & 0x0F;
 10617  0015' 0803'              	movf	Lcd_Set_Cursor@temp,w
 10618  0016' 390F               	andlw	15
 10619  0017' 0082'              	movwf	Lcd_Set_Cursor@y
 10620  0018'                    l4247:
 10621                           
 10622                           ;LCD.c: 54:         Lcd_Cmd(z);
 10623  0018' 0801'              	movf	Lcd_Set_Cursor@z,w
 10624  0019' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10625  001E'                    l4249:
 10626                           
 10627                           ;LCD.c: 55:         Lcd_Cmd(y);
 10628  001E' 1283               	bcf	3,5	;RP0=0, select bank0
 10629  001F' 1303               	bcf	3,6	;RP1=0, select bank0
 10630  0020' 0802'              	movf	Lcd_Set_Cursor@y,w
 10631  0021' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10632                           
 10633                           ;LCD.c: 56:     } else if (a == 2) {
 10634  0026' 2800'              	goto	l177
 10635  0027'                    l4251:
 10636  0027' 3002               	movlw	2
 10637  0028' 0600'              	xorwf	Lcd_Set_Cursor@a,w
 10638  0029' 1D03               	btfss	3,2
 10639  002A' 2800'              	goto	u7311
 10640  002B' 2800'              	goto	u7310
 10641  002C'                    u7311:
 10642  002C' 2800'              	goto	l177
 10643  002D'                    u7310:
 10644  002D'                    l4253:
 10645                           
 10646                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
 10647  002D' 0806'              	movf	Lcd_Set_Cursor@b,w
 10648  002E' 3EBF               	addlw	191
 10649  002F' 0083'              	movwf	Lcd_Set_Cursor@temp
 10650                           
 10651                           ;LCD.c: 58:         z = temp >> 4;
 10652  0030' 0803'              	movf	Lcd_Set_Cursor@temp,w
 10653  0031' 0087'              	movwf	??_Lcd_Set_Cursor
 10654  0032' 3004               	movlw	4
 10655  0033'                    u7325:
 10656  0033' 1003               	clrc
 10657  0034' 0C87'              	rrf	??_Lcd_Set_Cursor,f
 10658  0035' 3EFF               	addlw	-1
 10659  0036' 1D03               	skipz
 10660  0037' 2800'              	goto	u7325
 10661  0038' 0807'              	movf	??_Lcd_Set_Cursor,w
 10662  0039' 0081'              	movwf	Lcd_Set_Cursor@z
 10663  003A'                    l4255:
 10664                           
 10665                           ;LCD.c: 59:         y = temp & 0x0F;
 10666  003A' 0803'              	movf	Lcd_Set_Cursor@temp,w
 10667  003B' 390F               	andlw	15
 10668  003C' 0082'              	movwf	Lcd_Set_Cursor@y
 10669  003D'                    l4257:
 10670                           
 10671                           ;LCD.c: 60:         Lcd_Cmd(z);
 10672  003D' 0801'              	movf	Lcd_Set_Cursor@z,w
 10673  003E' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10674  0043'                    l4259:
 10675                           
 10676                           ;LCD.c: 61:         Lcd_Cmd(y);
 10677  0043' 1283               	bcf	3,5	;RP0=0, select bank0
 10678  0044' 1303               	bcf	3,6	;RP1=0, select bank0
 10679  0045' 0802'              	movf	Lcd_Set_Cursor@y,w
 10680  0046' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10681  004B'                    l177:
 10682  004B' 0008               	return
 10683  004C'                    __end_of_Lcd_Set_Cursor:
 10684                           
 10685                           	psect	text28
 10686  0000'                    __ptext28:	
 10687 ;; *************** function _Lcd_Init *****************
 10688 ;; Defined at:
 10689 ;;		line 65 in file "LCD.c"
 10690 ;; Parameters:    Size  Location     Type
 10691 ;;		None
 10692 ;; Auto vars:     Size  Location     Type
 10693 ;;		None
 10694 ;; Return value:  Size  Location     Type
 10695 ;;                  1    wreg      void 
 10696 ;; Registers used:
 10697 ;;		wreg, status,2, status,0, pclath, cstack
 10698 ;; Tracked objects:
 10699 ;;		On entry : 0/0
 10700 ;;		On exit  : 0/0
 10701 ;;		Unchanged: 0/0
 10702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10703 ;;      Params:         0       0       0       0       0
 10704 ;;      Locals:         0       0       0       0       0
 10705 ;;      Temps:          2       0       0       0       0
 10706 ;;      Totals:         2       0       0       0       0
 10707 ;;Total ram usage:        2 bytes
 10708 ;; Hardware stack levels used: 1
 10709 ;; Hardware stack levels required when called: 3
 10710 ;; This function calls:
 10711 ;;		_Lcd_Cmd
 10712 ;;		_Lcd_Port
 10713 ;; This function is called by:
 10714 ;;		_main
 10715 ;; This function uses a non-reentrant model
 10716 ;;
 10717                           
 10718  0000'                    _Lcd_Init:	
 10719                           ;psect for function _Lcd_Init
 10720                           
 10721  0000'                    l4229:	
 10722                           ;incstack = 0
 10723                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 10724                           
 10725                           
 10726                           ;LCD.c: 66:     Lcd_Port(0x00);
 10727  0000' 3000               	movlw	0
 10728  0001' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Port
 10729  0006'                    l4231:
 10730                           
 10731                           ;LCD.c: 67:     _delay((unsigned long)((20)*(2000000/4000.0)));
 10732  0006' 300D               	movlw	13
 10733  0007' 0087'              	movwf	??_Lcd_Init+1
 10734  0008' 30FB               	movlw	251
 10735  0009' 0086'              	movwf	??_Lcd_Init
 10736  000A'                    u7787:
 10737  000A' 0B86'              	decfsz	??_Lcd_Init,f
 10738  000B' 2800'              	goto	u7787
 10739  000C' 0B87'              	decfsz	??_Lcd_Init+1,f
 10740  000D' 2800'              	goto	u7787
 10741  000E' 2800'              	nop2
 10742  000F'                    l4233:
 10743                           
 10744                           ;LCD.c: 68:     Lcd_Cmd(0x03);
 10745  000F' 3003               	movlw	3
 10746  0010' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10747                           
 10748                           ;LCD.c: 69:     _delay((unsigned long)((5)*(2000000/4000.0)));
 10749  0015' 3004               	movlw	4
 10750  0016' 0087'              	movwf	??_Lcd_Init+1
 10751  0017' 303D               	movlw	61
 10752  0018' 0086'              	movwf	??_Lcd_Init
 10753  0019'                    u7797:
 10754  0019' 0B86'              	decfsz	??_Lcd_Init,f
 10755  001A' 2800'              	goto	u7797
 10756  001B' 0B87'              	decfsz	??_Lcd_Init+1,f
 10757  001C' 2800'              	goto	u7797
 10758  001D' 2800'              	nop2
 10759  001E'                    l4235:
 10760                           
 10761                           ;LCD.c: 70:     Lcd_Cmd(0x03);
 10762  001E' 3003               	movlw	3
 10763  001F' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10764  0024'                    l4237:
 10765                           
 10766                           ;LCD.c: 71:     _delay((unsigned long)((11)*(2000000/4000.0)));
 10767  0024' 3008               	movlw	8
 10768  0025' 0087'              	movwf	??_Lcd_Init+1
 10769  0026' 3023               	movlw	35
 10770  0027' 0086'              	movwf	??_Lcd_Init
 10771  0028'                    u7807:
 10772  0028' 0B86'              	decfsz	??_Lcd_Init,f
 10773  0029' 2800'              	goto	u7807
 10774  002A' 0B87'              	decfsz	??_Lcd_Init+1,f
 10775  002B' 2800'              	goto	u7807
 10776                           
 10777                           ;LCD.c: 72:     Lcd_Cmd(0x03);
 10778  002C' 3003               	movlw	3
 10779  002D' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10780                           
 10781                           ;LCD.c: 74:     Lcd_Cmd(0x02);
 10782  0032' 3002               	movlw	2
 10783  0033' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10784                           
 10785                           ;LCD.c: 75:     Lcd_Cmd(0x02);
 10786  0038' 3002               	movlw	2
 10787  0039' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10788                           
 10789                           ;LCD.c: 76:     Lcd_Cmd(0x08);
 10790  003E' 3008               	movlw	8
 10791  003F' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10792                           
 10793                           ;LCD.c: 77:     Lcd_Cmd(0x00);
 10794  0044' 3000               	movlw	0
 10795  0045' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10796                           
 10797                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
 10798  004A' 300C               	movlw	12
 10799  004B' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10800                           
 10801                           ;LCD.c: 79:     Lcd_Cmd(0x00);
 10802  0050' 3000               	movlw	0
 10803  0051' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10804                           
 10805                           ;LCD.c: 80:     Lcd_Cmd(0x06);
 10806  0056' 3006               	movlw	6
 10807  0057' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10808  005C'                    l180:
 10809  005C' 0008               	return
 10810  005D'                    __end_of_Lcd_Init:
 10811                           
 10812                           	psect	text29
 10813  0000'                    __ptext29:	
 10814 ;; *************** function _Lcd_Clear *****************
 10815 ;; Defined at:
 10816 ;;		line 43 in file "LCD.c"
 10817 ;; Parameters:    Size  Location     Type
 10818 ;;		None
 10819 ;; Auto vars:     Size  Location     Type
 10820 ;;		None
 10821 ;; Return value:  Size  Location     Type
 10822 ;;                  1    wreg      void 
 10823 ;; Registers used:
 10824 ;;		wreg, status,2, status,0, pclath, cstack
 10825 ;; Tracked objects:
 10826 ;;		On entry : 0/0
 10827 ;;		On exit  : 0/0
 10828 ;;		Unchanged: 0/0
 10829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10830 ;;      Params:         0       0       0       0       0
 10831 ;;      Locals:         0       0       0       0       0
 10832 ;;      Temps:          0       0       0       0       0
 10833 ;;      Totals:         0       0       0       0       0
 10834 ;;Total ram usage:        0 bytes
 10835 ;; Hardware stack levels used: 1
 10836 ;; Hardware stack levels required when called: 3
 10837 ;; This function calls:
 10838 ;;		_Lcd_Cmd
 10839 ;; This function is called by:
 10840 ;;		_main
 10841 ;; This function uses a non-reentrant model
 10842 ;;
 10843                           
 10844  0000'                    _Lcd_Clear:	
 10845                           ;psect for function _Lcd_Clear
 10846                           
 10847  0000'                    l4239:	
 10848                           ;incstack = 0
 10849                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 10850                           
 10851                           
 10852                           ;LCD.c: 44:     Lcd_Cmd(0);
 10853  0000' 3000               	movlw	0
 10854  0001' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10855                           
 10856                           ;LCD.c: 45:     Lcd_Cmd(1);
 10857  0006' 3001               	movlw	1
 10858  0007' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10859  000C'                    l171:
 10860  000C' 0008               	return
 10861  000D'                    __end_of_Lcd_Clear:
 10862                           
 10863                           	psect	text30
 10864  0000'                    __ptext30:	
 10865 ;; *************** function _Lcd_Cmd *****************
 10866 ;; Defined at:
 10867 ;;		line 35 in file "LCD.c"
 10868 ;; Parameters:    Size  Location     Type
 10869 ;;  a               1    wreg     unsigned char 
 10870 ;; Auto vars:     Size  Location     Type
 10871 ;;  a               1    5[COMMON] unsigned char 
 10872 ;; Return value:  Size  Location     Type
 10873 ;;                  1    wreg      void 
 10874 ;; Registers used:
 10875 ;;		wreg, status,2, status,0, pclath, cstack
 10876 ;; Tracked objects:
 10877 ;;		On entry : 0/0
 10878 ;;		On exit  : 0/0
 10879 ;;		Unchanged: 0/0
 10880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10881 ;;      Params:         0       0       0       0       0
 10882 ;;      Locals:         1       0       0       0       0
 10883 ;;      Temps:          2       0       0       0       0
 10884 ;;      Totals:         3       0       0       0       0
 10885 ;;Total ram usage:        3 bytes
 10886 ;; Hardware stack levels used: 1
 10887 ;; Hardware stack levels required when called: 2
 10888 ;; This function calls:
 10889 ;;		_Lcd_Port
 10890 ;; This function is called by:
 10891 ;;		_Lcd_Clear
 10892 ;;		_Lcd_Set_Cursor
 10893 ;;		_Lcd_Init
 10894 ;;		_Lcd_Shift_Right
 10895 ;;		_Lcd_Shift_Left
 10896 ;; This function uses a non-reentrant model
 10897 ;;
 10898                           
 10899  0000'                    _Lcd_Cmd:	
 10900                           ;psect for function _Lcd_Cmd
 10901                           
 10902                           
 10903                           ;incstack = 0
 10904                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10905                           ;Lcd_Cmd@a stored from wreg
 10906  0000' 0085'              	movwf	Lcd_Cmd@a
 10907  0001'                    l4065:
 10908                           
 10909                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
 10910  0001' 1283               	bcf	3,5	;RP0=0, select bank0
 10911  0002' 1303               	bcf	3,6	;RP1=0, select bank0
 10912  0003' 1108               	bcf	8,2	;volatile
 10913  0004'                    l4067:
 10914                           
 10915                           ;LCD.c: 37:     Lcd_Port(a);
 10916  0004' 0805'              	movf	Lcd_Cmd@a,w
 10917  0005' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Port
 10918  000A'                    l4069:
 10919                           
 10920                           ;LCD.c: 38:     RD3 = 1;
 10921  000A' 1283               	bcf	3,5	;RP0=0, select bank0
 10922  000B' 1303               	bcf	3,6	;RP1=0, select bank0
 10923  000C' 1588               	bsf	8,3	;volatile
 10924  000D'                    l4071:
 10925                           
 10926                           ;LCD.c: 39:     _delay((unsigned long)((4)*(2000000/4000.0)));
 10927  000D' 3003               	movlw	3
 10928  000E' 0084'              	movwf	??_Lcd_Cmd+1
 10929  000F' 3097               	movlw	151
 10930  0010' 0083'              	movwf	??_Lcd_Cmd
 10931  0011'                    u7817:
 10932  0011' 0B83'              	decfsz	??_Lcd_Cmd,f
 10933  0012' 2800'              	goto	u7817
 10934  0013' 0B84'              	decfsz	??_Lcd_Cmd+1,f
 10935  0014' 2800'              	goto	u7817
 10936  0015' 2800'              	nop2
 10937  0016'                    l4073:
 10938                           
 10939                           ;LCD.c: 40:     RD3 = 0;
 10940  0016' 1283               	bcf	3,5	;RP0=0, select bank0
 10941  0017' 1303               	bcf	3,6	;RP1=0, select bank0
 10942  0018' 1188               	bcf	8,3	;volatile
 10943  0019'                    l168:
 10944  0019' 0008               	return
 10945  001A'                    __end_of_Lcd_Cmd:
 10946                           
 10947                           	psect	text31
 10948  0000'                    __ptext31:	
 10949 ;; *************** function _Lcd_Port *****************
 10950 ;; Defined at:
 10951 ;;		line 13 in file "LCD.c"
 10952 ;; Parameters:    Size  Location     Type
 10953 ;;  a               1    wreg     unsigned char 
 10954 ;; Auto vars:     Size  Location     Type
 10955 ;;  a               1    2[COMMON] unsigned char 
 10956 ;; Return value:  Size  Location     Type
 10957 ;;                  1    wreg      void 
 10958 ;; Registers used:
 10959 ;;		wreg
 10960 ;; Tracked objects:
 10961 ;;		On entry : 0/0
 10962 ;;		On exit  : 0/0
 10963 ;;		Unchanged: 0/0
 10964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10965 ;;      Params:         0       0       0       0       0
 10966 ;;      Locals:         1       0       0       0       0
 10967 ;;      Temps:          0       0       0       0       0
 10968 ;;      Totals:         1       0       0       0       0
 10969 ;;Total ram usage:        1 bytes
 10970 ;; Hardware stack levels used: 1
 10971 ;; Hardware stack levels required when called: 1
 10972 ;; This function calls:
 10973 ;;		Nothing
 10974 ;; This function is called by:
 10975 ;;		_Lcd_Cmd
 10976 ;;		_Lcd_Init
 10977 ;;		_Lcd_Write_Char
 10978 ;; This function uses a non-reentrant model
 10979 ;;
 10980                           
 10981  0000'                    _Lcd_Port:	
 10982                           ;psect for function _Lcd_Port
 10983                           
 10984                           
 10985                           ;incstack = 0
 10986                           ; Regs used in _Lcd_Port: [wreg]
 10987                           ;Lcd_Port@a stored from wreg
 10988  0000' 0082'              	movwf	Lcd_Port@a
 10989  0001'                    l3873:
 10990                           
 10991                           ;LCD.c: 14:     if (a & 1)
 10992  0001' 1C02'              	btfss	Lcd_Port@a,0
 10993  0002' 2800'              	goto	u6301
 10994  0003' 2800'              	goto	u6300
 10995  0004'                    u6301:
 10996  0004' 2800'              	goto	l157
 10997  0005'                    u6300:
 10998  0005'                    l3875:
 10999                           
 11000                           ;LCD.c: 15:         RD4 = 1;
 11001  0005' 1283               	bcf	3,5	;RP0=0, select bank0
 11002  0006' 1303               	bcf	3,6	;RP1=0, select bank0
 11003  0007' 1608               	bsf	8,4	;volatile
 11004  0008' 2800'              	goto	l158
 11005  0009'                    l157:	
 11006                           ;LCD.c: 16:     else
 11007                           
 11008                           
 11009                           ;LCD.c: 17:         RD4 = 0;
 11010  0009' 1283               	bcf	3,5	;RP0=0, select bank0
 11011  000A' 1303               	bcf	3,6	;RP1=0, select bank0
 11012  000B' 1208               	bcf	8,4	;volatile
 11013  000C'                    l158:
 11014                           
 11015                           ;LCD.c: 19:     if (a & 2)
 11016  000C' 1C82'              	btfss	Lcd_Port@a,1
 11017  000D' 2800'              	goto	u6311
 11018  000E' 2800'              	goto	u6310
 11019  000F'                    u6311:
 11020  000F' 2800'              	goto	l159
 11021  0010'                    u6310:
 11022  0010'                    l3877:
 11023                           
 11024                           ;LCD.c: 20:         RD5 = 1;
 11025  0010' 1688               	bsf	8,5	;volatile
 11026  0011' 2800'              	goto	l160
 11027  0012'                    l159:	
 11028                           ;LCD.c: 21:     else
 11029                           
 11030                           
 11031                           ;LCD.c: 22:         RD5 = 0;
 11032  0012' 1288               	bcf	8,5	;volatile
 11033  0013'                    l160:
 11034                           
 11035                           ;LCD.c: 24:     if (a & 4)
 11036  0013' 1D02'              	btfss	Lcd_Port@a,2
 11037  0014' 2800'              	goto	u6321
 11038  0015' 2800'              	goto	u6320
 11039  0016'                    u6321:
 11040  0016' 2800'              	goto	l161
 11041  0017'                    u6320:
 11042  0017'                    l3879:
 11043                           
 11044                           ;LCD.c: 25:         RD6 = 1;
 11045  0017' 1708               	bsf	8,6	;volatile
 11046  0018' 2800'              	goto	l162
 11047  0019'                    l161:	
 11048                           ;LCD.c: 26:     else
 11049                           
 11050                           
 11051                           ;LCD.c: 27:         RD6 = 0;
 11052  0019' 1308               	bcf	8,6	;volatile
 11053  001A'                    l162:
 11054                           
 11055                           ;LCD.c: 29:     if (a & 8)
 11056  001A' 1D82'              	btfss	Lcd_Port@a,3
 11057  001B' 2800'              	goto	u6331
 11058  001C' 2800'              	goto	u6330
 11059  001D'                    u6331:
 11060  001D' 2800'              	goto	l163
 11061  001E'                    u6330:
 11062  001E'                    l3881:
 11063                           
 11064                           ;LCD.c: 30:         RD7 = 1;
 11065  001E' 1788               	bsf	8,7	;volatile
 11066  001F' 2800'              	goto	l165
 11067  0020'                    l163:	
 11068                           ;LCD.c: 31:     else
 11069                           
 11070                           
 11071                           ;LCD.c: 32:         RD7 = 0;
 11072  0020' 1388               	bcf	8,7	;volatile
 11073  0021'                    l165:
 11074  0021' 0008               	return
 11075  0022'                    __end_of_Lcd_Port:
 11076                           
 11077                           	psect	text32
 11078  0000'                    __ptext32:	
 11079 ;; *************** function _isr *****************
 11080 ;; Defined at:
 11081 ;;		line 90 in file "main.c"
 11082 ;; Parameters:    Size  Location     Type
 11083 ;;		None
 11084 ;; Auto vars:     Size  Location     Type
 11085 ;;		None
 11086 ;; Return value:  Size  Location     Type
 11087 ;;                  1    wreg      void 
 11088 ;; Registers used:
 11089 ;;		wreg, status,2, status,0
 11090 ;; Tracked objects:
 11091 ;;		On entry : 0/0
 11092 ;;		On exit  : 0/0
 11093 ;;		Unchanged: 0/0
 11094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11095 ;;      Params:         0       0       0       0       0
 11096 ;;      Locals:         0       0       0       0       0
 11097 ;;      Temps:          2       0       0       0       0
 11098 ;;      Totals:         2       0       0       0       0
 11099 ;;Total ram usage:        2 bytes
 11100 ;; Hardware stack levels used: 1
 11101 ;; This function calls:
 11102 ;;		Nothing
 11103 ;; This function is called by:
 11104 ;;		Interrupt level 1
 11105 ;; This function uses a non-reentrant model
 11106 ;;
 11107                           
 11108  0000'                    _isr:	
 11109                           ;psect for function _isr
 11110                           
 11111  0000'                    i1l3711:
 11112                           
 11113                           ;main.c: 93:     if (PIR1bits.SSPIF){
 11114  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 11115  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 11116  0002' 1D8C               	btfss	12,3	;volatile
 11117  0003' 2800'              	goto	u613_21
 11118  0004' 2800'              	goto	u613_20
 11119  0005'                    u613_21:
 11120  0005' 2800'              	goto	i1l101
 11121  0006'                    u613_20:
 11122  0006'                    i1l3713:
 11123                           
 11124                           ;main.c: 94:         PIR1bits.SSPIF = 0;
 11125  0006' 118C               	bcf	12,3	;volatile
 11126  0007'                    i1l101:	
 11127                           ;main.c: 95:     }
 11128                           
 11129                           
 11130                           ;main.c: 98:     if (PIR1bits.TXIF){
 11131  0007' 1E0C               	btfss	12,4	;volatile
 11132  0008' 2800'              	goto	u614_21
 11133  0009' 2800'              	goto	u614_20
 11134  000A'                    u614_21:
 11135  000A' 2800'              	goto	i1l102
 11136  000B'                    u614_20:
 11137  000B'                    i1l3715:
 11138                           
 11139                           ;main.c: 99:         PIR1bits.TXIF = 0;
 11140  000B' 120C               	bcf	12,4	;volatile
 11141  000C'                    i1l102:	
 11142                           ;main.c: 100:     }
 11143                           
 11144                           
 11145                           ;main.c: 103:     if (PIR1bits.RCIF){
 11146  000C' 1E8C               	btfss	12,5	;volatile
 11147  000D' 2800'              	goto	u615_21
 11148  000E' 2800'              	goto	u615_20
 11149  000F'                    u615_21:
 11150  000F' 2800'              	goto	i1l103
 11151  0010'                    u615_20:
 11152  0010'                    i1l3717:
 11153                           
 11154                           ;main.c: 104:         PIR1bits.RCIF = 0;
 11155  0010' 128C               	bcf	12,5	;volatile
 11156  0011'                    i1l103:	
 11157                           ;main.c: 105:     }
 11158                           
 11159                           
 11160                           ;main.c: 108:     if (PIR1bits.ADIF){
 11161  0011' 1F0C               	btfss	12,6	;volatile
 11162  0012' 2800'              	goto	u616_21
 11163  0013' 2800'              	goto	u616_20
 11164  0014'                    u616_21:
 11165  0014' 2800'              	goto	i1l104
 11166  0015'                    u616_20:
 11167  0015'                    i1l3719:
 11168                           
 11169                           ;main.c: 109:         PIR1bits.ADIF = 0;
 11170  0015' 130C               	bcf	12,6	;volatile
 11171  0016'                    i1l104:	
 11172                           ;main.c: 110:     }
 11173                           
 11174                           
 11175                           ;main.c: 113:     if (INTCONbits.T0IF){
 11176  0016' 1D0B               	btfss	11,2	;volatile
 11177  0017' 2800'              	goto	u617_21
 11178  0018' 2800'              	goto	u617_20
 11179  0019'                    u617_21:
 11180  0019' 2800'              	goto	i1l3725
 11181  001A'                    u617_20:
 11182  001A'                    i1l3721:
 11183                           
 11184                           ;main.c: 114:         TMR0 = 179;
 11185  001A' 30B3               	movlw	179
 11186  001B' 0081               	movwf	1	;volatile
 11187  001C'                    i1l3723:
 11188                           
 11189                           ;main.c: 115:         INTCONbits.T0IF = 0;
 11190  001C' 110B               	bcf	11,2	;volatile
 11191  001D'                    i1l3725:
 11192                           
 11193                           ;main.c: 119:     if (INTCONbits.RBIF){
 11194  001D' 1C0B               	btfss	11,0	;volatile
 11195  001E' 2800'              	goto	u618_21
 11196  001F' 2800'              	goto	u618_20
 11197  0020'                    u618_21:
 11198  0020' 2800'              	goto	i1l126
 11199  0021'                    u618_20:
 11200  0021'                    i1l3727:
 11201                           
 11202                           ;main.c: 120:         if (PORTBbits.RB0 == 1){
 11203  0021' 1C06               	btfss	6,0	;volatile
 11204  0022' 2800'              	goto	u619_21
 11205  0023' 2800'              	goto	u619_20
 11206  0024'                    u619_21:
 11207  0024' 2800'              	goto	i1l107
 11208  0025'                    u619_20:
 11209  0025'                    i1l3729:
 11210                           
 11211                           ;main.c: 121:             cont = 1;
 11212  0025' 3001               	movlw	1
 11213  0026' 1683               	bsf	3,5	;RP0=1, select bank1
 11214  0027' 1303               	bcf	3,6	;RP1=0, select bank1
 11215  0028' 0080'              	movwf	_cont^(0+128)
 11216  0029' 3000               	movlw	0
 11217  002A' 0081'              	movwf	(_cont^(0+128)+1)
 11218                           
 11219                           ;main.c: 122:         }
 11220  002B' 2800'              	goto	i1l108
 11221  002C'                    i1l107:	
 11222                           ;main.c: 123:         else if (PORTBbits.RB1 == 1){
 11223                           
 11224  002C' 1C86               	btfss	6,1	;volatile
 11225  002D' 2800'              	goto	u620_21
 11226  002E' 2800'              	goto	u620_20
 11227  002F'                    u620_21:
 11228  002F' 2800'              	goto	i1l109
 11229  0030'                    u620_20:
 11230  0030'                    i1l3731:
 11231                           
 11232                           ;main.c: 124:             if (temporal == 0){
 11233  0030' 0800'              	movf	_temporal,w
 11234  0031' 0401'              	iorwf	_temporal+1,w
 11235  0032' 1D03               	btfss	3,2
 11236  0033' 2800'              	goto	u621_21
 11237  0034' 2800'              	goto	u621_20
 11238  0035'                    u621_21:
 11239  0035' 2800'              	goto	i1l108
 11240  0036'                    u621_20:
 11241  0036'                    i1l3733:
 11242                           
 11243                           ;main.c: 125:                 if (horas <= 24){
 11244  0036' 3000               	movlw	0
 11245  0037' 1683               	bsf	3,5	;RP0=1, select bank1
 11246  0038' 1303               	bcf	3,6	;RP1=0, select bank1
 11247  0039' 0200'              	subwf	(_horas+1)^(0+128),w
 11248  003A' 3019               	movlw	25
 11249  003B' 1903               	skipnz
 11250  003C' 0200'              	subwf	_horas^(0+128),w
 11251  003D' 1803               	skipnc
 11252  003E' 2800'              	goto	u622_21
 11253  003F' 2800'              	goto	u622_20
 11254  0040'                    u622_21:
 11255  0040' 2800'              	goto	i1l3737
 11256  0041'                    u622_20:
 11257  0041'                    i1l3735:
 11258                           
 11259                           ;main.c: 126:                     horas = horas+1;
 11260  0041' 0800'              	movf	_horas^(0+128),w
 11261  0042' 3E01               	addlw	1
 11262  0043' 0080'              	movwf	_horas^(0+128)
 11263  0044' 0800'              	movf	(_horas+1)^(0+128),w
 11264  0045' 1803               	skipnc
 11265  0046' 3E01               	addlw	1
 11266  0047' 3E00               	addlw	0
 11267  0048' 0080'              	movwf	(_horas+1)^(0+128)
 11268                           
 11269                           ;main.c: 127:                 }
 11270  0049' 2800'              	goto	i1l108
 11271  004A'                    i1l3737:
 11272                           
 11273                           ;main.c: 129:                     horas = 0;
 11274  004A' 0180'              	clrf	_horas^(0+128)
 11275  004B' 0180'              	clrf	(_horas+1)^(0+128)
 11276  004C' 2800'              	goto	i1l108
 11277  004D'                    i1l109:	
 11278                           ;main.c: 136:         else if (PORTBbits.RB2 == 1){
 11279                           
 11280  004D' 1D06               	btfss	6,2	;volatile
 11281  004E' 2800'              	goto	u623_21
 11282  004F' 2800'              	goto	u623_20
 11283  0050'                    u623_21:
 11284  0050' 2800'              	goto	i1l116
 11285  0051'                    u623_20:
 11286  0051'                    i1l3741:
 11287                           
 11288                           ;main.c: 138:                 if (horas >= 0){
 11289  0051' 0800'              	movf	_temporal,w
 11290  0052' 0401'              	iorwf	_temporal+1,w
 11291  0053' 1D03               	btfss	3,2
 11292  0054' 2800'              	goto	u624_21
 11293  0055' 2800'              	goto	u624_20
 11294  0056'                    u624_21:
 11295  0056' 2800'              	goto	i1l108
 11296  0057'                    u624_20:
 11297  0057'                    i1l3743:
 11298                           
 11299                           ;main.c: 139:                     horas = horas-1;
 11300  0057' 1683               	bsf	3,5	;RP0=1, select bank1
 11301  0058' 1303               	bcf	3,6	;RP1=0, select bank1
 11302  0059' 0800'              	movf	_horas^(0+128),w
 11303  005A' 3EFF               	addlw	255
 11304  005B' 0080'              	movwf	_horas^(0+128)
 11305  005C' 0800'              	movf	(_horas+1)^(0+128),w
 11306  005D' 1803               	skipnc
 11307  005E' 3E01               	addlw	1
 11308  005F' 3EFF               	addlw	255
 11309  0060' 0080'              	movwf	(_horas+1)^(0+128)
 11310                           
 11311                           ;main.c: 140:                 }
 11312  0061' 2800'              	goto	i1l108
 11313  0062'                    i1l116:	
 11314                           ;main.c: 149:         else if (PORTBbits.RB3 == 1){
 11315                           
 11316  0062' 1D86               	btfss	6,3	;volatile
 11317  0063' 2800'              	goto	u625_21
 11318  0064' 2800'              	goto	u625_20
 11319  0065'                    u625_21:
 11320  0065' 2800'              	goto	i1l123
 11321  0066'                    u625_20:
 11322  0066' 2800'              	goto	i1l108
 11323  0067'                    i1l123:	
 11324                           ;main.c: 152:         else if (PORTBbits.RB4 == 1){
 11325                           
 11326  0067' 0806               	movf	6,w	;volatile
 11327  0068'                    i1l108:
 11328                           
 11329                           ;main.c: 155:         INTCONbits.RBIF = 0;
 11330  0068' 100B               	bcf	11,0	;volatile
 11331  0069'                    i1l126:
 11332  0069' 0801'              	movf	??_isr+1,w
 11333  006A' 008A               	movwf	10
 11334  006B' 0E00'              	swapf	??_isr,w
 11335  006C' 0083               	movwf	3
 11336  006D' 0EFE               	swapf	btemp,f
 11337  006E' 0E7E               	swapf	btemp,w
 11338  006F' 0009               	retfie
 11339  0070'                    __end_of_isr:
 11340  007E                     btemp	set	126	;btemp
 11341  007E                     wtemp0	set	126
 11342                           
 11343                           	psect	intentry
 11344  0000'                    __pintentry:	
 11345                           ;incstack = 0
 11346                           ; Regs used in _isr: [wreg+status,2+status,0]
 11347                           
 11348  0000'                    interrupt_function:
 11349  007E                     saved_w	set	btemp
 11350  0000' 00FE               	movwf	btemp
 11351  0001' 0E03               	swapf	3,w
 11352  0002' 0080'              	movwf	??_isr
 11353  0003' 080A               	movf	10,w
 11354  0004' 0081'              	movwf	??_isr+1
 11355  0005' 120A' 118A' 2800'  	ljmp	_isr
 11356                           
 11357                           	psect	idloc
 11358                           
 11359                           ;Config register IDLOC0 @ 0x2000
 11360                           ;	unspecified, using default values
 11361  2000                     	org	8192
 11362  2000  3FFF               	dw	16383
 11363                           
 11364                           ;Config register IDLOC1 @ 0x2001
 11365                           ;	unspecified, using default values
 11366  2001                     	org	8193
 11367  2001  3FFF               	dw	16383
 11368                           
 11369                           ;Config register IDLOC2 @ 0x2002
 11370                           ;	unspecified, using default values
 11371  2002                     	org	8194
 11372  2002  3FFF               	dw	16383
 11373                           
 11374                           ;Config register IDLOC3 @ 0x2003
 11375                           ;	unspecified, using default values
 11376  2003                     	org	8195
 11377  2003  3FFF               	dw	16383
 11378                           
 11379                           	psect	config
 11380                           
 11381                           ;Config register CONFIG1 @ 0x2007
 11382                           ;	Oscillator Selection bits
 11383                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11384                           ;	Watchdog Timer Enable bit
 11385                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11386                           ;	Power-up Timer Enable bit
 11387                           ;	PWRTE = OFF, PWRT disabled
 11388                           ;	RE3/MCLR pin function select bit
 11389                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11390                           ;	Code Protection bit
 11391                           ;	CP = OFF, Program memory code protection is disabled
 11392                           ;	Data Code Protection bit
 11393                           ;	CPD = OFF, Data memory code protection is disabled
 11394                           ;	Brown Out Reset Selection bits
 11395                           ;	BOREN = OFF, BOR disabled
 11396                           ;	Internal External Switchover bit
 11397                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11398                           ;	Fail-Safe Clock Monitor Enabled bit
 11399                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11400                           ;	Low Voltage Programming Enable bit
 11401                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11402                           ;	In-Circuit Debugger Mode bit
 11403                           ;	DEBUG = 0x1, unprogrammed default
 11404  2007                     	org	8199
 11405  2007  20D4               	dw	8404
 11406                           
 11407                           ;Config register CONFIG2 @ 0x2008
 11408                           ;	Brown-out Reset Selection bit
 11409                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11410                           ;	Flash Program Memory Self Write Enable bits
 11411                           ;	WRT = OFF, Write protection off
 11412  2008                     	org	8200
 11413  2008  3FFF               	dw	16383

Data Sizes:
    Strings     30
    Constant    144
    Data        14
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     79      80
    BANK1            80     40      77
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_4(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> ADC1(BANK1[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 13
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), ADC1(BANK1[4]), 
		 -> STR_3(CODE[5]), STR_2(CODE[3]), STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _main->___lwdiv
    _main->___xxtofl
    _sprintf->___awdiv
    _sprintf->___fleq
    _sprintf->___flge
    _sprintf->___lldiv
    _sprintf->___llmod
    _sprintf->___xxtofl
    _sprintf->__div_to_l_
    _sprintf->__tdiv_to_l_
    _scale->___awdiv
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwmod->___lwdiv
    ___flmul->___awdiv
    ___flmul->___lwdiv
    ___flsub->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___flmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   49664
                                             38 BANK1      2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___fldiv
                            ___flmul
                            ___lwdiv
                            ___lwmod
                           ___xxtofl
                          _leer_hora
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   37259
                                             74 BANK0      5     0      5
                                              8 BANK1     30    30      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    9074
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    8125
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4    1132
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     770
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    5873
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              2 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              2 COMMON     8     0      8
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              2 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
                    _I2C_Master_Read (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     772
                                              2 COMMON     8     0      8
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     601
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             53 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      12
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      4     0      4      12
 ---------------------------------------------------------------------------------
 (1) _leer_hora                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             34 BANK0     26    18      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2    1014
                                              7 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1    1085
                                              6 COMMON     2     1      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2      72
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      2     0      2      12
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
   _I2C_Master_Start
   _I2C_Master_Stop
   _I2C_Master_Write
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
   ___flmul
   ___lwdiv
   ___lwmod
   ___xxtofl
     _I2C_Master_Read (ARG)
   _leer_hora
   _setup
     _I2C_Master_Init
   _sprintf
     ___awdiv
     ___fladd
       _fround (ARG)
         ___flmul
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     28      4D       7       96.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A9      12        0.0%
ABS                  0      0      A9       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Feb 25 04:36:57 2023

            ___fldiv@aexp 003B              ___fldiv@bexp 003A                         pc 0002  
            ___fldiv@sign 0033              ___awdiv@sign 0005                        fsr 0004  
     ___wmul@multiplicand 0004       __Umul8_16@word_mpld 0002                       l140 0036  
                     l160 0013                       l304 0362                       l161 0019  
                     l162 001A                       l410 0067                       l163 0020  
                     l171 000C                       l323 007E                       l180 005C  
                     l165 0021                       l157 0009                       l158 000C  
                     l159 0012                       l183 0034                       l168 0019  
                     l177 004B                       l602 00A9                       l370 0648  
                     l540 0058                       l364 0601                       l356 04A0  
                     l189 0045                       l701 005B                       l349 0462  
                     l630 0055                       l374 000C                       l527 0068  
                     l560 001E                       l376 0024                       l544 00B7  
                     l561 003A                       l705 00DE                       l545 001E  
                     l297 020C                       l562 004F                       l722 01A7  
                     l714 0257                       l707 00B7                       l555 00AA  
                     l803 02B4                       l732 01ED                       l548 007A  
                     l565 001E                       l573 000A                       l726 01CB  
                     l743 024D                       l735 022B                       l591 00B6  
                     l568 008A                       l744 0257                       l584 0062  
                     l592 002A                       l816 0016                       l680 0043  
                     l569 00A3                       l577 0077                       l841 0024  
                     l809 0338                       l818 0028                       l690 003B  
                     l747 004F                       l587 0077                       l843 00B9  
                     l595 0079                       l781 01C8                       l773 0148  
                     l757 0056                       l861 0011                       l854 0083  
                     l759 01D2                       l855 008F                       l847 0067  
                     l779 01BA                       l797 0344                       _RD3 0043  
                     _RD4 0044                       _RD5 0045                       _RD6 0046  
                     _RD7 0047                       _day 000E                       _min 0010  
                     _sec 0011                       _isr 0000                       fsr0 0004  
                     indf 0000              ___awmod@sign 0008              ___flmul@aexp 0016  
            ___flmul@bexp 001B              ___flmul@sign 0015              ___flmul@temp 0020  
            ___flmul@prod 001C              ___fltol@exp1 003E                      l3001 002B  
                    l3011 0052                      l3003 0031                      l3101 001A  
                    l3021 007D                      l3013 0060                      l3005 0040  
                    l3103 0020                      l3015 006A                      l3007 0042  
                    l3201 0057                      l3017 006B                      l3009 0049  
                    l4001 0294                      l3131 0000                      l3203 0067  
                    l3035 009E                      l3027 0085                      l3019 0073  
                    l4003 0298                      l3301 0018                      l3133 0016  
                    l3205 006C                      l3037 00AE                      l3029 0097  
                    l4021 02E9                      l4013 02B9                      l4005 0299  
                    l2501 004F                      l3311 001F                      l3303 0019  
                    l3135 0032                      l3151 003E                      l3143 0000  
                    l4031 0320                      l4015 02BE                      l4023 02EF  
                    l4007 029D                      l2511 0008                      l2431 000C  
                    l2503 0054                      l4111 0189                      l3321 0029  
                    l3313 0020                      l3305 001A                      l3137 004C  
                    l3153 0062                      l3145 0016                      l2601 0065  
                    l4201 0050                      l3241 002C                      l3233 0003  
                    l4041 033C                      l4033 0322                      l4025 02FC  
                    l4017 02CC                      l4009 02B1                      l2521 002B  
                    l2513 000B                      l2441 001D                      l2433 000E  
                    l2425 0000                      l4105 00FA                      l4051 0018  
                    l3315 0021                      l3307 001B                      l3139 004E  
                    l3155 0066                      l3147 0032                      l3163 0000  
                    l2611 0071                      l2603 0069                      l3227 0000  
                    l3171 0000                      l4203 0059                      l4211 0008  
                    l3251 004C                      l3235 0008                      l4035 032E  
                    l4027 0307                      l4019 02D0                      l2523 0031  
                    l2515 0012                      l2507 0000                      l2451 0035  
                    l2443 0023                      l2435 0012                      l2427 0003  
                    l4123 02A7                      l4107 0101                      l4115 01B6  
                    l4061 002C                      l4053 001B                      l4045 0001  
                    l3317 0022                      l3309 001C                      l3157 00A0  
                    l3149 003A                      l3165 0008                      l2701 01CF  
                    l2621 007B                      l2613 0073                      l2605 006B  
                    l3229 0004                      l3181 0028                      l3173 000B  
                    l4205 005F                      l4221 003E                      l4213 000D  
                    l3093 0000                      l3261 007D                      l3253 0050  
                    l3245 0035                      l3237 000C                      l4133 0000  
                    l4037 0332                      l4029 0316                      l2525 0032  
                    l2517 0016                      l2509 0002                      l2453 0046  
                    l2445 0026                      l2461 005A                      l2437 0017  
                    l2429 0007                      l4125 02AE                      l4117 01BD  
                    l4301 0080                      l4071 000D                      l4231 0006  
                    l4063 0031                      l4055 0020                      l4047 0007  
                    l3319 0028                      l3159 00A2                      l3167 000A  
                    l2703 01D2                      l2711 01DF                      l2631 0085  
                    l2623 007D                      l2615 0075                      l2607 006D  
                    l3183 0030                      l4223 0047                      l4215 001A  
                    l3095 0002                      l3271 00B0                      l3263 0087  
                    l3255 005E                      l3247 0038                      l3239 001C  
                    l4151 003A                      l4135 000B                      l4039 0333  
                    l2527 0039                      l2519 001A                      l2463 005F  
                    l2455 004C                      l2447 002D                      l2439 001B  
                    l2471 0001                      l4311 00C0                      l4303 009E  
                    _ADC1 0013                      l4073 0016                      l4065 0001  
                    l4233 000F                      l4241 0003                      l4057 0023  
                    l4049 000A                      l3601 0043                      l3281 0009  
                    l2721 01F2                      l2713 01E0                      l2705 01D4  
                    l2641 00C2                      l2625 007F                      l2617 0077  
                    l2609 006F                      l2633 0087                      l2561 000D  
                    l3193 003E                      l3185 0032                      l3177 0014  
                    l4217 001E                      l4225 004D                      l4209 0000  
                    l3097 0006                      l3273 00B1                      l3265 0091  
                    l3257 006E                      l3249 0045                      l4161 006B  
                    l4153 0041                      l4145 001F                      l2529 003F  
                    l2465 0064                      l2457 004D                      l2449 0031  
                    l2481 0015                      l2473 0005                      l4129 0336  
                    l4401 0458                      l4321 00FE                      l4313 00C4  
                    l4305 00AA                      l4067 0004                      l4235 001E  
                    l4243 0008                      l4251 0027                      l4059 0029  
                    l3611 006A                      l3603 004B                      l3291 0010  
                    l3283 000A                      l2731 0230                      l2723 01F7  
                    l2715 01E4                      l2707 01D9                      l2643 00C4  
                    l2651 00D6                      l2635 0088                      l2627 0081  
                    l2619 0079                      l2571 0021                      l2563 000E  
                    l2555 0000                      l3187 0036                      l3195 0050  
                    l3179 0027                      l4219 0030                      l3099 0013  
                    l3267 00A7                      l3259 0079                      l4171 0086  
                    l4163 0074                      l4155 004A                      l4147 0027  
                    l4139 0014                      l4083 0118                      l4075 0003  
                    l2459 0054                      l2491 002D                      l2483 001B  
                    l2475 000A                      l4411 0488                      l4403 046A  
                    l4331 015E                      l4323 0117                      l4315 00DD  
                    l4307 00AE                      l4069 000A                      l4237 0024  
                    l4229 0000                      l4253 002D                      l4245 0015  
                    l4261 0000                      l3701 01BE                      l3613 006E  
                    l3605 004C                      l3293 0011                      l3285 000B  
                    l3277 0000                      l2741 0247                      l2733 0235  
                    l2725 0205                      l2717 01EA                      l2709 01DB  
                    l2661 0107                      l2653 00E2                      l2645 00C8  
                    l2637 009F                      l2629 0083                      l2581 0035  
                    l2565 0013                      l2573 0023                      l2557 0005  
                    l3269 00AC                      l4181 00AF                      l4165 007E  
                    l4173 0098                      l4157 005C                      l4149 0038  
                    l4085 011E                      l4077 0009                      l2493 0037  
                    l2485 001E                      l2477 000C                      l2469 0000  
                    l4093 0003                      l4421 04B3                      l4413 0497  
                    l4405 0471                      l4341 01EB                      l4333 0162  
                    l4325 0122                      l4317 00F6                      l4309 00B2  
                    l4501 00BD                      l4239 0000                      l4255 003A  
                    l4247 0018                      l4263 0005                      l3703 01C2  
                    l3631 00AF                      l3623 0085                      l3607 004E  
                    l3295 0015                      l3287 000E                      l3279 0007  
                    l2743 0249                      l2735 023D                      l2727 0209  
                    l2671 011C                      l2663 010B                      l2655 00E7  
                    l2647 00C9                      l2639 00BB                      l2591 0048  
                    l2583 0039                      l2575 002B                      l2567 0018  
                    l2559 0009                      l4191 0022                      l4159 006A  
                    l2495 003D                      l2487 0025                      l2479 0010  
                    l4095 0007                      l4431 058A                      l4423 04B7  
                    l4415 049C                      l4407 0475                      l4351 026D  
                    l4343 01F4                      l4335 0168                      l4327 0128  
                    l4319 00FA                      l4271 0006                      l4511 010A  
                    l4503 00CC                      l4257 003D                      l4249 001E  
                    l4265 0021                      l3705 01C4                      l3641 00CD  
                    l3633 00B1                      l3625 0097                      l3609 005E  
                    l3617 0077                      l3297 0016                      l3289 000F  
                    l2745 0252                      l2737 0242                      l2729 0227  
                    l2681 017F                      l2673 011D                      l2665 010F  
                    l2649 00D2                      l2593 0050                      l2585 003D  
                    l2577 002E                      l2569 0020                      l4193 0026  
                    l4185 0000                      l4089 01C9                      l2497 0044  
                    l2489 0029                      l4097 0009                      l4441 05E0  
                    l4433 0594                      l4425 04D5                      l4417 04A9  
                    l4409 047B                      l4361 02E8                      l4353 027C  
                    l4345 020F                      l4337 0187                      l4329 013B  
                    l4281 0026                      l4273 000C                      l4521 0134  
                    l4513 0112                      l4505 00D1                      l4259 0043  
                    l4267 0029                      l3635 00B6                      l3643 00D6  
                    l3651 00FB                      l3627 009F                      l3619 007C  
                    l3571 0005                      l3299 0017                      l2747 0256  
                    l2739 0243                      l2691 01B4                      l2683 0185  
                    l2675 0126                      l2667 0116                      l2659 00F0  
                    l2595 0051                      l2587 003E                      l2579 0034  
                    l4195 002F                      l4187 0012                      l4179 009F  
                    l2499 004A                      l4099 0010                      l4451 060C  
                    l4443 05E6                      l4427 0530                      l4435 05CF  
                    l4419 04AE                      l4371 0336                      l4363 02F1  
                    l4355 0297                      l4339 01D2                      l4347 0217  
                    l4291 0060                      l4283 0029                      l4275 0011  
                    l4531 01C6                      l4523 018A                      l4515 011B  
                    l4507 00DA                      l3661 0118                      l3653 0101  
                    l3645 00E8                      l3637 00C8                      l3629 00A7  
                    l3581 0018                      l3573 0009                      l2685 018A  
                    l2669 0118                      l2677 012B                      l2589 0043  
                    l2597 0053                      l4197 0041                      l4189 0015  
                    l3901 0037                      l4453 060D                      l4437 05D7  
                    l4429 056B                      l4365 02F9                      l4357 02BE  
                    l4373 033F                      l4349 0226                      l4445 05ED  
                    l4293 0066                      l4285 002F                      l4277 0016  
                    l4269 0003                      l4541 01E7                      l4533 01CC  
                    l4525 01AC                      l4517 0123                      l4509 00FB  
                    l3671 012D                      l3663 0119                      l3655 0109  
                    l3647 00E9                      l3639 00CC                      l3591 0030  
                    l3583 0020                      l3575 000D                      l2695 01BD  
                    l2679 0141                      l2687 0199                      l2599 0061  
                    l4199 004F                      l3911 000D                      l4455 061C  
                    l4447 05F3                      l4439 05DC                      l4391 03E8  
                    l4375 0374                      l4367 0317                      l4359 02CD  
                    l4287 0034                      l4295 0078                      l4279 0018  
                    l4463 0630                      l4543 01F0                      l4535 01D2  
                    l4527 01B5                      l4519 012C                      l3681 0152  
                    l3673 0131                      l3665 0122                      l3657 010B  
                    l3649 00F7                      l3593 0034                      l3585 0021  
                    l3577 000E                      l3569 0000                      l2697 01C6  
                    l2689 01AF                      l3921 0022                      l3913 000E  
                    l3905 0000                      l4457 061C                      l4449 05FB  
                    l4393 03F4                      l4385 03A7                      l4377 03A3  
                    l4465 0644                      l4297 007C                      l4289 0049  
                    l4545 01F6                      l4537 01DB                      l4529 01BE  
                    l4481 0010                      l3691 0190                      l3683 0160  
                    l3675 0145                      l3659 0114                      l3667 0128  
                    l3595 0038                      l3579 0013                      l3587 0023  
                    l2699 01CA                      l3931 0038                      l3923 002A  
                    l3915 0013                      l3907 0005                      l4459 062A  
                    l4395 03F9                      l4379 03A5                      l4547 01FC  
                    l4539 01E1                      l4491 0068                      l4483 0018  
                    l4475 0000                      l3693 019E                      l3685 0164  
                    l3669 012C                      l3597 0039                      l3589 002B  
                    l3861 0005                      l3941 0054                      l3933 003D  
                    l3925 002F                      l3917 0018                      l3909 0009  
                    l2981 0008                      l4397 03FE                      l4389 03DE  
                    l4493 006F                      l4485 0021                      l4477 0005  
                    l3695 01AD                      l3687 017D                      l3679 014D  
                    l3599 003E                      l2991 0011                      l3863 000C  
                    l3951 0075                      l3943 0059                      l3935 0042  
                    l3927 0033                      l3919 0020                      l2983 000E  
                    l4399 0439                      l4583 0096                      l4487 0029  
                    l4495 0078                      l4479 000A                      l3881 001E  
                    l3873 0001                      l3697 01B1                      l3689 0183  
                    l3865 0010                      l3961 00FF                      l3953 0082  
                    l3945 005E                      l3937 004A                      l3929 0037  
                    l2985 0010                      l2977 0001                      l4497 0080  
                    l4489 004D                      l3875 0005                      l3699 01B9  
                    l2995 001A                      l3867 001F                      l3859 0003  
                    l3971 015D                      l3963 011B                      l3955 009D  
                    l3939 004C                      l3891 0016                      l3883 0000  
                    l2979 0002                      l4499 00B3                      l3877 0010  
                    l2989 0000                      l3869 0024                      l3981 01E7  
                    l3973 017A                      l3965 0124                      l3957 00B9  
                    l3949 0067                      l3893 001A                      l3885 0008  
                    l3879 0017                      l3991 0277                      l3983 0212  
                    l3975 0191                      l3967 0132                      l3959 00E3  
                    l3895 0024                      l3887 000B                      l3993 0280  
                    l3985 0238                      l3977 01AE                      l3969 014F  
                    l3897 002A                      l3889 0012                      l3995 0284  
                    l3987 0260                      l3979 01D9                      l3899 0031  
                    ?_isr 0000                      l3997 0285                      l3989 0269  
                    l3999 028E                      STR_1 00A0                      STR_2 00B7  
                    STR_3 00AD                      STR_4 00B2                      STR_5 00BC  
                    STR_6 00BA                      STR_7 00BA                      _IOCB 0096  
                    u3210 0007                      u3211 0006                      u3300 005F  
                    u3220 0012                      u3301 005E                      u3221 0011  
                    u3230 0023                      u3310 0005                      u3231 0022  
                    u3311 0004                      u3400 0008                      u3320 0010  
                    u3401 0007                      u3321 000F                      u5010 0016  
                    u3250 0035                      u3330 001B                      u5011 0015  
                    u3251 0034                      u3331 001A                      u5020 0032  
                    u5100 00A0                      u3420 001A                      u5021 0031  
                    u5101 009F                      u3421 0019                      u3245 0027  
                    u5030 004C                      u5110 0008                      u3270 0046  
                    u3350 002D                      u5031 004B                      u5111 0007  
                    u3415 000C                      u3271 0045                      u3351 002C  
                    u5040 0016                      u3600 0061                      u5200 0067  
                    u5120 000B                      u3440 002B                      u3360 0037  
                    u5105 009C                      u5041 0015                      u3601 0060  
                    u5201 0066                      u5121 000A                      u3441 002A  
                    u3265 0036                      u3361 0036                      u3345 001F  
                    _HORA 0007                      u6010 0118                      u5050 0032  
                    u3610 0065                      u3530 000D                      u5210 006C  
                    u5130 0022                      u3290 005A                      u6011 0117  
                    u5035 0048                      u5051 0031                      u3611 0064  
                    u3531 000C                      u5211 006B                      u3435 001B  
                    u3291 0059                      u3275 0042                      u6100 0190  
                    u5060 003E                      u3700 00E7                      u3620 009F  
                    u3540 0013                      u5140 0036                      u5300 002C  
                    u3460 003F                      u3380 004A                      u6101 018F  
                    u6005 010D                      u5061 003D                      u3701 00E6  
                    u3621 009E                      u3541 0012                      u5141 0035  
                    u5301 002B                      u3461 003E                      u3445 0027  
                    u3285 004E                      u3381 0049                      u3365 0033  
                    u6110 01AD                      u6030 012C                      u3630 00AA  
                    u3550 0018                      u5150 003D                      u3390 004F  
                    u6111 01AC                      u6031 012B                      u5071 004D  
                    u3711 00F9                      u3631 00A8                      u3551 0017  
                    u5151 003C                      u5135 001D                      u3455 0033  
                    u3391 004E                      u3375 003E                      u6120 01C2  
                    u6040 0131                      u5080 0066                      u5072 004E  
                    u3800 01AF                      u3720 010B                      u3712 0100  
                    u3640 00AB                      u3560 0034                      u5400 00AC  
                    u5320 004B                      u6121 01C1                      u6105 018C  
                    u6041 0130                      u6025 011B                      u5081 0065  
                    u5073 0053                      u3801 01AE                      u3721 010A  
                    u3713 0107                      u3625 009B                      u3561 0033  
                    u5401 00AB                      u5321 004A                      u6050 0145  
                    u5074 0054                      u3810 01B4                      u3730 010F  
                    u3650 00BB                      u3570 003D                      u5170 004F  
                    u5410 00B0                      u6115 01A9                      u6051 0144  
                    u5091 0075                      u5075 0059                      u3811 01B3  
                    u3731 010E                      u3651 00BA                      u3571 003C  
                    u5171 004E                      u5411 00AF                      u5315 003D  
                    u6300 0005                      u6060 014C                      u5092 0076  
                    u5076 005A                      u3900 01F7                      u3740 011C  
                    u3660 00C8                      u3580 0043                      u5180 0056  
                    u5340 006D                      u7100 0085                      u4700 007D  
                    u4620 0008                      u6301 0004                      u6061 014B  
                    u5093 007B                      u3901 01F6                      u3741 011B  
                    u3661 00C7                      u3581 0042                      u5181 0055  
                    u5165 003F                      u5341 006C                      u7101 0084  
                    u4701 007C                      u4621 0007                      u7005 02C1  
                    u6310 0010                      u6070 0152                      u5094 007C  
                    u3910 0209                      u3830 01CA                      u3590 0048  
                    u7030 000B                      u4710 0084                      u4630 000E  
                    u6311 000F                      u6071 0151                      u5095 0081  
                    u3911 0208                      u3831 01C9                      u3591 0047  
                    u5335 005F                      u7031 000A                      u4711 0083  
                    u4631 000D                      u7015 02FD                      u6320 0017  
                    u6080 0164                      u5096 0082                      u3920 0218  
                    u3840 01CF                      u3760 0141                      u3680 00DE  
                    u7200 0041                      u5360 007D                      u5280 0008  
                    u7120 0097                      u7040 001D                      u4640 0011  
                    u6400 000D                      u6321 0016                      u6081 0163  
                    u3841 01CE                      u3825 01BF                      u3761 0140  
                    u3681 00DD                      u7201 0040                      u5361 007C  
                    u5281 0007                      u7121 0096                      u7041 001C  
                    u4641 0010                      u6401 000C                      u7025 0339  
                    u6330 001E                      u6090 0173                      u3930 0227  
                    u3850 01D9                      u3690 00E2                      u5370 0083  
                    u5290 000C                      u7130 009E                      u4730 0096  
                    u4650 0029                      u6410 0013                      u6331 001D  
                    u3931 0226                      u3851 01D8                      u3771 0158  
                    u3763 013D                      u3755 011F                      u3691 00E1  
                    u3675 00CB                      u5195 0059                      u5371 0082  
                    u5355 0072                      u5291 000B                      u7131 009D  
                    u7115 0087                      u4731 0095                      u4651 0028  
                    u6411 0012                      u3940 0230                      u3860 01DF  
                    u3780 016C                      u3772 0159                      u7220 005F  
                    u4900 0006                      u5380 0087                      u7060 005C  
                    u4740 009D                      u6420 0018                      u6340 0008  
                    u3941 022F                      u3925 0213                      u3861 01DE  
                    u3781 016D                      u3773 015E                      u7221 005E  
                    u7205 003D                      u4901 0005                      u5381 0086  
                    u7061 005B                      u4741 009C                      u4725 0086  
                    u6501 00F1                      u6421 0017                      u6341 0007  
                    u7310 002D                      u3950 0235                      u3870 01E4  
                    u3790 018A                      u3782 0172                      u3774 015F  
                    u7230 0008                      u5390 009C                      u7150 00AF  
                    u4670 0060                      u6270 0010                      u6502 00F8  
                    u6430 0037                      u7311 002C                      u6095 016E  
                    u3951 0234                      u3871 01E3                      u3791 0189  
                    u3783 0173                      u3775 0164                      u7215 0051  
                    u7231 0007                      u7151 00AE                      u7055 0043  
                    u4671 005F                      u6271 000F                      u6511 010D  
                    u6503 00FF                      u6431 0036                      u3960 0242  
                    u3880 01EA                      u3776 0165                      u7160 0012  
                    u7080 007A                      u4760 00AE                      u6512 0114  
                    u6440 003D                      u6360 001A                      u7400 00AE  
                    u7305 000E                      u3961 0241                      u3881 01E9  
                    u7161 0011                      u7145 00A1                      u7081 0079  
                    u7065 0058                      u4761 00AD                      u4665 004B  
                    u6601 022A                      u6513 011B                      u6441 003C  
                    u6361 0019                      u7401 00AD                      u7330 000F  
                    u3970 0247                      u3890 01F1                      u7250 001E  
                    u4930 0020                      u7090 007E                      u4690 0079  
                    u6290 0024                      u6610 0246                      u6602 0231  
                    u6450 0042                      u6370 0024                      u7410 00DD  
                    u3971 0246                      u3891 01F0                      u7251 001D  
                    u4931 001F                      u4915 000D                      u5395 0097  
                    u7091 007D                      u7075 006D                      u4755 00A0  
                    u4691 0078                      u4675 005C                      u6291 0023  
                    u6603 0238                      u6531 0141                      u6451 0041  
                    u6371 0023                      u6355 000C                      u7411 00DC  
                    u7340 0033                      u5900 005E                      u3980 0256  
                    u7180 0026                      u7260 0030                      u6700 02B8  
                    u6532 0148                      u6460 0059                      u7500 02CD  
                    u7420 0117                      u7325 0033                      u5901 005D  
                    u3981 0255                      u7181 0025                      u7261 002F  
                    u7245 000F                      u4925 0014                      u4685 006C  
                    u6285 0017                      u6701 02B7                      u6621 0252  
                    u6541 016C                      u6533 014F                      u6525 011D  
                    u6461 0058                      u7501 02CC                      u7421 0116  
                    u7350 0045                      u5910 007C                      u6710 02BE  
                    u6622 0259                      u6542 0173                      u6470 005E  
                    u6390 0037                      u7510 02E8                      u7430 0162  
                    u7351 0044                      u5911 007B                      u7175 0017  
                    u6711 02BD                      u6623 0260                      u6615 0241  
                    u6543 017A                      u6471 005D                      u6391 0036  
                    u6375 0020                      u7511 02E7                      u7431 0161  
                    u5920 00B6                      u5840 000D                      u7280 004D  
                    u6720 02D0                      u7600 04AE                      u7440 01EB  
                    u7360 000C                      u5921 00B5                      u5841 000C  
                    u7281 004C                      u7265 002C                      u6721 02CF  
                    u6561 01A0                      u6481 00AB                      u6385 002B  
                    u7601 04AD                      u7505 02C9                      u7441 01EA  
                    u7361 000B                      u7290 0008                      u5850 0013  
                    u6730 02DF                      u6650 0284                      u6562 01A7  
                    u6482 00B2                      u7530 03DD                      u7450 020F  
                    u7370 0026                      u7291 0007                      u5851 0012  
                    u7195 0028                      u7275 003F                      u6651 0283  
                    u6635 0262                      u6571 01CB                      u6563 01AE  
                    u6555 017C                      u6491 00C7                      u6483 00B9  
                    u7531 03DC                      u7451 020E                      u7371 0025  
                    u5860 0018                      u6740 02FC                      u6572 01D2  
                    u6492 00CE                      u6820 011E                      u7700 0644  
                    u7540 03E8                      u7460 0226                      u7380 0077  
                    u5861 0017                      u6741 02FB                      u6645 0279  
                    u6581 01F6                      u6573 01D9                      u6493 00D5  
                    u6821 011D                      u6805 0082                      u7701 0643  
                    u7541 03E7                      u7525 03AA                      u7461 0225  
                    u7381 0076                      u5950 00CC                      u5870 0038  
                    u6750 0316                      u6670 0298                      u6590 021E  
                    u6582 01FD                      u6910 0101                      u7630 05D6  
                    u7550 03F4                      u7470 027C                      u7390 00AA  
                    u7710 0080                      u5951 00CB                      u5935 00B8  
                    u5871 0037                      u6751 0315                      u6735 02DA  
                    u6671 0297                      u6583 0204                      u6815 00D7  
                    u6911 0100                      u7631 05D5                      u7615 0533  
                    u7551 03F3                      u7535 03D9                      u7471 027B  
                    u7391 00A9                      u7711 007F                      u5880 003E  
                    u6760 0332                      u6680 029D                      u7640 05EC  
                    u7480 0297                      u5945 00C1                      u5881 003D  
                    u6761 0331                      u6745 02F8                      u6681 029C  
                    u6665 0287                      u6905 00B9                      u7641 05EB  
                    u7625 0597                      u7481 0296                      u7465 0222  
                    u5970 00E8                      u5890 0043                      u6690 02B1  
                    u7650 05F3                      u7570 0469                      u7490 02BE  
                    u5971 00E7                      u5891 0042                      u6755 0312  
                    u6691 02B0                      u6595 0219                      u6835 013B  
                    u7651 05F2                      u7571 0468                      u7491 02BD  
                    u7475 0278                      u5980 0101                      u6780 0009  
                    u6860 0007                      u7660 05FB                      u7580 0488  
                    u5981 0100                      u5965 00CF                      u6845 0188  
                    u6781 0008                      u6925 0114                      u6861 0006  
                    u7661 05FA                      u7581 0487                      u7565 0401  
                    u5990 0109                      u6950 01BD                      u6870 0010  
                    u7670 060C                      u7590 0497                      u7807 0028  
                    u6775 000D                      u5991 0108                      u5975 00E4  
                    u6855 01D4                      u6951 01BC                      u6935 0150  
                    u6871 000F                      u7671 060B                      u7591 0496  
                    u7727 00B9                      u7680 061C                      u7817 0011  
                    u6945 018C                      u7681 061B                      u7585 0484  
                    u7737 00C8                      u7690 062A                      u6795 0026  
                    u7691 0629                      u7675 0608                      u7595 0493  
                    u7747 0106                      u6965 01DF                      u6885 0032  
                    u7685 0618                      u7757 0200                      u6990 02AE  
                    u7767 001D                      u6991 02AD                      u6975 021B  
                    u6895 006E                      u7777 002E                      u6985 0266  
                    u7787 000A                      u7797 0019                      _TMR0 0001  
       ?_Lcd_Write_String 0007                      _cont 000A                      _main 0000  
                    _hora 000F                      _ones 0012                      _tens 0000  
                    _year 000C                      btemp 007E                      start 0000* 
      ??_Lcd_Write_String 0000           ___fldiv@new_exp 0034              _sprintf$1052 000D  
         __end_of_Lcd_Cmd 001A                     ??_isr 0000          ?_I2C_Master_Init 0000  
        ?_I2C_Master_Read 0000          ?_I2C_Master_Stop 0000             ___fltol@sign1 003D  
         __end_of___fladd 0258                     ?_main 0000           __end_of___fldiv 01D3  
         __end_of___awdiv 0069           __end_of___flneg 000B                     _FECHA 0000  
         __end_of___awmod 0059           __end_of___flmul 0345           __end_of___flsub 0050  
         __end_of___fltol 0078                     _ANSEL 0188           __end_of___lldiv 0068  
         ___awdiv@divisor 0000           __end_of___llmod 0056           __end_of___lwdiv 0044  
                   i1l101 0007                     i1l102 000C                     i1l103 0011  
                   i1l104 0016                     i1l123 0067                     i1l107 002C  
                   i1l116 0062                     i1l108 0068                     i1l109 004D  
                   i1l126 0069           __end_of___lwmod 003C           ___awdiv@counter 0004  
                   _PORTA 0005                     _PORTB 0006                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISD 0088                     _TRISE 0089           __end_of_dpowers 00A0  
                   _horas 0008                     _scale 0000           __end_of_isdigit 0012  
                   _month 000D                     _setup 0000                     pclath 000A  
                   status 0003                     wtemp0 007E           __end_of_sprintf 0649  
        __end_of_Lcd_Init 005D          __end_of_Lcd_Port 0022           __initialization 0000  
            __end_of_main 0207                    ??_main 0026         ?_I2C_Master_Start 0000  
       ?_I2C_Master_Write 0000        ??_I2C_Master_Start 0000        ??_I2C_Master_Write 0000  
        ___llmod@dividend 0006                    ?_scale 0022          ___awdiv@dividend 0002  
                  ?_setup 0000                    _ANSELH 0189                    i1l3711 0000  
                  i1l3721 001A                    i1l3713 0006                    i1l3731 0030  
                  i1l3723 001C                    i1l3715 000B                    i1l3741 0051  
                  i1l3733 0036                    i1l3725 001D                    i1l3717 0010  
                  i1l3743 0057                    i1l3735 0041                    i1l3727 0021  
                  i1l3719 0015                    i1l3737 004A                    i1l3729 0025  
                  u620_20 0030                    u620_21 002F                    u621_20 0036  
                  u613_20 0006                    u621_21 0035                    u613_21 0005  
                  u622_20 0041                    u614_20 000B                    u622_21 0040  
                  u614_21 000A                    u623_20 0051                    u615_20 0010  
                  u623_21 0050                    u615_21 000F                    u624_20 0057  
                  u616_20 0015                    u624_21 0056                    u616_21 0014  
                  u625_20 0066                    u617_20 001A                    u625_21 0065  
                  u617_21 0019                    u618_20 0021                    u618_21 0020  
                  u619_20 0025                    u619_21 0024                 ??_Lcd_Cmd 0003  
        __end_of___xxtofl 00BA          __end_of__powers_ 0044                    ___flge 0000  
                  ___fleq 0000                 ??___fladd 003E                    ___wmul 0000  
               ??___fldiv 002A                 ??___awdiv 0009                 ??___flneg 0006  
               ??___awmod 0006                 ??___flmul 0010                 ??___flsub 000A  
               ??___fltol 0039                 ??___lldiv 0000                 ??___llmod 0000  
               ??___lwdiv 0006                 ??___lwmod 0004                    _fround 0000  
        ___awdiv@quotient 0006           ___awmod@divisor 0002           ___awmod@counter 0007  
               ??_isdigit 0002                    saved_w 007E                 ??_sprintf 0008  
         Lcd_Set_Cursor@a 0000           Lcd_Set_Cursor@b 0006           Lcd_Set_Cursor@y 0002  
         Lcd_Set_Cursor@z 0001                ___flge@ff1 0002                ___flge@ff2 0006  
            ___xxtofl@arg 0002              ___xxtofl@exp 0001              ___xxtofl@val 0002  
              ___fleq@ff1 0002                ___fleq@ff2 0006   __end_of__initialization 0019  
              ___flneg@f1 0002         __end_of_Lcd_Clear 000D                ___fltol@f1 0035  
          __pcstackCOMMON 0000              __pidataBANK1 0000             __end_of_scale 0363  
           __end_of_setup 0037            _Lcd_Set_Cursor 0000                __div_to_l_ 0000  
          _OPTION_REGbits 0081                 ?_Lcd_Init 0000                 ?_Lcd_Port 0000  
         __div_to_l_@exp1 0006           __div_to_l_@cntr 0005                   ??_scale 0026  
         __div_to_l_@quot 0001         _I2C_Master_Init$0 0000         _I2C_Master_Read$0 0000  
                 ??_setup 0002                __pbssBANK0 0000                __pbssBANK1 0000  
           __div_to_l_@f1 0002             __div_to_l_@f2 0006         __end_of__Umul8_16 0029  
              __pmaintext 0000                   ?___flge 0002                   ?___fleq 0002  
                 ?___wmul 0002                __pintentry 0000                   ?_fround 0022  
  __end_of_Lcd_Set_Cursor 004C                 ?___xxtofl 0002                ??_Lcd_Init 0006  
              ??_Lcd_Port 0002                __stringtab 0000            _Lcd_Write_Char 0000  
                 _Lcd_Cmd 0000         __end_of__npowers_ 0078                _scale$1051 0030  
                 ___fladd 0000                   ___fldiv 0000                   ___awdiv 0000  
                 ___flneg 0000                   ___awmod 0000                   ___flmul 0000  
                 ___flsub 0000                   ___fltol 0000                   ___lldiv 0000  
                 ___llmod 0000                   ___lwdiv 0000                   ___lwmod 0000  
         ?_Lcd_Set_Cursor 0006                   __ptext1 0000                   __ptext2 0000  
                 __ptext3 0000                   __ptext4 0000                   __ptext5 0000  
                 __ptext6 0000                   __ptext7 0000                   __ptext8 0000  
                 __ptext9 0000               ?__div_to_l_ 0002                   _dpowers 0078  
                 _isdigit 0000                ??___xxtofl 0006          ___awmod@dividend 0004  
                 _sprintf 0000                   clrloop0 0001    __end_of_Lcd_Write_Char 0035  
    end_of_initialization 0019           ___lldiv@divisor 0002           ___lldiv@counter 0005  
               Lcd_Port@a 0002            __tdiv_to_l_@f1 0002            __tdiv_to_l_@f2 0006  
           ??__tdiv_to_l_ 0000                 _PORTBbits 0006                 _PORTDbits 0008  
             ___fladd@grs 0049             ___xxtofl@sign 0000               ___fldiv@grs 0036  
             ___fldiv@rem 002F           ?_Lcd_Write_Char 0000         Lcd_Write_String@a 0007  
       Lcd_Write_String@i 0003               ___flmul@grs 0017                 _Lcd_Clear 0000  
          __end_of___flge 00A4            __end_of___fleq 0050            __end_of___wmul 0025  
        _Lcd_Write_String 0000            __end_of_fround 020D       start_initialization 0000  
     __end_of__tdiv_to_l_ 00B7               __end_of_isr 0070         ??_I2C_Master_Init 0000  
       ??_I2C_Master_Read 0000         ??_I2C_Master_Stop 0000           ___llmod@divisor 0002  
         ___llmod@counter 0001                ?_Lcd_Clear 0000                  ??___flge 0000  
                ??___fleq 0000                  ??___wmul 0006                init_fetch0 0000  
               __Umul8_16 0000               __pdataBANK1 0000           Lcd_Write_Char@a 0006  
         Lcd_Write_Char@y 0005                  ??_fround 0026             sprintf@tmpval 001B  
               ___fladd@a 003A                 ___fladd@b 0036                fround@prec 0035  
               ___fldiv@a 0022                 ___fldiv@b 0026                 ___flmul@a 000C  
               ___flmul@b 0008               __pbssCOMMON 0000                 ___flsub@a 0000  
               ___flsub@b 0004                 ___latbits 0002             __pcstackBANK0 0000  
           __pcstackBANK1 0000        _I2C_Master_Write$0 0000                  ?_Lcd_Cmd 0000  
             sprintf@flag 0012               sprintf@eexp 0018               sprintf@fval 0021  
             sprintf@prec 001F          _I2C_Master_Start 0000*         _I2C_Master_Write 0000* 
        ___lwdiv@dividend 0004          ??_Lcd_Set_Cursor 0007                  ?___fladd 0036  
                ?___fldiv 0022                  ?___awdiv 0000                  ?___flneg 0002  
                ?___awmod 0002                  ?___flmul 0008                  ?___flsub 0000  
                ?___fltol 0035                  ?___lldiv 0002                  ?___llmod 0002  
               __npowers_ 0044                ?__Umul8_16 0002                  ?___lwdiv 0002  
                ?___lwmod 0000                 __pstrings 0000               __tdiv_to_l_ 0000  
            ??__div_to_l_ 0000                  ?_isdigit 0000                 _leer_hora 0000* 
        ___lwdiv@quotient 0007                  ?_sprintf 004A         interrupt_function 0000  
          ___wmul@product 0006                 clear_ram0 0000                  _PIE1bits 008C  
                Lcd_Cmd@a 0005                  _PIR1bits 000C        __end_of__div_to_l_ 00B8  
             ??_Lcd_Clear 0006                  _VOLTAJE1 0004               __stringbase 000F  
       ___wmul@multiplier 0002          ??_Lcd_Write_Char 0003                ?_leer_hora 0000  
                _Lcd_Init 0000                  _Lcd_Port 0000  __end_of_Lcd_Write_String 0046  
             ??__Umul8_16 0004               _fround$1050 002D               _fround$1049 0031  
      __end_of__stringtab 0010               _isdigit$870 0002                sprintf@val 0014  
         _I2C_Master_Init 0000*          _I2C_Master_Read 0000*                 ___xxtofl 0000  
         _I2C_Master_Stop 0000*          ___lwdiv@divisor 0002           ___lwdiv@counter 0009  
                __ptext10 0000                  __ptext11 0000                  __ptext20 0000  
                __ptext12 0000                  __ptext21 0000                  __ptext13 0000  
                __ptext30 0000                  __ptext22 0000                  __ptext14 0000  
                __ptext31 0000                  __ptext23 0000                  __ptext15 0000  
                __ptext32 0000                  __ptext24 0000                  __ptext16 0000  
                __ptext25 0000                  __ptext17 0000                  __ptext26 0000  
                __ptext18 0000                  __ptext27 0000                  __ptext19 0000  
                __ptext28 0000                  __ptext29 0000                  __powers_ 0010  
                _temporal 0000                  _voltaje1 0000                _INTCONbits 000B  
             ??_leer_hora 0000                  init_ram0 0004                  isdigit@c 0003  
                scale@scl 0034        Lcd_Write_Char@temp 0004                  intlevel1 0000* 
               sprintf@ap 0011          __tdiv_to_l_@exp1 0008          __tdiv_to_l_@cntr 0007  
               sprintf@sp 001A          __tdiv_to_l_@quot 0003          ___lwmod@dividend 0002  
        ___lldiv@dividend 0006                 stringcode 000A                _OSCCONbits 008F  
      Lcd_Set_Cursor@temp 0003              ?__tdiv_to_l_ 0002    __Umul8_16@multiplicand 0002  
                sprintf@c 0025                  sprintf@f 004A          ___lldiv@quotient 0001  
         ___lwmod@divisor 0000           ___lwmod@counter 0005                  stringdir 000A  
                stringtab 0000             ___fladd@signs 0046              ___fladd@aexp 0047  
            ___fladd@bexp 0048      __Umul8_16@multiplier 0004         __Umul8_16@product 0000  
