

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 08 16:56:57 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35     0000                     
    36                           ; Version 2.40
    37                           ; Generated 17/11/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71     0000                     	;# 
    72     0001                     	;# 
    73     0002                     	;# 
    74     0003                     	;# 
    75     0004                     	;# 
    76     0005                     	;# 
    77     0006                     	;# 
    78     0007                     	;# 
    79     0008                     	;# 
    80     0009                     	;# 
    81     000A                     	;# 
    82     000B                     	;# 
    83     000C                     	;# 
    84     000D                     	;# 
    85     000E                     	;# 
    86     000E                     	;# 
    87     000F                     	;# 
    88     0010                     	;# 
    89     0011                     	;# 
    90     0012                     	;# 
    91     0013                     	;# 
    92     0014                     	;# 
    93     0015                     	;# 
    94     0015                     	;# 
    95     0016                     	;# 
    96     0017                     	;# 
    97     0018                     	;# 
    98     0019                     	;# 
    99     001A                     	;# 
   100     001B                     	;# 
   101     001B                     	;# 
   102     001C                     	;# 
   103     001D                     	;# 
   104     001E                     	;# 
   105     001F                     	;# 
   106     0081                     	;# 
   107     0085                     	;# 
   108     0086                     	;# 
   109     0087                     	;# 
   110     0088                     	;# 
   111     0089                     	;# 
   112     008C                     	;# 
   113     008D                     	;# 
   114     008E                     	;# 
   115     008F                     	;# 
   116     0090                     	;# 
   117     0091                     	;# 
   118     0092                     	;# 
   119     0093                     	;# 
   120     0093                     	;# 
   121     0093                     	;# 
   122     0094                     	;# 
   123     0095                     	;# 
   124     0096                     	;# 
   125     0097                     	;# 
   126     0098                     	;# 
   127     0099                     	;# 
   128     009A                     	;# 
   129     009B                     	;# 
   130     009C                     	;# 
   131     009D                     	;# 
   132     009E                     	;# 
   133     009F                     	;# 
   134     0105                     	;# 
   135     0107                     	;# 
   136     0108                     	;# 
   137     0109                     	;# 
   138     010C                     	;# 
   139     010C                     	;# 
   140     010D                     	;# 
   141     010E                     	;# 
   142     010F                     	;# 
   143     0185                     	;# 
   144     0187                     	;# 
   145     0188                     	;# 
   146     0189                     	;# 
   147     018C                     	;# 
   148     018D                     	;# 
   149     0000                     	;# 
   150     0001                     	;# 
   151     0002                     	;# 
   152     0003                     	;# 
   153     0004                     	;# 
   154     0005                     	;# 
   155     0006                     	;# 
   156     0007                     	;# 
   157     0008                     	;# 
   158     0009                     	;# 
   159     000A                     	;# 
   160     000B                     	;# 
   161     000C                     	;# 
   162     000D                     	;# 
   163     000E                     	;# 
   164     000E                     	;# 
   165     000F                     	;# 
   166     0010                     	;# 
   167     0011                     	;# 
   168     0012                     	;# 
   169     0013                     	;# 
   170     0014                     	;# 
   171     0015                     	;# 
   172     0015                     	;# 
   173     0016                     	;# 
   174     0017                     	;# 
   175     0018                     	;# 
   176     0019                     	;# 
   177     001A                     	;# 
   178     001B                     	;# 
   179     001B                     	;# 
   180     001C                     	;# 
   181     001D                     	;# 
   182     001E                     	;# 
   183     001F                     	;# 
   184     0081                     	;# 
   185     0085                     	;# 
   186     0086                     	;# 
   187     0087                     	;# 
   188     0088                     	;# 
   189     0089                     	;# 
   190     008C                     	;# 
   191     008D                     	;# 
   192     008E                     	;# 
   193     008F                     	;# 
   194     0090                     	;# 
   195     0091                     	;# 
   196     0092                     	;# 
   197     0093                     	;# 
   198     0093                     	;# 
   199     0093                     	;# 
   200     0094                     	;# 
   201     0095                     	;# 
   202     0096                     	;# 
   203     0097                     	;# 
   204     0098                     	;# 
   205     0099                     	;# 
   206     009A                     	;# 
   207     009B                     	;# 
   208     009C                     	;# 
   209     009D                     	;# 
   210     009E                     	;# 
   211     009F                     	;# 
   212     0105                     	;# 
   213     0107                     	;# 
   214     0108                     	;# 
   215     0109                     	;# 
   216     010C                     	;# 
   217     010C                     	;# 
   218     010D                     	;# 
   219     010E                     	;# 
   220     010F                     	;# 
   221     0185                     	;# 
   222     0187                     	;# 
   223     0188                     	;# 
   224     0189                     	;# 
   225     018C                     	;# 
   226     018D                     	;# 
   227     0000                     	;# 
   228     0001                     	;# 
   229     0002                     	;# 
   230     0003                     	;# 
   231     0004                     	;# 
   232     0005                     	;# 
   233     0006                     	;# 
   234     0007                     	;# 
   235     0008                     	;# 
   236     0009                     	;# 
   237     000A                     	;# 
   238     000B                     	;# 
   239     000C                     	;# 
   240     000D                     	;# 
   241     000E                     	;# 
   242     000E                     	;# 
   243     000F                     	;# 
   244     0010                     	;# 
   245     0011                     	;# 
   246     0012                     	;# 
   247     0013                     	;# 
   248     0014                     	;# 
   249     0015                     	;# 
   250     0015                     	;# 
   251     0016                     	;# 
   252     0017                     	;# 
   253     0018                     	;# 
   254     0019                     	;# 
   255     001A                     	;# 
   256     001B                     	;# 
   257     001B                     	;# 
   258     001C                     	;# 
   259     001D                     	;# 
   260     001E                     	;# 
   261     001F                     	;# 
   262     0081                     	;# 
   263     0085                     	;# 
   264     0086                     	;# 
   265     0087                     	;# 
   266     0088                     	;# 
   267     0089                     	;# 
   268     008C                     	;# 
   269     008D                     	;# 
   270     008E                     	;# 
   271     008F                     	;# 
   272     0090                     	;# 
   273     0091                     	;# 
   274     0092                     	;# 
   275     0093                     	;# 
   276     0093                     	;# 
   277     0093                     	;# 
   278     0094                     	;# 
   279     0095                     	;# 
   280     0096                     	;# 
   281     0097                     	;# 
   282     0098                     	;# 
   283     0099                     	;# 
   284     009A                     	;# 
   285     009B                     	;# 
   286     009C                     	;# 
   287     009D                     	;# 
   288     009E                     	;# 
   289     009F                     	;# 
   290     0105                     	;# 
   291     0107                     	;# 
   292     0108                     	;# 
   293     0109                     	;# 
   294     010C                     	;# 
   295     010C                     	;# 
   296     010D                     	;# 
   297     010E                     	;# 
   298     010F                     	;# 
   299     0185                     	;# 
   300     0187                     	;# 
   301     0188                     	;# 
   302     0189                     	;# 
   303     018C                     	;# 
   304     018D                     	;# 
   305     0000                     	;# 
   306     0001                     	;# 
   307     0002                     	;# 
   308     0003                     	;# 
   309     0004                     	;# 
   310     0005                     	;# 
   311     0006                     	;# 
   312     0007                     	;# 
   313     0008                     	;# 
   314     0009                     	;# 
   315     000A                     	;# 
   316     000B                     	;# 
   317     000C                     	;# 
   318     000D                     	;# 
   319     000E                     	;# 
   320     000E                     	;# 
   321     000F                     	;# 
   322     0010                     	;# 
   323     0011                     	;# 
   324     0012                     	;# 
   325     0013                     	;# 
   326     0014                     	;# 
   327     0015                     	;# 
   328     0015                     	;# 
   329     0016                     	;# 
   330     0017                     	;# 
   331     0018                     	;# 
   332     0019                     	;# 
   333     001A                     	;# 
   334     001B                     	;# 
   335     001B                     	;# 
   336     001C                     	;# 
   337     001D                     	;# 
   338     001E                     	;# 
   339     001F                     	;# 
   340     0081                     	;# 
   341     0085                     	;# 
   342     0086                     	;# 
   343     0087                     	;# 
   344     0088                     	;# 
   345     0089                     	;# 
   346     008C                     	;# 
   347     008D                     	;# 
   348     008E                     	;# 
   349     008F                     	;# 
   350     0090                     	;# 
   351     0091                     	;# 
   352     0092                     	;# 
   353     0093                     	;# 
   354     0093                     	;# 
   355     0093                     	;# 
   356     0094                     	;# 
   357     0095                     	;# 
   358     0096                     	;# 
   359     0097                     	;# 
   360     0098                     	;# 
   361     0099                     	;# 
   362     009A                     	;# 
   363     009B                     	;# 
   364     009C                     	;# 
   365     009D                     	;# 
   366     009E                     	;# 
   367     009F                     	;# 
   368     0105                     	;# 
   369     0107                     	;# 
   370     0108                     	;# 
   371     0109                     	;# 
   372     010C                     	;# 
   373     010C                     	;# 
   374     010D                     	;# 
   375     010E                     	;# 
   376     010F                     	;# 
   377     0185                     	;# 
   378     0187                     	;# 
   379     0188                     	;# 
   380     0189                     	;# 
   381     018C                     	;# 
   382     018D                     	;# 
   383     0013                     _SSPBUF	set	19
   384     0014                     _SSPCON	set	20
   385     0008                     _PORTDbits	set	8
   386     0018                     _RCSTAbits	set	24
   387     0009                     _PORTE	set	9
   388     0008                     _PORTD	set	8
   389     0006                     _PORTB	set	6
   390     0005                     _PORTA	set	5
   391     0019                     _TXREG	set	25
   392     0006                     _PORTBbits	set	6
   393     0001                     _TMR0	set	1
   394     000B                     _INTCONbits	set	11
   395     000C                     _PIR1bits	set	12
   396     0063                     _SSPIF	set	99
   397     005E                     _PEIE	set	94
   398     005F                     _GIE	set	95
   399     0043                     _RD3	set	67
   400     0047                     _RD7	set	71
   401     0046                     _RD6	set	70
   402     0045                     _RD5	set	69
   403     0044                     _RD4	set	68
   404     0091                     _SSPCON2bits	set	145
   405     0094                     _SSPSTAT	set	148
   406     0093                     _SSPADD	set	147
   407     0091                     _SSPCON2	set	145
   408     0098                     _TXSTAbits	set	152
   409     0099                     _SPBRG	set	153
   410     008F                     _OSCCONbits	set	143
   411     008C                     _PIE1bits	set	140
   412     0087                     _TRISCbits	set	135
   413     0089                     _TRISE	set	137
   414     0088                     _TRISD	set	136
   415     0086                     _TRISB	set	134
   416     0085                     _TRISA	set	133
   417     0463                     _SSPIE	set	1123
   418     043C                     _TRISC4	set	1084
   419     043B                     _TRISC3	set	1083
   420     0189                     _ANSELH	set	393
   421     0188                     _ANSEL	set	392
   422                           
   423                           	psect	strings
   424     04CE                     __pstrings:
   425     04CE                     stringtab:
   426     04CE                     __stringtab:
   427     04CE                     stringcode:	
   428                           ;	String table - string pointers are 1 byte each
   429                           
   430     04CE                     stringdir:
   431     04CE  3004               	movlw	high stringdir
   432     04CF  008A               	movwf	10
   433     04D0  0804               	movf	4,w
   434     04D1  0A84               	incf	4,f
   435     04D2  0782               	addwf	2,f
   436     04D3                     __stringbase:
   437     04D3  3400               	retlw	0
   438     04D4                     __end_of__stringtab:
   439     04D4                     STR_1:
   440     04D4  3457               	retlw	87	;'W'
   441     04D5  3465               	retlw	101	;'e'
   442     04D6  346C               	retlw	108	;'l'
   443     04D7  3463               	retlw	99	;'c'
   444     04D8  346F               	retlw	111	;'o'
   445     04D9  346D               	retlw	109	;'m'
   446     04DA  3465               	retlw	101	;'e'
   447     04DB  3421               	retlw	33	;'!'
   448     04DC  3400               	retlw	0
   449     04DD                     STR_2:
   450     04DD  3454               	retlw	84	;'T'
   451     04DE  3465               	retlw	101	;'e'
   452     04DF  346D               	retlw	109	;'m'
   453     04E0  3470               	retlw	112	;'p'
   454     04E1  343A               	retlw	58	;':'
   455     04E2  3420               	retlw	32	;' '
   456     04E3  3400               	retlw	0
   457     04E4                     STR_3:
   458     04E4  3450               	retlw	80	;'P'
   459     04E5  342D               	retlw	45	;'-'
   460     04E6  343E               	retlw	62	;'>'
   461     04E7  3400               	retlw	0
   462     04E8                     STR_4:
   463     04E8  3443               	retlw	67	;'C'
   464     04E9  3400               	retlw	0
   465                           
   466                           	psect	cinit
   467     000F                     start_initialization:	
   468                           ; #config settings
   469                           
   470     000F                     __initialization:
   471                           
   472                           ; Clear objects allocated to COMMON
   473     000F  01FA               	clrf	__pbssCOMMON& (0+127)
   474     0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   475                           
   476                           ; Clear objects allocated to BANK0
   477     0011  1383               	bcf	3,7	;select IRP bank0
   478     0012  3020               	movlw	low __pbssBANK0
   479     0013  0084               	movwf	4
   480     0014  303C               	movlw	low (__pbssBANK0+28)
   481     0015  120A  118A  254A  120A  118A  	fcall	clear_ram0
   482     001A                     end_of_initialization:	
   483                           ;End of C runtime variable initialization code
   484                           
   485     001A                     __end_of__initialization:
   486     001A  0183               	clrf	3
   487     001B  120A  118A  281E   	ljmp	_main	;jump to C main() function
   488                           
   489                           	psect	bssCOMMON
   490     007A                     __pbssCOMMON:
   491     007A                     _cont:
   492     007A                     	ds	2
   493                           
   494                           	psect	bssBANK0
   495     0020                     __pbssBANK0:
   496     0020                     _TEMP1:
   497     0020                     	ds	4
   498     0024                     _voltaje1:
   499     0024                     	ds	4
   500     0028                     _VOLTAJE1:
   501     0028                     	ds	4
   502     002C                     _temporal:
   503     002C                     	ds	2
   504     002E                     _i:
   505     002E                     	ds	2
   506     0030                     _flag:
   507     0030                     	ds	2
   508     0032                     _temperatura:
   509     0032                     	ds	2
   510     0034                     _espacios_comp:
   511     0034                     	ds	2
   512     0036                     _espacios:
   513     0036                     	ds	2
   514     0038                     _proximidad:
   515     0038                     	ds	2
   516     003A                     _ones:
   517     003A                     	ds	1
   518     003B                     _tens:
   519     003B                     	ds	1
   520                           
   521                           	psect	clrtext
   522     054A                     clear_ram0:	
   523                           ;	Called with FSR containing the base address, and
   524                           ;	W with the last address+1
   525                           
   526     054A  0064               	clrwdt	;clear the watchdog before getting into this loop
   527     054B                     clrloop0:
   528     054B  0180               	clrf	0	;clear RAM location pointed to by FSR
   529     054C  0A84               	incf	4,f	;increment pointer
   530     054D  0604               	xorwf	4,w	;XOR with final address
   531     054E  1903               	btfsc	3,2	;have we reached the end yet?
   532     054F  3400               	retlw	0	;all done for this memory range, return
   533     0550  0604               	xorwf	4,w	;XOR again to restore value
   534     0551  2D4B               	goto	clrloop0	;do the next byte
   535                           
   536                           	psect	cstackCOMMON
   537     0070                     __pcstackCOMMON:
   538     0070                     ?_setup:
   539     0070                     ?_initUART:	
   540                           ; 1 bytes @ 0x0
   541                           
   542     0070                     ?_Lcd_Init:	
   543                           ; 1 bytes @ 0x0
   544                           
   545     0070                     ?_Lcd_Clear:	
   546                           ; 1 bytes @ 0x0
   547                           
   548     0070                     ?_I2C_Master_Start:	
   549                           ; 1 bytes @ 0x0
   550                           
   551     0070                     ?_I2C_Master_Stop:	
   552                           ; 1 bytes @ 0x0
   553                           
   554     0070                     ?_Lcd_Write_String:	
   555                           ; 1 bytes @ 0x0
   556                           
   557     0070                     ?_Lcd_Write_Char:	
   558                           ; 1 bytes @ 0x0
   559                           
   560     0070                     ?_isr:	
   561                           ; 1 bytes @ 0x0
   562                           
   563     0070                     ??_isr:	
   564                           ; 1 bytes @ 0x0
   565                           
   566     0070                     ?_main:	
   567                           ; 1 bytes @ 0x0
   568                           
   569     0070                     ?_Lcd_Port:	
   570                           ; 1 bytes @ 0x0
   571                           
   572     0070                     ?_Lcd_Cmd:	
   573                           ; 1 bytes @ 0x0
   574                           
   575     0070                     ?_I2C_Master_Wait:	
   576                           ; 1 bytes @ 0x0
   577                           
   578                           
   579                           ; 1 bytes @ 0x0
   580     0070                     	ds	2
   581     0072                     ??_initUART:
   582     0072                     ??_I2C_Master_Start:	
   583                           ; 1 bytes @ 0x2
   584                           
   585     0072                     ?_I2C_Master_Write:	
   586                           ; 1 bytes @ 0x2
   587                           
   588     0072                     ??_I2C_Master_Stop:	
   589                           ; 1 bytes @ 0x2
   590                           
   591     0072                     ??_Lcd_Port:	
   592                           ; 1 bytes @ 0x2
   593                           
   594     0072                     ??_I2C_Master_Wait:	
   595                           ; 1 bytes @ 0x2
   596                           
   597     0072                     ?_I2C_Master_Read:	
   598                           ; 1 bytes @ 0x2
   599                           
   600     0072                     ?___lwdiv:	
   601                           ; 2 bytes @ 0x2
   602                           
   603     0072                     ?___lldiv:	
   604                           ; 2 bytes @ 0x2
   605                           
   606     0072                     Lcd_Port@a:	
   607                           ; 4 bytes @ 0x2
   608                           
   609     0072                     I2C_Master_Write@d:	
   610                           ; 1 bytes @ 0x2
   611                           
   612     0072                     I2C_Master_Read@a:	
   613                           ; 2 bytes @ 0x2
   614                           
   615     0072                     ___lwdiv@divisor:	
   616                           ; 2 bytes @ 0x2
   617                           
   618     0072                     ___lldiv@divisor:	
   619                           ; 2 bytes @ 0x2
   620                           
   621                           
   622                           ; 4 bytes @ 0x2
   623     0072                     	ds	1
   624     0073                     ??_Lcd_Write_Char:
   625     0073                     ??_Lcd_Cmd:	
   626                           ; 1 bytes @ 0x3
   627                           
   628                           
   629                           ; 1 bytes @ 0x3
   630     0073                     	ds	1
   631     0074                     ??_I2C_Master_Write:
   632     0074                     ??_I2C_Master_Read:	
   633                           ; 1 bytes @ 0x4
   634                           
   635     0074                     Lcd_Write_Char@temp:	
   636                           ; 1 bytes @ 0x4
   637                           
   638     0074                     ___lwdiv@dividend:	
   639                           ; 1 bytes @ 0x4
   640                           
   641                           
   642                           ; 2 bytes @ 0x4
   643     0074                     	ds	1
   644     0075                     Lcd_Cmd@a:
   645     0075                     Lcd_Write_Char@y:	
   646                           ; 1 bytes @ 0x5
   647                           
   648                           
   649                           ; 1 bytes @ 0x5
   650     0075                     	ds	1
   651     0076                     ??_Lcd_Init:
   652     0076                     ??_Lcd_Clear:	
   653                           ; 1 bytes @ 0x6
   654                           
   655     0076                     ?_Lcd_Set_Cursor:	
   656                           ; 1 bytes @ 0x6
   657                           
   658     0076                     ??___lwdiv:	
   659                           ; 1 bytes @ 0x6
   660                           
   661     0076                     Lcd_Set_Cursor@b:	
   662                           ; 1 bytes @ 0x6
   663                           
   664     0076                     Lcd_Write_Char@a:	
   665                           ; 1 bytes @ 0x6
   666                           
   667     0076                     I2C_Master_Read@temp:	
   668                           ; 1 bytes @ 0x6
   669                           
   670     0076                     ___lldiv@dividend:	
   671                           ; 2 bytes @ 0x6
   672                           
   673                           
   674                           ; 4 bytes @ 0x6
   675     0076                     	ds	1
   676     0077                     ??_Lcd_Set_Cursor:
   677     0077                     ??_Lcd_Write_String:	
   678                           ; 1 bytes @ 0x7
   679                           
   680     0077                     Lcd_Write_String@i:	
   681                           ; 1 bytes @ 0x7
   682                           
   683     0077                     ___lwdiv@quotient:	
   684                           ; 2 bytes @ 0x7
   685                           
   686                           
   687                           ; 2 bytes @ 0x7
   688     0077                     	ds	2
   689     0079                     Lcd_Write_String@a:
   690     0079                     ___lwdiv@counter:	
   691                           ; 1 bytes @ 0x9
   692                           
   693                           
   694                           ; 1 bytes @ 0x9
   695     0079                     	ds	1
   696     007A                     ??_setup:
   697                           
   698                           	psect	cstackBANK0
   699     003C                     __pcstackBANK0:	
   700                           ; 1 bytes @ 0xA
   701                           
   702     003C                     ??___lldiv:
   703     003C                     ?___lwmod:	
   704                           ; 1 bytes @ 0x0
   705                           
   706     003C                     Lcd_Set_Cursor@a:	
   707                           ; 2 bytes @ 0x0
   708                           
   709     003C                     ___lwmod@divisor:	
   710                           ; 1 bytes @ 0x0
   711                           
   712                           
   713                           ; 2 bytes @ 0x0
   714     003C                     	ds	1
   715     003D                     Lcd_Set_Cursor@z:
   716     003D                     ___lldiv@quotient:	
   717                           ; 1 bytes @ 0x1
   718                           
   719                           
   720                           ; 4 bytes @ 0x1
   721     003D                     	ds	1
   722     003E                     Lcd_Set_Cursor@y:
   723     003E                     ___lwmod@dividend:	
   724                           ; 1 bytes @ 0x2
   725                           
   726                           
   727                           ; 2 bytes @ 0x2
   728     003E                     	ds	1
   729     003F                     Lcd_Set_Cursor@temp:
   730                           
   731                           ; 1 bytes @ 0x3
   732     003F                     	ds	1
   733     0040                     ??___lwmod:
   734                           
   735                           ; 1 bytes @ 0x4
   736     0040                     	ds	1
   737     0041                     ___lldiv@counter:
   738     0041                     ___lwmod@counter:	
   739                           ; 1 bytes @ 0x5
   740                           
   741                           
   742                           ; 1 bytes @ 0x5
   743     0041                     	ds	1
   744     0042                     ?_I2C_Master_Init:
   745     0042                     I2C_Master_Init@c:	
   746                           ; 1 bytes @ 0x6
   747                           
   748                           
   749                           ; 4 bytes @ 0x6
   750     0042                     	ds	4
   751     0046                     ??_I2C_Master_Init:
   752                           
   753                           ; 1 bytes @ 0xA
   754     0046                     	ds	4
   755     004A                     ??_main:
   756                           
   757                           ; 1 bytes @ 0xE
   758     004A                     	ds	3
   759                           
   760                           	psect	maintext
   761     001E                     __pmaintext:	
   762 ;;
   763 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   764 ;;
   765 ;; *************** function _main *****************
   766 ;; Defined at:
   767 ;;		line 118 in file "main.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;		None
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : B00/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   781 ;;      Params:         0       0       0       0       0
   782 ;;      Locals:         0       0       0       0       0
   783 ;;      Temps:          0       3       0       0       0
   784 ;;      Totals:         0       3       0       0       0
   785 ;;Total ram usage:        3 bytes
   786 ;; Hardware stack levels required when called: 4
   787 ;; This function calls:
   788 ;;		_I2C_Master_Read
   789 ;;		_I2C_Master_Start
   790 ;;		_I2C_Master_Stop
   791 ;;		_I2C_Master_Write
   792 ;;		_Lcd_Clear
   793 ;;		_Lcd_Init
   794 ;;		_Lcd_Set_Cursor
   795 ;;		_Lcd_Write_Char
   796 ;;		_Lcd_Write_String
   797 ;;		___lwdiv
   798 ;;		___lwmod
   799 ;;		_initUART
   800 ;;		_setup
   801 ;; This function is called by:
   802 ;;		Startup code after reset
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806     001E                     _main:	
   807                           ;psect for function _main
   808                           
   809     001E                     l1730:	
   810                           ;incstack = 0
   811                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   812                           
   813                           
   814                           ;main.c: 119:     _delay((unsigned long)((1500)*(8000000/4000.0)));
   815     001E  3010               	movlw	16
   816     001F  1283               	bcf	3,5	;RP0=0, select bank0
   817     0020  1303               	bcf	3,6	;RP1=0, select bank0
   818     0021  00CC               	movwf	??_main+2
   819     0022  3039               	movlw	57
   820     0023  00CB               	movwf	??_main+1
   821     0024  300D               	movlw	13
   822     0025  00CA               	movwf	??_main
   823     0026                     u1207:
   824     0026  0BCA               	decfsz	??_main,f
   825     0027  2826               	goto	u1207
   826     0028  0BCB               	decfsz	??_main+1,f
   827     0029  2826               	goto	u1207
   828     002A  0BCC               	decfsz	??_main+2,f
   829     002B  2826               	goto	u1207
   830     002C                     l1732:
   831                           
   832                           ;main.c: 121:     setup();
   833     002C  120A  118A  23FD  120A  118A  	fcall	_setup
   834     0031                     l1734:
   835                           
   836                           ;main.c: 122:     initUART();
   837     0031  120A  118A  2504  120A  118A  	fcall	_initUART
   838                           
   839                           ;main.c: 123:     i = 1;
   840     0036  3001               	movlw	1
   841     0037  1283               	bcf	3,5	;RP0=0, select bank0
   842     0038  1303               	bcf	3,6	;RP1=0, select bank0
   843     0039  00AE               	movwf	_i
   844     003A  3000               	movlw	0
   845     003B  00AF               	movwf	_i+1
   846     003C                     l1736:
   847                           
   848                           ;main.c: 124:     Lcd_Init();
   849     003C  120A  118A  2267  120A  118A  	fcall	_Lcd_Init
   850     0041                     l1738:
   851                           
   852                           ;main.c: 125:     Lcd_Clear();
   853     0041  120A  118A  2514  120A  118A  	fcall	_Lcd_Clear
   854     0046                     l1740:
   855                           
   856                           ;main.c: 128:         I2C_Master_Start();
   857     0046  120A  118A  2541  120A  118A  	fcall	_I2C_Master_Start
   858     004B                     l1742:
   859                           
   860                           ;main.c: 129:         I2C_Master_Write(0x51);
   861     004B  3051               	movlw	81
   862     004C  00F2               	movwf	I2C_Master_Write@d
   863     004D  3000               	movlw	0
   864     004E  00F3               	movwf	I2C_Master_Write@d+1
   865     004F  120A  118A  252E  120A  118A  	fcall	_I2C_Master_Write
   866     0054                     l1744:
   867                           
   868                           ;main.c: 130:         proximidad = I2C_Master_Read(0);
   869     0054  3000               	movlw	0
   870     0055  00F2               	movwf	I2C_Master_Read@a
   871     0056  00F3               	movwf	I2C_Master_Read@a+1
   872     0057  120A  118A  2430  120A  118A  	fcall	_I2C_Master_Read
   873     005C  0873               	movf	?_I2C_Master_Read+1,w
   874     005D  1283               	bcf	3,5	;RP0=0, select bank0
   875     005E  1303               	bcf	3,6	;RP1=0, select bank0
   876     005F  00B9               	movwf	_proximidad+1
   877     0060  0872               	movf	?_I2C_Master_Read,w
   878     0061  00B8               	movwf	_proximidad
   879     0062                     l1746:
   880                           
   881                           ;main.c: 131:         I2C_Master_Stop();
   882     0062  120A  118A  2538  120A  118A  	fcall	_I2C_Master_Stop
   883                           
   884                           ;main.c: 132:         _delay((unsigned long)((250)*(8000000/4000.0)));
   885     0067  3003               	movlw	3
   886     0068  1283               	bcf	3,5	;RP0=0, select bank0
   887     0069  1303               	bcf	3,6	;RP1=0, select bank0
   888     006A  00CC               	movwf	??_main+2
   889     006B  308A               	movlw	138
   890     006C  00CB               	movwf	??_main+1
   891     006D  3055               	movlw	85
   892     006E  00CA               	movwf	??_main
   893     006F                     u1217:
   894     006F  0BCA               	decfsz	??_main,f
   895     0070  286F               	goto	u1217
   896     0071  0BCB               	decfsz	??_main+1,f
   897     0072  286F               	goto	u1217
   898     0073  0BCC               	decfsz	??_main+2,f
   899     0074  286F               	goto	u1217
   900     0075                     l1748:
   901                           
   902                           ;main.c: 134:         I2C_Master_Start();
   903     0075  120A  118A  2541  120A  118A  	fcall	_I2C_Master_Start
   904     007A                     l1750:
   905                           
   906                           ;main.c: 135:         I2C_Master_Write(0x101);
   907     007A  3001               	movlw	1
   908     007B  00F2               	movwf	I2C_Master_Write@d
   909     007C  3001               	movlw	1
   910     007D  00F3               	movwf	I2C_Master_Write@d+1
   911     007E  120A  118A  252E  120A  118A  	fcall	_I2C_Master_Write
   912     0083                     l1752:
   913                           
   914                           ;main.c: 136:         espacios = I2C_Master_Read(0);
   915     0083  3000               	movlw	0
   916     0084  00F2               	movwf	I2C_Master_Read@a
   917     0085  00F3               	movwf	I2C_Master_Read@a+1
   918     0086  120A  118A  2430  120A  118A  	fcall	_I2C_Master_Read
   919     008B  0873               	movf	?_I2C_Master_Read+1,w
   920     008C  1283               	bcf	3,5	;RP0=0, select bank0
   921     008D  1303               	bcf	3,6	;RP1=0, select bank0
   922     008E  00B7               	movwf	_espacios+1
   923     008F  0872               	movf	?_I2C_Master_Read,w
   924     0090  00B6               	movwf	_espacios
   925     0091                     l1754:
   926                           
   927                           ;main.c: 137:         I2C_Master_Stop();
   928     0091  120A  118A  2538  120A  118A  	fcall	_I2C_Master_Stop
   929                           
   930                           ;main.c: 138:         _delay((unsigned long)((250)*(8000000/4000.0)));
   931     0096  3003               	movlw	3
   932     0097  1283               	bcf	3,5	;RP0=0, select bank0
   933     0098  1303               	bcf	3,6	;RP1=0, select bank0
   934     0099  00CC               	movwf	??_main+2
   935     009A  308A               	movlw	138
   936     009B  00CB               	movwf	??_main+1
   937     009C  3055               	movlw	85
   938     009D  00CA               	movwf	??_main
   939     009E                     u1227:
   940     009E  0BCA               	decfsz	??_main,f
   941     009F  289E               	goto	u1227
   942     00A0  0BCB               	decfsz	??_main+1,f
   943     00A1  289E               	goto	u1227
   944     00A2  0BCC               	decfsz	??_main+2,f
   945     00A3  289E               	goto	u1227
   946     00A4                     l1756:
   947                           
   948                           ;main.c: 141:         I2C_Master_Start();
   949     00A4  120A  118A  2541  120A  118A  	fcall	_I2C_Master_Start
   950     00A9                     l1758:
   951                           
   952                           ;main.c: 142:         I2C_Master_Write(0x111);
   953     00A9  3011               	movlw	17
   954     00AA  00F2               	movwf	I2C_Master_Write@d
   955     00AB  3001               	movlw	1
   956     00AC  00F3               	movwf	I2C_Master_Write@d+1
   957     00AD  120A  118A  252E  120A  118A  	fcall	_I2C_Master_Write
   958     00B2                     l1760:
   959                           
   960                           ;main.c: 143:         temperatura = I2C_Master_Read(0);
   961     00B2  3000               	movlw	0
   962     00B3  00F2               	movwf	I2C_Master_Read@a
   963     00B4  00F3               	movwf	I2C_Master_Read@a+1
   964     00B5  120A  118A  2430  120A  118A  	fcall	_I2C_Master_Read
   965     00BA  0873               	movf	?_I2C_Master_Read+1,w
   966     00BB  1283               	bcf	3,5	;RP0=0, select bank0
   967     00BC  1303               	bcf	3,6	;RP1=0, select bank0
   968     00BD  00B3               	movwf	_temperatura+1
   969     00BE  0872               	movf	?_I2C_Master_Read,w
   970     00BF  00B2               	movwf	_temperatura
   971     00C0                     l1762:
   972                           
   973                           ;main.c: 144:         I2C_Master_Stop();
   974     00C0  120A  118A  2538  120A  118A  	fcall	_I2C_Master_Stop
   975                           
   976                           ;main.c: 145:         _delay((unsigned long)((250)*(8000000/4000.0)));
   977     00C5  3003               	movlw	3
   978     00C6  1283               	bcf	3,5	;RP0=0, select bank0
   979     00C7  1303               	bcf	3,6	;RP1=0, select bank0
   980     00C8  00CC               	movwf	??_main+2
   981     00C9  308A               	movlw	138
   982     00CA  00CB               	movwf	??_main+1
   983     00CB  3055               	movlw	85
   984     00CC  00CA               	movwf	??_main
   985     00CD                     u1237:
   986     00CD  0BCA               	decfsz	??_main,f
   987     00CE  28CD               	goto	u1237
   988     00CF  0BCB               	decfsz	??_main+1,f
   989     00D0  28CD               	goto	u1237
   990     00D1  0BCC               	decfsz	??_main+2,f
   991     00D2  28CD               	goto	u1237
   992     00D3                     l1764:
   993                           
   994                           ;main.c: 148:         Lcd_Set_Cursor(1,1);
   995     00D3  01F6               	clrf	Lcd_Set_Cursor@b
   996     00D4  0AF6               	incf	Lcd_Set_Cursor@b,f
   997     00D5  3001               	movlw	1
   998     00D6  120A  118A  22C4  120A  118A  	fcall	_Lcd_Set_Cursor
   999     00DB                     l1766:
  1000                           
  1001                           ;main.c: 149:         Lcd_Write_String("Welcome!");
  1002     00DB  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1003     00DC  120A  118A  2487  120A  118A  	fcall	_Lcd_Write_String
  1004     00E1                     l1768:
  1005                           
  1006                           ;main.c: 150:         Lcd_Set_Cursor(2,1);
  1007     00E1  01F6               	clrf	Lcd_Set_Cursor@b
  1008     00E2  0AF6               	incf	Lcd_Set_Cursor@b,f
  1009     00E3  3002               	movlw	2
  1010     00E4  120A  118A  22C4  120A  118A  	fcall	_Lcd_Set_Cursor
  1011     00E9                     l1770:
  1012                           
  1013                           ;main.c: 151:         Lcd_Write_String("Temp: ");
  1014     00E9  300A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1015     00EA  120A  118A  2487  120A  118A  	fcall	_Lcd_Write_String
  1016     00EF                     l1772:
  1017                           
  1018                           ;main.c: 152:         Lcd_Set_Cursor(2,13);
  1019     00EF  300D               	movlw	13
  1020     00F0  00F6               	movwf	Lcd_Set_Cursor@b
  1021     00F1  3002               	movlw	2
  1022     00F2  120A  118A  22C4  120A  118A  	fcall	_Lcd_Set_Cursor
  1023     00F7                     l1774:
  1024                           
  1025                           ;main.c: 153:         Lcd_Write_String("P->");
  1026     00F7  3011               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1027     00F8  120A  118A  2487  120A  118A  	fcall	_Lcd_Write_String
  1028     00FD                     l1776:
  1029                           
  1030                           ;main.c: 156:         Lcd_Set_Cursor(1,15);
  1031     00FD  300F               	movlw	15
  1032     00FE  00F6               	movwf	Lcd_Set_Cursor@b
  1033     00FF  3001               	movlw	1
  1034     0100  120A  118A  22C4  120A  118A  	fcall	_Lcd_Set_Cursor
  1035     0105                     l1778:
  1036                           
  1037                           ;main.c: 157:         Lcd_Write_Char(proximidad+32);
  1038     0105  1283               	bcf	3,5	;RP0=0, select bank0
  1039     0106  1303               	bcf	3,6	;RP1=0, select bank0
  1040     0107  0838               	movf	_proximidad,w
  1041     0108  3E20               	addlw	32
  1042     0109  120A  118A  23C8  120A  118A  	fcall	_Lcd_Write_Char
  1043     010E                     l1780:
  1044                           
  1045                           ;main.c: 160:         Lcd_Set_Cursor(2,16);
  1046     010E  3010               	movlw	16
  1047     010F  00F6               	movwf	Lcd_Set_Cursor@b
  1048     0110  3002               	movlw	2
  1049     0111  120A  118A  22C4  120A  118A  	fcall	_Lcd_Set_Cursor
  1050     0116                     l1782:
  1051                           
  1052                           ;main.c: 161:         Lcd_Write_Char(espacios+48);
  1053     0116  1283               	bcf	3,5	;RP0=0, select bank0
  1054     0117  1303               	bcf	3,6	;RP1=0, select bank0
  1055     0118  0836               	movf	_espacios,w
  1056     0119  3E30               	addlw	48
  1057     011A  120A  118A  23C8  120A  118A  	fcall	_Lcd_Write_Char
  1058     011F                     l1784:
  1059                           
  1060                           ;main.c: 164:         tens = (temperatura/10)%10;
  1061     011F  300A               	movlw	10
  1062     0120  1283               	bcf	3,5	;RP0=0, select bank0
  1063     0121  1303               	bcf	3,6	;RP1=0, select bank0
  1064     0122  00BC               	movwf	___lwmod@divisor
  1065     0123  3000               	movlw	0
  1066     0124  00BD               	movwf	___lwmod@divisor+1
  1067     0125  300A               	movlw	10
  1068     0126  00F2               	movwf	___lwdiv@divisor
  1069     0127  3000               	movlw	0
  1070     0128  00F3               	movwf	___lwdiv@divisor+1
  1071     0129  0833               	movf	_temperatura+1,w
  1072     012A  00F5               	movwf	___lwdiv@dividend+1
  1073     012B  0832               	movf	_temperatura,w
  1074     012C  00F4               	movwf	___lwdiv@dividend
  1075     012D  120A  118A  2310  120A  118A  	fcall	___lwdiv
  1076     0132  0873               	movf	?___lwdiv+1,w
  1077     0133  1283               	bcf	3,5	;RP0=0, select bank0
  1078     0134  1303               	bcf	3,6	;RP1=0, select bank0
  1079     0135  00BF               	movwf	___lwmod@dividend+1
  1080     0136  0872               	movf	?___lwdiv,w
  1081     0137  00BE               	movwf	___lwmod@dividend
  1082     0138  120A  118A  2354  120A  118A  	fcall	___lwmod
  1083     013D  1283               	bcf	3,5	;RP0=0, select bank0
  1084     013E  1303               	bcf	3,6	;RP1=0, select bank0
  1085     013F  083C               	movf	?___lwmod,w
  1086     0140  00BB               	movwf	_tens
  1087     0141                     l1786:
  1088                           
  1089                           ;main.c: 165:         ones = temperatura%10;
  1090     0141  300A               	movlw	10
  1091     0142  00BC               	movwf	___lwmod@divisor
  1092     0143  3000               	movlw	0
  1093     0144  00BD               	movwf	___lwmod@divisor+1
  1094     0145  0833               	movf	_temperatura+1,w
  1095     0146  00BF               	movwf	___lwmod@dividend+1
  1096     0147  0832               	movf	_temperatura,w
  1097     0148  00BE               	movwf	___lwmod@dividend
  1098     0149  120A  118A  2354  120A  118A  	fcall	___lwmod
  1099     014E  1283               	bcf	3,5	;RP0=0, select bank0
  1100     014F  1303               	bcf	3,6	;RP1=0, select bank0
  1101     0150  083C               	movf	?___lwmod,w
  1102     0151  00BA               	movwf	_ones
  1103     0152                     l1788:
  1104                           
  1105                           ;main.c: 167:         Lcd_Set_Cursor(2,6);
  1106     0152  3006               	movlw	6
  1107     0153  00F6               	movwf	Lcd_Set_Cursor@b
  1108     0154  3002               	movlw	2
  1109     0155  120A  118A  22C4  120A  118A  	fcall	_Lcd_Set_Cursor
  1110     015A                     l1790:
  1111                           
  1112                           ;main.c: 168:         Lcd_Write_Char(tens+48);
  1113     015A  1283               	bcf	3,5	;RP0=0, select bank0
  1114     015B  1303               	bcf	3,6	;RP1=0, select bank0
  1115     015C  083B               	movf	_tens,w
  1116     015D  3E30               	addlw	48
  1117     015E  120A  118A  23C8  120A  118A  	fcall	_Lcd_Write_Char
  1118     0163                     l1792:
  1119                           
  1120                           ;main.c: 169:         Lcd_Write_Char(ones+48);
  1121     0163  1283               	bcf	3,5	;RP0=0, select bank0
  1122     0164  1303               	bcf	3,6	;RP1=0, select bank0
  1123     0165  083A               	movf	_ones,w
  1124     0166  3E30               	addlw	48
  1125     0167  120A  118A  23C8  120A  118A  	fcall	_Lcd_Write_Char
  1126     016C                     l1794:
  1127                           
  1128                           ;main.c: 170:         Lcd_Write_Char(0xDF);
  1129     016C  30DF               	movlw	223
  1130     016D  120A  118A  23C8  120A  118A  	fcall	_Lcd_Write_Char
  1131     0172                     l1796:
  1132                           
  1133                           ;main.c: 171:         Lcd_Write_String("C");
  1134     0172  3015               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1135     0173  120A  118A  2487  120A  118A  	fcall	_Lcd_Write_String
  1136     0178                     l1798:
  1137                           
  1138                           ;main.c: 174:         if (proximidad == 1 && (espacios>0) && (flag != 1) ){
  1139     0178  1283               	bcf	3,5	;RP0=0, select bank0
  1140     0179  1303               	bcf	3,6	;RP1=0, select bank0
  1141     017A  0338               	decf	_proximidad,w
  1142     017B  0439               	iorwf	_proximidad+1,w
  1143     017C  1D03               	btfss	3,2
  1144     017D  297F               	goto	u1131
  1145     017E  2980               	goto	u1130
  1146     017F                     u1131:
  1147     017F  29A9               	goto	l1812
  1148     0180                     u1130:
  1149     0180                     l1800:
  1150     0180  0836               	movf	_espacios,w
  1151     0181  0437               	iorwf	_espacios+1,w
  1152     0182  1903               	btfsc	3,2
  1153     0183  2985               	goto	u1141
  1154     0184  2986               	goto	u1140
  1155     0185                     u1141:
  1156     0185  29A9               	goto	l1812
  1157     0186                     u1140:
  1158     0186                     l1802:
  1159     0186  0330               	decf	_flag,w
  1160     0187  0431               	iorwf	_flag+1,w
  1161     0188  1903               	btfsc	3,2
  1162     0189  298B               	goto	u1151
  1163     018A  298C               	goto	u1150
  1164     018B                     u1151:
  1165     018B  29A9               	goto	l1812
  1166     018C                     u1150:
  1167     018C                     l1804:
  1168                           
  1169                           ;main.c: 175:             PORTBbits.RB7 = 1;
  1170     018C  1786               	bsf	6,7	;volatile
  1171                           
  1172                           ;main.c: 176:             PORTBbits.RB6 = 0;
  1173     018D  1306               	bcf	6,6	;volatile
  1174     018E                     l1806:
  1175                           
  1176                           ;main.c: 177:             _delay((unsigned long)((100)*(8000000/4000.0)));
  1177     018E  3002               	movlw	2
  1178     018F  1283               	bcf	3,5	;RP0=0, select bank0
  1179     0190  1303               	bcf	3,6	;RP1=0, select bank0
  1180     0191  00CC               	movwf	??_main+2
  1181     0192  3004               	movlw	4
  1182     0193  00CB               	movwf	??_main+1
  1183     0194  30B9               	movlw	185
  1184     0195  00CA               	movwf	??_main
  1185     0196                     u1247:
  1186     0196  0BCA               	decfsz	??_main,f
  1187     0197  2996               	goto	u1247
  1188     0198  0BCB               	decfsz	??_main+1,f
  1189     0199  2996               	goto	u1247
  1190     019A  0BCC               	decfsz	??_main+2,f
  1191     019B  2996               	goto	u1247
  1192     019C  299D               	nop2
  1193     019D                     l1808:
  1194                           
  1195                           ;main.c: 178:             PORTBbits.RB7 = 0;
  1196     019D  1283               	bcf	3,5	;RP0=0, select bank0
  1197     019E  1303               	bcf	3,6	;RP1=0, select bank0
  1198     019F  1386               	bcf	6,7	;volatile
  1199     01A0                     l1810:
  1200                           
  1201                           ;main.c: 179:             PORTBbits.RB6 = 0;
  1202     01A0  1306               	bcf	6,6	;volatile
  1203                           
  1204                           ;main.c: 180:             espacios_comp = espacios;
  1205     01A1  0837               	movf	_espacios+1,w
  1206     01A2  00B5               	movwf	_espacios_comp+1
  1207     01A3  0836               	movf	_espacios,w
  1208     01A4  00B4               	movwf	_espacios_comp
  1209                           
  1210                           ;main.c: 181:             flag = 1;
  1211     01A5  3001               	movlw	1
  1212     01A6  00B0               	movwf	_flag
  1213     01A7  3000               	movlw	0
  1214     01A8  00B1               	movwf	_flag+1
  1215     01A9                     l1812:
  1216                           
  1217                           ;main.c: 184:         if (proximidad == 0 && (espacios != espacios_comp)){
  1218     01A9  0838               	movf	_proximidad,w
  1219     01AA  0439               	iorwf	_proximidad+1,w
  1220     01AB  1D03               	btfss	3,2
  1221     01AC  29AE               	goto	u1161
  1222     01AD  29AF               	goto	u1160
  1223     01AE                     u1161:
  1224     01AE  29D0               	goto	l1826
  1225     01AF                     u1160:
  1226     01AF                     l1814:
  1227     01AF  0835               	movf	_espacios_comp+1,w
  1228     01B0  0637               	xorwf	_espacios+1,w
  1229     01B1  1D03               	skipz
  1230     01B2  29B5               	goto	u1175
  1231     01B3  0834               	movf	_espacios_comp,w
  1232     01B4  0636               	xorwf	_espacios,w
  1233     01B5                     u1175:
  1234     01B5  1903               	skipnz
  1235     01B6  29B8               	goto	u1171
  1236     01B7  29B9               	goto	u1170
  1237     01B8                     u1171:
  1238     01B8  29D0               	goto	l1826
  1239     01B9                     u1170:
  1240     01B9                     l1816:
  1241                           
  1242                           ;main.c: 185:             PORTBbits.RB7 = 0;
  1243     01B9  1386               	bcf	6,7	;volatile
  1244                           
  1245                           ;main.c: 186:             PORTBbits.RB6 = 1;
  1246     01BA  1706               	bsf	6,6	;volatile
  1247     01BB                     l1818:
  1248                           
  1249                           ;main.c: 187:             _delay((unsigned long)((100)*(8000000/4000.0)));
  1250     01BB  3002               	movlw	2
  1251     01BC  1283               	bcf	3,5	;RP0=0, select bank0
  1252     01BD  1303               	bcf	3,6	;RP1=0, select bank0
  1253     01BE  00CC               	movwf	??_main+2
  1254     01BF  3004               	movlw	4
  1255     01C0  00CB               	movwf	??_main+1
  1256     01C1  30B9               	movlw	185
  1257     01C2  00CA               	movwf	??_main
  1258     01C3                     u1257:
  1259     01C3  0BCA               	decfsz	??_main,f
  1260     01C4  29C3               	goto	u1257
  1261     01C5  0BCB               	decfsz	??_main+1,f
  1262     01C6  29C3               	goto	u1257
  1263     01C7  0BCC               	decfsz	??_main+2,f
  1264     01C8  29C3               	goto	u1257
  1265     01C9  29CA               	nop2
  1266     01CA                     l1820:
  1267                           
  1268                           ;main.c: 188:             PORTBbits.RB7 = 0;
  1269     01CA  1283               	bcf	3,5	;RP0=0, select bank0
  1270     01CB  1303               	bcf	3,6	;RP1=0, select bank0
  1271     01CC  1386               	bcf	6,7	;volatile
  1272     01CD                     l1822:
  1273                           
  1274                           ;main.c: 189:             PORTBbits.RB6 = 0;
  1275     01CD  1306               	bcf	6,6	;volatile
  1276     01CE                     l1824:
  1277                           
  1278                           ;main.c: 190:             flag = 0;
  1279     01CE  01B0               	clrf	_flag
  1280     01CF  01B1               	clrf	_flag+1
  1281     01D0                     l1826:
  1282                           
  1283                           ;main.c: 195:         if (i == 1){
  1284     01D0  032E               	decf	_i,w
  1285     01D1  042F               	iorwf	_i+1,w
  1286     01D2  1D03               	btfss	3,2
  1287     01D3  29D5               	goto	u1181
  1288     01D4  29D6               	goto	u1180
  1289     01D5                     u1181:
  1290     01D5  29DE               	goto	l1832
  1291     01D6                     u1180:
  1292     01D6                     l1828:
  1293                           
  1294                           ;main.c: 196:             TXREG = espacios;
  1295     01D6  0836               	movf	_espacios,w
  1296     01D7  0099               	movwf	25	;volatile
  1297     01D8                     l1830:
  1298                           
  1299                           ;main.c: 197:             PIR1bits.TXIF = 0;
  1300     01D8  120C               	bcf	12,4	;volatile
  1301                           
  1302                           ;main.c: 198:             i = 2;
  1303     01D9  3002               	movlw	2
  1304     01DA  00AE               	movwf	_i
  1305     01DB  3000               	movlw	0
  1306     01DC  00AF               	movwf	_i+1
  1307                           
  1308                           ;main.c: 199:         }
  1309     01DD  29EC               	goto	l116
  1310     01DE                     l1832:
  1311     01DE  3002               	movlw	2
  1312     01DF  062E               	xorwf	_i,w
  1313     01E0  042F               	iorwf	_i+1,w
  1314     01E1  1D03               	btfss	3,2
  1315     01E2  29E4               	goto	u1191
  1316     01E3  29E5               	goto	u1190
  1317     01E4                     u1191:
  1318     01E4  29EC               	goto	l116
  1319     01E5                     u1190:
  1320     01E5                     l1834:
  1321                           
  1322                           ;main.c: 202:             TXREG = temperatura;
  1323     01E5  0832               	movf	_temperatura,w
  1324     01E6  0099               	movwf	25	;volatile
  1325     01E7                     l1836:
  1326                           
  1327                           ;main.c: 203:             PIR1bits.TXIF = 0;
  1328     01E7  120C               	bcf	12,4	;volatile
  1329                           
  1330                           ;main.c: 204:             i = 1;
  1331     01E8  3001               	movlw	1
  1332     01E9  00AE               	movwf	_i
  1333     01EA  3000               	movlw	0
  1334     01EB  00AF               	movwf	_i+1
  1335     01EC                     l116:
  1336                           
  1337                           ;main.c: 216:         _delay((unsigned long)((5250)*(8000000/4000.0)));
  1338     01EC  3036               	movlw	54
  1339     01ED  1283               	bcf	3,5	;RP0=0, select bank0
  1340     01EE  1303               	bcf	3,6	;RP1=0, select bank0
  1341     01EF  00CC               	movwf	??_main+2
  1342     01F0  3045               	movlw	69
  1343     01F1  00CB               	movwf	??_main+1
  1344     01F2  3036               	movlw	54
  1345     01F3  00CA               	movwf	??_main
  1346     01F4                     u1267:
  1347     01F4  0BCA               	decfsz	??_main,f
  1348     01F5  29F4               	goto	u1267
  1349     01F6  0BCB               	decfsz	??_main+1,f
  1350     01F7  29F4               	goto	u1267
  1351     01F8  0BCC               	decfsz	??_main+2,f
  1352     01F9  29F4               	goto	u1267
  1353     01FA  0000               	nop
  1354     01FB  2846               	goto	l1740
  1355     01FC  120A  118A  280C   	ljmp	start
  1356     01FF                     __end_of_main:
  1357                           
  1358                           	psect	text1
  1359     03FD                     __ptext1:	
  1360 ;; *************** function _setup *****************
  1361 ;; Defined at:
  1362 ;;		line 226 in file "main.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;		None
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;		None
  1367 ;; Return value:  Size  Location     Type
  1368 ;;                  1    wreg      void 
  1369 ;; Registers used:
  1370 ;;		wreg, status,2, status,0, pclath, cstack
  1371 ;; Tracked objects:
  1372 ;;		On entry : 0/0
  1373 ;;		On exit  : 0/0
  1374 ;;		Unchanged: 0/0
  1375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1376 ;;      Params:         0       0       0       0       0
  1377 ;;      Locals:         0       0       0       0       0
  1378 ;;      Temps:          0       0       0       0       0
  1379 ;;      Totals:         0       0       0       0       0
  1380 ;;Total ram usage:        0 bytes
  1381 ;; Hardware stack levels used: 1
  1382 ;; Hardware stack levels required when called: 3
  1383 ;; This function calls:
  1384 ;;		_I2C_Master_Init
  1385 ;; This function is called by:
  1386 ;;		_main
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390     03FD                     _setup:	
  1391                           ;psect for function _setup
  1392                           
  1393     03FD                     l1640:	
  1394                           ;incstack = 0
  1395                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1396                           
  1397                           
  1398                           ;main.c: 229:     ANSEL = 0b00000000;
  1399     03FD  1683               	bsf	3,5	;RP0=1, select bank3
  1400     03FE  1703               	bsf	3,6	;RP1=1, select bank3
  1401     03FF  0188               	clrf	8	;volatile
  1402                           
  1403                           ;main.c: 230:     ANSELH = 0;
  1404     0400  0189               	clrf	9	;volatile
  1405                           
  1406                           ;main.c: 233:     TRISA = 0b00000000;
  1407     0401  1683               	bsf	3,5	;RP0=1, select bank1
  1408     0402  1303               	bcf	3,6	;RP1=0, select bank1
  1409     0403  0185               	clrf	5	;volatile
  1410                           
  1411                           ;main.c: 234:     TRISB = 0b00000000;
  1412     0404  0186               	clrf	6	;volatile
  1413                           
  1414                           ;main.c: 236:     TRISD = 0b00000000;
  1415     0405  0188               	clrf	8	;volatile
  1416                           
  1417                           ;main.c: 237:     TRISE = 0b00000000;
  1418     0406  0189               	clrf	9	;volatile
  1419                           
  1420                           ;main.c: 239:     PORTA = 0b00000000;
  1421     0407  1283               	bcf	3,5	;RP0=0, select bank0
  1422     0408  1303               	bcf	3,6	;RP1=0, select bank0
  1423     0409  0185               	clrf	5	;volatile
  1424                           
  1425                           ;main.c: 240:     PORTB = 0b00000000;
  1426     040A  0186               	clrf	6	;volatile
  1427                           
  1428                           ;main.c: 242:     PORTD = 0b00000000;
  1429     040B  0188               	clrf	8	;volatile
  1430                           
  1431                           ;main.c: 243:     PORTE = 0b00000000;
  1432     040C  0189               	clrf	9	;volatile
  1433     040D                     l1642:
  1434                           
  1435                           ;main.c: 245:     TRISCbits.TRISC6 = 0;
  1436     040D  1683               	bsf	3,5	;RP0=1, select bank1
  1437     040E  1303               	bcf	3,6	;RP1=0, select bank1
  1438     040F  1307               	bcf	7,6	;volatile
  1439     0410                     l1644:
  1440                           
  1441                           ;main.c: 256:     INTCONbits.GIE = 1;
  1442     0410  178B               	bsf	11,7	;volatile
  1443     0411                     l1646:
  1444                           
  1445                           ;main.c: 257:     INTCONbits.PEIE = 1;
  1446     0411  170B               	bsf	11,6	;volatile
  1447     0412                     l1648:
  1448                           
  1449                           ;main.c: 258:     PIE1bits.SSPIE = 0;
  1450     0412  118C               	bcf	12,3	;volatile
  1451     0413                     l1650:
  1452                           
  1453                           ;main.c: 259:     PIE1bits.ADIE = 0;
  1454     0413  130C               	bcf	12,6	;volatile
  1455     0414                     l1652:
  1456                           
  1457                           ;main.c: 260:     INTCONbits.TMR0IE = 0;
  1458     0414  128B               	bcf	11,5	;volatile
  1459     0415                     l1654:
  1460                           
  1461                           ;main.c: 262:     PIR1bits.SSPIF = 0;
  1462     0415  1283               	bcf	3,5	;RP0=0, select bank0
  1463     0416  1303               	bcf	3,6	;RP1=0, select bank0
  1464     0417  118C               	bcf	12,3	;volatile
  1465     0418                     l1656:
  1466                           
  1467                           ;main.c: 263:     PIR1bits.ADIF = 0;
  1468     0418  130C               	bcf	12,6	;volatile
  1469     0419                     l1658:
  1470                           
  1471                           ;main.c: 264:     INTCONbits.RBIF = 0;
  1472     0419  100B               	bcf	11,0	;volatile
  1473     041A                     l1660:
  1474                           
  1475                           ;main.c: 265:     INTCONbits.T0IF = 0;
  1476     041A  110B               	bcf	11,2	;volatile
  1477     041B                     l1662:
  1478                           
  1479                           ;main.c: 268:     OSCCONbits.IRCF = 0b111;
  1480     041B  3070               	movlw	112
  1481     041C  1683               	bsf	3,5	;RP0=1, select bank1
  1482     041D  1303               	bcf	3,6	;RP1=0, select bank1
  1483     041E  048F               	iorwf	15,f	;volatile
  1484     041F                     l1664:
  1485                           
  1486                           ;main.c: 270:     OSCCONbits.SCS = 1;
  1487     041F  140F               	bsf	15,0	;volatile
  1488     0420                     l1666:
  1489                           
  1490                           ;main.c: 274:     I2C_Master_Init(100000);
  1491     0420  3000               	movlw	0
  1492     0421  1283               	bcf	3,5	;RP0=0, select bank0
  1493     0422  1303               	bcf	3,6	;RP1=0, select bank0
  1494     0423  00C5               	movwf	I2C_Master_Init@c+3
  1495     0424  3001               	movlw	1
  1496     0425  00C4               	movwf	I2C_Master_Init@c+2
  1497     0426  3086               	movlw	134
  1498     0427  00C3               	movwf	I2C_Master_Init@c+1
  1499     0428  30A0               	movlw	160
  1500     0429  00C2               	movwf	I2C_Master_Init@c
  1501     042A  120A  118A  2390  120A  118A  	fcall	_I2C_Master_Init
  1502     042F                     l123:
  1503     042F  0008               	return
  1504     0430                     __end_of_setup:
  1505                           
  1506                           	psect	text2
  1507     0390                     __ptext2:	
  1508 ;; *************** function _I2C_Master_Init *****************
  1509 ;; Defined at:
  1510 ;;		line 13 in file "IIC.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;  c               4    6[BANK0 ] const unsigned long 
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;		None
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      void 
  1517 ;; Registers used:
  1518 ;;		wreg, status,2, status,0, pclath, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1524 ;;      Params:         0       4       0       0       0
  1525 ;;      Locals:         0       0       0       0       0
  1526 ;;      Temps:          0       4       0       0       0
  1527 ;;      Totals:         0       8       0       0       0
  1528 ;;Total ram usage:        8 bytes
  1529 ;; Hardware stack levels used: 1
  1530 ;; Hardware stack levels required when called: 2
  1531 ;; This function calls:
  1532 ;;		___lldiv
  1533 ;; This function is called by:
  1534 ;;		_setup
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538     0390                     _I2C_Master_Init:	
  1539                           ;psect for function _I2C_Master_Init
  1540                           
  1541     0390                     l1618:	
  1542                           ;incstack = 0
  1543                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1544                           
  1545                           
  1546                           ;IIC.c: 13: void I2C_Master_Init(const unsigned long c);IIC.c: 14: {;IIC.c: 15:     SSPC
      +                          ON = 0b00101000;
  1547     0390  3028               	movlw	40
  1548     0391  1283               	bcf	3,5	;RP0=0, select bank0
  1549     0392  1303               	bcf	3,6	;RP1=0, select bank0
  1550     0393  0094               	movwf	20	;volatile
  1551     0394                     l1620:
  1552                           
  1553                           ;IIC.c: 16:     SSPCON2 = 0;
  1554     0394  1683               	bsf	3,5	;RP0=1, select bank1
  1555     0395  1303               	bcf	3,6	;RP1=0, select bank1
  1556     0396  0191               	clrf	17	;volatile
  1557     0397                     l1622:
  1558                           
  1559                           ;IIC.c: 17:     SSPADD = (8000000/(4*c))-1;
  1560     0397  1283               	bcf	3,5	;RP0=0, select bank0
  1561     0398  1303               	bcf	3,6	;RP1=0, select bank0
  1562     0399  0842               	movf	I2C_Master_Init@c,w
  1563     039A  00C6               	movwf	??_I2C_Master_Init
  1564     039B  0843               	movf	I2C_Master_Init@c+1,w
  1565     039C  00C7               	movwf	??_I2C_Master_Init+1
  1566     039D  0844               	movf	I2C_Master_Init@c+2,w
  1567     039E  00C8               	movwf	??_I2C_Master_Init+2
  1568     039F  0845               	movf	I2C_Master_Init@c+3,w
  1569     03A0  00C9               	movwf	??_I2C_Master_Init+3
  1570     03A1  3002               	movlw	2
  1571     03A2                     u1015:
  1572     03A2  1003               	clrc
  1573     03A3  0DC6               	rlf	??_I2C_Master_Init,f
  1574     03A4  0DC7               	rlf	??_I2C_Master_Init+1,f
  1575     03A5  0DC8               	rlf	??_I2C_Master_Init+2,f
  1576     03A6  0DC9               	rlf	??_I2C_Master_Init+3,f
  1577     03A7                     u1010:
  1578     03A7  3EFF               	addlw	-1
  1579     03A8  1D03               	skipz
  1580     03A9  2BA2               	goto	u1015
  1581     03AA  0849               	movf	??_I2C_Master_Init+3,w
  1582     03AB  00F5               	movwf	___lldiv@divisor+3
  1583     03AC  0848               	movf	??_I2C_Master_Init+2,w
  1584     03AD  00F4               	movwf	___lldiv@divisor+2
  1585     03AE  0847               	movf	??_I2C_Master_Init+1,w
  1586     03AF  00F3               	movwf	___lldiv@divisor+1
  1587     03B0  0846               	movf	??_I2C_Master_Init,w
  1588     03B1  00F2               	movwf	___lldiv@divisor
  1589     03B2  3000               	movlw	0
  1590     03B3  00F9               	movwf	___lldiv@dividend+3
  1591     03B4  307A               	movlw	122
  1592     03B5  00F8               	movwf	___lldiv@dividend+2
  1593     03B6  3012               	movlw	18
  1594     03B7  00F7               	movwf	___lldiv@dividend+1
  1595     03B8  3000               	movlw	0
  1596     03B9  00F6               	movwf	___lldiv@dividend
  1597     03BA  120A  118A  21FF  120A  118A  	fcall	___lldiv
  1598     03BF  0872               	movf	?___lldiv,w
  1599     03C0  3EFF               	addlw	255
  1600     03C1  1683               	bsf	3,5	;RP0=1, select bank1
  1601     03C2  1303               	bcf	3,6	;RP1=0, select bank1
  1602     03C3  0093               	movwf	19	;volatile
  1603     03C4                     l1624:
  1604                           
  1605                           ;IIC.c: 18:     SSPSTAT = 0;
  1606     03C4  0194               	clrf	20	;volatile
  1607     03C5                     l1626:
  1608                           
  1609                           ;IIC.c: 19:     TRISCbits.TRISC3 = 1;
  1610     03C5  1587               	bsf	7,3	;volatile
  1611     03C6                     l1628:
  1612                           
  1613                           ;IIC.c: 20:     TRISCbits.TRISC4 = 1;
  1614     03C6  1607               	bsf	7,4	;volatile
  1615     03C7                     l210:
  1616     03C7  0008               	return
  1617     03C8                     __end_of_I2C_Master_Init:
  1618                           
  1619                           	psect	text3
  1620     01FF                     __ptext3:	
  1621 ;; *************** function ___lldiv *****************
  1622 ;; Defined at:
  1623 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;  divisor         4    2[COMMON] unsigned long 
  1626 ;;  dividend        4    6[COMMON] unsigned long 
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;  quotient        4    1[BANK0 ] unsigned long 
  1629 ;;  counter         1    5[BANK0 ] unsigned char 
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  4    2[COMMON] unsigned long 
  1632 ;; Registers used:
  1633 ;;		wreg, status,2, status,0
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1639 ;;      Params:         8       0       0       0       0
  1640 ;;      Locals:         0       5       0       0       0
  1641 ;;      Temps:          0       1       0       0       0
  1642 ;;      Totals:         8       6       0       0       0
  1643 ;;Total ram usage:       14 bytes
  1644 ;; Hardware stack levels used: 1
  1645 ;; Hardware stack levels required when called: 1
  1646 ;; This function calls:
  1647 ;;		Nothing
  1648 ;; This function is called by:
  1649 ;;		_I2C_Master_Init
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653     01FF                     ___lldiv:	
  1654                           ;psect for function ___lldiv
  1655                           
  1656     01FF                     l1574:	
  1657                           ;incstack = 0
  1658                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1659                           
  1660     01FF  3000               	movlw	0
  1661     0200  1283               	bcf	3,5	;RP0=0, select bank0
  1662     0201  1303               	bcf	3,6	;RP1=0, select bank0
  1663     0202  00C0               	movwf	___lldiv@quotient+3
  1664     0203  3000               	movlw	0
  1665     0204  00BF               	movwf	___lldiv@quotient+2
  1666     0205  3000               	movlw	0
  1667     0206  00BE               	movwf	___lldiv@quotient+1
  1668     0207  3000               	movlw	0
  1669     0208  00BD               	movwf	___lldiv@quotient
  1670     0209  0875               	movf	___lldiv@divisor+3,w
  1671     020A  0474               	iorwf	___lldiv@divisor+2,w
  1672     020B  0473               	iorwf	___lldiv@divisor+1,w
  1673     020C  0472               	iorwf	___lldiv@divisor,w
  1674     020D  1903               	skipnz
  1675     020E  2A10               	goto	u931
  1676     020F  2A11               	goto	u930
  1677     0210                     u931:
  1678     0210  2A5E               	goto	l1594
  1679     0211                     u930:
  1680     0211                     l1576:
  1681     0211  01C1               	clrf	___lldiv@counter
  1682     0212  0AC1               	incf	___lldiv@counter,f
  1683     0213  2A21               	goto	l1580
  1684     0214                     l1578:
  1685     0214  3001               	movlw	1
  1686     0215  00BC               	movwf	??___lldiv
  1687     0216                     u945:
  1688     0216  1003               	clrc
  1689     0217  0DF2               	rlf	___lldiv@divisor,f
  1690     0218  0DF3               	rlf	___lldiv@divisor+1,f
  1691     0219  0DF4               	rlf	___lldiv@divisor+2,f
  1692     021A  0DF5               	rlf	___lldiv@divisor+3,f
  1693     021B  0BBC               	decfsz	??___lldiv,f
  1694     021C  2A16               	goto	u945
  1695     021D  3001               	movlw	1
  1696     021E  00BC               	movwf	??___lldiv
  1697     021F  083C               	movf	??___lldiv,w
  1698     0220  07C1               	addwf	___lldiv@counter,f
  1699     0221                     l1580:
  1700     0221  1FF5               	btfss	___lldiv@divisor+3,7
  1701     0222  2A24               	goto	u951
  1702     0223  2A25               	goto	u950
  1703     0224                     u951:
  1704     0224  2A14               	goto	l1578
  1705     0225                     u950:
  1706     0225                     l1582:
  1707     0225  3001               	movlw	1
  1708     0226  00BC               	movwf	??___lldiv
  1709     0227                     u965:
  1710     0227  1003               	clrc
  1711     0228  0DBD               	rlf	___lldiv@quotient,f
  1712     0229  0DBE               	rlf	___lldiv@quotient+1,f
  1713     022A  0DBF               	rlf	___lldiv@quotient+2,f
  1714     022B  0DC0               	rlf	___lldiv@quotient+3,f
  1715     022C  0BBC               	decfsz	??___lldiv,f
  1716     022D  2A27               	goto	u965
  1717     022E                     l1584:
  1718     022E  0875               	movf	___lldiv@divisor+3,w
  1719     022F  0279               	subwf	___lldiv@dividend+3,w
  1720     0230  1D03               	skipz
  1721     0231  2A3C               	goto	u975
  1722     0232  0874               	movf	___lldiv@divisor+2,w
  1723     0233  0278               	subwf	___lldiv@dividend+2,w
  1724     0234  1D03               	skipz
  1725     0235  2A3C               	goto	u975
  1726     0236  0873               	movf	___lldiv@divisor+1,w
  1727     0237  0277               	subwf	___lldiv@dividend+1,w
  1728     0238  1D03               	skipz
  1729     0239  2A3C               	goto	u975
  1730     023A  0872               	movf	___lldiv@divisor,w
  1731     023B  0276               	subwf	___lldiv@dividend,w
  1732     023C                     u975:
  1733     023C  1C03               	skipc
  1734     023D  2A3F               	goto	u971
  1735     023E  2A40               	goto	u970
  1736     023F                     u971:
  1737     023F  2A4F               	goto	l1590
  1738     0240                     u970:
  1739     0240                     l1586:
  1740     0240  0872               	movf	___lldiv@divisor,w
  1741     0241  02F6               	subwf	___lldiv@dividend,f
  1742     0242  0873               	movf	___lldiv@divisor+1,w
  1743     0243  1C03               	skipc
  1744     0244  0F73               	incfsz	___lldiv@divisor+1,w
  1745     0245  02F7               	subwf	___lldiv@dividend+1,f
  1746     0246  0874               	movf	___lldiv@divisor+2,w
  1747     0247  1C03               	skipc
  1748     0248  0F74               	incfsz	___lldiv@divisor+2,w
  1749     0249  02F8               	subwf	___lldiv@dividend+2,f
  1750     024A  0875               	movf	___lldiv@divisor+3,w
  1751     024B  1C03               	skipc
  1752     024C  0F75               	incfsz	___lldiv@divisor+3,w
  1753     024D  02F9               	subwf	___lldiv@dividend+3,f
  1754     024E                     l1588:
  1755     024E  143D               	bsf	___lldiv@quotient,0
  1756     024F                     l1590:
  1757     024F  3001               	movlw	1
  1758     0250                     u985:
  1759     0250  1003               	clrc
  1760     0251  0CF5               	rrf	___lldiv@divisor+3,f
  1761     0252  0CF4               	rrf	___lldiv@divisor+2,f
  1762     0253  0CF3               	rrf	___lldiv@divisor+1,f
  1763     0254  0CF2               	rrf	___lldiv@divisor,f
  1764     0255  3EFF               	addlw	-1
  1765     0256  1D03               	skipz
  1766     0257  2A50               	goto	u985
  1767     0258                     l1592:
  1768     0258  3001               	movlw	1
  1769     0259  02C1               	subwf	___lldiv@counter,f
  1770     025A  1D03               	btfss	3,2
  1771     025B  2A5D               	goto	u991
  1772     025C  2A5E               	goto	u990
  1773     025D                     u991:
  1774     025D  2A25               	goto	l1582
  1775     025E                     u990:
  1776     025E                     l1594:
  1777     025E  0840               	movf	___lldiv@quotient+3,w
  1778     025F  00F5               	movwf	?___lldiv+3
  1779     0260  083F               	movf	___lldiv@quotient+2,w
  1780     0261  00F4               	movwf	?___lldiv+2
  1781     0262  083E               	movf	___lldiv@quotient+1,w
  1782     0263  00F3               	movwf	?___lldiv+1
  1783     0264  083D               	movf	___lldiv@quotient,w
  1784     0265  00F2               	movwf	?___lldiv
  1785     0266                     l358:
  1786     0266  0008               	return
  1787     0267                     __end_of___lldiv:
  1788                           
  1789                           	psect	text4
  1790     0504                     __ptext4:	
  1791 ;; *************** function _initUART *****************
  1792 ;; Defined at:
  1793 ;;		line 277 in file "main.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;		None
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;		None
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  1    wreg      void 
  1800 ;; Registers used:
  1801 ;;		wreg
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1807 ;;      Params:         0       0       0       0       0
  1808 ;;      Locals:         0       0       0       0       0
  1809 ;;      Temps:          0       0       0       0       0
  1810 ;;      Totals:         0       0       0       0       0
  1811 ;;Total ram usage:        0 bytes
  1812 ;; Hardware stack levels used: 1
  1813 ;; Hardware stack levels required when called: 1
  1814 ;; This function calls:
  1815 ;;		Nothing
  1816 ;; This function is called by:
  1817 ;;		_main
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821     0504                     _initUART:	
  1822                           ;psect for function _initUART
  1823                           
  1824     0504                     l1320:	
  1825                           ;incstack = 0
  1826                           ; Regs used in _initUART: [wreg]
  1827                           
  1828                           
  1829                           ;main.c: 279:     SPBRG = 12;
  1830     0504  300C               	movlw	12
  1831     0505  1683               	bsf	3,5	;RP0=1, select bank1
  1832     0506  1303               	bcf	3,6	;RP1=0, select bank1
  1833     0507  0099               	movwf	25	;volatile
  1834     0508                     l1322:
  1835                           
  1836                           ;main.c: 281:     TXSTAbits.SYNC = 0;
  1837     0508  1218               	bcf	24,4	;volatile
  1838     0509                     l1324:
  1839                           
  1840                           ;main.c: 282:     RCSTAbits.SPEN = 1;
  1841     0509  1283               	bcf	3,5	;RP0=0, select bank0
  1842     050A  1303               	bcf	3,6	;RP1=0, select bank0
  1843     050B  1798               	bsf	24,7	;volatile
  1844     050C                     l1326:
  1845                           
  1846                           ;main.c: 283:     TXSTAbits.TXEN = 1;
  1847     050C  1683               	bsf	3,5	;RP0=1, select bank1
  1848     050D  1303               	bcf	3,6	;RP1=0, select bank1
  1849     050E  1698               	bsf	24,5	;volatile
  1850     050F                     l1328:
  1851                           
  1852                           ;main.c: 286:     PIR1bits.TXIF = 0;
  1853     050F  1283               	bcf	3,5	;RP0=0, select bank0
  1854     0510  1303               	bcf	3,6	;RP1=0, select bank0
  1855     0511  120C               	bcf	12,4	;volatile
  1856     0512                     l1330:
  1857                           
  1858                           ;main.c: 288:     RCSTAbits.CREN = 1;
  1859     0512  1618               	bsf	24,4	;volatile
  1860     0513                     l126:
  1861     0513  0008               	return
  1862     0514                     __end_of_initUART:
  1863                           
  1864                           	psect	text5
  1865     0354                     __ptext5:	
  1866 ;; *************** function ___lwmod *****************
  1867 ;; Defined at:
  1868 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;  divisor         2    0[BANK0 ] unsigned int 
  1871 ;;  dividend        2    2[BANK0 ] unsigned int 
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;  counter         1    5[BANK0 ] unsigned char 
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  2    0[BANK0 ] unsigned int 
  1876 ;; Registers used:
  1877 ;;		wreg, status,2, status,0
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1883 ;;      Params:         0       4       0       0       0
  1884 ;;      Locals:         0       1       0       0       0
  1885 ;;      Temps:          0       1       0       0       0
  1886 ;;      Totals:         0       6       0       0       0
  1887 ;;Total ram usage:        6 bytes
  1888 ;; Hardware stack levels used: 1
  1889 ;; Hardware stack levels required when called: 1
  1890 ;; This function calls:
  1891 ;;		Nothing
  1892 ;; This function is called by:
  1893 ;;		_main
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897     0354                     ___lwmod:	
  1898                           ;psect for function ___lwmod
  1899                           
  1900     0354                     l1708:	
  1901                           ;incstack = 0
  1902                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1903                           
  1904     0354  1283               	bcf	3,5	;RP0=0, select bank0
  1905     0355  1303               	bcf	3,6	;RP1=0, select bank0
  1906     0356  083C               	movf	___lwmod@divisor,w
  1907     0357  043D               	iorwf	___lwmod@divisor+1,w
  1908     0358  1903               	btfsc	3,2
  1909     0359  2B5B               	goto	u1071
  1910     035A  2B5C               	goto	u1070
  1911     035B                     u1071:
  1912     035B  2B8B               	goto	l1726
  1913     035C                     u1070:
  1914     035C                     l1710:
  1915     035C  01C1               	clrf	___lwmod@counter
  1916     035D  0AC1               	incf	___lwmod@counter,f
  1917     035E  2B6A               	goto	l1716
  1918     035F                     l1712:
  1919     035F  3001               	movlw	1
  1920     0360                     u1085:
  1921     0360  1003               	clrc
  1922     0361  0DBC               	rlf	___lwmod@divisor,f
  1923     0362  0DBD               	rlf	___lwmod@divisor+1,f
  1924     0363  3EFF               	addlw	-1
  1925     0364  1D03               	skipz
  1926     0365  2B60               	goto	u1085
  1927     0366                     l1714:
  1928     0366  3001               	movlw	1
  1929     0367  00C0               	movwf	??___lwmod
  1930     0368  0840               	movf	??___lwmod,w
  1931     0369  07C1               	addwf	___lwmod@counter,f
  1932     036A                     l1716:
  1933     036A  1FBD               	btfss	___lwmod@divisor+1,7
  1934     036B  2B6D               	goto	u1091
  1935     036C  2B6E               	goto	u1090
  1936     036D                     u1091:
  1937     036D  2B5F               	goto	l1712
  1938     036E                     u1090:
  1939     036E                     l1718:
  1940     036E  083D               	movf	___lwmod@divisor+1,w
  1941     036F  023F               	subwf	___lwmod@dividend+1,w
  1942     0370  1D03               	skipz
  1943     0371  2B74               	goto	u1105
  1944     0372  083C               	movf	___lwmod@divisor,w
  1945     0373  023E               	subwf	___lwmod@dividend,w
  1946     0374                     u1105:
  1947     0374  1C03               	skipc
  1948     0375  2B77               	goto	u1101
  1949     0376  2B78               	goto	u1100
  1950     0377                     u1101:
  1951     0377  2B7E               	goto	l1722
  1952     0378                     u1100:
  1953     0378                     l1720:
  1954     0378  083C               	movf	___lwmod@divisor,w
  1955     0379  02BE               	subwf	___lwmod@dividend,f
  1956     037A  083D               	movf	___lwmod@divisor+1,w
  1957     037B  1C03               	skipc
  1958     037C  03BF               	decf	___lwmod@dividend+1,f
  1959     037D  02BF               	subwf	___lwmod@dividend+1,f
  1960     037E                     l1722:
  1961     037E  3001               	movlw	1
  1962     037F                     u1115:
  1963     037F  1003               	clrc
  1964     0380  0CBD               	rrf	___lwmod@divisor+1,f
  1965     0381  0CBC               	rrf	___lwmod@divisor,f
  1966     0382  3EFF               	addlw	-1
  1967     0383  1D03               	skipz
  1968     0384  2B7F               	goto	u1115
  1969     0385                     l1724:
  1970     0385  3001               	movlw	1
  1971     0386  02C1               	subwf	___lwmod@counter,f
  1972     0387  1D03               	btfss	3,2
  1973     0388  2B8A               	goto	u1121
  1974     0389  2B8B               	goto	u1120
  1975     038A                     u1121:
  1976     038A  2B6E               	goto	l1718
  1977     038B                     u1120:
  1978     038B                     l1726:
  1979     038B  083F               	movf	___lwmod@dividend+1,w
  1980     038C  00BD               	movwf	?___lwmod+1
  1981     038D  083E               	movf	___lwmod@dividend,w
  1982     038E  00BC               	movwf	?___lwmod
  1983     038F                     l604:
  1984     038F  0008               	return
  1985     0390                     __end_of___lwmod:
  1986                           
  1987                           	psect	text6
  1988     0310                     __ptext6:	
  1989 ;; *************** function ___lwdiv *****************
  1990 ;; Defined at:
  1991 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  divisor         2    2[COMMON] unsigned int 
  1994 ;;  dividend        2    4[COMMON] unsigned int 
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;  quotient        2    7[COMMON] unsigned int 
  1997 ;;  counter         1    9[COMMON] unsigned char 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  2    2[COMMON] unsigned int 
  2000 ;; Registers used:
  2001 ;;		wreg, status,2, status,0
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2007 ;;      Params:         4       0       0       0       0
  2008 ;;      Locals:         3       0       0       0       0
  2009 ;;      Temps:          1       0       0       0       0
  2010 ;;      Totals:         8       0       0       0       0
  2011 ;;Total ram usage:        8 bytes
  2012 ;; Hardware stack levels used: 1
  2013 ;; Hardware stack levels required when called: 1
  2014 ;; This function calls:
  2015 ;;		Nothing
  2016 ;; This function is called by:
  2017 ;;		_main
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021     0310                     ___lwdiv:	
  2022                           ;psect for function ___lwdiv
  2023                           
  2024     0310                     l1400:	
  2025                           ;incstack = 0
  2026                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2027                           
  2028     0310  01F7               	clrf	___lwdiv@quotient
  2029     0311  01F8               	clrf	___lwdiv@quotient+1
  2030     0312                     l1402:
  2031     0312  0872               	movf	___lwdiv@divisor,w
  2032     0313  0473               	iorwf	___lwdiv@divisor+1,w
  2033     0314  1903               	btfsc	3,2
  2034     0315  2B17               	goto	u691
  2035     0316  2B18               	goto	u690
  2036     0317                     u691:
  2037     0317  2B4F               	goto	l1422
  2038     0318                     u690:
  2039     0318                     l1404:
  2040     0318  01F9               	clrf	___lwdiv@counter
  2041     0319  0AF9               	incf	___lwdiv@counter,f
  2042     031A  2B26               	goto	l1410
  2043     031B                     l1406:
  2044     031B  3001               	movlw	1
  2045     031C                     u705:
  2046     031C  1003               	clrc
  2047     031D  0DF2               	rlf	___lwdiv@divisor,f
  2048     031E  0DF3               	rlf	___lwdiv@divisor+1,f
  2049     031F  3EFF               	addlw	-1
  2050     0320  1D03               	skipz
  2051     0321  2B1C               	goto	u705
  2052     0322                     l1408:
  2053     0322  3001               	movlw	1
  2054     0323  00F6               	movwf	??___lwdiv
  2055     0324  0876               	movf	??___lwdiv,w
  2056     0325  07F9               	addwf	___lwdiv@counter,f
  2057     0326                     l1410:
  2058     0326  1FF3               	btfss	___lwdiv@divisor+1,7
  2059     0327  2B29               	goto	u711
  2060     0328  2B2A               	goto	u710
  2061     0329                     u711:
  2062     0329  2B1B               	goto	l1406
  2063     032A                     u710:
  2064     032A                     l1412:
  2065     032A  3001               	movlw	1
  2066     032B                     u725:
  2067     032B  1003               	clrc
  2068     032C  0DF7               	rlf	___lwdiv@quotient,f
  2069     032D  0DF8               	rlf	___lwdiv@quotient+1,f
  2070     032E  3EFF               	addlw	-1
  2071     032F  1D03               	skipz
  2072     0330  2B2B               	goto	u725
  2073     0331  0873               	movf	___lwdiv@divisor+1,w
  2074     0332  0275               	subwf	___lwdiv@dividend+1,w
  2075     0333  1D03               	skipz
  2076     0334  2B37               	goto	u735
  2077     0335  0872               	movf	___lwdiv@divisor,w
  2078     0336  0274               	subwf	___lwdiv@dividend,w
  2079     0337                     u735:
  2080     0337  1C03               	skipc
  2081     0338  2B3A               	goto	u731
  2082     0339  2B3B               	goto	u730
  2083     033A                     u731:
  2084     033A  2B42               	goto	l1418
  2085     033B                     u730:
  2086     033B                     l1414:
  2087     033B  0872               	movf	___lwdiv@divisor,w
  2088     033C  02F4               	subwf	___lwdiv@dividend,f
  2089     033D  0873               	movf	___lwdiv@divisor+1,w
  2090     033E  1C03               	skipc
  2091     033F  03F5               	decf	___lwdiv@dividend+1,f
  2092     0340  02F5               	subwf	___lwdiv@dividend+1,f
  2093     0341                     l1416:
  2094     0341  1477               	bsf	___lwdiv@quotient,0
  2095     0342                     l1418:
  2096     0342  3001               	movlw	1
  2097     0343                     u745:
  2098     0343  1003               	clrc
  2099     0344  0CF3               	rrf	___lwdiv@divisor+1,f
  2100     0345  0CF2               	rrf	___lwdiv@divisor,f
  2101     0346  3EFF               	addlw	-1
  2102     0347  1D03               	skipz
  2103     0348  2B43               	goto	u745
  2104     0349                     l1420:
  2105     0349  3001               	movlw	1
  2106     034A  02F9               	subwf	___lwdiv@counter,f
  2107     034B  1D03               	btfss	3,2
  2108     034C  2B4E               	goto	u751
  2109     034D  2B4F               	goto	u750
  2110     034E                     u751:
  2111     034E  2B2A               	goto	l1412
  2112     034F                     u750:
  2113     034F                     l1422:
  2114     034F  0878               	movf	___lwdiv@quotient+1,w
  2115     0350  00F3               	movwf	?___lwdiv+1
  2116     0351  0877               	movf	___lwdiv@quotient,w
  2117     0352  00F2               	movwf	?___lwdiv
  2118     0353                     l594:
  2119     0353  0008               	return
  2120     0354                     __end_of___lwdiv:
  2121                           
  2122                           	psect	text7
  2123     0487                     __ptext7:	
  2124 ;; *************** function _Lcd_Write_String *****************
  2125 ;; Defined at:
  2126 ;;		line 98 in file "LCD.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;  a               1    wreg     PTR unsigned char 
  2129 ;;		 -> STR_4(2), STR_3(4), STR_2(7), STR_1(9), 
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;  a               1    9[COMMON] PTR unsigned char 
  2132 ;;		 -> STR_4(2), STR_3(4), STR_2(7), STR_1(9), 
  2133 ;;  i               2    7[COMMON] int 
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2143 ;;      Params:         0       0       0       0       0
  2144 ;;      Locals:         3       0       0       0       0
  2145 ;;      Temps:          0       0       0       0       0
  2146 ;;      Totals:         3       0       0       0       0
  2147 ;;Total ram usage:        3 bytes
  2148 ;; Hardware stack levels used: 1
  2149 ;; Hardware stack levels required when called: 3
  2150 ;; This function calls:
  2151 ;;		_Lcd_Write_Char
  2152 ;; This function is called by:
  2153 ;;		_main
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157     0487                     _Lcd_Write_String:	
  2158                           ;psect for function _Lcd_Write_String
  2159                           
  2160                           
  2161                           ;incstack = 0
  2162                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2163                           ;Lcd_Write_String@a stored from wreg
  2164     0487  00F9               	movwf	Lcd_Write_String@a
  2165     0488                     l1700:
  2166                           
  2167                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  2168     0488  01F7               	clrf	Lcd_Write_String@i
  2169     0489  01F8               	clrf	Lcd_Write_String@i+1
  2170     048A  2C9E               	goto	l1706
  2171     048B                     l1702:
  2172                           
  2173                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  2174     048B  0877               	movf	Lcd_Write_String@i,w
  2175     048C  0779               	addwf	Lcd_Write_String@a,w
  2176     048D  0084               	movwf	4
  2177     048E  120A  118A  24CE  120A  118A  	fcall	stringdir
  2178     0493  120A  118A  23C8  120A  118A  	fcall	_Lcd_Write_Char
  2179     0498                     l1704:
  2180     0498  3001               	movlw	1
  2181     0499  07F7               	addwf	Lcd_Write_String@i,f
  2182     049A  1803               	skipnc
  2183     049B  0AF8               	incf	Lcd_Write_String@i+1,f
  2184     049C  3000               	movlw	0
  2185     049D  07F8               	addwf	Lcd_Write_String@i+1,f
  2186     049E                     l1706:
  2187     049E  0877               	movf	Lcd_Write_String@i,w
  2188     049F  0779               	addwf	Lcd_Write_String@a,w
  2189     04A0  0084               	movwf	4
  2190     04A1  120A  118A  24CE  120A  118A  	fcall	stringdir
  2191     04A6  3A00               	xorlw	0
  2192     04A7  1D03               	skipz
  2193     04A8  2CAA               	goto	u1061
  2194     04A9  2CAB               	goto	u1060
  2195     04AA                     u1061:
  2196     04AA  2C8B               	goto	l1702
  2197     04AB                     u1060:
  2198     04AB                     l175:
  2199     04AB  0008               	return
  2200     04AC                     __end_of_Lcd_Write_String:
  2201                           
  2202                           	psect	text8
  2203     03C8                     __ptext8:	
  2204 ;; *************** function _Lcd_Write_Char *****************
  2205 ;; Defined at:
  2206 ;;		line 83 in file "LCD.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;  a               1    wreg     unsigned char 
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;  a               1    6[COMMON] unsigned char 
  2211 ;;  y               1    5[COMMON] unsigned char 
  2212 ;;  temp            1    4[COMMON] unsigned char 
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  1    wreg      void 
  2215 ;; Registers used:
  2216 ;;		wreg, status,2, status,0, pclath, cstack
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2222 ;;      Params:         0       0       0       0       0
  2223 ;;      Locals:         3       0       0       0       0
  2224 ;;      Temps:          1       0       0       0       0
  2225 ;;      Totals:         4       0       0       0       0
  2226 ;;Total ram usage:        4 bytes
  2227 ;; Hardware stack levels used: 1
  2228 ;; Hardware stack levels required when called: 2
  2229 ;; This function calls:
  2230 ;;		_Lcd_Port
  2231 ;; This function is called by:
  2232 ;;		_main
  2233 ;;		_Lcd_Write_String
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237     03C8                     _Lcd_Write_Char:	
  2238                           ;psect for function _Lcd_Write_Char
  2239                           
  2240                           
  2241                           ;incstack = 0
  2242                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2243                           ;Lcd_Write_Char@a stored from wreg
  2244     03C8  00F6               	movwf	Lcd_Write_Char@a
  2245     03C9                     l1598:
  2246                           
  2247                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  2248     03C9  0876               	movf	Lcd_Write_Char@a,w
  2249     03CA  390F               	andlw	15
  2250     03CB  00F4               	movwf	Lcd_Write_Char@temp
  2251                           
  2252                           ;LCD.c: 86:     y = a & 0xF0;
  2253     03CC  0876               	movf	Lcd_Write_Char@a,w
  2254     03CD  39F0               	andlw	240
  2255     03CE  00F5               	movwf	Lcd_Write_Char@y
  2256     03CF                     l1600:
  2257                           
  2258                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  2259     03CF  1283               	bcf	3,5	;RP0=0, select bank0
  2260     03D0  1303               	bcf	3,6	;RP1=0, select bank0
  2261     03D1  1508               	bsf	8,2	;volatile
  2262     03D2                     l1602:
  2263                           
  2264                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  2265     03D2  0875               	movf	Lcd_Write_Char@y,w
  2266     03D3  00F3               	movwf	??_Lcd_Write_Char
  2267     03D4  3004               	movlw	4
  2268     03D5                     u1005:
  2269     03D5  1003               	clrc
  2270     03D6  0CF3               	rrf	??_Lcd_Write_Char,f
  2271     03D7  3EFF               	addlw	-1
  2272     03D8  1D03               	skipz
  2273     03D9  2BD5               	goto	u1005
  2274     03DA  0873               	movf	??_Lcd_Write_Char,w
  2275     03DB  120A  118A  24AC  120A  118A  	fcall	_Lcd_Port
  2276     03E0                     l1604:
  2277                           
  2278                           ;LCD.c: 89:     RD3 = 1;
  2279     03E0  1283               	bcf	3,5	;RP0=0, select bank0
  2280     03E1  1303               	bcf	3,6	;RP1=0, select bank0
  2281     03E2  1588               	bsf	8,3	;volatile
  2282     03E3                     l1606:
  2283                           
  2284                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2285     03E3  301A               	movlw	26
  2286     03E4  00F3               	movwf	??_Lcd_Write_Char
  2287     03E5                     u1277:
  2288     03E5  0BF3               	decfsz	??_Lcd_Write_Char,f
  2289     03E6  2BE5               	goto	u1277
  2290     03E7  0000               	nop
  2291     03E8                     l1608:
  2292                           
  2293                           ;LCD.c: 91:     RD3 = 0;
  2294     03E8  1283               	bcf	3,5	;RP0=0, select bank0
  2295     03E9  1303               	bcf	3,6	;RP1=0, select bank0
  2296     03EA  1188               	bcf	8,3	;volatile
  2297     03EB                     l1610:
  2298                           
  2299                           ;LCD.c: 92:     Lcd_Port(temp);
  2300     03EB  0874               	movf	Lcd_Write_Char@temp,w
  2301     03EC  120A  118A  24AC  120A  118A  	fcall	_Lcd_Port
  2302     03F1                     l1612:
  2303                           
  2304                           ;LCD.c: 93:     RD3 = 1;
  2305     03F1  1283               	bcf	3,5	;RP0=0, select bank0
  2306     03F2  1303               	bcf	3,6	;RP1=0, select bank0
  2307     03F3  1588               	bsf	8,3	;volatile
  2308     03F4                     l1614:
  2309                           
  2310                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2311     03F4  301A               	movlw	26
  2312     03F5  00F3               	movwf	??_Lcd_Write_Char
  2313     03F6                     u1287:
  2314     03F6  0BF3               	decfsz	??_Lcd_Write_Char,f
  2315     03F7  2BF6               	goto	u1287
  2316     03F8  0000               	nop
  2317     03F9                     l1616:
  2318                           
  2319                           ;LCD.c: 95:     RD3 = 0;
  2320     03F9  1283               	bcf	3,5	;RP0=0, select bank0
  2321     03FA  1303               	bcf	3,6	;RP1=0, select bank0
  2322     03FB  1188               	bcf	8,3	;volatile
  2323     03FC                     l169:
  2324     03FC  0008               	return
  2325     03FD                     __end_of_Lcd_Write_Char:
  2326                           
  2327                           	psect	text9
  2328     02C4                     __ptext9:	
  2329 ;; *************** function _Lcd_Set_Cursor *****************
  2330 ;; Defined at:
  2331 ;;		line 48 in file "LCD.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;  a               1    wreg     unsigned char 
  2334 ;;  b               1    6[COMMON] unsigned char 
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;  a               1    0[BANK0 ] unsigned char 
  2337 ;;  temp            1    3[BANK0 ] unsigned char 
  2338 ;;  y               1    2[BANK0 ] unsigned char 
  2339 ;;  z               1    1[BANK0 ] unsigned char 
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  1    wreg      void 
  2342 ;; Registers used:
  2343 ;;		wreg, status,2, status,0, pclath, cstack
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2349 ;;      Params:         1       0       0       0       0
  2350 ;;      Locals:         0       4       0       0       0
  2351 ;;      Temps:          1       0       0       0       0
  2352 ;;      Totals:         2       4       0       0       0
  2353 ;;Total ram usage:        6 bytes
  2354 ;; Hardware stack levels used: 1
  2355 ;; Hardware stack levels required when called: 3
  2356 ;; This function calls:
  2357 ;;		_Lcd_Cmd
  2358 ;; This function is called by:
  2359 ;;		_main
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363     02C4                     _Lcd_Set_Cursor:	
  2364                           ;psect for function _Lcd_Set_Cursor
  2365                           
  2366                           
  2367                           ;incstack = 0
  2368                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2369                           ;Lcd_Set_Cursor@a stored from wreg
  2370     02C4  1283               	bcf	3,5	;RP0=0, select bank0
  2371     02C5  1303               	bcf	3,6	;RP1=0, select bank0
  2372     02C6  00BC               	movwf	Lcd_Set_Cursor@a
  2373     02C7                     l1680:
  2374                           
  2375                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2376     02C7  033C               	decf	Lcd_Set_Cursor@a,w
  2377     02C8  1D03               	btfss	3,2
  2378     02C9  2ACB               	goto	u1021
  2379     02CA  2ACC               	goto	u1020
  2380     02CB                     u1021:
  2381     02CB  2AEB               	goto	l1690
  2382     02CC                     u1020:
  2383     02CC                     l1682:
  2384                           
  2385                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2386     02CC  0876               	movf	Lcd_Set_Cursor@b,w
  2387     02CD  3E7F               	addlw	127
  2388     02CE  00BF               	movwf	Lcd_Set_Cursor@temp
  2389                           
  2390                           ;LCD.c: 52:         z = temp >> 4;
  2391     02CF  083F               	movf	Lcd_Set_Cursor@temp,w
  2392     02D0  00F7               	movwf	??_Lcd_Set_Cursor
  2393     02D1  3004               	movlw	4
  2394     02D2                     u1035:
  2395     02D2  1003               	clrc
  2396     02D3  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2397     02D4  3EFF               	addlw	-1
  2398     02D5  1D03               	skipz
  2399     02D6  2AD2               	goto	u1035
  2400     02D7  0877               	movf	??_Lcd_Set_Cursor,w
  2401     02D8  00BD               	movwf	Lcd_Set_Cursor@z
  2402     02D9                     l1684:
  2403                           
  2404                           ;LCD.c: 53:         y = temp & 0x0F;
  2405     02D9  083F               	movf	Lcd_Set_Cursor@temp,w
  2406     02DA  390F               	andlw	15
  2407     02DB  00BE               	movwf	Lcd_Set_Cursor@y
  2408     02DC                     l1686:
  2409                           
  2410                           ;LCD.c: 54:         Lcd_Cmd(z);
  2411     02DC  083D               	movf	Lcd_Set_Cursor@z,w
  2412     02DD  120A  118A  24EA  120A  118A  	fcall	_Lcd_Cmd
  2413     02E2                     l1688:
  2414                           
  2415                           ;LCD.c: 55:         Lcd_Cmd(y);
  2416     02E2  1283               	bcf	3,5	;RP0=0, select bank0
  2417     02E3  1303               	bcf	3,6	;RP1=0, select bank0
  2418     02E4  083E               	movf	Lcd_Set_Cursor@y,w
  2419     02E5  120A  118A  24EA  120A  118A  	fcall	_Lcd_Cmd
  2420                           
  2421                           ;LCD.c: 56:     } else if (a == 2) {
  2422     02EA  2B0F               	goto	l163
  2423     02EB                     l1690:
  2424     02EB  3002               	movlw	2
  2425     02EC  063C               	xorwf	Lcd_Set_Cursor@a,w
  2426     02ED  1D03               	btfss	3,2
  2427     02EE  2AF0               	goto	u1041
  2428     02EF  2AF1               	goto	u1040
  2429     02F0                     u1041:
  2430     02F0  2B0F               	goto	l163
  2431     02F1                     u1040:
  2432     02F1                     l1692:
  2433                           
  2434                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2435     02F1  0876               	movf	Lcd_Set_Cursor@b,w
  2436     02F2  3EBF               	addlw	191
  2437     02F3  00BF               	movwf	Lcd_Set_Cursor@temp
  2438                           
  2439                           ;LCD.c: 58:         z = temp >> 4;
  2440     02F4  083F               	movf	Lcd_Set_Cursor@temp,w
  2441     02F5  00F7               	movwf	??_Lcd_Set_Cursor
  2442     02F6  3004               	movlw	4
  2443     02F7                     u1055:
  2444     02F7  1003               	clrc
  2445     02F8  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2446     02F9  3EFF               	addlw	-1
  2447     02FA  1D03               	skipz
  2448     02FB  2AF7               	goto	u1055
  2449     02FC  0877               	movf	??_Lcd_Set_Cursor,w
  2450     02FD  00BD               	movwf	Lcd_Set_Cursor@z
  2451     02FE                     l1694:
  2452                           
  2453                           ;LCD.c: 59:         y = temp & 0x0F;
  2454     02FE  083F               	movf	Lcd_Set_Cursor@temp,w
  2455     02FF  390F               	andlw	15
  2456     0300  00BE               	movwf	Lcd_Set_Cursor@y
  2457     0301                     l1696:
  2458                           
  2459                           ;LCD.c: 60:         Lcd_Cmd(z);
  2460     0301  083D               	movf	Lcd_Set_Cursor@z,w
  2461     0302  120A  118A  24EA  120A  118A  	fcall	_Lcd_Cmd
  2462     0307                     l1698:
  2463                           
  2464                           ;LCD.c: 61:         Lcd_Cmd(y);
  2465     0307  1283               	bcf	3,5	;RP0=0, select bank0
  2466     0308  1303               	bcf	3,6	;RP1=0, select bank0
  2467     0309  083E               	movf	Lcd_Set_Cursor@y,w
  2468     030A  120A  118A  24EA  120A  118A  	fcall	_Lcd_Cmd
  2469     030F                     l163:
  2470     030F  0008               	return
  2471     0310                     __end_of_Lcd_Set_Cursor:
  2472                           
  2473                           	psect	text10
  2474     0267                     __ptext10:	
  2475 ;; *************** function _Lcd_Init *****************
  2476 ;; Defined at:
  2477 ;;		line 65 in file "LCD.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;		None
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;		None
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    wreg      void 
  2484 ;; Registers used:
  2485 ;;		wreg, status,2, status,0, pclath, cstack
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2491 ;;      Params:         0       0       0       0       0
  2492 ;;      Locals:         0       0       0       0       0
  2493 ;;      Temps:          2       0       0       0       0
  2494 ;;      Totals:         2       0       0       0       0
  2495 ;;Total ram usage:        2 bytes
  2496 ;; Hardware stack levels used: 1
  2497 ;; Hardware stack levels required when called: 3
  2498 ;; This function calls:
  2499 ;;		_Lcd_Cmd
  2500 ;;		_Lcd_Port
  2501 ;; This function is called by:
  2502 ;;		_main
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506     0267                     _Lcd_Init:	
  2507                           ;psect for function _Lcd_Init
  2508                           
  2509     0267                     l1668:	
  2510                           ;incstack = 0
  2511                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2512                           
  2513                           
  2514                           ;LCD.c: 66:     Lcd_Port(0x00);
  2515     0267  3000               	movlw	0
  2516     0268  120A  118A  24AC  120A  118A  	fcall	_Lcd_Port
  2517     026D                     l1670:
  2518                           
  2519                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2520     026D  3034               	movlw	52
  2521     026E  00F7               	movwf	??_Lcd_Init+1
  2522     026F  30F1               	movlw	241
  2523     0270  00F6               	movwf	??_Lcd_Init
  2524     0271                     u1297:
  2525     0271  0BF6               	decfsz	??_Lcd_Init,f
  2526     0272  2A71               	goto	u1297
  2527     0273  0BF7               	decfsz	??_Lcd_Init+1,f
  2528     0274  2A71               	goto	u1297
  2529     0275  2A76               	nop2
  2530     0276                     l1672:
  2531                           
  2532                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2533     0276  3003               	movlw	3
  2534     0277  120A  118A  24EA  120A  118A  	fcall	_Lcd_Cmd
  2535                           
  2536                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2537     027C  300D               	movlw	13
  2538     027D  00F7               	movwf	??_Lcd_Init+1
  2539     027E  30FB               	movlw	251
  2540     027F  00F6               	movwf	??_Lcd_Init
  2541     0280                     u1307:
  2542     0280  0BF6               	decfsz	??_Lcd_Init,f
  2543     0281  2A80               	goto	u1307
  2544     0282  0BF7               	decfsz	??_Lcd_Init+1,f
  2545     0283  2A80               	goto	u1307
  2546     0284  2A85               	nop2
  2547     0285                     l1674:
  2548                           
  2549                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2550     0285  3003               	movlw	3
  2551     0286  120A  118A  24EA  120A  118A  	fcall	_Lcd_Cmd
  2552     028B                     l1676:
  2553                           
  2554                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2555     028B  301D               	movlw	29
  2556     028C  00F7               	movwf	??_Lcd_Init+1
  2557     028D  3091               	movlw	145
  2558     028E  00F6               	movwf	??_Lcd_Init
  2559     028F                     u1317:
  2560     028F  0BF6               	decfsz	??_Lcd_Init,f
  2561     0290  2A8F               	goto	u1317
  2562     0291  0BF7               	decfsz	??_Lcd_Init+1,f
  2563     0292  2A8F               	goto	u1317
  2564                           
  2565                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2566     0293  3003               	movlw	3
  2567     0294  120A  118A  24EA  120A  118A  	fcall	_Lcd_Cmd
  2568                           
  2569                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2570     0299  3002               	movlw	2
  2571     029A  120A  118A  24EA  120A  118A  	fcall	_Lcd_Cmd
  2572                           
  2573                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  2574     029F  3002               	movlw	2
  2575     02A0  120A  118A  24EA  120A  118A  	fcall	_Lcd_Cmd
  2576                           
  2577                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  2578     02A5  3008               	movlw	8
  2579     02A6  120A  118A  24EA  120A  118A  	fcall	_Lcd_Cmd
  2580                           
  2581                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  2582     02AB  3000               	movlw	0
  2583     02AC  120A  118A  24EA  120A  118A  	fcall	_Lcd_Cmd
  2584                           
  2585                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  2586     02B1  300C               	movlw	12
  2587     02B2  120A  118A  24EA  120A  118A  	fcall	_Lcd_Cmd
  2588                           
  2589                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  2590     02B7  3000               	movlw	0
  2591     02B8  120A  118A  24EA  120A  118A  	fcall	_Lcd_Cmd
  2592                           
  2593                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  2594     02BD  3006               	movlw	6
  2595     02BE  120A  118A  24EA  120A  118A  	fcall	_Lcd_Cmd
  2596     02C3                     l166:
  2597     02C3  0008               	return
  2598     02C4                     __end_of_Lcd_Init:
  2599                           
  2600                           	psect	text11
  2601     0514                     __ptext11:	
  2602 ;; *************** function _Lcd_Clear *****************
  2603 ;; Defined at:
  2604 ;;		line 43 in file "LCD.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;		None
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;		None
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      void 
  2611 ;; Registers used:
  2612 ;;		wreg, status,2, status,0, pclath, cstack
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2618 ;;      Params:         0       0       0       0       0
  2619 ;;      Locals:         0       0       0       0       0
  2620 ;;      Temps:          0       0       0       0       0
  2621 ;;      Totals:         0       0       0       0       0
  2622 ;;Total ram usage:        0 bytes
  2623 ;; Hardware stack levels used: 1
  2624 ;; Hardware stack levels required when called: 3
  2625 ;; This function calls:
  2626 ;;		_Lcd_Cmd
  2627 ;; This function is called by:
  2628 ;;		_main
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632     0514                     _Lcd_Clear:	
  2633                           ;psect for function _Lcd_Clear
  2634                           
  2635     0514                     l1678:	
  2636                           ;incstack = 0
  2637                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2638                           
  2639                           
  2640                           ;LCD.c: 44:     Lcd_Cmd(0);
  2641     0514  3000               	movlw	0
  2642     0515  120A  118A  24EA  120A  118A  	fcall	_Lcd_Cmd
  2643                           
  2644                           ;LCD.c: 45:     Lcd_Cmd(1);
  2645     051A  3001               	movlw	1
  2646     051B  120A  118A  24EA  120A  118A  	fcall	_Lcd_Cmd
  2647     0520                     l157:
  2648     0520  0008               	return
  2649     0521                     __end_of_Lcd_Clear:
  2650                           
  2651                           	psect	text12
  2652     04EA                     __ptext12:	
  2653 ;; *************** function _Lcd_Cmd *****************
  2654 ;; Defined at:
  2655 ;;		line 35 in file "LCD.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;  a               1    wreg     unsigned char 
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;  a               1    5[COMMON] unsigned char 
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  1    wreg      void 
  2662 ;; Registers used:
  2663 ;;		wreg, status,2, status,0, pclath, cstack
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2669 ;;      Params:         0       0       0       0       0
  2670 ;;      Locals:         1       0       0       0       0
  2671 ;;      Temps:          2       0       0       0       0
  2672 ;;      Totals:         3       0       0       0       0
  2673 ;;Total ram usage:        3 bytes
  2674 ;; Hardware stack levels used: 1
  2675 ;; Hardware stack levels required when called: 2
  2676 ;; This function calls:
  2677 ;;		_Lcd_Port
  2678 ;; This function is called by:
  2679 ;;		_Lcd_Clear
  2680 ;;		_Lcd_Set_Cursor
  2681 ;;		_Lcd_Init
  2682 ;;		_Lcd_Shift_Right
  2683 ;;		_Lcd_Shift_Left
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687     04EA                     _Lcd_Cmd:	
  2688                           ;psect for function _Lcd_Cmd
  2689                           
  2690                           
  2691                           ;incstack = 0
  2692                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2693                           ;Lcd_Cmd@a stored from wreg
  2694     04EA  00F5               	movwf	Lcd_Cmd@a
  2695     04EB                     l1630:
  2696                           
  2697                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  2698     04EB  1283               	bcf	3,5	;RP0=0, select bank0
  2699     04EC  1303               	bcf	3,6	;RP1=0, select bank0
  2700     04ED  1108               	bcf	8,2	;volatile
  2701     04EE                     l1632:
  2702                           
  2703                           ;LCD.c: 37:     Lcd_Port(a);
  2704     04EE  0875               	movf	Lcd_Cmd@a,w
  2705     04EF  120A  118A  24AC  120A  118A  	fcall	_Lcd_Port
  2706     04F4                     l1634:
  2707                           
  2708                           ;LCD.c: 38:     RD3 = 1;
  2709     04F4  1283               	bcf	3,5	;RP0=0, select bank0
  2710     04F5  1303               	bcf	3,6	;RP1=0, select bank0
  2711     04F6  1588               	bsf	8,3	;volatile
  2712     04F7                     l1636:
  2713                           
  2714                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2715     04F7  300B               	movlw	11
  2716     04F8  00F4               	movwf	??_Lcd_Cmd+1
  2717     04F9  3062               	movlw	98
  2718     04FA  00F3               	movwf	??_Lcd_Cmd
  2719     04FB                     u1327:
  2720     04FB  0BF3               	decfsz	??_Lcd_Cmd,f
  2721     04FC  2CFB               	goto	u1327
  2722     04FD  0BF4               	decfsz	??_Lcd_Cmd+1,f
  2723     04FE  2CFB               	goto	u1327
  2724     04FF  0000               	nop
  2725     0500                     l1638:
  2726                           
  2727                           ;LCD.c: 40:     RD3 = 0;
  2728     0500  1283               	bcf	3,5	;RP0=0, select bank0
  2729     0501  1303               	bcf	3,6	;RP1=0, select bank0
  2730     0502  1188               	bcf	8,3	;volatile
  2731     0503                     l154:
  2732     0503  0008               	return
  2733     0504                     __end_of_Lcd_Cmd:
  2734                           
  2735                           	psect	text13
  2736     04AC                     __ptext13:	
  2737 ;; *************** function _Lcd_Port *****************
  2738 ;; Defined at:
  2739 ;;		line 13 in file "LCD.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;  a               1    wreg     unsigned char 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  a               1    2[COMMON] unsigned char 
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  1    wreg      void 
  2746 ;; Registers used:
  2747 ;;		wreg
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2753 ;;      Params:         0       0       0       0       0
  2754 ;;      Locals:         1       0       0       0       0
  2755 ;;      Temps:          0       0       0       0       0
  2756 ;;      Totals:         1       0       0       0       0
  2757 ;;Total ram usage:        1 bytes
  2758 ;; Hardware stack levels used: 1
  2759 ;; Hardware stack levels required when called: 1
  2760 ;; This function calls:
  2761 ;;		Nothing
  2762 ;; This function is called by:
  2763 ;;		_Lcd_Cmd
  2764 ;;		_Lcd_Init
  2765 ;;		_Lcd_Write_Char
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769     04AC                     _Lcd_Port:	
  2770                           ;psect for function _Lcd_Port
  2771                           
  2772                           
  2773                           ;incstack = 0
  2774                           ; Regs used in _Lcd_Port: [wreg]
  2775                           ;Lcd_Port@a stored from wreg
  2776     04AC  00F2               	movwf	Lcd_Port@a
  2777     04AD                     l1564:
  2778                           
  2779                           ;LCD.c: 14:     if (a & 1)
  2780     04AD  1C72               	btfss	Lcd_Port@a,0
  2781     04AE  2CB0               	goto	u891
  2782     04AF  2CB1               	goto	u890
  2783     04B0                     u891:
  2784     04B0  2CB5               	goto	l143
  2785     04B1                     u890:
  2786     04B1                     l1566:
  2787                           
  2788                           ;LCD.c: 15:         RD4 = 1;
  2789     04B1  1283               	bcf	3,5	;RP0=0, select bank0
  2790     04B2  1303               	bcf	3,6	;RP1=0, select bank0
  2791     04B3  1608               	bsf	8,4	;volatile
  2792     04B4  2CB8               	goto	l144
  2793     04B5                     l143:	
  2794                           ;LCD.c: 16:     else
  2795                           
  2796                           
  2797                           ;LCD.c: 17:         RD4 = 0;
  2798     04B5  1283               	bcf	3,5	;RP0=0, select bank0
  2799     04B6  1303               	bcf	3,6	;RP1=0, select bank0
  2800     04B7  1208               	bcf	8,4	;volatile
  2801     04B8                     l144:
  2802                           
  2803                           ;LCD.c: 19:     if (a & 2)
  2804     04B8  1CF2               	btfss	Lcd_Port@a,1
  2805     04B9  2CBB               	goto	u901
  2806     04BA  2CBC               	goto	u900
  2807     04BB                     u901:
  2808     04BB  2CBE               	goto	l145
  2809     04BC                     u900:
  2810     04BC                     l1568:
  2811                           
  2812                           ;LCD.c: 20:         RD5 = 1;
  2813     04BC  1688               	bsf	8,5	;volatile
  2814     04BD  2CBF               	goto	l146
  2815     04BE                     l145:	
  2816                           ;LCD.c: 21:     else
  2817                           
  2818                           
  2819                           ;LCD.c: 22:         RD5 = 0;
  2820     04BE  1288               	bcf	8,5	;volatile
  2821     04BF                     l146:
  2822                           
  2823                           ;LCD.c: 24:     if (a & 4)
  2824     04BF  1D72               	btfss	Lcd_Port@a,2
  2825     04C0  2CC2               	goto	u911
  2826     04C1  2CC3               	goto	u910
  2827     04C2                     u911:
  2828     04C2  2CC5               	goto	l147
  2829     04C3                     u910:
  2830     04C3                     l1570:
  2831                           
  2832                           ;LCD.c: 25:         RD6 = 1;
  2833     04C3  1708               	bsf	8,6	;volatile
  2834     04C4  2CC6               	goto	l148
  2835     04C5                     l147:	
  2836                           ;LCD.c: 26:     else
  2837                           
  2838                           
  2839                           ;LCD.c: 27:         RD6 = 0;
  2840     04C5  1308               	bcf	8,6	;volatile
  2841     04C6                     l148:
  2842                           
  2843                           ;LCD.c: 29:     if (a & 8)
  2844     04C6  1DF2               	btfss	Lcd_Port@a,3
  2845     04C7  2CC9               	goto	u921
  2846     04C8  2CCA               	goto	u920
  2847     04C9                     u921:
  2848     04C9  2CCC               	goto	l149
  2849     04CA                     u920:
  2850     04CA                     l1572:
  2851                           
  2852                           ;LCD.c: 30:         RD7 = 1;
  2853     04CA  1788               	bsf	8,7	;volatile
  2854     04CB  2CCD               	goto	l151
  2855     04CC                     l149:	
  2856                           ;LCD.c: 31:     else
  2857                           
  2858                           
  2859                           ;LCD.c: 32:         RD7 = 0;
  2860     04CC  1388               	bcf	8,7	;volatile
  2861     04CD                     l151:
  2862     04CD  0008               	return
  2863     04CE                     __end_of_Lcd_Port:
  2864                           
  2865                           	psect	text14
  2866     052E                     __ptext14:	
  2867 ;; *************** function _I2C_Master_Write *****************
  2868 ;; Defined at:
  2869 ;;		line 62 in file "IIC.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;  d               2    2[COMMON] unsigned int 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;		None
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      void 
  2876 ;; Registers used:
  2877 ;;		wreg, status,2, status,0, pclath, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2883 ;;      Params:         2       0       0       0       0
  2884 ;;      Locals:         0       0       0       0       0
  2885 ;;      Temps:          0       0       0       0       0
  2886 ;;      Totals:         2       0       0       0       0
  2887 ;;Total ram usage:        2 bytes
  2888 ;; Hardware stack levels used: 1
  2889 ;; Hardware stack levels required when called: 2
  2890 ;; This function calls:
  2891 ;;		_I2C_Master_Wait
  2892 ;; This function is called by:
  2893 ;;		_main
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897     052E                     _I2C_Master_Write:	
  2898                           ;psect for function _I2C_Master_Write
  2899                           
  2900     052E                     l1348:	
  2901                           ;incstack = 0
  2902                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2903                           
  2904                           
  2905                           ;IIC.c: 62: void I2C_Master_Write(unsigned d);IIC.c: 63: {;IIC.c: 64:     I2C_Master_Wai
      +                          t();
  2906     052E  120A  118A  2521  120A  118A  	fcall	_I2C_Master_Wait
  2907     0533                     l1350:
  2908                           
  2909                           ;IIC.c: 65:     SSPBUF = d;
  2910     0533  0872               	movf	I2C_Master_Write@d,w
  2911     0534  1283               	bcf	3,5	;RP0=0, select bank0
  2912     0535  1303               	bcf	3,6	;RP1=0, select bank0
  2913     0536  0093               	movwf	19	;volatile
  2914     0537                     l228:
  2915     0537  0008               	return
  2916     0538                     __end_of_I2C_Master_Write:
  2917                           
  2918                           	psect	text15
  2919     0538                     __ptext15:	
  2920 ;; *************** function _I2C_Master_Stop *****************
  2921 ;; Defined at:
  2922 ;;		line 52 in file "IIC.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;		None
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;		None
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  1    wreg      void 
  2929 ;; Registers used:
  2930 ;;		wreg, status,2, status,0, pclath, cstack
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2936 ;;      Params:         0       0       0       0       0
  2937 ;;      Locals:         0       0       0       0       0
  2938 ;;      Temps:          0       0       0       0       0
  2939 ;;      Totals:         0       0       0       0       0
  2940 ;;Total ram usage:        0 bytes
  2941 ;; Hardware stack levels used: 1
  2942 ;; Hardware stack levels required when called: 2
  2943 ;; This function calls:
  2944 ;;		_I2C_Master_Wait
  2945 ;; This function is called by:
  2946 ;;		_main
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950     0538                     _I2C_Master_Stop:	
  2951                           ;psect for function _I2C_Master_Stop
  2952                           
  2953     0538                     l1368:	
  2954                           ;incstack = 0
  2955                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2956                           
  2957                           
  2958                           ;IIC.c: 54:     I2C_Master_Wait();
  2959     0538  120A  118A  2521  120A  118A  	fcall	_I2C_Master_Wait
  2960     053D                     l1370:
  2961                           
  2962                           ;IIC.c: 55:     SSPCON2bits.PEN = 1;
  2963     053D  1683               	bsf	3,5	;RP0=1, select bank1
  2964     053E  1303               	bcf	3,6	;RP1=0, select bank1
  2965     053F  1511               	bsf	17,2	;volatile
  2966     0540                     l225:
  2967     0540  0008               	return
  2968     0541                     __end_of_I2C_Master_Stop:
  2969                           
  2970                           	psect	text16
  2971     0541                     __ptext16:	
  2972 ;; *************** function _I2C_Master_Start *****************
  2973 ;; Defined at:
  2974 ;;		line 36 in file "IIC.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;		None
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;		None
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      void 
  2981 ;; Registers used:
  2982 ;;		wreg, status,2, status,0, pclath, cstack
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2988 ;;      Params:         0       0       0       0       0
  2989 ;;      Locals:         0       0       0       0       0
  2990 ;;      Temps:          0       0       0       0       0
  2991 ;;      Totals:         0       0       0       0       0
  2992 ;;Total ram usage:        0 bytes
  2993 ;; Hardware stack levels used: 1
  2994 ;; Hardware stack levels required when called: 2
  2995 ;; This function calls:
  2996 ;;		_I2C_Master_Wait
  2997 ;; This function is called by:
  2998 ;;		_main
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002     0541                     _I2C_Master_Start:	
  3003                           ;psect for function _I2C_Master_Start
  3004                           
  3005     0541                     l1344:	
  3006                           ;incstack = 0
  3007                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3008                           
  3009                           
  3010                           ;IIC.c: 38:     I2C_Master_Wait();
  3011     0541  120A  118A  2521  120A  118A  	fcall	_I2C_Master_Wait
  3012     0546                     l1346:
  3013                           
  3014                           ;IIC.c: 39:     SSPCON2bits.SEN = 1;
  3015     0546  1683               	bsf	3,5	;RP0=1, select bank1
  3016     0547  1303               	bcf	3,6	;RP1=0, select bank1
  3017     0548  1411               	bsf	17,0	;volatile
  3018     0549                     l219:
  3019     0549  0008               	return
  3020     054A                     __end_of_I2C_Master_Start:
  3021                           
  3022                           	psect	text17
  3023     0430                     __ptext17:	
  3024 ;; *************** function _I2C_Master_Read *****************
  3025 ;; Defined at:
  3026 ;;		line 71 in file "IIC.c"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;  a               2    2[COMMON] unsigned short 
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;  temp            2    6[COMMON] int 
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  2    2[COMMON] int 
  3033 ;; Registers used:
  3034 ;;		wreg, status,2, status,0, pclath, cstack
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3040 ;;      Params:         2       0       0       0       0
  3041 ;;      Locals:         2       0       0       0       0
  3042 ;;      Temps:          2       0       0       0       0
  3043 ;;      Totals:         6       0       0       0       0
  3044 ;;Total ram usage:        6 bytes
  3045 ;; Hardware stack levels used: 1
  3046 ;; Hardware stack levels required when called: 2
  3047 ;; This function calls:
  3048 ;;		_I2C_Master_Wait
  3049 ;; This function is called by:
  3050 ;;		_main
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054     0430                     _I2C_Master_Read:	
  3055                           ;psect for function _I2C_Master_Read
  3056                           
  3057     0430                     l1352:	
  3058                           ;incstack = 0
  3059                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3060                           
  3061                           
  3062                           ;IIC.c: 71: int I2C_Master_Read(unsigned short a);IIC.c: 72: {;IIC.c: 73:     int temp;;
      +                          IIC.c: 74:     I2C_Master_Wait();
  3063     0430  120A  118A  2521  120A  118A  	fcall	_I2C_Master_Wait
  3064     0435                     l1354:
  3065                           
  3066                           ;IIC.c: 75:     SSPCON2bits.RCEN = 1;
  3067     0435  1683               	bsf	3,5	;RP0=1, select bank1
  3068     0436  1303               	bcf	3,6	;RP1=0, select bank1
  3069     0437  1591               	bsf	17,3	;volatile
  3070                           
  3071                           ;IIC.c: 76:     I2C_Master_Wait();
  3072     0438  120A  118A  2521  120A  118A  	fcall	_I2C_Master_Wait
  3073     043D                     l1356:
  3074                           
  3075                           ;IIC.c: 77:     temp = SSPBUF;
  3076     043D  1283               	bcf	3,5	;RP0=0, select bank0
  3077     043E  1303               	bcf	3,6	;RP1=0, select bank0
  3078     043F  0813               	movf	19,w	;volatile
  3079     0440  00F4               	movwf	??_I2C_Master_Read
  3080     0441  01F5               	clrf	??_I2C_Master_Read+1
  3081     0442  0874               	movf	??_I2C_Master_Read,w
  3082     0443  00F6               	movwf	I2C_Master_Read@temp
  3083     0444  0875               	movf	??_I2C_Master_Read+1,w
  3084     0445  00F7               	movwf	I2C_Master_Read@temp+1
  3085     0446                     l1358:
  3086                           
  3087                           ;IIC.c: 78:     I2C_Master_Wait();
  3088     0446  120A  118A  2521  120A  118A  	fcall	_I2C_Master_Wait
  3089     044B                     l1360:
  3090                           
  3091                           ;IIC.c: 79:     if(a == 1){
  3092     044B  0372               	decf	I2C_Master_Read@a,w
  3093     044C  0473               	iorwf	I2C_Master_Read@a+1,w
  3094     044D  1D03               	btfss	3,2
  3095     044E  2C50               	goto	u631
  3096     044F  2C51               	goto	u630
  3097     0450                     u631:
  3098     0450  2C55               	goto	l231
  3099     0451                     u630:
  3100     0451                     l1362:
  3101                           
  3102                           ;IIC.c: 80:         SSPCON2bits.ACKDT = 0;
  3103     0451  1683               	bsf	3,5	;RP0=1, select bank1
  3104     0452  1303               	bcf	3,6	;RP1=0, select bank1
  3105     0453  1291               	bcf	17,5	;volatile
  3106                           
  3107                           ;IIC.c: 81:     }else{
  3108     0454  2C58               	goto	l232
  3109     0455                     l231:
  3110                           
  3111                           ;IIC.c: 82:         SSPCON2bits.ACKDT = 1;
  3112     0455  1683               	bsf	3,5	;RP0=1, select bank1
  3113     0456  1303               	bcf	3,6	;RP1=0, select bank1
  3114     0457  1691               	bsf	17,5	;volatile
  3115     0458                     l232:	
  3116                           ;IIC.c: 83:     }
  3117                           
  3118                           
  3119                           ;IIC.c: 84:     SSPCON2bits.ACKEN = 1;
  3120     0458  1611               	bsf	17,4	;volatile
  3121     0459                     l1364:
  3122                           
  3123                           ;IIC.c: 85:     return temp;
  3124     0459  0877               	movf	I2C_Master_Read@temp+1,w
  3125     045A  00F3               	movwf	?_I2C_Master_Read+1
  3126     045B  0876               	movf	I2C_Master_Read@temp,w
  3127     045C  00F2               	movwf	?_I2C_Master_Read
  3128     045D                     l233:
  3129     045D  0008               	return
  3130     045E                     __end_of_I2C_Master_Read:
  3131                           
  3132                           	psect	text18
  3133     0521                     __ptext18:	
  3134 ;; *************** function _I2C_Master_Wait *****************
  3135 ;; Defined at:
  3136 ;;		line 29 in file "IIC.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;		None
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;		None
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  1    wreg      void 
  3143 ;; Registers used:
  3144 ;;		wreg, status,2
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3150 ;;      Params:         0       0       0       0       0
  3151 ;;      Locals:         0       0       0       0       0
  3152 ;;      Temps:          0       0       0       0       0
  3153 ;;      Totals:         0       0       0       0       0
  3154 ;;Total ram usage:        0 bytes
  3155 ;; Hardware stack levels used: 1
  3156 ;; Hardware stack levels required when called: 1
  3157 ;; This function calls:
  3158 ;;		Nothing
  3159 ;; This function is called by:
  3160 ;;		_I2C_Master_Start
  3161 ;;		_I2C_Master_Stop
  3162 ;;		_I2C_Master_Write
  3163 ;;		_I2C_Master_Read
  3164 ;;		_I2C_Master_RepeatedStart
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168     0521                     _I2C_Master_Wait:	
  3169                           ;psect for function _I2C_Master_Wait
  3170                           
  3171     0521                     l1288:	
  3172                           ;incstack = 0
  3173                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3174                           
  3175     0521                     l213:	
  3176                           ;IIC.c: 31:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3177                           
  3178     0521  1683               	bsf	3,5	;RP0=1, select bank1
  3179     0522  1303               	bcf	3,6	;RP1=0, select bank1
  3180     0523  1914               	btfsc	20,2	;volatile
  3181     0524  2D26               	goto	u611
  3182     0525  2D27               	goto	u610
  3183     0526                     u611:
  3184     0526  2D21               	goto	l213
  3185     0527                     u610:
  3186     0527                     l1290:
  3187     0527  0811               	movf	17,w	;volatile
  3188     0528  391F               	andlw	31
  3189     0529  1D03               	btfss	3,2
  3190     052A  2D2C               	goto	u621
  3191     052B  2D2D               	goto	u620
  3192     052C                     u621:
  3193     052C  2D21               	goto	l213
  3194     052D                     u620:
  3195     052D                     l216:
  3196     052D  0008               	return
  3197     052E                     __end_of_I2C_Master_Wait:
  3198                           
  3199                           	psect	text19
  3200     045E                     __ptext19:	
  3201 ;; *************** function _isr *****************
  3202 ;; Defined at:
  3203 ;;		line 81 in file "main.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;		None
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;		None
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  1    wreg      void 
  3210 ;; Registers used:
  3211 ;;		wreg
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3217 ;;      Params:         0       0       0       0       0
  3218 ;;      Locals:         0       0       0       0       0
  3219 ;;      Temps:          2       0       0       0       0
  3220 ;;      Totals:         2       0       0       0       0
  3221 ;;Total ram usage:        2 bytes
  3222 ;; Hardware stack levels used: 1
  3223 ;; This function calls:
  3224 ;;		Nothing
  3225 ;; This function is called by:
  3226 ;;		Interrupt level 1
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230     045E                     _isr:	
  3231                           ;psect for function _isr
  3232                           
  3233     045E                     i1l1064:
  3234                           
  3235                           ;main.c: 84:     if (PIR1bits.SSPIF){
  3236     045E  1283               	bcf	3,5	;RP0=0, select bank0
  3237     045F  1303               	bcf	3,6	;RP1=0, select bank0
  3238     0460  1D8C               	btfss	12,3	;volatile
  3239     0461  2C63               	goto	u35_21
  3240     0462  2C64               	goto	u35_20
  3241     0463                     u35_21:
  3242     0463  2C65               	goto	i1l101
  3243     0464                     u35_20:
  3244     0464                     i1l1066:
  3245                           
  3246                           ;main.c: 85:         PIR1bits.SSPIF = 0;
  3247     0464  118C               	bcf	12,3	;volatile
  3248     0465                     i1l101:	
  3249                           ;main.c: 86:     }
  3250                           
  3251                           
  3252                           ;main.c: 89:     if (PIR1bits.TXIF){
  3253     0465  1E0C               	btfss	12,4	;volatile
  3254     0466  2C68               	goto	u36_21
  3255     0467  2C69               	goto	u36_20
  3256     0468                     u36_21:
  3257     0468  2C6A               	goto	i1l102
  3258     0469                     u36_20:
  3259     0469                     i1l1068:
  3260                           
  3261                           ;main.c: 90:         PIR1bits.TXIF = 0;
  3262     0469  120C               	bcf	12,4	;volatile
  3263     046A                     i1l102:	
  3264                           ;main.c: 91:     }
  3265                           
  3266                           
  3267                           ;main.c: 94:     if (PIR1bits.RCIF){
  3268     046A  1E8C               	btfss	12,5	;volatile
  3269     046B  2C6D               	goto	u37_21
  3270     046C  2C6E               	goto	u37_20
  3271     046D                     u37_21:
  3272     046D  2C6F               	goto	i1l103
  3273     046E                     u37_20:
  3274     046E                     i1l1070:
  3275                           
  3276                           ;main.c: 95:         PIR1bits.RCIF = 0;
  3277     046E  128C               	bcf	12,5	;volatile
  3278     046F                     i1l103:	
  3279                           ;main.c: 96:     }
  3280                           
  3281                           
  3282                           ;main.c: 99:     if (PIR1bits.ADIF){
  3283     046F  1F0C               	btfss	12,6	;volatile
  3284     0470  2C72               	goto	u38_21
  3285     0471  2C73               	goto	u38_20
  3286     0472                     u38_21:
  3287     0472  2C74               	goto	i1l104
  3288     0473                     u38_20:
  3289     0473                     i1l1072:
  3290                           
  3291                           ;main.c: 100:         PIR1bits.ADIF = 0;
  3292     0473  130C               	bcf	12,6	;volatile
  3293     0474                     i1l104:	
  3294                           ;main.c: 101:     }
  3295                           
  3296                           
  3297                           ;main.c: 104:     if (INTCONbits.T0IF){
  3298     0474  1D0B               	btfss	11,2	;volatile
  3299     0475  2C77               	goto	u39_21
  3300     0476  2C78               	goto	u39_20
  3301     0477                     u39_21:
  3302     0477  2C7B               	goto	i1l1078
  3303     0478                     u39_20:
  3304     0478                     i1l1074:
  3305                           
  3306                           ;main.c: 105:         TMR0 = 179;
  3307     0478  30B3               	movlw	179
  3308     0479  0081               	movwf	1	;volatile
  3309     047A                     i1l1076:
  3310                           
  3311                           ;main.c: 106:         INTCONbits.T0IF = 0;
  3312     047A  110B               	bcf	11,2	;volatile
  3313     047B                     i1l1078:
  3314                           
  3315                           ;main.c: 110:     if (INTCONbits.RBIF){
  3316     047B  1C0B               	btfss	11,0	;volatile
  3317     047C  2C7E               	goto	u40_21
  3318     047D  2C7F               	goto	u40_20
  3319     047E                     u40_21:
  3320     047E  2C80               	goto	i1l107
  3321     047F                     u40_20:
  3322     047F                     i1l1080:
  3323                           
  3324                           ;main.c: 111:         INTCONbits.RBIF = 0;
  3325     047F  100B               	bcf	11,0	;volatile
  3326     0480                     i1l107:
  3327     0480  0871               	movf	??_isr+1,w
  3328     0481  008A               	movwf	10
  3329     0482  0E70               	swapf	??_isr,w
  3330     0483  0083               	movwf	3
  3331     0484  0EFE               	swapf	btemp,f
  3332     0485  0E7E               	swapf	btemp,w
  3333     0486  0009               	retfie
  3334     0487                     __end_of_isr:
  3335     007E                     btemp	set	126	;btemp
  3336     007E                     wtemp0	set	126
  3337                           
  3338                           	psect	intentry
  3339     0004                     __pintentry:	
  3340                           ;incstack = 0
  3341                           ; Regs used in _isr: [wreg]
  3342                           
  3343     0004                     interrupt_function:
  3344     007E                     saved_w	set	btemp
  3345     0004  00FE               	movwf	btemp
  3346     0005  0E03               	swapf	3,w
  3347     0006  00F0               	movwf	??_isr
  3348     0007  080A               	movf	10,w
  3349     0008  00F1               	movwf	??_isr+1
  3350     0009  120A  118A  2C5E   	ljmp	_isr
  3351                           
  3352                           	psect	idloc
  3353                           
  3354                           ;Config register IDLOC0 @ 0x2000
  3355                           ;	unspecified, using default values
  3356     2000                     	org	8192
  3357     2000  3FFF               	dw	16383
  3358                           
  3359                           ;Config register IDLOC1 @ 0x2001
  3360                           ;	unspecified, using default values
  3361     2001                     	org	8193
  3362     2001  3FFF               	dw	16383
  3363                           
  3364                           ;Config register IDLOC2 @ 0x2002
  3365                           ;	unspecified, using default values
  3366     2002                     	org	8194
  3367     2002  3FFF               	dw	16383
  3368                           
  3369                           ;Config register IDLOC3 @ 0x2003
  3370                           ;	unspecified, using default values
  3371     2003                     	org	8195
  3372     2003  3FFF               	dw	16383
  3373                           
  3374                           	psect	config
  3375                           
  3376                           ;Config register CONFIG1 @ 0x2007
  3377                           ;	Oscillator Selection bits
  3378                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3379                           ;	Watchdog Timer Enable bit
  3380                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3381                           ;	Power-up Timer Enable bit
  3382                           ;	PWRTE = OFF, PWRT disabled
  3383                           ;	RE3/MCLR pin function select bit
  3384                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3385                           ;	Code Protection bit
  3386                           ;	CP = OFF, Program memory code protection is disabled
  3387                           ;	Data Code Protection bit
  3388                           ;	CPD = OFF, Data memory code protection is disabled
  3389                           ;	Brown Out Reset Selection bits
  3390                           ;	BOREN = OFF, BOR disabled
  3391                           ;	Internal External Switchover bit
  3392                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3393                           ;	Fail-Safe Clock Monitor Enabled bit
  3394                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3395                           ;	Low Voltage Programming Enable bit
  3396                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3397                           ;	In-Circuit Debugger Mode bit
  3398                           ;	DEBUG = 0x1, unprogramme  3399     2007                     	org	8199
  3400     2007  20D4               	dw	8404
  3401                           
  3402                           ;Config register CONFIG2 @ 0x2008
  3403                           ;	Brown-out Reset Selection bit
  3404                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3405                           ;	Flash Program Memory Self Write Enable bits
  3406                           ;	WRT = OFF, Write protection off
  3407     2008                     	org	8200
  3408     2008  3FFF               	dw	16383

Data Sizes:
    Strings     22
    Constant    0
    Data        0
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     17      45
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 9
		 -> STR_4(CODE[2]), STR_3(CODE[4]), STR_2(CODE[7]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _main->___lwdiv
    _I2C_Master_Init->___lldiv
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4272
                                             14 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___lwdiv
                            ___lwmod
                           _initUART
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     542
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     592
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     528
                                              7 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1    1085
                                              6 COMMON     2     1      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     250
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)
   _initUART
   _setup
     _I2C_Master_Init
       ___lldiv

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      39       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     11      2D       5       56.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      39      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 08 16:56:57 2023

                       _i 002E                         pc 0002                        fsr 0004  
                     l210 03C7                       l123 042F                       l116 01EC  
                     l213 0521                       l126 0513                       l231 0455  
                     l151 04CD                       l143 04B5                       l216 052D  
                     l232 0458                       l144 04B8                       l233 045D  
                     l225 0540                       l145 04BE                       l146 04BF  
                     l154 0503                       l219 0549                       l147 04C5  
                     l163 030F                       l228 0537                       l148 04C6  
                     l149 04CC                       l157 0520                       l166 02C3  
                     l175 04AB                       l169 03FC                       l604 038F  
                     l358 0266                       l594 0353                       _GIE 005F  
                     _RD3 0043                       _RD4 0044                       _RD5 0045  
                     _RD6 0046                       _RD7 0047                       u610 0527  
                     u611 0526                       u620 052D                       u621 052C  
                     u630 0451                       u710 032A                       u631 0450  
                     u711 0329                       u705 031C                       u730 033B  
                     u731 033A                       u900 04BC                       u901 04BB  
                     u725 032B                       u910 04C3                       u750 034F  
                     u911 04C2                       u751 034E                       u735 0337  
                     u920 04CA                       u921 04C9                       u745 0343  
                     u690 0318                       u930 0211                       u691 0317  
                     u931 0210                       u950 0225                       u951 0224  
                     u945 0216                       u890 04B1                       u970 0240  
                     u891 04B0                       u971 023F                       u965 0227  
                     u990 025E                       u991 025D                       u975 023C  
                     u985 0250                       _isr 045E                       fsr0 0004  
                     indf 0000                      l1400 0310                      l1320 0504  
                    l1410 0326                      l1402 0312                      l1330 0512  
                    l1322 0508                      l1420 0349                      l1412 032A  
                    l1404 0318                      l1324 0509                      l1350 0533  
                    l1414 033B                      l1406 031B                      l1422 034F  
                    l1326 050C                      l1360 044B                      l1352 0430  
                    l1344 0541                      l1600 03CF                      l1416 0341  
                    l1408 0322                      l1328 050F                      l1290 0527  
                    l1362 0451                      l1354 0435                      l1346 0546  
                    l1370 053D                      l1610 03EB                      l1602 03D2  
                    l1418 0342                      l1364 0459                      l1356 043D  
                    l1348 052E                      l1612 03F1                      l1604 03E0  
                    l1700 0488                      l1620 0394                      l1358 0446  
                    l1630 04EB                      l1614 03F4                      l1606 03E3  
                    l1702 048B                      l1710 035C                      l1622 0397  
                    l1288 0521                      l1368 0538                      l1632 04EE  
                    l1616 03F9                      l1608 03E8                      l1704 0498  
                    l1720 0378                      l1712 035F                      l1624 03C4  
                    l1640 03FD                      l1800 0180                      l1570 04C3  
                    l1634 04F4                      l1706 049E                      l1722 037E  
                    l1714 0366                      l1626 03C5                      l1618 0390  
                    l1650 0413                      l1642 040D                      l1810 01A0  
                    l1802 0186                      l1730 001E                      l1572 04CA  
                    l1564 04AD                      l1636 04F7                      l1724 0385  
                    l1716 036A                      l1708 0354                      l1580 0221  
                    l1628 03C6                      l1660 041A                      l1652 0414  
                    l1644 0410                      l1820 01CA                      l1804 018C  
                    l1812 01A9                      l1740 0046                      l1732 002C  
                    l1566 04B1                      l1638 0500                      l1670 026D  
                    l1718 036E                      l1726 038B                      l1590 024F  
                    l1582 0225                      l1574 01FF                      l1662 041B  
                    l1654 0415                      l1646 0411                      l1830 01D8  
                    l1822 01CD                      l1814 01AF                      l1806 018E  
                    l1750 007A                      l1742 004B                      l1734 0031  
                    l1568 04BC                      l1672 0276                      l1680 02C7  
                    l1592 0258                      l1584 022E                      l1576 0211  
                    l1664 041F                      l1656 0418                      l1648 0412  
                    l1832 01DE                      l1824 01CE                      l1816 01B9  
                    l1808 019D                      l1760 00B2                      l1752 0083  
                    l1744 0054                      l1736 003C                      l1674 0285  
                    l1682 02CC                      l1690 02EB                      l1586 0240  
                    l1578 0214                      l1594 025E                      l1666 0420  
                    l1658 0419                      l1834 01E5                      l1818 01BB  
                    l1826 01D0                      l1770 00E9                      l1762 00C0  
                    l1754 0091                      l1746 0062                      l1738 0041  
                    l1676 028B                      l1668 0267                      l1692 02F1  
                    l1684 02D9                      l1588 024E                      l1836 01E7  
                    l1828 01D6                      l1780 010E                      l1772 00EF  
                    l1764 00D3                      l1756 00A4                      l1748 0075  
                    l1678 0514                      l1694 02FE                      l1686 02DC  
                    l1598 03C9                      l1790 015A                      l1782 0116  
                    l1774 00F7                      l1766 00DB                      l1758 00A9  
                    l1696 0301                      l1688 02E2                      l1792 0163  
                    l1784 011F                      l1776 00FD                      l1768 00E1  
                    l1698 0307                      l1794 016C                      l1786 0141  
                    l1778 0105                      l1796 0172                      l1788 0152  
                    l1798 0178                      ?_isr 0070                      STR_1 04D4  
                    STR_2 04DD                      STR_3 04E4                      STR_4 04E8  
                    u1010 03A7                      u1020 02CC                      u1100 0378  
                    u1021 02CB                      u1005 03D5                      u1101 0377  
                    u1015 03A2                      u1040 02F1                      u1120 038B  
                    u1041 02F0                      u1121 038A                      u1105 0374  
                    u1130 0180                      u1035 02D2                      u1115 037F  
                    u1131 017F                      u1060 04AB                      u1140 0186  
                    u1061 04AA                      u1141 0185                      u1070 035C  
                    u1150 018C                      u1055 02F7                      u1071 035B  
                    u1151 018B                      u1207 0026                      u1160 01AF  
                    u1161 01AE                      u1217 006F                      u1090 036E  
                    u1170 01B9                      u1307 0280                      u1091 036D  
                    u1171 01B8                      u1227 009E                      u1180 01D6  
                    u1317 028F                      u1085 0360                      u1181 01D5  
                    u1237 00CD                      u1190 01E5                      u1327 04FB  
                    u1191 01E4                      u1175 01B5                      u1247 0196  
                    u1257 01C3                      u1267 01F4                      u1277 03E5  
                    u1287 03F6                      u1297 0271                      _PEIE 005E  
                    _TMR0 0001         ?_Lcd_Write_String 0070                      _flag 0030  
                    _cont 007A                      _main 001E                      _ones 003A  
                    _tens 003B                      btemp 007E                      start 000C  
      ??_Lcd_Write_String 0077           __end_of_Lcd_Cmd 0504                     ??_isr 0070  
        ?_I2C_Master_Init 0042          ?_I2C_Master_Read 0072          ?_I2C_Master_Wait 0070  
        ?_I2C_Master_Stop 0070                     ?_main 0070                     _ANSEL 0188  
         __end_of___lldiv 0267           __end_of___lwdiv 0354                     i1l101 0465  
                   i1l102 046A                     i1l103 046F                     i1l104 0474  
                   i1l107 0480           __end_of___lwmod 0390                     _TEMP1 0020  
                   u40_20 047F                     u40_21 047E                     _SPBRG 0099  
                   u35_20 0464                     u35_21 0463                     _PORTA 0005  
                   _PORTB 0006                     _PORTD 0008                     _PORTE 0009  
                   u36_20 0469                     u36_21 0468                     u37_20 046E  
                   u37_21 046D                     u38_20 0473                     u38_21 0472  
                   u39_20 0478                     u39_21 0477                     _TRISA 0085  
                   _TRISB 0086                     _TRISD 0088                     _SSPIE 0463  
                   _TRISE 0089                     _SSPIF 0063                     _TXREG 0019  
                   _setup 03FD                     pclath 000A                     status 0003  
                   wtemp0 007E          __end_of_Lcd_Init 02C4          __end_of_Lcd_Port 04CE  
         __initialization 000F              __end_of_main 01FF                    ??_main 004A  
       ?_I2C_Master_Start 0070         ?_I2C_Master_Write 0072        ??_I2C_Master_Start 0072  
      ??_I2C_Master_Write 0074                    ?_setup 0070                    _ANSELH 0189  
                  i1l1070 046E                    i1l1080 047F                    i1l1072 0473  
                  i1l1064 045E                    i1l1074 0478                    i1l1066 0464  
                  i1l1076 047A                    i1l1068 0469                    i1l1078 047B  
               ??_Lcd_Cmd 0073             _espacios_comp 0034                    _SSPADD 0093  
                  _TRISC3 043B                    _TRISC4 043C                    _SSPCON 0014  
                  _SSPBUF 0013                 ??___lldiv 003C          __end_of_initUART 0514  
               ??___lwdiv 0076                 ??___lwmod 0040                    saved_w 007E  
         Lcd_Set_Cursor@a 003C           Lcd_Set_Cursor@b 0076           Lcd_Set_Cursor@y 003E  
         Lcd_Set_Cursor@z 003D   __end_of__initialization 001A         __end_of_Lcd_Clear 0521  
          __pcstackCOMMON 0070             __end_of_setup 0430            _Lcd_Set_Cursor 02C4  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070                   ??_setup 007A  
              __pbssBANK0 0020                __pmaintext 001E                __pintentry 0004  
  __end_of_Lcd_Set_Cursor 0310                ??_Lcd_Init 0076                ??_Lcd_Port 0072  
                 _SSPCON2 0091                   _SSPSTAT 0094                __stringtab 04CE  
               ?_initUART 0070            _Lcd_Write_Char 03C8                   _Lcd_Cmd 04EA  
                 ___lldiv 01FF                   ___lwdiv 0310                   ___lwmod 0354  
         ?_Lcd_Set_Cursor 0076                   __ptext1 03FD                   __ptext2 0390  
                 __ptext3 01FF                   __ptext4 0504                   __ptext5 0354  
                 __ptext6 0310                   __ptext7 0487                   __ptext8 03C8  
                 __ptext9 02C4                   clrloop0 054B    __end_of_Lcd_Write_Char 03FD  
    end_of_initialization 001A                ??_initUART 0072           ___lldiv@divisor 0072  
         ___lldiv@counter 0041                 _RCSTAbits 0018          I2C_Master_Init@c 0042  
        I2C_Master_Read@a 0072                 Lcd_Port@a 0072                 _PORTBbits 0006  
               _PORTDbits 0008                 _TRISCbits 0087           ?_Lcd_Write_Char 0070  
              _proximidad 0038         Lcd_Write_String@a 0079         Lcd_Write_String@i 0077  
               _TXSTAbits 0098                 _Lcd_Clear 0514          _Lcd_Write_String 0487  
     start_initialization 000F               __end_of_isr 0487         ??_I2C_Master_Init 0046  
       ??_I2C_Master_Read 0074         ??_I2C_Master_Wait 0072         ??_I2C_Master_Stop 0072  
              ?_Lcd_Clear 0070           Lcd_Write_Char@a 0076           Lcd_Write_Char@y 0075  
             __pbssCOMMON 007A                 ___latbits 0002             __pcstackBANK0 003C  
                ?_Lcd_Cmd 0070          _I2C_Master_Start 0541          _I2C_Master_Write 052E  
        ___lwdiv@dividend 0074          ??_Lcd_Set_Cursor 0077                  ?___lldiv 0072  
                ?___lwdiv 0072                  ?___lwmod 003C                 __pstrings 04CE  
        ___lwdiv@quotient 0077         interrupt_function 0004                 clear_ram0 054A  
                _PIE1bits 008C                  Lcd_Cmd@a 0075                  _PIR1bits 000C  
             ??_Lcd_Clear 0076                  _VOLTAJE1 0028               __stringbase 04D3  
        ??_Lcd_Write_Char 0073                  _Lcd_Init 0267                  _Lcd_Port 04AC  
     I2C_Master_Read@temp 0076  __end_of_Lcd_Write_String 04AC        __end_of__stringtab 04D4  
         _I2C_Master_Init 0390           _I2C_Master_Read 0430           _I2C_Master_Wait 0521  
         _I2C_Master_Stop 0538           ___lwdiv@divisor 0072           ___lwdiv@counter 0079  
                __ptext10 0267                  __ptext11 0514                  __ptext12 04EA  
                __ptext13 04AC                  __ptext14 052E                  __ptext15 0538  
                __ptext16 0541                  __ptext17 0430                  __ptext18 0521  
                __ptext19 045E                  _initUART 0504                  _espacios 0036  
                _temporal 002C                  _voltaje1 0024  __end_of_I2C_Master_Start 054A  
__end_of_I2C_Master_Write 0538                _INTCONbits 000B        Lcd_Write_Char@temp 0074  
                intlevel1 0000          ___lwmod@dividend 003E          ___lldiv@dividend 0076  
               stringcode 04CE                _OSCCONbits 008F   __end_of_I2C_Master_Init 03C8  
 __end_of_I2C_Master_Read 045E   __end_of_I2C_Master_Wait 052E   __end_of_I2C_Master_Stop 0541  
      Lcd_Set_Cursor@temp 003F               _temperatura 0032          ___lldiv@quotient 003D  
       I2C_Master_Write@d 0072           ___lwmod@divisor 003C           ___lwmod@counter 0041  
                stringdir 04CE                  stringtab 04CE               _SSPCON2bits 0091  
