

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Mar 05 02:11:56 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	intentry,global,class=CODE,delta=2
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    57                           	dabs	1,0x7E,2
    58     0000                     
    59                           ; Version 2.40
    60                           ; Generated 17/11/2021 GMT
    61                           ; 
    62                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution. Publication is not required when
    76                           ;        this file is used in an embedded application.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC16F887 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94     0000                     	;# 
    95     0001                     	;# 
    96     0002                     	;# 
    97     0003                     	;# 
    98     0004                     	;# 
    99     0005                     	;# 
   100     0006                     	;# 
   101     0007                     	;# 
   102     0008                     	;# 
   103     0009                     	;# 
   104     000A                     	;# 
   105     000B                     	;# 
   106     000C                     	;# 
   107     000D                     	;# 
   108     000E                     	;# 
   109     000E                     	;# 
   110     000F                     	;# 
   111     0010                     	;# 
   112     0011                     	;# 
   113     0012                     	;# 
   114     0013                     	;# 
   115     0014                     	;# 
   116     0015                     	;# 
   117     0015                     	;# 
   118     0016                     	;# 
   119     0017                     	;# 
   120     0018                     	;# 
   121     0019                     	;# 
   122     001A                     	;# 
   123     001B                     	;# 
   124     001B                     	;# 
   125     001C                     	;# 
   126     001D                     	;# 
   127     001E                     	;# 
   128     001F                     	;# 
   129     0081                     	;# 
   130     0085                     	;# 
   131     0086                     	;# 
   132     0087                     	;# 
   133     0088                     	;# 
   134     0089                     	;# 
   135     008C                     	;# 
   136     008D                     	;# 
   137     008E                     	;# 
   138     008F                     	;# 
   139     0090                     	;# 
   140     0091                     	;# 
   141     0092                     	;# 
   142     0093                     	;# 
   143     0093                     	;# 
   144     0093                     	;# 
   145     0094                     	;# 
   146     0095                     	;# 
   147     0096                     	;# 
   148     0097                     	;# 
   149     0098                     	;# 
   150     0099                     	;# 
   151     009A                     	;# 
   152     009B                     	;# 
   153     009C                     	;# 
   154     009D                     	;# 
   155     009E                     	;# 
   156     009F                     	;# 
   157     0105                     	;# 
   158     0107                     	;# 
   159     0108                     	;# 
   160     0109                     	;# 
   161     010C                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     0185                     	;# 
   167     0187                     	;# 
   168     0188                     	;# 
   169     0189                     	;# 
   170     018C                     	;# 
   171     018D                     	;# 
   172     0000                     	;# 
   173     0001                     	;# 
   174     0002                     	;# 
   175     0003                     	;# 
   176     0004                     	;# 
   177     0005                     	;# 
   178     0006                     	;# 
   179     0007                     	;# 
   180     0008                     	;# 
   181     0009                     	;# 
   182     000A                     	;# 
   183     000B                     	;# 
   184     000C                     	;# 
   185     000D                     	;# 
   186     000E                     	;# 
   187     000E                     	;# 
   188     000F                     	;# 
   189     0010                     	;# 
   190     0011                     	;# 
   191     0012                     	;# 
   192     0013                     	;# 
   193     0014                     	;# 
   194     0015                     	;# 
   195     0015                     	;# 
   196     0016                     	;# 
   197     0017                     	;# 
   198     0018                     	;# 
   199     0019                     	;# 
   200     001A                     	;# 
   201     001B                     	;# 
   202     001B                     	;# 
   203     001C                     	;# 
   204     001D                     	;# 
   205     001E                     	;# 
   206     001F                     	;# 
   207     0081                     	;# 
   208     0085                     	;# 
   209     0086                     	;# 
   210     0087                     	;# 
   211     0088                     	;# 
   212     0089                     	;# 
   213     008C                     	;# 
   214     008D                     	;# 
   215     008E                     	;# 
   216     008F                     	;# 
   217     0090                     	;# 
   218     0091                     	;# 
   219     0092                     	;# 
   220     0093                     	;# 
   221     0093                     	;# 
   222     0093                     	;# 
   223     0094                     	;# 
   224     0095                     	;# 
   225     0096                     	;# 
   226     0097                     	;# 
   227     0098                     	;# 
   228     0099                     	;# 
   229     009A                     	;# 
   230     009B                     	;# 
   231     009C                     	;# 
   232     009D                     	;# 
   233     009E                     	;# 
   234     009F                     	;# 
   235     0105                     	;# 
   236     0107                     	;# 
   237     0108                     	;# 
   238     0109                     	;# 
   239     010C                     	;# 
   240     010C                     	;# 
   241     010D                     	;# 
   242     010E                     	;# 
   243     010F                     	;# 
   244     0185                     	;# 
   245     0187                     	;# 
   246     0188                     	;# 
   247     0189                     	;# 
   248     018C                     	;# 
   249     018D                     	;# 
   250     0000                     	;# 
   251     0001                     	;# 
   252     0002                     	;# 
   253     0003                     	;# 
   254     0004                     	;# 
   255     0005                     	;# 
   256     0006                     	;# 
   257     0007                     	;# 
   258     0008                     	;# 
   259     0009                     	;# 
   260     000A                     	;# 
   261     000B                     	;# 
   262     000C                     	;# 
   263     000D                     	;# 
   264     000E                     	;# 
   265     000E                     	;# 
   266     000F                     	;# 
   267     0010                     	;# 
   268     0011                     	;# 
   269     0012                     	;# 
   270     0013                     	;# 
   271     0014                     	;# 
   272     0015                     	;# 
   273     0015                     	;# 
   274     0016                     	;# 
   275     0017                     	;# 
   276     0018                     	;# 
   277     0019                     	;# 
   278     001A                     	;# 
   279     001B                     	;# 
   280     001B                     	;# 
   281     001C                     	;# 
   282     001D                     	;# 
   283     001E                     	;# 
   284     001F                     	;# 
   285     0081                     	;# 
   286     0085                     	;# 
   287     0086                     	;# 
   288     0087                     	;# 
   289     0088                     	;# 
   290     0089                     	;# 
   291     008C                     	;# 
   292     008D                     	;# 
   293     008E                     	;# 
   294     008F                     	;# 
   295     0090                     	;# 
   296     0091                     	;# 
   297     0092                     	;# 
   298     0093                     	;# 
   299     0093                     	;# 
   300     0093                     	;# 
   301     0094                     	;# 
   302     0095                     	;# 
   303     0096                     	;# 
   304     0097                     	;# 
   305     0098                     	;# 
   306     0099                     	;# 
   307     009A                     	;# 
   308     009B                     	;# 
   309     009C                     	;# 
   310     009D                     	;# 
   311     009E                     	;# 
   312     009F                     	;# 
   313     0105                     	;# 
   314     0107                     	;# 
   315     0108                     	;# 
   316     0109                     	;# 
   317     010C                     	;# 
   318     010C                     	;# 
   319     010D                     	;# 
   320     010E                     	;# 
   321     010F                     	;# 
   322     0185                     	;# 
   323     0187                     	;# 
   324     0188                     	;# 
   325     0189                     	;# 
   326     018C                     	;# 
   327     018D                     	;# 
   328     0000                     	;# 
   329     0001                     	;# 
   330     0002                     	;# 
   331     0003                     	;# 
   332     0004                     	;# 
   333     0005                     	;# 
   334     0006                     	;# 
   335     0007                     	;# 
   336     0008                     	;# 
   337     0009                     	;# 
   338     000A                     	;# 
   339     000B                     	;# 
   340     000C                     	;# 
   341     000D                     	;# 
   342     000E                     	;# 
   343     000E                     	;# 
   344     000F                     	;# 
   345     0010                     	;# 
   346     0011                     	;# 
   347     0012                     	;# 
   348     0013                     	;# 
   349     0014                     	;# 
   350     0015                     	;# 
   351     0015                     	;# 
   352     0016                     	;# 
   353     0017                     	;# 
   354     0018                     	;# 
   355     0019                     	;# 
   356     001A                     	;# 
   357     001B                     	;# 
   358     001B                     	;# 
   359     001C                     	;# 
   360     001D                     	;# 
   361     001E                     	;# 
   362     001F                     	;# 
   363     0081                     	;# 
   364     0085                     	;# 
   365     0086                     	;# 
   366     0087                     	;# 
   367     0088                     	;# 
   368     0089                     	;# 
   369     008C                     	;# 
   370     008D                     	;# 
   371     008E                     	;# 
   372     008F                     	;# 
   373     0090                     	;# 
   374     0091                     	;# 
   375     0092                     	;# 
   376     0093                     	;# 
   377     0093                     	;# 
   378     0093                     	;# 
   379     0094                     	;# 
   380     0095                     	;# 
   381     0096                     	;# 
   382     0097                     	;# 
   383     0098                     	;# 
   384     0099                     	;# 
   385     009A                     	;# 
   386     009B                     	;# 
   387     009C                     	;# 
   388     009D                     	;# 
   389     009E                     	;# 
   390     009F                     	;# 
   391     0105                     	;# 
   392     0107                     	;# 
   393     0108                     	;# 
   394     0109                     	;# 
   395     010C                     	;# 
   396     010C                     	;# 
   397     010D                     	;# 
   398     010E                     	;# 
   399     010F                     	;# 
   400     0185                     	;# 
   401     0187                     	;# 
   402     0188                     	;# 
   403     0189                     	;# 
   404     018C                     	;# 
   405     018D                     	;# 
   406                           
   407                           	psect	idataBANK3
   408     1BAB                     __pidataBANK3:
   409                           
   410                           ;initializer for _FECHA
   411     1BAB  3432               	retlw	50
   412     1BAC  3433               	retlw	51
   413     1BAD  3430               	retlw	48
   414     1BAE  3439               	retlw	57
   415     1BAF  3432               	retlw	50
   416     1BB0  3433               	retlw	51
   417     1BB1  3400               	retlw	0
   418                           
   419                           ;initializer for _HORA
   420     1BB2  3430               	retlw	48
   421     1BB3  3430               	retlw	48
   422     1BB4  3430               	retlw	48
   423     1BB5  3430               	retlw	48
   424     1BB6  3430               	retlw	48
   425     1BB7  3430               	retlw	48
   426     1BB8  3400               	retlw	0
   427                           
   428                           	psect	strings
   429     0800                     __pstrings:
   430     0800                     stringtab:
   431     0800                     __stringtab:
   432                           
   433                           ;	String table - string pointers are 1 byte each
   434     0800  1BFF               	btfsc	btemp+1,7
   435     0801  280A               	ljmp	stringcode
   436     0802  1383               	bcf	3,7
   437     0803  187F               	btfsc	btemp+1,0
   438     0804  1783               	bsf	3,7
   439     0805  0800               	movf	0,w
   440     0806  0A84               	incf	4,f
   441     0807  1903               	skipnz
   442     0808  0AFF               	incf	btemp+1,f
   443     0809  0008               	return
   444     080A                     stringcode:
   445     080A                     stringdir:
   446     080A  3008               	movlw	high stringdir
   447     080B  008A               	movwf	10
   448     080C  0804               	movf	4,w
   449     080D  0A84               	incf	4,f
   450     080E  0782               	addwf	2,f
   451     080F                     __stringbase:
   452     080F  3400               	retlw	0
   453     0810                     __end_of__stringtab:
   454     0810                     __powers_:
   455     0810  3400               	retlw	0
   456     0811  3400               	retlw	0
   457     0812  3480               	retlw	128
   458     0813  343F               	retlw	63
   459     0814  3400               	retlw	0
   460     0815  3400               	retlw	0
   461     0816  3420               	retlw	32
   462     0817  3441               	retlw	65
   463     0818  3400               	retlw	0
   464     0819  3400               	retlw	0
   465     081A  34C8               	retlw	200
   466     081B  3442               	retlw	66
   467     081C  3400               	retlw	0
   468     081D  3400               	retlw	0
   469     081E  347A               	retlw	122
   470     081F  3444               	retlw	68
   471     0820  3400               	retlw	0
   472     0821  3440               	retlw	64
   473     0822  341C               	retlw	28
   474     0823  3446               	retlw	70
   475     0824  3400               	retlw	0
   476     0825  3450               	retlw	80
   477     0826  34C3               	retlw	195
   478     0827  3447               	retlw	71
   479     0828  3400               	retlw	0
   480     0829  3424               	retlw	36
   481     082A  3474               	retlw	116
   482     082B  3449               	retlw	73
   483     082C  3480               	retlw	128
   484     082D  3496               	retlw	150
   485     082E  3418               	retlw	24
   486     082F  344B               	retlw	75
   487     0830  3420               	retlw	32
   488     0831  34BC               	retlw	188
   489     0832  34BE               	retlw	190
   490     0833  344C               	retlw	76
   491     0834  3428               	retlw	40
   492     0835  346B               	retlw	107
   493     0836  346E               	retlw	110
   494     0837  344E               	retlw	78
   495     0838  34F9               	retlw	249
   496     0839  3402               	retlw	2
   497     083A  3415               	retlw	21
   498     083B  3450               	retlw	80
   499     083C  34EC               	retlw	236
   500     083D  3478               	retlw	120
   501     083E  34AD               	retlw	173
   502     083F  3460               	retlw	96
   503     0840  34CA               	retlw	202
   504     0841  34F2               	retlw	242
   505     0842  3449               	retlw	73
   506     0843  3471               	retlw	113
   507     0844                     __end_of__powers_:
   508     0844                     __npowers_:
   509     0844  3400               	retlw	0
   510     0845  3400               	retlw	0
   511     0846  3480               	retlw	128
   512     0847  343F               	retlw	63
   513     0848  34CD               	retlw	205
   514     0849  34CC               	retlw	204
   515     084A  34CC               	retlw	204
   516     084B  343D               	retlw	61
   517     084C  340A               	retlw	10
   518     084D  34D7               	retlw	215
   519     084E  3423               	retlw	35
   520     084F  343C               	retlw	60
   521     0850  346F               	retlw	111
   522     0851  3412               	retlw	18
   523     0852  3483               	retlw	131
   524     0853  343A               	retlw	58
   525     0854  3417               	retlw	23
   526     0855  34B7               	retlw	183
   527     0856  34D1               	retlw	209
   528     0857  3438               	retlw	56
   529     0858  34AC               	retlw	172
   530     0859  34C5               	retlw	197
   531     085A  3427               	retlw	39
   532     085B  3437               	retlw	55
   533     085C  34BD               	retlw	189
   534     085D  3437               	retlw	55
   535     085E  3486               	retlw	134
   536     085F  3435               	retlw	53
   537     0860  3495               	retlw	149
   538     0861  34BF               	retlw	191
   539     0862  34D6               	retlw	214
   540     0863  3433               	retlw	51
   541     0864  3477               	retlw	119
   542     0865  34CC               	retlw	204
   543     0866  342B               	retlw	43
   544     0867  3432               	retlw	50
   545     0868  345F               	retlw	95
   546     0869  3470               	retlw	112
   547     086A  3489               	retlw	137
   548     086B  3430               	retlw	48
   549     086C  34FF               	retlw	255
   550     086D  34E6               	retlw	230
   551     086E  34DB               	retlw	219
   552     086F  342E               	retlw	46
   553     0870  3408               	retlw	8
   554     0871  34E5               	retlw	229
   555     0872  343C               	retlw	60
   556     0873  341E               	retlw	30
   557     0874  3460               	retlw	96
   558     0875  3442               	retlw	66
   559     0876  34A2               	retlw	162
   560     0877  340D               	retlw	13
   561     0878                     __end_of__npowers_:
   562     0878                     _dpowers:
   563     0878  3401               	retlw	1
   564     0879  3400               	retlw	0
   565     087A  3400               	retlw	0
   566     087B  3400               	retlw	0
   567     087C  340A               	retlw	10
   568     087D  3400               	retlw	0
   569     087E  3400               	retlw	0
   570     087F  3400               	retlw	0
   571     0880  3464               	retlw	100
   572     0881  3400               	retlw	0
   573     0882  3400               	retlw	0
   574     0883  3400               	retlw	0
   575     0884  34E8               	retlw	232
   576     0885  3403               	retlw	3
   577     0886  3400               	retlw	0
   578     0887  3400               	retlw	0
   579     0888  3410               	retlw	16
   580     0889  3427               	retlw	39
   581     088A  3400               	retlw	0
   582     088B  3400               	retlw	0
   583     088C  34A0               	retlw	160
   584     088D  3486               	retlw	134
   585     088E  3401               	retlw	1
   586     088F  3400               	retlw	0
   587     0890  3440               	retlw	64
   588     0891  3442               	retlw	66
   589     0892  340F               	retlw	15
   590     0893  3400               	retlw	0
   591     0894  3480               	retlw	128
   592     0895  3496               	retlw	150
   593     0896  3498               	retlw	152
   594     0897  3400               	retlw	0
   595     0898  3400               	retlw	0
   596     0899  34E1               	retlw	225
   597     089A  34F5               	retlw	245
   598     089B  3405               	retlw	5
   599     089C  3400               	retlw	0
   600     089D  34CA               	retlw	202
   601     089E  349A               	retlw	154
   602     089F  343B               	retlw	59
   603     08A0                     __end_of_dpowers:
   604     0013                     _SSPBUF	set	19
   605     0014                     _SSPCON	set	20
   606     0008                     _PORTDbits	set	8
   607     0009                     _PORTE	set	9
   608     0008                     _PORTD	set	8
   609     0006                     _PORTB	set	6
   610     0005                     _PORTA	set	5
   611     0001                     _TMR0	set	1
   612     000B                     _INTCONbits	set	11
   613     000C                     _PIR1bits	set	12
   614     0063                     _SSPIF	set	99
   615     005E                     _PEIE	set	94
   616     005F                     _GIE	set	95
   617     0043                     _RD3	set	67
   618     0047                     _RD7	set	71
   619     0046                     _RD6	set	70
   620     0045                     _RD5	set	69
   621     0044                     _RD4	set	68
   622     0091                     _SSPCON2bits	set	145
   623     0087                     _TRISCbits	set	135
   624     0094                     _SSPSTAT	set	148
   625     0093                     _SSPADD	set	147
   626     0091                     _SSPCON2	set	145
   627     008F                     _OSCCONbits	set	143
   628     008C                     _PIE1bits	set	140
   629     0089                     _TRISE	set	137
   630     0088                     _TRISD	set	136
   631     0086                     _TRISB	set	134
   632     0085                     _TRISA	set	133
   633     0463                     _SSPIE	set	1123
   634     043C                     _TRISC4	set	1084
   635     043B                     _TRISC3	set	1083
   636     0189                     _ANSELH	set	393
   637     0188                     _ANSEL	set	392
   638     08A0                     STR_1:
   639     08A0  3457               	retlw	87	;'W'
   640     08A1  3465               	retlw	101	;'e'
   641     08A2  346C               	retlw	108	;'l'
   642     08A3  3463               	retlw	99	;'c'
   643     08A4  346F               	retlw	111	;'o'
   644     08A5  346D               	retlw	109	;'m'
   645     08A6  3465               	retlw	101	;'e'
   646     08A7  3421               	retlw	33	;'!'
   647     08A8  3400               	retlw	0
   648     08A9                     STR_2:
   649     08A9  3454               	retlw	84	;'T'
   650     08AA  3465               	retlw	101	;'e'
   651     08AB  346D               	retlw	109	;'m'
   652     08AC  3470               	retlw	112	;'p'
   653     08AD  343A               	retlw	58	;':'
   654     08AE  3420               	retlw	32	;' '
   655     08AF  3400               	retlw	0
   656     08B0                     STR_4:
   657     08B0  3425               	retlw	37	;'%'
   658     08B1  342E               	retlw	46	;'.'
   659     08B2  3431               	retlw	49	;'1'
   660     08B3  3466               	retlw	102	;'f'
   661     08B4  3400               	retlw	0
   662     08B5                     STR_3:
   663     08B5  3450               	retlw	80	;'P'
   664     08B6  342D               	retlw	45	;'-'
   665     08B7  343E               	retlw	62	;'>'
   666     08B8  3400               	retlw	0
   667     08B9                     STR_5:
   668     08B9  3443               	retlw	67	;'C'
   669     08BA  3400               	retlw	0
   670                           
   671                           	psect	cinit
   672     000F                     start_initialization:	
   673                           ; #config settings
   674                           
   675     000F                     __initialization:
   676                           
   677                           ; Initialize objects allocated to BANK3
   678     000F  1783               	bsf	3,7	;select IRP bank2
   679     0010  309E               	movlw	low (__pdataBANK3+14)
   680     0011  00FD               	movwf	btemp+-1
   681     0012  301B               	movlw	high __pidataBANK3
   682     0013  00FE               	movwf	btemp
   683     0014  30AB               	movlw	low __pidataBANK3
   684     0015  00FF               	movwf	btemp+1
   685     0016  3090               	movlw	low __pdataBANK3
   686     0017  0084               	movwf	4
   687     0018  160A  158A  23CF  120A  118A  	fcall	init_ram0
   688                           
   689                           ; Clear objects allocated to BANK1
   690     001D  1383               	bcf	3,7	;select IRP bank0
   691     001E  30C9               	movlw	low __pbssBANK1
   692     001F  0084               	movwf	4
   693     0020  30EA               	movlw	low (__pbssBANK1+33)
   694     0021  160A  118A  2000  120A  118A  	fcall	clear_ram0
   695                           
   696                           ; Clear objects allocated to BANK0
   697     0026  01EF               	clrf	__pbssBANK0& (0+127)
   698                           
   699                           ; Clear objects allocated to COMMON
   700     0027  01FA               	clrf	__pbssCOMMON& (0+127)
   701     0028  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   702     0029                     end_of_initialization:	
   703                           ;End of C runtime variable initialization code
   704                           
   705     0029                     __end_of__initialization:
   706     0029  0183               	clrf	3
   707     002A  120A  118A  2E92   	ljmp	_main	;jump to C main() function
   708                           
   709                           	psect	bssCOMMON
   710     007A                     __pbssCOMMON:
   711     007A                     _hundreds:
   712     007A                     	ds	1
   713     007B                     _thousands:
   714     007B                     	ds	1
   715                           
   716                           	psect	bssBANK0
   717     006F                     __pbssBANK0:
   718     006F                     _tens:
   719     006F                     	ds	1
   720                           
   721                           	psect	bssBANK1
   722     00C9                     __pbssBANK1:
   723     00C9                     _voltaje1:
   724     00C9                     	ds	4
   725     00CD                     _VOLTAJE1:
   726     00CD                     	ds	4
   727     00D1                     _temperatura:
   728     00D1                     	ds	4
   729     00D5                     _temporal:
   730     00D5                     	ds	2
   731     00D7                     _horas:
   732     00D7                     	ds	2
   733     00D9                     _cont:
   734     00D9                     	ds	2
   735     00DB                     _espacios:
   736     00DB                     	ds	2
   737     00DD                     _proximidad:
   738     00DD                     	ds	2
   739     00DF                     _year:
   740     00DF                     	ds	1
   741     00E0                     _month:
   742     00E0                     	ds	1
   743     00E1                     _day:
   744     00E1                     	ds	1
   745     00E2                     _hora:
   746     00E2                     	ds	1
   747     00E3                     _min:
   748     00E3                     	ds	1
   749     00E4                     _sec:
   750     00E4                     	ds	1
   751     00E5                     _ones:
   752     00E5                     	ds	1
   753     00E6                     _TEMP1:
   754     00E6                     	ds	4
   755                           
   756                           	psect	dataBANK3
   757     0190                     __pdataBANK3:
   758     0190                     _FECHA:
   759     0190                     	ds	7
   760     0197                     _HORA:
   761     0197                     	ds	7
   762                           
   763                           	psect	inittext
   764     1BCB                     init_fetch0:	
   765                           ;	Called with low address in FSR and high address in W
   766                           
   767     1BCB  087E               	movf	btemp,w
   768     1BCC  008A               	movwf	10
   769     1BCD  087F               	movf	btemp+1,w
   770     1BCE  0082               	movwf	2
   771     1BCF                     init_ram0:	
   772                           ;Called with:
   773                           ;	high address of idata address in btemp 
   774                           ;	low address of idata address in btemp+1 
   775                           ;	low address of data in FSR
   776                           ;	high address + 1 of data in btemp-1
   777                           
   778     1BCF  160A  158A  23CB  160A  158A  	fcall	init_fetch0
   779     1BD4  0080               	movwf	0
   780     1BD5  0A84               	incf	4,f
   781     1BD6  0804               	movf	4,w
   782     1BD7  067D               	xorwf	btemp+-1,w
   783     1BD8  1903               	btfsc	3,2
   784     1BD9  3400               	retlw	0
   785     1BDA  0AFF               	incf	btemp+1,f
   786     1BDB  1903               	btfsc	3,2
   787     1BDC  0AFE               	incf	btemp,f
   788     1BDD  2BCF               	goto	init_ram0
   789                           
   790                           	psect	clrtext
   791     1000                     clear_ram0:	
   792                           ;	Called with FSR containing the base address, and
   793                           ;	W with the last address+1
   794                           
   795     1000  0064               	clrwdt	;clear the watchdog before getting into this loop
   796     1001                     clrloop0:
   797     1001  0180               	clrf	0	;clear RAM location pointed to by FSR
   798     1002  0A84               	incf	4,f	;increment pointer
   799     1003  0604               	xorwf	4,w	;XOR with final address
   800     1004  1903               	btfsc	3,2	;have we reached the end yet?
   801     1005  3400               	retlw	0	;all done for this memory range, return
   802     1006  0604               	xorwf	4,w	;XOR again to restore value
   803     1007  2801               	goto	clrloop0	;do the next byte
   804                           
   805                           	psect	cstackBANK1
   806     00A0                     __pcstackBANK1:
   807     00A0                     ?___flsub:
   808     00A0                     ___flsub@a:	
   809                           ; 4 bytes @ 0x0
   810                           
   811                           
   812                           ; 4 bytes @ 0x0
   813     00A0                     	ds	4
   814     00A4                     ___flsub@b:
   815                           
   816                           ; 4 bytes @ 0x4
   817     00A4                     	ds	4
   818     00A8                     ??_sprintf:
   819                           
   820                           ; 1 bytes @ 0x8
   821     00A8                     	ds	5
   822     00AD                     _sprintf$1080:
   823                           
   824                           ; 4 bytes @ 0xD
   825     00AD                     	ds	4
   826     00B1                     sprintf@ap:
   827                           
   828                           ; 1 bytes @ 0x11
   829     00B1                     	ds	1
   830     00B2                     sprintf@flag:
   831                           
   832                           ; 2 bytes @ 0x12
   833     00B2                     	ds	2
   834     00B4                     sprintf@val:
   835                           
   836                           ; 4 bytes @ 0x14
   837     00B4                     	ds	4
   838     00B8                     sprintf@eexp:
   839                           
   840                           ; 2 bytes @ 0x18
   841     00B8                     	ds	2
   842     00BA                     sprintf@sp:
   843                           
   844                           ; 1 bytes @ 0x1A
   845     00BA                     	ds	1
   846     00BB                     sprintf@tmpval:
   847                           
   848                           ; 4 bytes @ 0x1B
   849     00BB                     	ds	4
   850     00BF                     sprintf@prec:
   851                           
   852                           ; 2 bytes @ 0x1F
   853     00BF                     	ds	2
   854     00C1                     sprintf@fval:
   855                           
   856                           ; 4 bytes @ 0x21
   857     00C1                     	ds	4
   858     00C5                     sprintf@c:
   859                           
   860                           ; 1 bytes @ 0x25
   861     00C5                     	ds	1
   862     00C6                     ??_main:
   863                           
   864                           ; 1 bytes @ 0x26
   865     00C6                     	ds	3
   866                           
   867                           	psect	cstackCOMMON
   868     0070                     __pcstackCOMMON:
   869     0070                     ?_isdigit:
   870     0070                     ?_setup:	
   871                           ; 1 bit 
   872                           
   873     0070                     ?_Lcd_Init:	
   874                           ; 1 bytes @ 0x0
   875                           
   876     0070                     ?_Lcd_Clear:	
   877                           ; 1 bytes @ 0x0
   878                           
   879     0070                     ?_I2C_Master_Start:	
   880                           ; 1 bytes @ 0x0
   881                           
   882     0070                     ?_I2C_Master_Stop:	
   883                           ; 1 bytes @ 0x0
   884                           
   885     0070                     ?_Lcd_Write_Char:	
   886                           ; 1 bytes @ 0x0
   887                           
   888     0070                     ?_isr:	
   889                           ; 1 bytes @ 0x0
   890                           
   891     0070                     ??_isr:	
   892                           ; 1 bytes @ 0x0
   893                           
   894     0070                     ?_main:	
   895                           ; 1 bytes @ 0x0
   896                           
   897     0070                     ?_Lcd_Port:	
   898                           ; 1 bytes @ 0x0
   899                           
   900     0070                     ?_Lcd_Cmd:	
   901                           ; 1 bytes @ 0x0
   902                           
   903     0070                     ?_I2C_Master_Wait:	
   904                           ; 1 bytes @ 0x0
   905                           
   906                           
   907                           ; 1 bytes @ 0x0
   908     0070                     	ds	2
   909     0072                     ?___fleq:
   910     0072                     ?___flge:	
   911                           ; 1 bit 
   912                           
   913     0072                     ??_I2C_Master_Start:	
   914                           ; 1 bit 
   915                           
   916     0072                     ?_I2C_Master_Write:	
   917                           ; 1 bytes @ 0x2
   918                           
   919     0072                     ??_I2C_Master_Stop:	
   920                           ; 1 bytes @ 0x2
   921                           
   922     0072                     ??_isdigit:	
   923                           ; 1 bytes @ 0x2
   924                           
   925     0072                     ??_Lcd_Port:	
   926                           ; 1 bytes @ 0x2
   927                           
   928     0072                     ??_I2C_Master_Wait:	
   929                           ; 1 bytes @ 0x2
   930                           
   931     0072                     ?_I2C_Master_Read:	
   932                           ; 1 bytes @ 0x2
   933                           
   934     0072                     ?__Umul8_16:	
   935                           ; 2 bytes @ 0x2
   936                           
   937     0072                     ?___wmul:	
   938                           ; 2 bytes @ 0x2
   939                           
   940     0072                     ?___awmod:	
   941                           ; 2 bytes @ 0x2
   942                           
   943     0072                     ?___lwmod:	
   944                           ; 2 bytes @ 0x2
   945                           
   946     0072                     ?__tdiv_to_l_:	
   947                           ; 2 bytes @ 0x2
   948                           
   949     0072                     ?__div_to_l_:	
   950                           ; 4 bytes @ 0x2
   951                           
   952     0072                     ?___lldiv:	
   953                           ; 4 bytes @ 0x2
   954                           
   955     0072                     ?___flneg:	
   956                           ; 4 bytes @ 0x2
   957                           
   958     0072                     ?___llmod:	
   959                           ; 4 bytes @ 0x2
   960                           
   961     0072                     Lcd_Port@a:	
   962                           ; 4 bytes @ 0x2
   963                           
   964     0072                     __Umul8_16@multiplicand:	
   965                           ; 1 bytes @ 0x2
   966                           
   967     0072                     _isdigit$890:	
   968                           ; 1 bytes @ 0x2
   969                           
   970     0072                     I2C_Master_Write@d:	
   971                           ; 1 bytes @ 0x2
   972                           
   973     0072                     I2C_Master_Read@a:	
   974                           ; 2 bytes @ 0x2
   975                           
   976     0072                     ___wmul@multiplier:	
   977                           ; 2 bytes @ 0x2
   978                           
   979     0072                     ___awmod@divisor:	
   980                           ; 2 bytes @ 0x2
   981                           
   982     0072                     ___lwmod@divisor:	
   983                           ; 2 bytes @ 0x2
   984                           
   985     0072                     ___lldiv@divisor:	
   986                           ; 2 bytes @ 0x2
   987                           
   988     0072                     __div_to_l_@f1:	
   989                           ; 4 bytes @ 0x2
   990                           
   991     0072                     ___fleq@ff1:	
   992                           ; 4 bytes @ 0x2
   993                           
   994     0072                     ___flge@ff1:	
   995                           ; 4 bytes @ 0x2
   996                           
   997     0072                     ___flneg@f1:	
   998                           ; 4 bytes @ 0x2
   999                           
  1000     0072                     __tdiv_to_l_@f1:	
  1001                           ; 4 bytes @ 0x2
  1002                           
  1003     0072                     ___llmod@divisor:	
  1004                           ; 4 bytes @ 0x2
  1005                           
  1006                           
  1007                           ; 4 bytes @ 0x2
  1008     0072                     	ds	1
  1009     0073                     ??_Lcd_Write_Char:
  1010     0073                     ??_Lcd_Cmd:	
  1011                           ; 1 bytes @ 0x3
  1012                           
  1013     0073                     isdigit@c:	
  1014                           ; 1 bytes @ 0x3
  1015                           
  1016                           
  1017                           ; 1 bytes @ 0x3
  1018     0073                     	ds	1
  1019     0074                     ??_I2C_Master_Write:
  1020     0074                     ??_I2C_Master_Read:	
  1021                           ; 1 bytes @ 0x4
  1022                           
  1023     0074                     ??__Umul8_16:	
  1024                           ; 1 bytes @ 0x4
  1025                           
  1026     0074                     Lcd_Write_Char@temp:	
  1027                           ; 1 bytes @ 0x4
  1028                           
  1029     0074                     ___wmul@multiplicand:	
  1030                           ; 1 bytes @ 0x4
  1031                           
  1032     0074                     ___awmod@dividend:	
  1033                           ; 2 bytes @ 0x4
  1034                           
  1035     0074                     ___lwmod@dividend:	
  1036                           ; 2 bytes @ 0x4
  1037                           
  1038                           
  1039                           ; 2 bytes @ 0x4
  1040     0074                     	ds	1
  1041     0075                     Lcd_Cmd@a:
  1042     0075                     Lcd_Write_Char@y:	
  1043                           ; 1 bytes @ 0x5
  1044                           
  1045                           
  1046                           ; 1 bytes @ 0x5
  1047     0075                     	ds	1
  1048     0076                     ??_Lcd_Init:
  1049     0076                     ??_Lcd_Clear:	
  1050                           ; 1 bytes @ 0x6
  1051                           
  1052     0076                     ?_Lcd_Set_Cursor:	
  1053                           ; 1 bytes @ 0x6
  1054                           
  1055     0076                     ??___wmul:	
  1056                           ; 1 bytes @ 0x6
  1057                           
  1058     0076                     ??___awmod:	
  1059                           ; 1 bytes @ 0x6
  1060                           
  1061     0076                     ??___flneg:	
  1062                           ; 1 bytes @ 0x6
  1063                           
  1064     0076                     ??___lwmod:	
  1065                           ; 1 bytes @ 0x6
  1066                           
  1067     0076                     Lcd_Set_Cursor@b:	
  1068                           ; 1 bytes @ 0x6
  1069                           
  1070     0076                     Lcd_Write_Char@a:	
  1071                           ; 1 bytes @ 0x6
  1072                           
  1073     0076                     I2C_Master_Read@temp:	
  1074                           ; 1 bytes @ 0x6
  1075                           
  1076     0076                     ___wmul@product:	
  1077                           ; 2 bytes @ 0x6
  1078                           
  1079     0076                     ___lldiv@dividend:	
  1080                           ; 2 bytes @ 0x6
  1081                           
  1082     0076                     __div_to_l_@f2:	
  1083                           ; 4 bytes @ 0x6
  1084                           
  1085     0076                     ___fleq@ff2:	
  1086                           ; 4 bytes @ 0x6
  1087                           
  1088     0076                     ___flge@ff2:	
  1089                           ; 4 bytes @ 0x6
  1090                           
  1091     0076                     __tdiv_to_l_@f2:	
  1092                           ; 4 bytes @ 0x6
  1093                           
  1094     0076                     ___llmod@dividend:	
  1095                           ; 4 bytes @ 0x6
  1096                           
  1097                           
  1098                           ; 4 bytes @ 0x6
  1099     0076                     	ds	1
  1100     0077                     ??_Lcd_Set_Cursor:
  1101     0077                     ?_Lcd_Write_String:	
  1102                           ; 1 bytes @ 0x7
  1103                           
  1104     0077                     ___awmod@counter:	
  1105                           ; 1 bytes @ 0x7
  1106                           
  1107     0077                     ___lwmod@counter:	
  1108                           ; 1 bytes @ 0x7
  1109                           
  1110     0077                     Lcd_Write_String@a:	
  1111                           ; 1 bytes @ 0x7
  1112                           
  1113                           
  1114                           ; 2 bytes @ 0x7
  1115     0077                     	ds	1
  1116     0078                     ??___lwdiv:
  1117     0078                     ___awmod@sign:	
  1118                           ; 1 bytes @ 0x8
  1119                           
  1120                           
  1121                           ; 1 bytes @ 0x8
  1122     0078                     	ds	1
  1123     0079                     ??___awdiv:
  1124                           
  1125                           ; 1 bytes @ 0x9
  1126     0079                     	ds	1
  1127     007A                     ??_setup:
  1128     007A                     ??___flsub:	
  1129                           ; 1 bytes @ 0xA
  1130                           
  1131                           
  1132                           	psect	cstackBANK0
  1133     0020                     __pcstackBANK0:	
  1134                           ; 1 bytes @ 0xA
  1135                           
  1136     0020                     ??_Lcd_Write_String:
  1137     0020                     ??__tdiv_to_l_:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140     0020                     ??__div_to_l_:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143     0020                     ??___lldiv:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146     0020                     ??___fleq:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149     0020                     ??___flge:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152     0020                     ??___llmod:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155     0020                     ?___awdiv:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158     0020                     ?___lwdiv:	
  1159                           ; 2 bytes @ 0x0
  1160                           
  1161     0020                     ?___xxtofl:	
  1162                           ; 2 bytes @ 0x0
  1163                           
  1164     0020                     Lcd_Set_Cursor@a:	
  1165                           ; 4 bytes @ 0x0
  1166                           
  1167     0020                     ___awdiv@divisor:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170     0020                     ___lwdiv@divisor:	
  1171                           ; 2 bytes @ 0x0
  1172                           
  1173     0020                     __Umul8_16@product:	
  1174                           ; 2 bytes @ 0x0
  1175                           
  1176     0020                     ___xxtofl@val:	
  1177                           ; 2 bytes @ 0x0
  1178                           
  1179                           
  1180                           ; 4 bytes @ 0x0
  1181     0020                     	ds	1
  1182     0021                     Lcd_Set_Cursor@z:
  1183     0021                     ___llmod@counter:	
  1184                           ; 1 bytes @ 0x1
  1185                           
  1186     0021                     ___lldiv@quotient:	
  1187                           ; 1 bytes @ 0x1
  1188                           
  1189     0021                     __div_to_l_@quot:	
  1190                           ; 4 bytes @ 0x1
  1191                           
  1192                           
  1193                           ; 4 bytes @ 0x1
  1194     0021                     	ds	1
  1195     0022                     Lcd_Set_Cursor@y:
  1196     0022                     ___awdiv@dividend:	
  1197                           ; 1 bytes @ 0x2
  1198                           
  1199     0022                     ___lwdiv@dividend:	
  1200                           ; 2 bytes @ 0x2
  1201                           
  1202     0022                     __Umul8_16@word_mpld:	
  1203                           ; 2 bytes @ 0x2
  1204                           
  1205                           
  1206                           ; 2 bytes @ 0x2
  1207     0022                     	ds	1
  1208     0023                     Lcd_Set_Cursor@temp:
  1209     0023                     Lcd_Write_String@i:	
  1210                           ; 1 bytes @ 0x3
  1211                           
  1212     0023                     __tdiv_to_l_@quot:	
  1213                           ; 2 bytes @ 0x3
  1214                           
  1215                           
  1216                           ; 4 bytes @ 0x3
  1217     0023                     	ds	1
  1218     0024                     ??___xxtofl:
  1219     0024                     ___awdiv@counter:	
  1220                           ; 1 bytes @ 0x4
  1221                           
  1222     0024                     ___lwdiv@counter:	
  1223                           ; 1 bytes @ 0x4
  1224                           
  1225     0024                     __Umul8_16@multiplier:	
  1226                           ; 1 bytes @ 0x4
  1227                           
  1228                           
  1229                           ; 1 bytes @ 0x4
  1230     0024                     	ds	1
  1231     0025                     ___lldiv@counter:
  1232     0025                     ___awdiv@sign:	
  1233                           ; 1 bytes @ 0x5
  1234                           
  1235     0025                     __div_to_l_@cntr:	
  1236                           ; 1 bytes @ 0x5
  1237                           
  1238     0025                     ___lwdiv@quotient:	
  1239                           ; 1 bytes @ 0x5
  1240                           
  1241                           
  1242                           ; 2 bytes @ 0x5
  1243     0025                     	ds	1
  1244     0026                     ?_I2C_Master_Init:
  1245     0026                     __div_to_l_@exp1:	
  1246                           ; 1 bytes @ 0x6
  1247                           
  1248     0026                     ___awdiv@quotient:	
  1249                           ; 1 bytes @ 0x6
  1250                           
  1251     0026                     I2C_Master_Init@c:	
  1252                           ; 2 bytes @ 0x6
  1253                           
  1254                           
  1255                           ; 4 bytes @ 0x6
  1256     0026                     	ds	1
  1257     0027                     __tdiv_to_l_@cntr:
  1258                           
  1259                           ; 1 bytes @ 0x7
  1260     0027                     	ds	1
  1261     0028                     ?___flmul:
  1262     0028                     __tdiv_to_l_@exp1:	
  1263                           ; 4 bytes @ 0x8
  1264                           
  1265     0028                     ___xxtofl@sign:	
  1266                           ; 1 bytes @ 0x8
  1267                           
  1268     0028                     ___flmul@b:	
  1269                           ; 1 bytes @ 0x8
  1270                           
  1271                           
  1272                           ; 4 bytes @ 0x8
  1273     0028                     	ds	1
  1274     0029                     ___xxtofl@exp:
  1275                           
  1276                           ; 1 bytes @ 0x9
  1277     0029                     	ds	1
  1278     002A                     ??_I2C_Master_Init:
  1279     002A                     ___xxtofl@arg:	
  1280                           ; 1 bytes @ 0xA
  1281                           
  1282                           
  1283                           ; 4 bytes @ 0xA
  1284     002A                     	ds	2
  1285     002C                     ___flmul@a:
  1286                           
  1287                           ; 4 bytes @ 0xC
  1288     002C                     	ds	4
  1289     0030                     ??___flmul:
  1290                           
  1291                           ; 1 bytes @ 0x10
  1292     0030                     	ds	5
  1293     0035                     ___flmul@sign:
  1294                           
  1295                           ; 1 bytes @ 0x15
  1296     0035                     	ds	1
  1297     0036                     ___flmul@aexp:
  1298                           
  1299                           ; 1 bytes @ 0x16
  1300     0036                     	ds	1
  1301     0037                     ___flmul@grs:
  1302                           
  1303                           ; 4 bytes @ 0x17
  1304     0037                     	ds	4
  1305     003B                     ___flmul@bexp:
  1306                           
  1307                           ; 1 bytes @ 0x1B
  1308     003B                     	ds	1
  1309     003C                     ___flmul@prod:
  1310                           
  1311                           ; 4 bytes @ 0x1C
  1312     003C                     	ds	4
  1313     0040                     ___flmul@temp:
  1314                           
  1315                           ; 2 bytes @ 0x20
  1316     0040                     	ds	2
  1317     0042                     ?_fround:
  1318     0042                     ?_scale:	
  1319                           ; 4 bytes @ 0x22
  1320                           
  1321                           
  1322                           ; 4 bytes @ 0x22
  1323     0042                     	ds	4
  1324     0046                     ??_fround:
  1325     0046                     ??_scale:	
  1326                           ; 1 bytes @ 0x26
  1327                           
  1328                           
  1329                           ; 1 bytes @ 0x26
  1330     0046                     	ds	7
  1331     004D                     _fround$1078:
  1332                           
  1333                           ; 4 bytes @ 0x2D
  1334     004D                     	ds	3
  1335     0050                     _scale$1079:
  1336                           
  1337                           ; 4 bytes @ 0x30
  1338     0050                     	ds	1
  1339     0051                     _fround$1077:
  1340                           
  1341                           ; 4 bytes @ 0x31
  1342     0051                     	ds	3
  1343     0054                     scale@scl:
  1344                           
  1345                           ; 1 bytes @ 0x34
  1346     0054                     	ds	1
  1347     0055                     ?___fltol:
  1348     0055                     fround@prec:	
  1349                           ; 4 bytes @ 0x35
  1350                           
  1351     0055                     ___fltol@f1:	
  1352                           ; 1 bytes @ 0x35
  1353                           
  1354                           
  1355                           ; 4 bytes @ 0x35
  1356     0055                     	ds	1
  1357     0056                     ?___fladd:
  1358     0056                     ___fladd@b:	
  1359                           ; 4 bytes @ 0x36
  1360                           
  1361                           
  1362                           ; 4 bytes @ 0x36
  1363     0056                     	ds	3
  1364     0059                     ??___fltol:
  1365                           
  1366                           ; 1 bytes @ 0x39
  1367     0059                     	ds	1
  1368     005A                     ___fladd@a:
  1369                           
  1370                           ; 4 bytes @ 0x3A
  1371     005A                     	ds	3
  1372     005D                     ___fltol@sign1:
  1373                           
  1374                           ; 1 bytes @ 0x3D
  1375     005D                     	ds	1
  1376     005E                     ??___fladd:
  1377     005E                     ___fltol@exp1:	
  1378                           ; 1 bytes @ 0x3E
  1379                           
  1380                           
  1381                           ; 1 bytes @ 0x3E
  1382     005E                     	ds	8
  1383     0066                     ___fladd@signs:
  1384                           
  1385                           ; 1 bytes @ 0x46
  1386     0066                     	ds	1
  1387     0067                     ___fladd@aexp:
  1388                           
  1389                           ; 1 bytes @ 0x47
  1390     0067                     	ds	1
  1391     0068                     ___fladd@bexp:
  1392                           
  1393                           ; 1 bytes @ 0x48
  1394     0068                     	ds	1
  1395     0069                     ___fladd@grs:
  1396                           
  1397                           ; 1 bytes @ 0x49
  1398     0069                     	ds	1
  1399     006A                     ?_sprintf:
  1400     006A                     sprintf@f:	
  1401                           ; 2 bytes @ 0x4A
  1402                           
  1403                           
  1404                           ; 1 bytes @ 0x4A
  1405     006A                     	ds	5
  1406                           
  1407                           	psect	maintext
  1408     0692                     __pmaintext:	
  1409 ;;
  1410 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1411 ;;
  1412 ;; *************** function _main *****************
  1413 ;; Defined at:
  1414 ;;		line 121 in file "main.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;		None
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;		None
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  1    wreg      void 
  1421 ;; Registers used:
  1422 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1423 ;; Tracked objects:
  1424 ;;		On entry : B00/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1428 ;;      Params:         0       0       0       0       0
  1429 ;;      Locals:         0       0       0       0       0
  1430 ;;      Temps:          0       0       3       0       0
  1431 ;;      Totals:         0       0       3       0       0
  1432 ;;Total ram usage:        3 bytes
  1433 ;; Hardware stack levels required when called: 5
  1434 ;; This function calls:
  1435 ;;		_I2C_Master_Read
  1436 ;;		_I2C_Master_Start
  1437 ;;		_I2C_Master_Stop
  1438 ;;		_I2C_Master_Write
  1439 ;;		_Lcd_Clear
  1440 ;;		_Lcd_Init
  1441 ;;		_Lcd_Set_Cursor
  1442 ;;		_Lcd_Write_Char
  1443 ;;		_Lcd_Write_String
  1444 ;;		___xxtofl
  1445 ;;		_setup
  1446 ;;		_sprintf
  1447 ;; This function is called by:
  1448 ;;		Startup code after reset
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452     0692                     _main:	
  1453                           ;psect for function _main
  1454                           
  1455     0692                     l4258:	
  1456                           ;incstack = 0
  1457                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1458                           
  1459                           
  1460                           ;main.c: 122:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1461     0692  3006               	movlw	6
  1462     0693  1683               	bsf	3,5	;RP0=1, select bank1
  1463     0694  1303               	bcf	3,6	;RP1=0, select bank1
  1464     0695  00C8               	movwf	(??_main^(0+128)+2)
  1465     0696  3013               	movlw	19
  1466     0697  00C7               	movwf	(??_main^(0+128)+1)
  1467     0698  30AD               	movlw	173
  1468     0699  00C6               	movwf	??_main^(0+128)
  1469     069A                     u7147:
  1470     069A  0BC6               	decfsz	??_main^(0+128),f
  1471     069B  2E9A               	goto	u7147
  1472     069C  0BC7               	decfsz	(??_main^(0+128)+1),f
  1473     069D  2E9A               	goto	u7147
  1474     069E  0BC8               	decfsz	(??_main^(0+128)+2),f
  1475     069F  2E9A               	goto	u7147
  1476     06A0                     l4260:
  1477                           
  1478                           ;main.c: 123:     setup();
  1479     06A0  160A  158A  2496  120A  118A  	fcall	_setup
  1480     06A5                     l4262:
  1481                           
  1482                           ;main.c: 124:     Lcd_Init();
  1483     06A5  160A  118A  2008  120A  118A  	fcall	_Lcd_Init
  1484     06AA                     l4264:
  1485                           
  1486                           ;main.c: 125:     Lcd_Clear();
  1487     06AA  160A  158A  239E  120A  118A  	fcall	_Lcd_Clear
  1488     06AF                     l4266:
  1489                           
  1490                           ;main.c: 129:         I2C_Master_Start();
  1491     06AF  160A  158A  2373  120A  118A  	fcall	_I2C_Master_Start
  1492     06B4                     l4268:
  1493                           
  1494                           ;main.c: 130:         I2C_Master_Write(0x51);
  1495     06B4  3051               	movlw	81
  1496     06B5  00F2               	movwf	I2C_Master_Write@d
  1497     06B6  3000               	movlw	0
  1498     06B7  00F3               	movwf	I2C_Master_Write@d+1
  1499     06B8  160A  158A  237C  120A  118A  	fcall	_I2C_Master_Write
  1500     06BD                     l4270:
  1501                           
  1502                           ;main.c: 131:         proximidad = I2C_Master_Read(0);
  1503     06BD  3000               	movlw	0
  1504     06BE  00F2               	movwf	I2C_Master_Read@a
  1505     06BF  00F3               	movwf	I2C_Master_Read@a+1
  1506     06C0  160A  158A  2468  120A  118A  	fcall	_I2C_Master_Read
  1507     06C5  0873               	movf	?_I2C_Master_Read+1,w
  1508     06C6  1683               	bsf	3,5	;RP0=1, select bank1
  1509     06C7  1303               	bcf	3,6	;RP1=0, select bank1
  1510     06C8  00DE               	movwf	(_proximidad+1)^(0+128)
  1511     06C9  0872               	movf	?_I2C_Master_Read,w
  1512     06CA  00DD               	movwf	_proximidad^(0+128)
  1513     06CB                     l4272:
  1514                           
  1515                           ;main.c: 132:         I2C_Master_Stop();
  1516     06CB  120A  118A  27F7  120A  118A  	fcall	_I2C_Master_Stop
  1517     06D0                     l4274:
  1518                           
  1519                           ;main.c: 133:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1520     06D0  3002               	movlw	2
  1521     06D1  1683               	bsf	3,5	;RP0=1, select bank1
  1522     06D2  1303               	bcf	3,6	;RP1=0, select bank1
  1523     06D3  00C8               	movwf	(??_main^(0+128)+2)
  1524     06D4  3004               	movlw	4
  1525     06D5  00C7               	movwf	(??_main^(0+128)+1)
  1526     06D6  30B9               	movlw	185
  1527     06D7  00C6               	movwf	??_main^(0+128)
  1528     06D8                     u7157:
  1529     06D8  0BC6               	decfsz	??_main^(0+128),f
  1530     06D9  2ED8               	goto	u7157
  1531     06DA  0BC7               	decfsz	(??_main^(0+128)+1),f
  1532     06DB  2ED8               	goto	u7157
  1533     06DC  0BC8               	decfsz	(??_main^(0+128)+2),f
  1534     06DD  2ED8               	goto	u7157
  1535     06DE  2EDF               	nop2
  1536                           
  1537                           ;main.c: 135:         I2C_Master_Start();
  1538     06DF  160A  158A  2373  120A  118A  	fcall	_I2C_Master_Start
  1539                           
  1540                           ;main.c: 136:         I2C_Master_Write(0x101);
  1541     06E4  3001               	movlw	1
  1542     06E5  00F2               	movwf	I2C_Master_Write@d
  1543     06E6  3001               	movlw	1
  1544     06E7  00F3               	movwf	I2C_Master_Write@d+1
  1545     06E8  160A  158A  237C  120A  118A  	fcall	_I2C_Master_Write
  1546                           
  1547                           ;main.c: 137:         espacios = I2C_Master_Read(0);
  1548     06ED  3000               	movlw	0
  1549     06EE  00F2               	movwf	I2C_Master_Read@a
  1550     06EF  00F3               	movwf	I2C_Master_Read@a+1
  1551     06F0  160A  158A  2468  120A  118A  	fcall	_I2C_Master_Read
  1552     06F5  0873               	movf	?_I2C_Master_Read+1,w
  1553     06F6  1683               	bsf	3,5	;RP0=1, select bank1
  1554     06F7  1303               	bcf	3,6	;RP1=0, select bank1
  1555     06F8  00DC               	movwf	(_espacios+1)^(0+128)
  1556     06F9  0872               	movf	?_I2C_Master_Read,w
  1557     06FA  00DB               	movwf	_espacios^(0+128)
  1558                           
  1559                           ;main.c: 138:         I2C_Master_Stop();
  1560     06FB  120A  118A  27F7  120A  118A  	fcall	_I2C_Master_Stop
  1561     0700                     l4276:
  1562                           
  1563                           ;main.c: 139:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1564     0700  3002               	movlw	2
  1565     0701  1683               	bsf	3,5	;RP0=1, select bank1
  1566     0702  1303               	bcf	3,6	;RP1=0, select bank1
  1567     0703  00C8               	movwf	(??_main^(0+128)+2)
  1568     0704  3004               	movlw	4
  1569     0705  00C7               	movwf	(??_main^(0+128)+1)
  1570     0706  30B9               	movlw	185
  1571     0707  00C6               	movwf	??_main^(0+128)
  1572     0708                     u7167:
  1573     0708  0BC6               	decfsz	??_main^(0+128),f
  1574     0709  2F08               	goto	u7167
  1575     070A  0BC7               	decfsz	(??_main^(0+128)+1),f
  1576     070B  2F08               	goto	u7167
  1577     070C  0BC8               	decfsz	(??_main^(0+128)+2),f
  1578     070D  2F08               	goto	u7167
  1579     070E  2F0F               	nop2
  1580     070F                     l4278:
  1581                           
  1582                           ;main.c: 142:         I2C_Master_Start();
  1583     070F  160A  158A  2373  120A  118A  	fcall	_I2C_Master_Start
  1584     0714                     l4280:
  1585                           
  1586                           ;main.c: 143:         I2C_Master_Write(0x111);
  1587     0714  3011               	movlw	17
  1588     0715  00F2               	movwf	I2C_Master_Write@d
  1589     0716  3001               	movlw	1
  1590     0717  00F3               	movwf	I2C_Master_Write@d+1
  1591     0718  160A  158A  237C  120A  118A  	fcall	_I2C_Master_Write
  1592     071D                     l4282:
  1593                           
  1594                           ;main.c: 144:         temperatura = I2C_Master_Read(0);
  1595     071D  3000               	movlw	0
  1596     071E  00F2               	movwf	I2C_Master_Read@a
  1597     071F  00F3               	movwf	I2C_Master_Read@a+1
  1598     0720  160A  158A  2468  120A  118A  	fcall	_I2C_Master_Read
  1599     0725  0872               	movf	?_I2C_Master_Read,w
  1600     0726  1283               	bcf	3,5	;RP0=0, select bank0
  1601     0727  1303               	bcf	3,6	;RP1=0, select bank0
  1602     0728  00A0               	movwf	___xxtofl@val
  1603     0729  0873               	movf	?_I2C_Master_Read+1,w
  1604     072A  00A1               	movwf	___xxtofl@val+1
  1605     072B  3000               	movlw	0
  1606     072C  1BA1               	btfsc	___xxtofl@val+1,7
  1607     072D  30FF               	movlw	255
  1608     072E  00A2               	movwf	___xxtofl@val+2
  1609     072F  00A3               	movwf	___xxtofl@val+3
  1610     0730  3001               	movlw	1
  1611     0731  160A  118A  22E1  120A  118A  	fcall	___xxtofl
  1612     0736  1283               	bcf	3,5	;RP0=0, select bank0
  1613     0737  1303               	bcf	3,6	;RP1=0, select bank0
  1614     0738  0823               	movf	?___xxtofl+3,w
  1615     0739  1683               	bsf	3,5	;RP0=1, select bank1
  1616     073A  1303               	bcf	3,6	;RP1=0, select bank1
  1617     073B  00D4               	movwf	(_temperatura+3)^(0+128)
  1618     073C  1283               	bcf	3,5	;RP0=0, select bank0
  1619     073D  1303               	bcf	3,6	;RP1=0, select bank0
  1620     073E  0822               	movf	?___xxtofl+2,w
  1621     073F  1683               	bsf	3,5	;RP0=1, select bank1
  1622     0740  1303               	bcf	3,6	;RP1=0, select bank1
  1623     0741  00D3               	movwf	(_temperatura+2)^(0+128)
  1624     0742  1283               	bcf	3,5	;RP0=0, select bank0
  1625     0743  1303               	bcf	3,6	;RP1=0, select bank0
  1626     0744  0821               	movf	?___xxtofl+1,w
  1627     0745  1683               	bsf	3,5	;RP0=1, select bank1
  1628     0746  1303               	bcf	3,6	;RP1=0, select bank1
  1629     0747  00D2               	movwf	(_temperatura+1)^(0+128)
  1630     0748  1283               	bcf	3,5	;RP0=0, select bank0
  1631     0749  1303               	bcf	3,6	;RP1=0, select bank0
  1632     074A  0820               	movf	?___xxtofl,w
  1633     074B  1683               	bsf	3,5	;RP0=1, select bank1
  1634     074C  1303               	bcf	3,6	;RP1=0, select bank1
  1635     074D  00D1               	movwf	_temperatura^(0+128)
  1636     074E                     l4284:
  1637                           
  1638                           ;main.c: 145:         I2C_Master_Stop();
  1639     074E  120A  118A  27F7  120A  118A  	fcall	_I2C_Master_Stop
  1640     0753                     l4286:
  1641                           
  1642                           ;main.c: 146:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1643     0753  3002               	movlw	2
  1644     0754  1683               	bsf	3,5	;RP0=1, select bank1
  1645     0755  1303               	bcf	3,6	;RP1=0, select bank1
  1646     0756  00C8               	movwf	(??_main^(0+128)+2)
  1647     0757  3004               	movlw	4
  1648     0758  00C7               	movwf	(??_main^(0+128)+1)
  1649     0759  30B9               	movlw	185
  1650     075A  00C6               	movwf	??_main^(0+128)
  1651     075B                     u7177:
  1652     075B  0BC6               	decfsz	??_main^(0+128),f
  1653     075C  2F5B               	goto	u7177
  1654     075D  0BC7               	decfsz	(??_main^(0+128)+1),f
  1655     075E  2F5B               	goto	u7177
  1656     075F  0BC8               	decfsz	(??_main^(0+128)+2),f
  1657     0760  2F5B               	goto	u7177
  1658     0761  2F62               	nop2
  1659                           
  1660                           ;main.c: 149:         Lcd_Set_Cursor(1,1);
  1661     0762  01F6               	clrf	Lcd_Set_Cursor@b
  1662     0763  0AF6               	incf	Lcd_Set_Cursor@b,f
  1663     0764  3001               	movlw	1
  1664     0765  160A  158A  25FD  120A  118A  	fcall	_Lcd_Set_Cursor
  1665     076A                     l4288:
  1666                           
  1667                           ;main.c: 150:         Lcd_Write_String("Welcome!");
  1668     076A  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1669     076B  00F7               	movwf	Lcd_Write_String@a
  1670     076C  3080               	movlw	128
  1671     076D  00F8               	movwf	Lcd_Write_String@a+1
  1672     076E  160A  158A  2571  120A  118A  	fcall	_Lcd_Write_String
  1673     0773                     l4290:
  1674                           
  1675                           ;main.c: 151:         Lcd_Set_Cursor(2,1);
  1676     0773  01F6               	clrf	Lcd_Set_Cursor@b
  1677     0774  0AF6               	incf	Lcd_Set_Cursor@b,f
  1678     0775  3002               	movlw	2
  1679     0776  160A  158A  25FD  120A  118A  	fcall	_Lcd_Set_Cursor
  1680                           
  1681                           ;main.c: 152:         Lcd_Write_String("Temp: ");
  1682     077B  309A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1683     077C  00F7               	movwf	Lcd_Write_String@a
  1684     077D  3080               	movlw	128
  1685     077E  00F8               	movwf	Lcd_Write_String@a+1
  1686     077F  160A  158A  2571  120A  118A  	fcall	_Lcd_Write_String
  1687     0784                     l4292:
  1688                           
  1689                           ;main.c: 153:         Lcd_Set_Cursor(2,13);
  1690     0784  300D               	movlw	13
  1691     0785  00F6               	movwf	Lcd_Set_Cursor@b
  1692     0786  3002               	movlw	2
  1693     0787  160A  158A  25FD  120A  118A  	fcall	_Lcd_Set_Cursor
  1694     078C                     l4294:
  1695                           
  1696                           ;main.c: 154:         Lcd_Write_String("P->");
  1697     078C  30A6               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1698     078D  00F7               	movwf	Lcd_Write_String@a
  1699     078E  3080               	movlw	128
  1700     078F  00F8               	movwf	Lcd_Write_String@a+1
  1701     0790  160A  158A  2571  120A  118A  	fcall	_Lcd_Write_String
  1702                           
  1703                           ;main.c: 157:         Lcd_Set_Cursor(1,15);
  1704     0795  300F               	movlw	15
  1705     0796  00F6               	movwf	Lcd_Set_Cursor@b
  1706     0797  3001               	movlw	1
  1707     0798  160A  158A  25FD  120A  118A  	fcall	_Lcd_Set_Cursor
  1708                           
  1709                           ;main.c: 158:         Lcd_Write_Char(proximidad+32);
  1710     079D  1683               	bsf	3,5	;RP0=1, select bank1
  1711     079E  1303               	bcf	3,6	;RP1=0, select bank1
  1712     079F  085D               	movf	_proximidad^(0+128),w
  1713     07A0  3E20               	addlw	32
  1714     07A1  160A  158A  24CA  120A  118A  	fcall	_Lcd_Write_Char
  1715                           
  1716                           ;main.c: 161:         Lcd_Set_Cursor(2,16);
  1717     07A6  3010               	movlw	16
  1718     07A7  00F6               	movwf	Lcd_Set_Cursor@b
  1719     07A8  3002               	movlw	2
  1720     07A9  160A  158A  25FD  120A  118A  	fcall	_Lcd_Set_Cursor
  1721                           
  1722                           ;main.c: 162:         Lcd_Write_Char(espacios+48);
  1723     07AE  1683               	bsf	3,5	;RP0=1, select bank1
  1724     07AF  1303               	bcf	3,6	;RP1=0, select bank1
  1725     07B0  085B               	movf	_espacios^(0+128),w
  1726     07B1  3E30               	addlw	48
  1727     07B2  160A  158A  24CA  120A  118A  	fcall	_Lcd_Write_Char
  1728                           
  1729                           ;main.c: 165:         Lcd_Set_Cursor(2,6);
  1730     07B7  3006               	movlw	6
  1731     07B8  00F6               	movwf	Lcd_Set_Cursor@b
  1732     07B9  3002               	movlw	2
  1733     07BA  160A  158A  25FD  120A  118A  	fcall	_Lcd_Set_Cursor
  1734     07BF                     l4296:
  1735                           
  1736                           ;main.c: 166:         sprintf(TEMP1,"%.1f", temperatura);
  1737     07BF  30A1               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1738     07C0  1283               	bcf	3,5	;RP0=0, select bank0
  1739     07C1  1303               	bcf	3,6	;RP1=0, select bank0
  1740     07C2  00EA               	movwf	sprintf@f
  1741     07C3  1683               	bsf	3,5	;RP0=1, select bank1
  1742     07C4  1303               	bcf	3,6	;RP1=0, select bank1
  1743     07C5  0854               	movf	(_temperatura+3)^(0+128),w
  1744     07C6  1283               	bcf	3,5	;RP0=0, select bank0
  1745     07C7  1303               	bcf	3,6	;RP1=0, select bank0
  1746     07C8  00EE               	movwf	?_sprintf+4
  1747     07C9  1683               	bsf	3,5	;RP0=1, select bank1
  1748     07CA  1303               	bcf	3,6	;RP1=0, select bank1
  1749     07CB  0853               	movf	(_temperatura+2)^(0+128),w
  1750     07CC  1283               	bcf	3,5	;RP0=0, select bank0
  1751     07CD  1303               	bcf	3,6	;RP1=0, select bank0
  1752     07CE  00ED               	movwf	?_sprintf+3
  1753     07CF  1683               	bsf	3,5	;RP0=1, select bank1
  1754     07D0  1303               	bcf	3,6	;RP1=0, select bank1
  1755     07D1  0852               	movf	(_temperatura+1)^(0+128),w
  1756     07D2  1283               	bcf	3,5	;RP0=0, select bank0
  1757     07D3  1303               	bcf	3,6	;RP1=0, select bank0
  1758     07D4  00EC               	movwf	?_sprintf+2
  1759     07D5  1683               	bsf	3,5	;RP0=1, select bank1
  1760     07D6  1303               	bcf	3,6	;RP1=0, select bank1
  1761     07D7  0851               	movf	_temperatura^(0+128),w
  1762     07D8  1283               	bcf	3,5	;RP0=0, select bank0
  1763     07D9  1303               	bcf	3,6	;RP1=0, select bank0
  1764     07DA  00EB               	movwf	?_sprintf+1
  1765     07DB  30E6               	movlw	(low (_TEMP1| 0))& (0+255)
  1766     07DC  120A  118A  202D  120A  118A  	fcall	_sprintf
  1767     07E1                     l4298:
  1768                           
  1769                           ;main.c: 167:         Lcd_Write_String(TEMP1);
  1770     07E1  30E6               	movlw	(low (_TEMP1| 0))& (0+255)
  1771     07E2  00F7               	movwf	Lcd_Write_String@a
  1772     07E3  3000               	movlw	0
  1773     07E4  00F8               	movwf	Lcd_Write_String@a+1
  1774     07E5  160A  158A  2571  120A  118A  	fcall	_Lcd_Write_String
  1775     07EA                     l4300:
  1776                           
  1777                           ;main.c: 168:         Lcd_Write_String("C");
  1778     07EA  30AA               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1779     07EB  00F7               	movwf	Lcd_Write_String@a
  1780     07EC  3080               	movlw	128
  1781     07ED  00F8               	movwf	Lcd_Write_String@a+1
  1782     07EE  160A  158A  2571  120A  118A  	fcall	_Lcd_Write_String
  1783     07F3  2EAF               	goto	l4266
  1784     07F4  120A  118A  280C   	ljmp	start
  1785     07F7                     __end_of_main:
  1786                           
  1787                           	psect	text1
  1788     002D                     __ptext1:	
  1789 ;; *************** function _sprintf *****************
  1790 ;; Defined at:
  1791 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1792 ;; Parameters:    Size  Location     Type
  1793 ;;  sp              1    wreg     PTR unsigned char 
  1794 ;;		 -> TEMP1(4), 
  1795 ;;  f               1   74[BANK0 ] PTR const unsigned char 
  1796 ;;		 -> STR_4(5), 
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;  sp              1   26[BANK1 ] PTR unsigned char 
  1799 ;;		 -> TEMP1(4), 
  1800 ;;  fval            4   33[BANK1 ] PTR unsigned char 
  1801 ;;  tmpval          4   27[BANK1 ] struct .
  1802 ;;  val             4   20[BANK1 ] unsigned long 
  1803 ;;  prec            2   31[BANK1 ] int 
  1804 ;;  eexp            2   24[BANK1 ] int 
  1805 ;;  flag            2   18[BANK1 ] unsigned short 
  1806 ;;  cp              2    0        PTR const unsigned char 
  1807 ;;  len             2    0        unsigned int 
  1808 ;;  width           2    0        int 
  1809 ;;  c               1   37[BANK1 ] unsigned char 
  1810 ;;  ap              1   17[BANK1 ] PTR void [1]
  1811 ;;		 -> ?_sprintf(2), 
  1812 ;;  d               1    0        unsigned char 
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  2   74[BANK0 ] int 
  1815 ;; Registers used:
  1816 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1822 ;;      Params:         0       5       0       0       0
  1823 ;;      Locals:         0       0      25       0       0
  1824 ;;      Temps:          0       0       5       0       0
  1825 ;;      Totals:         0       5      30       0       0
  1826 ;;Total ram usage:       35 bytes
  1827 ;; Hardware stack levels used: 1
  1828 ;; Hardware stack levels required when called: 4
  1829 ;; This function calls:
  1830 ;;		___awdiv
  1831 ;;		___fladd
  1832 ;;		___fleq
  1833 ;;		___flge
  1834 ;;		___flmul
  1835 ;;		___flneg
  1836 ;;		___flsub
  1837 ;;		___fltol
  1838 ;;		___lldiv
  1839 ;;		___llmod
  1840 ;;		___wmul
  1841 ;;		___xxtofl
  1842 ;;		__div_to_l_
  1843 ;;		__tdiv_to_l_
  1844 ;;		_fround
  1845 ;;		_isdigit
  1846 ;;		_scale
  1847 ;; This function is called by:
  1848 ;;		_main
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852     002D                     _sprintf:	
  1853                           ;psect for function _sprintf
  1854                           
  1855                           
  1856                           ;incstack = 0
  1857                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1858                           ;sprintf@sp stored from wreg
  1859     002D  1683               	bsf	3,5	;RP0=1, select bank1
  1860     002E  1303               	bcf	3,6	;RP1=0, select bank1
  1861     002F  00BA               	movwf	sprintf@sp^(0+128)
  1862     0030                     l4052:
  1863                           
  1864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1865     0030  306B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1866     0031  00B1               	movwf	sprintf@ap^(0+128)
  1867                           
  1868                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1869     0032  2E79               	goto	l4246
  1870     0033                     l4054:
  1871                           
  1872                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1873     0033  3025               	movlw	37
  1874     0034  0645               	xorwf	sprintf@c^(0+128),w
  1875     0035  1903               	btfsc	3,2
  1876     0036  2838               	goto	u6791
  1877     0037  2839               	goto	u6790
  1878     0038                     u6791:
  1879     0038  2843               	goto	l4060
  1880     0039                     u6790:
  1881     0039                     l4056:
  1882                           
  1883                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1884     0039  083A               	movf	sprintf@sp^(0+128),w
  1885     003A  0084               	movwf	4
  1886     003B  0845               	movf	sprintf@c^(0+128),w
  1887     003C  1383               	bcf	3,7	;select IRP bank0
  1888     003D  0080               	movwf	0
  1889     003E                     l4058:
  1890     003E  3001               	movlw	1
  1891     003F  00A8               	movwf	??_sprintf^(0+128)
  1892     0040  0828               	movf	??_sprintf^(0+128),w
  1893     0041  07BA               	addwf	sprintf@sp^(0+128),f
  1894                           
  1895                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1896     0042  2E79               	goto	l4246
  1897     0043                     l4060:
  1898                           
  1899                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1900     0043  01B2               	clrf	sprintf@flag^(0+128)
  1901     0044  01B3               	clrf	(sprintf@flag+1)^(0+128)
  1902     0045                     l4062:
  1903                           
  1904                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1905     0045  1283               	bcf	3,5	;RP0=0, select bank0
  1906     0046  1303               	bcf	3,6	;RP1=0, select bank0
  1907     0047  086A               	movf	sprintf@f,w
  1908     0048  0084               	movwf	4
  1909     0049  120A  158A  200A  120A  118A  	fcall	stringdir
  1910     004E  3A2E               	xorlw	46
  1911     004F  1D03               	skipz
  1912     0050  2852               	goto	u6801
  1913     0051  2853               	goto	u6800
  1914     0052                     u6801:
  1915     0052  28A5               	goto	l4078
  1916     0053                     u6800:
  1917     0053                     l4064:
  1918                           
  1919                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1920     0053  1683               	bsf	3,5	;RP0=1, select bank1
  1921     0054  1303               	bcf	3,6	;RP1=0, select bank1
  1922     0055  1733               	bsf	(sprintf@flag^(0+128)+1),6
  1923     0056                     l4066:
  1924                           
  1925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 630:    f++;
  1926     0056  3001               	movlw	1
  1927     0057  00A8               	movwf	??_sprintf^(0+128)
  1928     0058  0828               	movf	??_sprintf^(0+128),w
  1929     0059  1283               	bcf	3,5	;RP0=0, select bank0
  1930     005A  1303               	bcf	3,6	;RP1=0, select bank0
  1931     005B  07EA               	addwf	sprintf@f,f
  1932     005C                     l4068:
  1933                           
  1934                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1935     005C  1683               	bsf	3,5	;RP0=1, select bank1
  1936     005D  1303               	bcf	3,6	;RP1=0, select bank1
  1937     005E  01BF               	clrf	sprintf@prec^(0+128)
  1938     005F  01C0               	clrf	(sprintf@prec+1)^(0+128)
  1939                           
  1940                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1941     0060  2893               	goto	l4076
  1942     0061                     l4070:
  1943                           
  1944                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1945     0061  300A               	movlw	10
  1946     0062  00F2               	movwf	___wmul@multiplier
  1947     0063  3000               	movlw	0
  1948     0064  00F3               	movwf	___wmul@multiplier+1
  1949     0065  1683               	bsf	3,5	;RP0=1, select bank1
  1950     0066  1303               	bcf	3,6	;RP1=0, select bank1
  1951     0067  0840               	movf	(sprintf@prec+1)^(0+128),w
  1952     0068  00F5               	movwf	___wmul@multiplicand+1
  1953     0069  083F               	movf	sprintf@prec^(0+128),w
  1954     006A  00F4               	movwf	___wmul@multiplicand
  1955     006B  120A  158A  20BB  120A  118A  	fcall	___wmul
  1956     0070  0873               	movf	?___wmul+1,w
  1957     0071  1683               	bsf	3,5	;RP0=1, select bank1
  1958     0072  1303               	bcf	3,6	;RP1=0, select bank1
  1959     0073  00C0               	movwf	(sprintf@prec+1)^(0+128)
  1960     0074  0872               	movf	?___wmul,w
  1961     0075  00BF               	movwf	sprintf@prec^(0+128)
  1962     0076                     l4072:
  1963                           
  1964                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1965     0076  1283               	bcf	3,5	;RP0=0, select bank0
  1966     0077  1303               	bcf	3,6	;RP1=0, select bank0
  1967     0078  086A               	movf	sprintf@f,w
  1968     0079  0084               	movwf	4
  1969     007A  120A  158A  200A  120A  118A  	fcall	stringdir
  1970     007F  3ED0               	addlw	208
  1971     0080  1683               	bsf	3,5	;RP0=1, select bank1
  1972     0081  1303               	bcf	3,6	;RP1=0, select bank1
  1973     0082  00A8               	movwf	??_sprintf^(0+128)
  1974     0083  30FF               	movlw	255
  1975     0084  1803               	skipnc
  1976     0085  3000               	movlw	0
  1977     0086  00A9               	movwf	(??_sprintf^(0+128)+1)
  1978     0087  0828               	movf	??_sprintf^(0+128),w
  1979     0088  07BF               	addwf	sprintf@prec^(0+128),f
  1980     0089  1803               	skipnc
  1981     008A  0AC0               	incf	(sprintf@prec+1)^(0+128),f
  1982     008B  0829               	movf	(??_sprintf+1)^(0+128),w
  1983     008C  07C0               	addwf	(sprintf@prec+1)^(0+128),f
  1984     008D                     l4074:
  1985     008D  3001               	movlw	1
  1986     008E  00A8               	movwf	??_sprintf^(0+128)
  1987     008F  0828               	movf	??_sprintf^(0+128),w
  1988     0090  1283               	bcf	3,5	;RP0=0, select bank0
  1989     0091  1303               	bcf	3,6	;RP1=0, select bank0
  1990     0092  07EA               	addwf	sprintf@f,f
  1991     0093                     l4076:
  1992                           
  1993                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1994     0093  1283               	bcf	3,5	;RP0=0, select bank0
  1995     0094  086A               	movf	sprintf@f,w
  1996     0095  0084               	movwf	4
  1997     0096  120A  158A  200A  120A  118A  	fcall	stringdir
  1998     009B  160A  158A  23B9  120A  118A  	fcall	_isdigit
  1999     00A0  1803               	btfsc	3,0
  2000     00A1  28A3               	goto	u6811
  2001     00A2  28A4               	goto	u6810
  2002     00A3                     u6811:
  2003     00A3  2861               	goto	l4070
  2004     00A4                     u6810:
  2005     00A4  28AD               	goto	l4084
  2006     00A5                     l4078:
  2007                           
  2008                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2009     00A5  1683               	bsf	3,5	;RP0=1, select bank1
  2010     00A6  1303               	bcf	3,6	;RP1=0, select bank1
  2011     00A7  01BF               	clrf	sprintf@prec^(0+128)
  2012     00A8  01C0               	clrf	(sprintf@prec+1)^(0+128)
  2013     00A9                     l4080:
  2014                           
  2015                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2016     00A9  1633               	bsf	(sprintf@flag^(0+128)+1),4
  2017     00AA  28AD               	goto	l4084
  2018     00AB                     l358:	
  2019                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2020                           
  2021                           
  2022                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2023     00AB  1533               	bsf	(sprintf@flag^(0+128)+1),2
  2024                           
  2025                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 690:    break;
  2026     00AC  28CB               	goto	l4086
  2027     00AD                     l4084:
  2028     00AD  3001               	movlw	1
  2029     00AE  1283               	bcf	3,5	;RP0=0, select bank0
  2030     00AF  1303               	bcf	3,6	;RP1=0, select bank0
  2031     00B0  07EA               	addwf	sprintf@f,f
  2032     00B1  30FF               	movlw	-1
  2033     00B2  076A               	addwf	sprintf@f,w
  2034     00B3  0084               	movwf	4
  2035     00B4  120A  158A  200A  120A  118A  	fcall	stringdir
  2036     00B9  1683               	bsf	3,5	;RP0=1, select bank1
  2037     00BA  1303               	bcf	3,6	;RP1=0, select bank1
  2038     00BB  00C5               	movwf	sprintf@c^(0+128)
  2039     00BC  00A8               	movwf	??_sprintf^(0+128)
  2040     00BD  01A9               	clrf	(??_sprintf^(0+128)+1)
  2041                           
  2042                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2043                           ; Switch size 1, requested type "simple"
  2044                           ; Number of cases is 1, Range of values is 0 to 0
  2045                           ; switch strategies available:
  2046                           ; Name         Instructions Cycles
  2047                           ; simple_byte            4     3 (average)
  2048                           ; direct_byte           11     8 (fixed)
  2049                           ; jumptable            260     6 (fixed)
  2050                           ;	Chosen strategy is simple_byte
  2051     00BE  0829               	movf	(??_sprintf+1)^(0+128),w
  2052     00BF  3A00               	xorlw	0	; case 0
  2053     00C0  1903               	skipnz
  2054     00C1  28C3               	goto	l4336
  2055     00C2  2E79               	goto	l4246
  2056     00C3                     l4336:
  2057                           
  2058                           ; Switch size 1, requested type "simple"
  2059                           ; Number of cases is 2, Range of values is 0 to 102
  2060                           ; switch strategies available:
  2061                           ; Name         Instructions Cycles
  2062                           ; simple_byte            7     4 (average)
  2063                           ; jumptable            260     6 (fixed)
  2064                           ;	Chosen strategy is simple_byte
  2065     00C3  0828               	movf	??_sprintf^(0+128),w
  2066     00C4  3A00               	xorlw	0	; case 0
  2067     00C5  1903               	skipnz
  2068     00C6  2E8D               	goto	l4248
  2069     00C7  3A66               	xorlw	102	; case 102
  2070     00C8  1903               	skipnz
  2071     00C9  28AB               	goto	l358
  2072     00CA  2E79               	goto	l4246
  2073     00CB                     l4086:
  2074                           
  2075                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2076     00CB  3000               	movlw	0
  2077     00CC  0532               	andwf	sprintf@flag^(0+128),w
  2078     00CD  00A8               	movwf	??_sprintf^(0+128)
  2079     00CE  3007               	movlw	7
  2080     00CF  0533               	andwf	(sprintf@flag+1)^(0+128),w
  2081     00D0  00A9               	movwf	(??_sprintf+1)^(0+128)
  2082     00D1  0828               	movf	??_sprintf^(0+128),w
  2083     00D2  0429               	iorwf	(??_sprintf^(0+128)+1),w
  2084     00D3  1903               	btfsc	3,2
  2085     00D4  28D6               	goto	u6821
  2086     00D5  28D7               	goto	u6820
  2087     00D6                     u6821:
  2088     00D6  2E36               	goto	l4228
  2089     00D7                     u6820:
  2090     00D7                     l4088:
  2091                           
  2092                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2093     00D7  1E33               	btfss	(sprintf@flag+1)^(0+128),4
  2094     00D8  28DA               	goto	u6831
  2095     00D9  28DB               	goto	u6830
  2096     00DA                     u6831:
  2097     00DA  28DF               	goto	l4092
  2098     00DB                     u6830:
  2099     00DB                     l4090:
  2100                           
  2101                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2102     00DB  3006               	movlw	6
  2103     00DC  00BF               	movwf	sprintf@prec^(0+128)
  2104     00DD  3000               	movlw	0
  2105     00DE  00C0               	movwf	(sprintf@prec^(0+128)+1)
  2106     00DF                     l4092:
  2107                           
  2108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2109     00DF  0831               	movf	sprintf@ap^(0+128),w
  2110     00E0  0084               	movwf	4
  2111     00E1  1383               	bcf	3,7	;select IRP bank0
  2112     00E2  0800               	movf	0,w
  2113     00E3  00C1               	movwf	sprintf@fval^(0+128)
  2114     00E4  0A84               	incf	4,f
  2115     00E5  0800               	movf	0,w
  2116     00E6  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2117     00E7  0A84               	incf	4,f
  2118     00E8  0800               	movf	0,w
  2119     00E9  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2120     00EA  0A84               	incf	4,f
  2121     00EB  0800               	movf	0,w
  2122     00EC  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2123     00ED                     l4094:
  2124     00ED  3004               	movlw	4
  2125     00EE  00A8               	movwf	??_sprintf^(0+128)
  2126     00EF  0828               	movf	??_sprintf^(0+128),w
  2127     00F0  07B1               	addwf	sprintf@ap^(0+128),f
  2128     00F1                     l4096:
  2129                           
  2130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2131     00F1  0844               	movf	(sprintf@fval+3)^(0+128),w
  2132     00F2  00F5               	movwf	___flge@ff1+3
  2133     00F3  0843               	movf	(sprintf@fval+2)^(0+128),w
  2134     00F4  00F4               	movwf	___flge@ff1+2
  2135     00F5  0842               	movf	(sprintf@fval+1)^(0+128),w
  2136     00F6  00F3               	movwf	___flge@ff1+1
  2137     00F7  0841               	movf	sprintf@fval^(0+128),w
  2138     00F8  00F2               	movwf	___flge@ff1
  2139     00F9  3000               	movlw	0
  2140     00FA  00F9               	movwf	___flge@ff2+3
  2141     00FB  3000               	movlw	0
  2142     00FC  00F8               	movwf	___flge@ff2+2
  2143     00FD  3000               	movlw	0
  2144     00FE  00F7               	movwf	___flge@ff2+1
  2145     00FF  3000               	movlw	0
  2146     0100  00F6               	movwf	___flge@ff2
  2147     0101  160A  118A  20CE  120A  118A  	fcall	___flge
  2148     0106  1803               	btfsc	3,0
  2149     0107  2909               	goto	u6841
  2150     0108  290A               	goto	u6840
  2151     0109                     u6841:
  2152     0109  2927               	goto	l4102
  2153     010A                     u6840:
  2154     010A                     l4098:
  2155                           
  2156                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2157     010A  1683               	bsf	3,5	;RP0=1, select bank1
  2158     010B  1303               	bcf	3,6	;RP1=0, select bank1
  2159     010C  0844               	movf	(sprintf@fval+3)^(0+128),w
  2160     010D  00F5               	movwf	___flneg@f1+3
  2161     010E  0843               	movf	(sprintf@fval+2)^(0+128),w
  2162     010F  00F4               	movwf	___flneg@f1+2
  2163     0110  0842               	movf	(sprintf@fval+1)^(0+128),w
  2164     0111  00F3               	movwf	___flneg@f1+1
  2165     0112  0841               	movf	sprintf@fval^(0+128),w
  2166     0113  00F2               	movwf	___flneg@f1
  2167     0114  160A  158A  2386  120A  118A  	fcall	___flneg
  2168     0119  0875               	movf	?___flneg+3,w
  2169     011A  1683               	bsf	3,5	;RP0=1, select bank1
  2170     011B  1303               	bcf	3,6	;RP1=0, select bank1
  2171     011C  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2172     011D  0874               	movf	?___flneg+2,w
  2173     011E  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2174     011F  0873               	movf	?___flneg+1,w
  2175     0120  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2176     0121  0872               	movf	?___flneg,w
  2177     0122  00C1               	movwf	sprintf@fval^(0+128)
  2178     0123                     l4100:
  2179                           
  2180                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2181     0123  3003               	movlw	3
  2182     0124  04B2               	iorwf	sprintf@flag^(0+128),f
  2183     0125  3000               	movlw	0
  2184     0126  04B3               	iorwf	(sprintf@flag+1)^(0+128),f
  2185     0127                     l4102:
  2186                           
  2187                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2188     0127  1683               	bsf	3,5	;RP0=1, select bank1
  2189     0128  1303               	bcf	3,6	;RP1=0, select bank1
  2190     0129  01B8               	clrf	sprintf@eexp^(0+128)
  2191     012A  01B9               	clrf	(sprintf@eexp+1)^(0+128)
  2192     012B                     l4104:
  2193                           
  2194                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2195     012B  0844               	movf	(sprintf@fval+3)^(0+128),w
  2196     012C  00F5               	movwf	___fleq@ff1+3
  2197     012D  0843               	movf	(sprintf@fval+2)^(0+128),w
  2198     012E  00F4               	movwf	___fleq@ff1+2
  2199     012F  0842               	movf	(sprintf@fval+1)^(0+128),w
  2200     0130  00F3               	movwf	___fleq@ff1+1
  2201     0131  0841               	movf	sprintf@fval^(0+128),w
  2202     0132  00F2               	movwf	___fleq@ff1
  2203     0133  3000               	movlw	0
  2204     0134  00F9               	movwf	___fleq@ff2+3
  2205     0135  3000               	movlw	0
  2206     0136  00F8               	movwf	___fleq@ff2+2
  2207     0137  3000               	movlw	0
  2208     0138  00F7               	movwf	___fleq@ff2+1
  2209     0139  3000               	movlw	0
  2210     013A  00F6               	movwf	___fleq@ff2
  2211     013B  160A  158A  2649  120A  118A  	fcall	___fleq
  2212     0140  1803               	btfsc	3,0
  2213     0141  2943               	goto	u6851
  2214     0142  2944               	goto	u6850
  2215     0143                     u6851:
  2216     0143  2A44               	goto	l4130
  2217     0144                     u6850:
  2218     0144                     l4106:
  2219                           
  2220                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2221     0144  1003               	clrc
  2222     0145  1683               	bsf	3,5	;RP0=1, select bank1
  2223     0146  1303               	bcf	3,6	;RP1=0, select bank1
  2224     0147  0D43               	rlf	(sprintf@fval+2)^(0+128),w
  2225     0148  0D44               	rlf	(sprintf@fval+3)^(0+128),w
  2226     0149  3E82               	addlw	130
  2227     014A  00B8               	movwf	sprintf@eexp^(0+128)
  2228     014B  30FF               	movlw	255
  2229     014C  1803               	skipnc
  2230     014D  3000               	movlw	0
  2231     014E  00B9               	movwf	(sprintf@eexp^(0+128)+1)
  2232     014F                     l4108:
  2233                           
  2234                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2235     014F  30FF               	movlw	255
  2236     0150  07B8               	addwf	sprintf@eexp^(0+128),f
  2237     0151  1803               	skipnc
  2238     0152  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2239     0153  30FF               	movlw	255
  2240     0154  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2241     0155                     l4110:
  2242                           
  2243                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2244     0155  3003               	movlw	3
  2245     0156  00F2               	movwf	___wmul@multiplier
  2246     0157  3000               	movlw	0
  2247     0158  00F3               	movwf	___wmul@multiplier+1
  2248     0159  0839               	movf	(sprintf@eexp+1)^(0+128),w
  2249     015A  00F5               	movwf	___wmul@multiplicand+1
  2250     015B  0838               	movf	sprintf@eexp^(0+128),w
  2251     015C  00F4               	movwf	___wmul@multiplicand
  2252     015D  120A  158A  20BB  120A  118A  	fcall	___wmul
  2253     0162  0873               	movf	?___wmul+1,w
  2254     0163  1683               	bsf	3,5	;RP0=1, select bank1
  2255     0164  1303               	bcf	3,6	;RP1=0, select bank1
  2256     0165  00B9               	movwf	(sprintf@eexp+1)^(0+128)
  2257     0166  0872               	movf	?___wmul,w
  2258     0167  00B8               	movwf	sprintf@eexp^(0+128)
  2259     0168                     l4112:
  2260                           
  2261                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2262     0168  300A               	movlw	10
  2263     0169  1283               	bcf	3,5	;RP0=0, select bank0
  2264     016A  1303               	bcf	3,6	;RP1=0, select bank0
  2265     016B  00A0               	movwf	___awdiv@divisor
  2266     016C  3000               	movlw	0
  2267     016D  00A1               	movwf	___awdiv@divisor+1
  2268     016E  1683               	bsf	3,5	;RP0=1, select bank1
  2269     016F  1303               	bcf	3,6	;RP1=0, select bank1
  2270     0170  0839               	movf	(sprintf@eexp+1)^(0+128),w
  2271     0171  1283               	bcf	3,5	;RP0=0, select bank0
  2272     0172  1303               	bcf	3,6	;RP1=0, select bank0
  2273     0173  00A3               	movwf	___awdiv@dividend+1
  2274     0174  1683               	bsf	3,5	;RP0=1, select bank1
  2275     0175  1303               	bcf	3,6	;RP1=0, select bank1
  2276     0176  0838               	movf	sprintf@eexp^(0+128),w
  2277     0177  1283               	bcf	3,5	;RP0=0, select bank0
  2278     0178  1303               	bcf	3,6	;RP1=0, select bank0
  2279     0179  00A2               	movwf	___awdiv@dividend
  2280     017A  160A  118A  2065  120A  118A  	fcall	___awdiv
  2281     017F  1283               	bcf	3,5	;RP0=0, select bank0
  2282     0180  1303               	bcf	3,6	;RP1=0, select bank0
  2283     0181  0821               	movf	?___awdiv+1,w
  2284     0182  1683               	bsf	3,5	;RP0=1, select bank1
  2285     0183  1303               	bcf	3,6	;RP1=0, select bank1
  2286     0184  00B9               	movwf	(sprintf@eexp+1)^(0+128)
  2287     0185  1283               	bcf	3,5	;RP0=0, select bank0
  2288     0186  1303               	bcf	3,6	;RP1=0, select bank0
  2289     0187  0820               	movf	?___awdiv,w
  2290     0188  1683               	bsf	3,5	;RP0=1, select bank1
  2291     0189  1303               	bcf	3,6	;RP1=0, select bank1
  2292     018A  00B8               	movwf	sprintf@eexp^(0+128)
  2293     018B                     l4114:
  2294                           
  2295                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2296     018B  1FB9               	btfss	(sprintf@eexp+1)^(0+128),7
  2297     018C  298E               	goto	u6861
  2298     018D  298F               	goto	u6860
  2299     018E                     u6861:
  2300     018E  2995               	goto	l4118
  2301     018F                     u6860:
  2302     018F                     l4116:
  2303                           
  2304                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2305     018F  30FF               	movlw	255
  2306     0190  07B8               	addwf	sprintf@eexp^(0+128),f
  2307     0191  1803               	skipnc
  2308     0192  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2309     0193  30FF               	movlw	255
  2310     0194  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2311     0195                     l4118:
  2312                           
  2313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2314     0195  0338               	decf	sprintf@eexp^(0+128),w
  2315     0196  3AFF               	xorlw	255
  2316     0197  120A  158A  249D  120A  118A  	fcall	_scale
  2317     019C  1283               	bcf	3,5	;RP0=0, select bank0
  2318     019D  1303               	bcf	3,6	;RP1=0, select bank0
  2319     019E  0845               	movf	?_scale+3,w
  2320     019F  1683               	bsf	3,5	;RP0=1, select bank1
  2321     01A0  1303               	bcf	3,6	;RP1=0, select bank1
  2322     01A1  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2323     01A2  1283               	bcf	3,5	;RP0=0, select bank0
  2324     01A3  1303               	bcf	3,6	;RP1=0, select bank0
  2325     01A4  0844               	movf	?_scale+2,w
  2326     01A5  1683               	bsf	3,5	;RP0=1, select bank1
  2327     01A6  1303               	bcf	3,6	;RP1=0, select bank1
  2328     01A7  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2329     01A8  1283               	bcf	3,5	;RP0=0, select bank0
  2330     01A9  1303               	bcf	3,6	;RP1=0, select bank0
  2331     01AA  0843               	movf	?_scale+1,w
  2332     01AB  1683               	bsf	3,5	;RP0=1, select bank1
  2333     01AC  1303               	bcf	3,6	;RP1=0, select bank1
  2334     01AD  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2335     01AE  1283               	bcf	3,5	;RP0=0, select bank0
  2336     01AF  1303               	bcf	3,6	;RP1=0, select bank0
  2337     01B0  0842               	movf	?_scale,w
  2338     01B1  1683               	bsf	3,5	;RP0=1, select bank1
  2339     01B2  1303               	bcf	3,6	;RP1=0, select bank1
  2340     01B3  00BB               	movwf	sprintf@tmpval^(0+128)
  2341     01B4                     l4120:
  2342                           
  2343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2344     01B4  0844               	movf	(sprintf@fval+3)^(0+128),w
  2345     01B5  1283               	bcf	3,5	;RP0=0, select bank0
  2346     01B6  1303               	bcf	3,6	;RP1=0, select bank0
  2347     01B7  00AB               	movwf	___flmul@b+3
  2348     01B8  1683               	bsf	3,5	;RP0=1, select bank1
  2349     01B9  1303               	bcf	3,6	;RP1=0, select bank1
  2350     01BA  0843               	movf	(sprintf@fval+2)^(0+128),w
  2351     01BB  1283               	bcf	3,5	;RP0=0, select bank0
  2352     01BC  1303               	bcf	3,6	;RP1=0, select bank0
  2353     01BD  00AA               	movwf	___flmul@b+2
  2354     01BE  1683               	bsf	3,5	;RP0=1, select bank1
  2355     01BF  1303               	bcf	3,6	;RP1=0, select bank1
  2356     01C0  0842               	movf	(sprintf@fval+1)^(0+128),w
  2357     01C1  1283               	bcf	3,5	;RP0=0, select bank0
  2358     01C2  1303               	bcf	3,6	;RP1=0, select bank0
  2359     01C3  00A9               	movwf	___flmul@b+1
  2360     01C4  1683               	bsf	3,5	;RP0=1, select bank1
  2361     01C5  1303               	bcf	3,6	;RP1=0, select bank1
  2362     01C6  0841               	movf	sprintf@fval^(0+128),w
  2363     01C7  1283               	bcf	3,5	;RP0=0, select bank0
  2364     01C8  1303               	bcf	3,6	;RP1=0, select bank0
  2365     01C9  00A8               	movwf	___flmul@b
  2366     01CA  1683               	bsf	3,5	;RP0=1, select bank1
  2367     01CB  1303               	bcf	3,6	;RP1=0, select bank1
  2368     01CC  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2369     01CD  1283               	bcf	3,5	;RP0=0, select bank0
  2370     01CE  1303               	bcf	3,6	;RP1=0, select bank0
  2371     01CF  00AF               	movwf	___flmul@a+3
  2372     01D0  1683               	bsf	3,5	;RP0=1, select bank1
  2373     01D1  1303               	bcf	3,6	;RP1=0, select bank1
  2374     01D2  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2375     01D3  1283               	bcf	3,5	;RP0=0, select bank0
  2376     01D4  1303               	bcf	3,6	;RP1=0, select bank0
  2377     01D5  00AE               	movwf	___flmul@a+2
  2378     01D6  1683               	bsf	3,5	;RP0=1, select bank1
  2379     01D7  1303               	bcf	3,6	;RP1=0, select bank1
  2380     01D8  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2381     01D9  1283               	bcf	3,5	;RP0=0, select bank0
  2382     01DA  1303               	bcf	3,6	;RP1=0, select bank0
  2383     01DB  00AD               	movwf	___flmul@a+1
  2384     01DC  1683               	bsf	3,5	;RP0=1, select bank1
  2385     01DD  1303               	bcf	3,6	;RP1=0, select bank1
  2386     01DE  083B               	movf	sprintf@tmpval^(0+128),w
  2387     01DF  1283               	bcf	3,5	;RP0=0, select bank0
  2388     01E0  1303               	bcf	3,6	;RP1=0, select bank0
  2389     01E1  00AC               	movwf	___flmul@a
  2390     01E2  120A  158A  2158  120A  118A  	fcall	___flmul
  2391     01E7  1283               	bcf	3,5	;RP0=0, select bank0
  2392     01E8  1303               	bcf	3,6	;RP1=0, select bank0
  2393     01E9  082B               	movf	?___flmul+3,w
  2394     01EA  1683               	bsf	3,5	;RP0=1, select bank1
  2395     01EB  1303               	bcf	3,6	;RP1=0, select bank1
  2396     01EC  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2397     01ED  1283               	bcf	3,5	;RP0=0, select bank0
  2398     01EE  1303               	bcf	3,6	;RP1=0, select bank0
  2399     01EF  082A               	movf	?___flmul+2,w
  2400     01F0  1683               	bsf	3,5	;RP0=1, select bank1
  2401     01F1  1303               	bcf	3,6	;RP1=0, select bank1
  2402     01F2  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2403     01F3  1283               	bcf	3,5	;RP0=0, select bank0
  2404     01F4  1303               	bcf	3,6	;RP1=0, select bank0
  2405     01F5  0829               	movf	?___flmul+1,w
  2406     01F6  1683               	bsf	3,5	;RP0=1, select bank1
  2407     01F7  1303               	bcf	3,6	;RP1=0, select bank1
  2408     01F8  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2409     01F9  1283               	bcf	3,5	;RP0=0, select bank0
  2410     01FA  1303               	bcf	3,6	;RP1=0, select bank0
  2411     01FB  0828               	movf	?___flmul,w
  2412     01FC  1683               	bsf	3,5	;RP0=1, select bank1
  2413     01FD  1303               	bcf	3,6	;RP1=0, select bank1
  2414     01FE  00BB               	movwf	sprintf@tmpval^(0+128)
  2415     01FF                     l4122:
  2416                           
  2417                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2418     01FF  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2419     0200  00F5               	movwf	___flge@ff1+3
  2420     0201  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2421     0202  00F4               	movwf	___flge@ff1+2
  2422     0203  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2423     0204  00F3               	movwf	___flge@ff1+1
  2424     0205  083B               	movf	sprintf@tmpval^(0+128),w
  2425     0206  00F2               	movwf	___flge@ff1
  2426     0207  303F               	movlw	63
  2427     0208  00F9               	movwf	___flge@ff2+3
  2428     0209  3080               	movlw	128
  2429     020A  00F8               	movwf	___flge@ff2+2
  2430     020B  3000               	movlw	0
  2431     020C  00F7               	movwf	___flge@ff2+1
  2432     020D  3000               	movlw	0
  2433     020E  00F6               	movwf	___flge@ff2
  2434     020F  160A  118A  20CE  120A  118A  	fcall	___flge
  2435     0214  1803               	btfsc	3,0
  2436     0215  2A17               	goto	u6871
  2437     0216  2A18               	goto	u6870
  2438     0217                     u6871:
  2439     0217  2A21               	goto	l4126
  2440     0218                     u6870:
  2441     0218                     l4124:
  2442                           
  2443                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2444     0218  30FF               	movlw	255
  2445     0219  1683               	bsf	3,5	;RP0=1, select bank1
  2446     021A  1303               	bcf	3,6	;RP1=0, select bank1
  2447     021B  07B8               	addwf	sprintf@eexp^(0+128),f
  2448     021C  1803               	skipnc
  2449     021D  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2450     021E  30FF               	movlw	255
  2451     021F  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2452     0220  2A44               	goto	l4130
  2453     0221                     l4126:
  2454     0221  1683               	bsf	3,5	;RP0=1, select bank1
  2455     0222  1303               	bcf	3,6	;RP1=0, select bank1
  2456     0223  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2457     0224  00F5               	movwf	___flge@ff1+3
  2458     0225  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2459     0226  00F4               	movwf	___flge@ff1+2
  2460     0227  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2461     0228  00F3               	movwf	___flge@ff1+1
  2462     0229  083B               	movf	sprintf@tmpval^(0+128),w
  2463     022A  00F2               	movwf	___flge@ff1
  2464     022B  3041               	movlw	65
  2465     022C  00F9               	movwf	___flge@ff2+3
  2466     022D  3020               	movlw	32
  2467     022E  00F8               	movwf	___flge@ff2+2
  2468     022F  3000               	movlw	0
  2469     0230  00F7               	movwf	___flge@ff2+1
  2470     0231  3000               	movlw	0
  2471     0232  00F6               	movwf	___flge@ff2
  2472     0233  160A  118A  20CE  120A  118A  	fcall	___flge
  2473     0238  1C03               	btfss	3,0
  2474     0239  2A3B               	goto	u6881
  2475     023A  2A3C               	goto	u6880
  2476     023B                     u6881:
  2477     023B  2A44               	goto	l4130
  2478     023C                     u6880:
  2479     023C                     l4128:
  2480                           
  2481                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2482     023C  3001               	movlw	1
  2483     023D  1683               	bsf	3,5	;RP0=1, select bank1
  2484     023E  1303               	bcf	3,6	;RP1=0, select bank1
  2485     023F  07B8               	addwf	sprintf@eexp^(0+128),f
  2486     0240  1803               	skipnc
  2487     0241  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2488     0242  3000               	movlw	0
  2489     0243  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2490     0244                     l4130:
  2491                           
  2492                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2493     0244  1683               	bsf	3,5	;RP0=1, select bank1
  2494     0245  1303               	bcf	3,6	;RP1=0, select bank1
  2495     0246  0840               	movf	(sprintf@prec+1)^(0+128),w
  2496     0247  3A80               	xorlw	128
  2497     0248  00FF               	movwf	btemp+1
  2498     0249  3080               	movlw	128
  2499     024A  027F               	subwf	btemp+1,w
  2500     024B  1D03               	skipz
  2501     024C  2A4F               	goto	u6895
  2502     024D  300D               	movlw	13
  2503     024E  023F               	subwf	sprintf@prec^(0+128),w
  2504     024F                     u6895:
  2505     024F  1803               	skipnc
  2506     0250  2A52               	goto	u6891
  2507     0251  2A53               	goto	u6890
  2508     0252                     u6891:
  2509     0252  2A9A               	goto	l4134
  2510     0253                     u6890:
  2511     0253                     l4132:
  2512                           
  2513                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2514     0253  1683               	bsf	3,5	;RP0=1, select bank1
  2515     0254  1303               	bcf	3,6	;RP1=0, select bank1
  2516     0255  083F               	movf	sprintf@prec^(0+128),w
  2517     0256  160A  118A  239B  120A  118A  	fcall	_fround
  2518     025B  1283               	bcf	3,5	;RP0=0, select bank0
  2519     025C  1303               	bcf	3,6	;RP1=0, select bank0
  2520     025D  0845               	movf	?_fround+3,w
  2521     025E  00D9               	movwf	___fladd@b+3
  2522     025F  0844               	movf	?_fround+2,w
  2523     0260  00D8               	movwf	___fladd@b+2
  2524     0261  0843               	movf	?_fround+1,w
  2525     0262  00D7               	movwf	___fladd@b+1
  2526     0263  0842               	movf	?_fround,w
  2527     0264  00D6               	movwf	___fladd@b
  2528     0265  1683               	bsf	3,5	;RP0=1, select bank1
  2529     0266  1303               	bcf	3,6	;RP1=0, select bank1
  2530     0267  0844               	movf	(sprintf@fval+3)^(0+128),w
  2531     0268  1283               	bcf	3,5	;RP0=0, select bank0
  2532     0269  1303               	bcf	3,6	;RP1=0, select bank0
  2533     026A  00DD               	movwf	___fladd@a+3
  2534     026B  1683               	bsf	3,5	;RP0=1, select bank1
  2535     026C  1303               	bcf	3,6	;RP1=0, select bank1
  2536     026D  0843               	movf	(sprintf@fval+2)^(0+128),w
  2537     026E  1283               	bcf	3,5	;RP0=0, select bank0
  2538     026F  1303               	bcf	3,6	;RP1=0, select bank0
  2539     0270  00DC               	movwf	___fladd@a+2
  2540     0271  1683               	bsf	3,5	;RP0=1, select bank1
  2541     0272  1303               	bcf	3,6	;RP1=0, select bank1
  2542     0273  0842               	movf	(sprintf@fval+1)^(0+128),w
  2543     0274  1283               	bcf	3,5	;RP0=0, select bank0
  2544     0275  1303               	bcf	3,6	;RP1=0, select bank0
  2545     0276  00DB               	movwf	___fladd@a+1
  2546     0277  1683               	bsf	3,5	;RP0=1, select bank1
  2547     0278  1303               	bcf	3,6	;RP1=0, select bank1
  2548     0279  0841               	movf	sprintf@fval^(0+128),w
  2549     027A  1283               	bcf	3,5	;RP0=0, select bank0
  2550     027B  1303               	bcf	3,6	;RP1=0, select bank0
  2551     027C  00DA               	movwf	___fladd@a
  2552     027D  160A  118A  25A8  120A  118A  	fcall	___fladd
  2553     0282  1283               	bcf	3,5	;RP0=0, select bank0
  2554     0283  1303               	bcf	3,6	;RP1=0, select bank0
  2555     0284  0859               	movf	?___fladd+3,w
  2556     0285  1683               	bsf	3,5	;RP0=1, select bank1
  2557     0286  1303               	bcf	3,6	;RP1=0, select bank1
  2558     0287  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2559     0288  1283               	bcf	3,5	;RP0=0, select bank0
  2560     0289  1303               	bcf	3,6	;RP1=0, select bank0
  2561     028A  0858               	movf	?___fladd+2,w
  2562     028B  1683               	bsf	3,5	;RP0=1, select bank1
  2563     028C  1303               	bcf	3,6	;RP1=0, select bank1
  2564     028D  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2565     028E  1283               	bcf	3,5	;RP0=0, select bank0
  2566     028F  1303               	bcf	3,6	;RP1=0, select bank0
  2567     0290  0857               	movf	?___fladd+1,w
  2568     0291  1683               	bsf	3,5	;RP0=1, select bank1
  2569     0292  1303               	bcf	3,6	;RP1=0, select bank1
  2570     0293  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2571     0294  1283               	bcf	3,5	;RP0=0, select bank0
  2572     0295  1303               	bcf	3,6	;RP1=0, select bank0
  2573     0296  0856               	movf	?___fladd,w
  2574     0297  1683               	bsf	3,5	;RP0=1, select bank1
  2575     0298  1303               	bcf	3,6	;RP1=0, select bank1
  2576     0299  00C1               	movwf	sprintf@fval^(0+128)
  2577     029A                     l4134:
  2578                           
  2579                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2580     029A  1683               	bsf	3,5	;RP0=1, select bank1
  2581     029B  1303               	bcf	3,6	;RP1=0, select bank1
  2582     029C  0839               	movf	(sprintf@eexp+1)^(0+128),w
  2583     029D  3A80               	xorlw	128
  2584     029E  00FF               	movwf	btemp+1
  2585     029F  3080               	movlw	128
  2586     02A0  027F               	subwf	btemp+1,w
  2587     02A1  1D03               	skipz
  2588     02A2  2AA5               	goto	u6905
  2589     02A3  300A               	movlw	10
  2590     02A4  0238               	subwf	sprintf@eexp^(0+128),w
  2591     02A5                     u6905:
  2592     02A5  1803               	skipnc
  2593     02A6  2AA8               	goto	u6901
  2594     02A7  2AA9               	goto	u6900
  2595     02A8                     u6901:
  2596     02A8  2AFA               	goto	l4142
  2597     02A9                     u6900:
  2598     02A9                     l4136:
  2599     02A9  1683               	bsf	3,5	;RP0=1, select bank1
  2600     02AA  1303               	bcf	3,6	;RP1=0, select bank1
  2601     02AB  0844               	movf	(sprintf@fval+3)^(0+128),w
  2602     02AC  00F5               	movwf	___fleq@ff1+3
  2603     02AD  0843               	movf	(sprintf@fval+2)^(0+128),w
  2604     02AE  00F4               	movwf	___fleq@ff1+2
  2605     02AF  0842               	movf	(sprintf@fval+1)^(0+128),w
  2606     02B0  00F3               	movwf	___fleq@ff1+1
  2607     02B1  0841               	movf	sprintf@fval^(0+128),w
  2608     02B2  00F2               	movwf	___fleq@ff1
  2609     02B3  3000               	movlw	0
  2610     02B4  00F9               	movwf	___fleq@ff2+3
  2611     02B5  3000               	movlw	0
  2612     02B6  00F8               	movwf	___fleq@ff2+2
  2613     02B7  3000               	movlw	0
  2614     02B8  00F7               	movwf	___fleq@ff2+1
  2615     02B9  3000               	movlw	0
  2616     02BA  00F6               	movwf	___fleq@ff2
  2617     02BB  160A  158A  2649  120A  118A  	fcall	___fleq
  2618     02C0  1803               	btfsc	3,0
  2619     02C1  2AC3               	goto	u6911
  2620     02C2  2AC4               	goto	u6910
  2621     02C3                     u6911:
  2622     02C3  2B6C               	goto	l4156
  2623     02C4                     u6910:
  2624     02C4                     l4138:
  2625     02C4  1683               	bsf	3,5	;RP0=1, select bank1
  2626     02C5  1303               	bcf	3,6	;RP1=0, select bank1
  2627     02C6  0844               	movf	(sprintf@fval+3)^(0+128),w
  2628     02C7  1283               	bcf	3,5	;RP0=0, select bank0
  2629     02C8  1303               	bcf	3,6	;RP1=0, select bank0
  2630     02C9  00D8               	movwf	___fltol@f1+3
  2631     02CA  1683               	bsf	3,5	;RP0=1, select bank1
  2632     02CB  1303               	bcf	3,6	;RP1=0, select bank1
  2633     02CC  0843               	movf	(sprintf@fval+2)^(0+128),w
  2634     02CD  1283               	bcf	3,5	;RP0=0, select bank0
  2635     02CE  1303               	bcf	3,6	;RP1=0, select bank0
  2636     02CF  00D7               	movwf	___fltol@f1+2
  2637     02D0  1683               	bsf	3,5	;RP0=1, select bank1
  2638     02D1  1303               	bcf	3,6	;RP1=0, select bank1
  2639     02D2  0842               	movf	(sprintf@fval+1)^(0+128),w
  2640     02D3  1283               	bcf	3,5	;RP0=0, select bank0
  2641     02D4  1303               	bcf	3,6	;RP1=0, select bank0
  2642     02D5  00D6               	movwf	___fltol@f1+1
  2643     02D6  1683               	bsf	3,5	;RP0=1, select bank1
  2644     02D7  1303               	bcf	3,6	;RP1=0, select bank1
  2645     02D8  0841               	movf	sprintf@fval^(0+128),w
  2646     02D9  1283               	bcf	3,5	;RP0=0, select bank0
  2647     02DA  1303               	bcf	3,6	;RP1=0, select bank0
  2648     02DB  00D5               	movwf	___fltol@f1
  2649     02DC  120A  158A  20E0  120A  118A  	fcall	___fltol
  2650     02E1  1283               	bcf	3,5	;RP0=0, select bank0
  2651     02E2  1303               	bcf	3,6	;RP1=0, select bank0
  2652     02E3  0858               	movf	?___fltol+3,w
  2653     02E4  0457               	iorwf	?___fltol+2,w
  2654     02E5  0456               	iorwf	?___fltol+1,w
  2655     02E6  0455               	iorwf	?___fltol,w
  2656     02E7  1D03               	skipz
  2657     02E8  2AEA               	goto	u6921
  2658     02E9  2AEB               	goto	u6920
  2659     02EA                     u6921:
  2660     02EA  2B6C               	goto	l4156
  2661     02EB                     u6920:
  2662     02EB                     l4140:
  2663     02EB  1683               	bsf	3,5	;RP0=1, select bank1
  2664     02EC  1303               	bcf	3,6	;RP1=0, select bank1
  2665     02ED  0839               	movf	(sprintf@eexp+1)^(0+128),w
  2666     02EE  3A80               	xorlw	128
  2667     02EF  00FF               	movwf	btemp+1
  2668     02F0  3080               	movlw	128
  2669     02F1  027F               	subwf	btemp+1,w
  2670     02F2  1D03               	skipz
  2671     02F3  2AF6               	goto	u6935
  2672     02F4  3002               	movlw	2
  2673     02F5  0238               	subwf	sprintf@eexp^(0+128),w
  2674     02F6                     u6935:
  2675     02F6  1C03               	skipc
  2676     02F7  2AF9               	goto	u6931
  2677     02F8  2AFA               	goto	u6930
  2678     02F9                     u6931:
  2679     02F9  2B6C               	goto	l4156
  2680     02FA                     u6930:
  2681     02FA                     l4142:
  2682                           
  2683                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2684     02FA  1683               	bsf	3,5	;RP0=1, select bank1
  2685     02FB  1303               	bcf	3,6	;RP1=0, select bank1
  2686     02FC  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2687     02FD  00F5               	movwf	___flge@ff1+3
  2688     02FE  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2689     02FF  00F4               	movwf	___flge@ff1+2
  2690     0300  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2691     0301  00F3               	movwf	___flge@ff1+1
  2692     0302  083B               	movf	sprintf@tmpval^(0+128),w
  2693     0303  00F2               	movwf	___flge@ff1
  2694     0304  3040               	movlw	64
  2695     0305  00F9               	movwf	___flge@ff2+3
  2696     0306  3089               	movlw	137
  2697     0307  00F8               	movwf	___flge@ff2+2
  2698     0308  3070               	movlw	112
  2699     0309  00F7               	movwf	___flge@ff2+1
  2700     030A  305F               	movlw	95
  2701     030B  00F6               	movwf	___flge@ff2
  2702     030C  160A  118A  20CE  120A  118A  	fcall	___flge
  2703     0311  1803               	btfsc	3,0
  2704     0312  2B14               	goto	u6941
  2705     0313  2B15               	goto	u6940
  2706     0314                     u6941:
  2707     0314  2B1E               	goto	l4146
  2708     0315                     u6940:
  2709     0315                     l4144:
  2710                           
  2711                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2712     0315  30F7               	movlw	247
  2713     0316  1683               	bsf	3,5	;RP0=1, select bank1
  2714     0317  1303               	bcf	3,6	;RP1=0, select bank1
  2715     0318  07B8               	addwf	sprintf@eexp^(0+128),f
  2716     0319  1803               	skipnc
  2717     031A  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2718     031B  30FF               	movlw	255
  2719     031C  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2720                           
  2721                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2722     031D  2B26               	goto	l4148
  2723     031E                     l4146:
  2724                           
  2725                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2726     031E  30F8               	movlw	248
  2727     031F  1683               	bsf	3,5	;RP0=1, select bank1
  2728     0320  1303               	bcf	3,6	;RP1=0, select bank1
  2729     0321  07B8               	addwf	sprintf@eexp^(0+128),f
  2730     0322  1803               	skipnc
  2731     0323  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2732     0324  30FF               	movlw	255
  2733     0325  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2734     0326                     l4148:
  2735                           
  2736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2737     0326  0838               	movf	sprintf@eexp^(0+128),w
  2738     0327  120A  158A  249D  120A  118A  	fcall	_scale
  2739     032C  1283               	bcf	3,5	;RP0=0, select bank0
  2740     032D  1303               	bcf	3,6	;RP1=0, select bank0
  2741     032E  0845               	movf	?_scale+3,w
  2742     032F  1683               	bsf	3,5	;RP0=1, select bank1
  2743     0330  1303               	bcf	3,6	;RP1=0, select bank1
  2744     0331  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2745     0332  1283               	bcf	3,5	;RP0=0, select bank0
  2746     0333  1303               	bcf	3,6	;RP1=0, select bank0
  2747     0334  0844               	movf	?_scale+2,w
  2748     0335  1683               	bsf	3,5	;RP0=1, select bank1
  2749     0336  1303               	bcf	3,6	;RP1=0, select bank1
  2750     0337  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2751     0338  1283               	bcf	3,5	;RP0=0, select bank0
  2752     0339  1303               	bcf	3,6	;RP1=0, select bank0
  2753     033A  0843               	movf	?_scale+1,w
  2754     033B  1683               	bsf	3,5	;RP0=1, select bank1
  2755     033C  1303               	bcf	3,6	;RP1=0, select bank1
  2756     033D  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2757     033E  1283               	bcf	3,5	;RP0=0, select bank0
  2758     033F  1303               	bcf	3,6	;RP1=0, select bank0
  2759     0340  0842               	movf	?_scale,w
  2760     0341  1683               	bsf	3,5	;RP0=1, select bank1
  2761     0342  1303               	bcf	3,6	;RP1=0, select bank1
  2762     0343  00BB               	movwf	sprintf@tmpval^(0+128)
  2763     0344                     l4150:
  2764     0344  0844               	movf	(sprintf@fval+3)^(0+128),w
  2765     0345  00F5               	movwf	__div_to_l_@f1+3
  2766     0346  0843               	movf	(sprintf@fval+2)^(0+128),w
  2767     0347  00F4               	movwf	__div_to_l_@f1+2
  2768     0348  0842               	movf	(sprintf@fval+1)^(0+128),w
  2769     0349  00F3               	movwf	__div_to_l_@f1+1
  2770     034A  0841               	movf	sprintf@fval^(0+128),w
  2771     034B  00F2               	movwf	__div_to_l_@f1
  2772     034C  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2773     034D  00F9               	movwf	__div_to_l_@f2+3
  2774     034E  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2775     034F  00F8               	movwf	__div_to_l_@f2+2
  2776     0350  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2777     0351  00F7               	movwf	__div_to_l_@f2+1
  2778     0352  083B               	movf	sprintf@tmpval^(0+128),w
  2779     0353  00F6               	movwf	__div_to_l_@f2
  2780     0354  160A  118A  2229  120A  118A  	fcall	__div_to_l_
  2781     0359  0875               	movf	?__div_to_l_+3,w
  2782     035A  1683               	bsf	3,5	;RP0=1, select bank1
  2783     035B  1303               	bcf	3,6	;RP1=0, select bank1
  2784     035C  00B7               	movwf	(sprintf@val+3)^(0+128)
  2785     035D  0874               	movf	?__div_to_l_+2,w
  2786     035E  00B6               	movwf	(sprintf@val+2)^(0+128)
  2787     035F  0873               	movf	?__div_to_l_+1,w
  2788     0360  00B5               	movwf	(sprintf@val+1)^(0+128)
  2789     0361  0872               	movf	?__div_to_l_,w
  2790     0362  00B4               	movwf	sprintf@val^(0+128)
  2791     0363                     l4154:
  2792                           
  2793                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2794     0363  3000               	movlw	0
  2795     0364  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2796     0365  3000               	movlw	0
  2797     0366  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2798     0367  3000               	movlw	0
  2799     0368  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2800     0369  3000               	movlw	0
  2801     036A  00C1               	movwf	sprintf@fval^(0+128)
  2802                           
  2803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2804     036B  2BEE               	goto	l4162
  2805     036C                     l4156:
  2806                           
  2807                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2808     036C  1683               	bsf	3,5	;RP0=1, select bank1
  2809     036D  1303               	bcf	3,6	;RP1=0, select bank1
  2810     036E  0844               	movf	(sprintf@fval+3)^(0+128),w
  2811     036F  1283               	bcf	3,5	;RP0=0, select bank0
  2812     0370  1303               	bcf	3,6	;RP1=0, select bank0
  2813     0371  00D8               	movwf	___fltol@f1+3
  2814     0372  1683               	bsf	3,5	;RP0=1, select bank1
  2815     0373  1303               	bcf	3,6	;RP1=0, select bank1
  2816     0374  0843               	movf	(sprintf@fval+2)^(0+128),w
  2817     0375  1283               	bcf	3,5	;RP0=0, select bank0
  2818     0376  1303               	bcf	3,6	;RP1=0, select bank0
  2819     0377  00D7               	movwf	___fltol@f1+2
  2820     0378  1683               	bsf	3,5	;RP0=1, select bank1
  2821     0379  1303               	bcf	3,6	;RP1=0, select bank1
  2822     037A  0842               	movf	(sprintf@fval+1)^(0+128),w
  2823     037B  1283               	bcf	3,5	;RP0=0, select bank0
  2824     037C  1303               	bcf	3,6	;RP1=0, select bank0
  2825     037D  00D6               	movwf	___fltol@f1+1
  2826     037E  1683               	bsf	3,5	;RP0=1, select bank1
  2827     037F  1303               	bcf	3,6	;RP1=0, select bank1
  2828     0380  0841               	movf	sprintf@fval^(0+128),w
  2829     0381  1283               	bcf	3,5	;RP0=0, select bank0
  2830     0382  1303               	bcf	3,6	;RP1=0, select bank0
  2831     0383  00D5               	movwf	___fltol@f1
  2832     0384  120A  158A  20E0  120A  118A  	fcall	___fltol
  2833     0389  1283               	bcf	3,5	;RP0=0, select bank0
  2834     038A  1303               	bcf	3,6	;RP1=0, select bank0
  2835     038B  0858               	movf	?___fltol+3,w
  2836     038C  1683               	bsf	3,5	;RP0=1, select bank1
  2837     038D  1303               	bcf	3,6	;RP1=0, select bank1
  2838     038E  00B7               	movwf	(sprintf@val+3)^(0+128)
  2839     038F  1283               	bcf	3,5	;RP0=0, select bank0
  2840     0390  1303               	bcf	3,6	;RP1=0, select bank0
  2841     0391  0857               	movf	?___fltol+2,w
  2842     0392  1683               	bsf	3,5	;RP0=1, select bank1
  2843     0393  1303               	bcf	3,6	;RP1=0, select bank1
  2844     0394  00B6               	movwf	(sprintf@val+2)^(0+128)
  2845     0395  1283               	bcf	3,5	;RP0=0, select bank0
  2846     0396  1303               	bcf	3,6	;RP1=0, select bank0
  2847     0397  0856               	movf	?___fltol+1,w
  2848     0398  1683               	bsf	3,5	;RP0=1, select bank1
  2849     0399  1303               	bcf	3,6	;RP1=0, select bank1
  2850     039A  00B5               	movwf	(sprintf@val+1)^(0+128)
  2851     039B  1283               	bcf	3,5	;RP0=0, select bank0
  2852     039C  1303               	bcf	3,6	;RP1=0, select bank0
  2853     039D  0855               	movf	?___fltol,w
  2854     039E  1683               	bsf	3,5	;RP0=1, select bank1
  2855     039F  1303               	bcf	3,6	;RP1=0, select bank1
  2856     03A0  00B4               	movwf	sprintf@val^(0+128)
  2857     03A1                     l4158:
  2858                           
  2859                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2860     03A1  0837               	movf	(sprintf@val+3)^(0+128),w
  2861     03A2  1283               	bcf	3,5	;RP0=0, select bank0
  2862     03A3  1303               	bcf	3,6	;RP1=0, select bank0
  2863     03A4  00A3               	movwf	___xxtofl@val+3
  2864     03A5  1683               	bsf	3,5	;RP0=1, select bank1
  2865     03A6  1303               	bcf	3,6	;RP1=0, select bank1
  2866     03A7  0836               	movf	(sprintf@val+2)^(0+128),w
  2867     03A8  1283               	bcf	3,5	;RP0=0, select bank0
  2868     03A9  1303               	bcf	3,6	;RP1=0, select bank0
  2869     03AA  00A2               	movwf	___xxtofl@val+2
  2870     03AB  1683               	bsf	3,5	;RP0=1, select bank1
  2871     03AC  1303               	bcf	3,6	;RP1=0, select bank1
  2872     03AD  0835               	movf	(sprintf@val+1)^(0+128),w
  2873     03AE  1283               	bcf	3,5	;RP0=0, select bank0
  2874     03AF  1303               	bcf	3,6	;RP1=0, select bank0
  2875     03B0  00A1               	movwf	___xxtofl@val+1
  2876     03B1  1683               	bsf	3,5	;RP0=1, select bank1
  2877     03B2  1303               	bcf	3,6	;RP1=0, select bank1
  2878     03B3  0834               	movf	sprintf@val^(0+128),w
  2879     03B4  1283               	bcf	3,5	;RP0=0, select bank0
  2880     03B5  1303               	bcf	3,6	;RP1=0, select bank0
  2881     03B6  00A0               	movwf	___xxtofl@val
  2882     03B7  3000               	movlw	0
  2883     03B8  160A  118A  22E1  120A  118A  	fcall	___xxtofl
  2884     03BD  1283               	bcf	3,5	;RP0=0, select bank0
  2885     03BE  1303               	bcf	3,6	;RP1=0, select bank0
  2886     03BF  0823               	movf	?___xxtofl+3,w
  2887     03C0  1683               	bsf	3,5	;RP0=1, select bank1
  2888     03C1  1303               	bcf	3,6	;RP1=0, select bank1
  2889     03C2  00A3               	movwf	(___flsub@a+3)^(0+128)
  2890     03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2891     03C4  1303               	bcf	3,6	;RP1=0, select bank0
  2892     03C5  0822               	movf	?___xxtofl+2,w
  2893     03C6  1683               	bsf	3,5	;RP0=1, select bank1
  2894     03C7  1303               	bcf	3,6	;RP1=0, select bank1
  2895     03C8  00A2               	movwf	(___flsub@a+2)^(0+128)
  2896     03C9  1283               	bcf	3,5	;RP0=0, select bank0
  2897     03CA  1303               	bcf	3,6	;RP1=0, select bank0
  2898     03CB  0821               	movf	?___xxtofl+1,w
  2899     03CC  1683               	bsf	3,5	;RP0=1, select bank1
  2900     03CD  1303               	bcf	3,6	;RP1=0, select bank1
  2901     03CE  00A1               	movwf	(___flsub@a+1)^(0+128)
  2902     03CF  1283               	bcf	3,5	;RP0=0, select bank0
  2903     03D0  1303               	bcf	3,6	;RP1=0, select bank0
  2904     03D1  0820               	movf	?___xxtofl,w
  2905     03D2  1683               	bsf	3,5	;RP0=1, select bank1
  2906     03D3  1303               	bcf	3,6	;RP1=0, select bank1
  2907     03D4  00A0               	movwf	___flsub@a^(0+128)
  2908     03D5  0844               	movf	(sprintf@fval+3)^(0+128),w
  2909     03D6  00A7               	movwf	(___flsub@b+3)^(0+128)
  2910     03D7  0843               	movf	(sprintf@fval+2)^(0+128),w
  2911     03D8  00A6               	movwf	(___flsub@b+2)^(0+128)
  2912     03D9  0842               	movf	(sprintf@fval+1)^(0+128),w
  2913     03DA  00A5               	movwf	(___flsub@b+1)^(0+128)
  2914     03DB  0841               	movf	sprintf@fval^(0+128),w
  2915     03DC  00A4               	movwf	___flsub@b^(0+128)
  2916     03DD  160A  158A  2699  120A  118A  	fcall	___flsub
  2917     03E2  1683               	bsf	3,5	;RP0=1, select bank1
  2918     03E3  1303               	bcf	3,6	;RP1=0, select bank1
  2919     03E4  0823               	movf	(?___flsub+3)^(0+128),w
  2920     03E5  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2921     03E6  0822               	movf	(?___flsub+2)^(0+128),w
  2922     03E7  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2923     03E8  0821               	movf	(?___flsub+1)^(0+128),w
  2924     03E9  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2925     03EA  0820               	movf	?___flsub^(0+128),w
  2926     03EB  00C1               	movwf	sprintf@fval^(0+128)
  2927     03EC                     l4160:
  2928                           
  2929                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2930     03EC  01B8               	clrf	sprintf@eexp^(0+128)
  2931     03ED  01B9               	clrf	(sprintf@eexp+1)^(0+128)
  2932     03EE                     l4162:
  2933                           
  2934                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2935     03EE  01C5               	clrf	sprintf@c^(0+128)
  2936     03EF  0AC5               	incf	sprintf@c^(0+128),f
  2937     03F0                     l4168:
  2938                           
  2939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2940     03F0  0845               	movf	sprintf@c^(0+128),w
  2941     03F1  00A8               	movwf	??_sprintf^(0+128)
  2942     03F2  3001               	movlw	1
  2943     03F3                     u6955:
  2944     03F3  1003               	clrc
  2945     03F4  0DA8               	rlf	??_sprintf^(0+128),f
  2946     03F5  3EFF               	addlw	-1
  2947     03F6  1D03               	skipz
  2948     03F7  2BF3               	goto	u6955
  2949     03F8  1003               	clrc
  2950     03F9  0D28               	rlf	??_sprintf^(0+128),w
  2951     03FA  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2952     03FB  0084               	movwf	4
  2953     03FC  120A  158A  200A  120A  118A  	fcall	stringdir
  2954     0401  00A9               	movwf	(??_sprintf+1)^(0+128)
  2955     0402  120A  158A  200A  120A  118A  	fcall	stringdir
  2956     0407  00AA               	movwf	((??_sprintf+1)^(0+128)+1)
  2957     0408  120A  158A  200A  120A  118A  	fcall	stringdir
  2958     040D  00AB               	movwf	((??_sprintf+1)^(0+128)+2)
  2959     040E  120A  158A  200A  120A  118A  	fcall	stringdir
  2960     0413  00AC               	movwf	((??_sprintf+1)^(0+128)+3)
  2961     0414  082C               	movf	(??_sprintf+4)^(0+128),w
  2962     0415  0237               	subwf	(sprintf@val+3)^(0+128),w
  2963     0416  1D03               	skipz
  2964     0417  2C22               	goto	u6965
  2965     0418  082B               	movf	(??_sprintf+3)^(0+128),w
  2966     0419  0236               	subwf	(sprintf@val+2)^(0+128),w
  2967     041A  1D03               	skipz
  2968     041B  2C22               	goto	u6965
  2969     041C  082A               	movf	(??_sprintf+2)^(0+128),w
  2970     041D  0235               	subwf	(sprintf@val+1)^(0+128),w
  2971     041E  1D03               	skipz
  2972     041F  2C22               	goto	u6965
  2973     0420  0829               	movf	(??_sprintf+1)^(0+128),w
  2974     0421  0234               	subwf	sprintf@val^(0+128),w
  2975     0422                     u6965:
  2976     0422  1803               	skipnc
  2977     0423  2C25               	goto	u6961
  2978     0424  2C26               	goto	u6960
  2979     0425                     u6961:
  2980     0425  2C27               	goto	l4172
  2981     0426                     u6960:
  2982     0426  2C31               	goto	l4174
  2983     0427                     l4172:
  2984     0427  3001               	movlw	1
  2985     0428  00A8               	movwf	??_sprintf^(0+128)
  2986     0429  0828               	movf	??_sprintf^(0+128),w
  2987     042A  07C5               	addwf	sprintf@c^(0+128),f
  2988     042B  300A               	movlw	10
  2989     042C  0645               	xorwf	sprintf@c^(0+128),w
  2990     042D  1D03               	btfss	3,2
  2991     042E  2C30               	goto	u6971
  2992     042F  2C31               	goto	u6970
  2993     0430                     u6971:
  2994     0430  2BF0               	goto	l4168
  2995     0431                     u6970:
  2996     0431                     l4174:
  2997                           
  2998                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  2999     0431  3003               	movlw	3
  3000     0432  0532               	andwf	sprintf@flag^(0+128),w
  3001     0433  00A8               	movwf	??_sprintf^(0+128)
  3002     0434  3000               	movlw	0
  3003     0435  0533               	andwf	(sprintf@flag+1)^(0+128),w
  3004     0436  00A9               	movwf	(??_sprintf+1)^(0+128)
  3005     0437  0828               	movf	??_sprintf^(0+128),w
  3006     0438  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3007     0439  1903               	btfsc	3,2
  3008     043A  2C3C               	goto	u6981
  3009     043B  2C3D               	goto	u6980
  3010     043C                     u6981:
  3011     043C  2CAB               	goto	l384
  3012     043D                     u6980:
  3013     043D                     l4176:
  3014                           
  3015                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3016     043D  083A               	movf	sprintf@sp^(0+128),w
  3017     043E  0084               	movwf	4
  3018     043F  302D               	movlw	45
  3019     0440  1383               	bcf	3,7	;select IRP bank0
  3020     0441  0080               	movwf	0
  3021     0442                     l4178:
  3022     0442  3001               	movlw	1
  3023     0443  00A8               	movwf	??_sprintf^(0+128)
  3024     0444  0828               	movf	??_sprintf^(0+128),w
  3025     0445  07BA               	addwf	sprintf@sp^(0+128),f
  3026     0446  2CAB               	goto	l384
  3027     0447                     l4180:
  3028                           
  3029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3030     0447  0845               	movf	sprintf@c^(0+128),w
  3031     0448  00A8               	movwf	??_sprintf^(0+128)
  3032     0449  3001               	movlw	1
  3033     044A                     u6995:
  3034     044A  1003               	clrc
  3035     044B  0DA8               	rlf	??_sprintf^(0+128),f
  3036     044C  3EFF               	addlw	-1
  3037     044D  1D03               	skipz
  3038     044E  2C4A               	goto	u6995
  3039     044F  1003               	clrc
  3040     0450  0D28               	rlf	??_sprintf^(0+128),w
  3041     0451  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3042     0452  0084               	movwf	4
  3043     0453  120A  158A  200A  120A  118A  	fcall	stringdir
  3044     0458  00F2               	movwf	___lldiv@divisor
  3045     0459  120A  158A  200A  120A  118A  	fcall	stringdir
  3046     045E  00F3               	movwf	___lldiv@divisor+1
  3047     045F  120A  158A  200A  120A  118A  	fcall	stringdir
  3048     0464  00F4               	movwf	___lldiv@divisor+2
  3049     0465  120A  158A  200A  120A  118A  	fcall	stringdir
  3050     046A  00F5               	movwf	___lldiv@divisor+3
  3051     046B  0837               	movf	(sprintf@val+3)^(0+128),w
  3052     046C  00F9               	movwf	___lldiv@dividend+3
  3053     046D  0836               	movf	(sprintf@val+2)^(0+128),w
  3054     046E  00F8               	movwf	___lldiv@dividend+2
  3055     046F  0835               	movf	(sprintf@val+1)^(0+128),w
  3056     0470  00F7               	movwf	___lldiv@dividend+1
  3057     0471  0834               	movf	sprintf@val^(0+128),w
  3058     0472  00F6               	movwf	___lldiv@dividend
  3059     0473  160A  158A  2798  120A  118A  	fcall	___lldiv
  3060     0478  0875               	movf	?___lldiv+3,w
  3061     0479  1683               	bsf	3,5	;RP0=1, select bank1
  3062     047A  1303               	bcf	3,6	;RP1=0, select bank1
  3063     047B  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  3064     047C  0874               	movf	?___lldiv+2,w
  3065     047D  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  3066     047E  0873               	movf	?___lldiv+1,w
  3067     047F  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  3068     0480  0872               	movf	?___lldiv,w
  3069     0481  00BB               	movwf	sprintf@tmpval^(0+128)
  3070     0482                     l4182:
  3071                           
  3072                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3073     0482  3000               	movlw	0
  3074     0483  00F5               	movwf	___llmod@divisor+3
  3075     0484  3000               	movlw	0
  3076     0485  00F4               	movwf	___llmod@divisor+2
  3077     0486  3000               	movlw	0
  3078     0487  00F3               	movwf	___llmod@divisor+1
  3079     0488  300A               	movlw	10
  3080     0489  00F2               	movwf	___llmod@divisor
  3081     048A  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  3082     048B  00F9               	movwf	___llmod@dividend+3
  3083     048C  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  3084     048D  00F8               	movwf	___llmod@dividend+2
  3085     048E  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  3086     048F  00F7               	movwf	___llmod@dividend+1
  3087     0490  083B               	movf	sprintf@tmpval^(0+128),w
  3088     0491  00F6               	movwf	___llmod@dividend
  3089     0492  160A  158A  26E9  120A  118A  	fcall	___llmod
  3090     0497  0875               	movf	?___llmod+3,w
  3091     0498  1683               	bsf	3,5	;RP0=1, select bank1
  3092     0499  1303               	bcf	3,6	;RP1=0, select bank1
  3093     049A  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  3094     049B  0874               	movf	?___llmod+2,w
  3095     049C  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  3096     049D  0873               	movf	?___llmod+1,w
  3097     049E  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  3098     049F  0872               	movf	?___llmod,w
  3099     04A0  00BB               	movwf	sprintf@tmpval^(0+128)
  3100     04A1                     l4184:
  3101                           
  3102                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3103     04A1  083A               	movf	sprintf@sp^(0+128),w
  3104     04A2  0084               	movwf	4
  3105     04A3  083B               	movf	sprintf@tmpval^(0+128),w
  3106     04A4  3E30               	addlw	48
  3107     04A5  1383               	bcf	3,7	;select IRP bank0
  3108     04A6  0080               	movwf	0
  3109     04A7  3001               	movlw	1
  3110     04A8  00A8               	movwf	??_sprintf^(0+128)
  3111     04A9  0828               	movf	??_sprintf^(0+128),w
  3112     04AA  07BA               	addwf	sprintf@sp^(0+128),f
  3113     04AB                     l384:	
  3114                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1232:    }
  3115                           
  3116                           
  3117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3118     04AB  3001               	movlw	1
  3119     04AC  02C5               	subwf	sprintf@c^(0+128),f
  3120     04AD  0A45               	incf	sprintf@c^(0+128),w
  3121     04AE  1D03               	btfss	3,2
  3122     04AF  2CB1               	goto	u7001
  3123     04B0  2CB2               	goto	u7000
  3124     04B1                     u7001:
  3125     04B1  2C47               	goto	l4180
  3126     04B2                     u7000:
  3127     04B2  2CC4               	goto	l4192
  3128     04B3                     l4186:
  3129                           
  3130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3131     04B3  1683               	bsf	3,5	;RP0=1, select bank1
  3132     04B4  1303               	bcf	3,6	;RP1=0, select bank1
  3133     04B5  083A               	movf	sprintf@sp^(0+128),w
  3134     04B6  0084               	movwf	4
  3135     04B7  3030               	movlw	48
  3136     04B8  1383               	bcf	3,7	;select IRP bank0
  3137     04B9  0080               	movwf	0
  3138     04BA                     l4188:
  3139     04BA  3001               	movlw	1
  3140     04BB  00A8               	movwf	??_sprintf^(0+128)
  3141     04BC  0828               	movf	??_sprintf^(0+128),w
  3142     04BD  07BA               	addwf	sprintf@sp^(0+128),f
  3143     04BE                     l4190:
  3144                           
  3145                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3146     04BE  30FF               	movlw	255
  3147     04BF  07B8               	addwf	sprintf@eexp^(0+128),f
  3148     04C0  1803               	skipnc
  3149     04C1  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  3150     04C2  30FF               	movlw	255
  3151     04C3  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  3152     04C4                     l4192:
  3153                           
  3154                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3155     04C4  0839               	movf	(sprintf@eexp+1)^(0+128),w
  3156     04C5  3A80               	xorlw	128
  3157     04C6  00FF               	movwf	btemp+1
  3158     04C7  3080               	movlw	128
  3159     04C8  027F               	subwf	btemp+1,w
  3160     04C9  1D03               	skipz
  3161     04CA  2CCD               	goto	u7015
  3162     04CB  3001               	movlw	1
  3163     04CC  0238               	subwf	sprintf@eexp^(0+128),w
  3164     04CD                     u7015:
  3165     04CD  1803               	skipnc
  3166     04CE  2CD0               	goto	u7011
  3167     04CF  2CD1               	goto	u7010
  3168     04D0                     u7011:
  3169     04D0  2CB3               	goto	l4186
  3170     04D1                     u7010:
  3171     04D1                     l4194:
  3172                           
  3173                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3174     04D1  1683               	bsf	3,5	;RP0=1, select bank1
  3175     04D2  1303               	bcf	3,6	;RP1=0, select bank1
  3176     04D3  0840               	movf	(sprintf@prec+1)^(0+128),w
  3177     04D4  3A80               	xorlw	128
  3178     04D5  00FF               	movwf	btemp+1
  3179     04D6  3080               	movlw	128
  3180     04D7  027F               	subwf	btemp+1,w
  3181     04D8  1D03               	skipz
  3182     04D9  2CDC               	goto	u7025
  3183     04DA  3009               	movlw	9
  3184     04DB  023F               	subwf	sprintf@prec^(0+128),w
  3185     04DC                     u7025:
  3186     04DC  1C03               	skipc
  3187     04DD  2CDF               	goto	u7021
  3188     04DE  2CE0               	goto	u7020
  3189     04DF                     u7021:
  3190     04DF  2CE5               	goto	l4198
  3191     04E0                     u7020:
  3192     04E0                     l4196:
  3193                           
  3194                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3195     04E0  3008               	movlw	8
  3196     04E1  1683               	bsf	3,5	;RP0=1, select bank1
  3197     04E2  1303               	bcf	3,6	;RP1=0, select bank1
  3198     04E3  00C5               	movwf	sprintf@c^(0+128)
  3199     04E4  2CE9               	goto	l391
  3200     04E5                     l4198:
  3201                           
  3202                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3203     04E5  1683               	bsf	3,5	;RP0=1, select bank1
  3204     04E6  1303               	bcf	3,6	;RP1=0, select bank1
  3205     04E7  083F               	movf	sprintf@prec^(0+128),w
  3206     04E8  00C5               	movwf	sprintf@c^(0+128)
  3207     04E9                     l391:
  3208                           
  3209                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3210     04E9  0845               	movf	sprintf@c^(0+128),w
  3211     04EA  00A8               	movwf	??_sprintf^(0+128)
  3212     04EB  01A9               	clrf	(??_sprintf^(0+128)+1)
  3213     04EC  0828               	movf	??_sprintf^(0+128),w
  3214     04ED  02BF               	subwf	sprintf@prec^(0+128),f
  3215     04EE  0829               	movf	(??_sprintf+1)^(0+128),w
  3216     04EF  1C03               	skipc
  3217     04F0  03C0               	decf	(sprintf@prec+1)^(0+128),f
  3218     04F1  02C0               	subwf	(sprintf@prec+1)^(0+128),f
  3219     04F2                     l4200:
  3220                           
  3221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3222     04F2  0845               	movf	sprintf@c^(0+128),w
  3223     04F3  1903               	btfsc	3,2
  3224     04F4  2CF6               	goto	u7031
  3225     04F5  2CF7               	goto	u7030
  3226     04F6                     u7031:
  3227     04F6  2D00               	goto	l4206
  3228     04F7                     u7030:
  3229     04F7                     l4202:
  3230                           
  3231                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3232     04F7  083A               	movf	sprintf@sp^(0+128),w
  3233     04F8  0084               	movwf	4
  3234     04F9  302E               	movlw	46
  3235     04FA  1383               	bcf	3,7	;select IRP bank0
  3236     04FB  0080               	movwf	0
  3237     04FC                     l4204:
  3238     04FC  3001               	movlw	1
  3239     04FD  00A8               	movwf	??_sprintf^(0+128)
  3240     04FE  0828               	movf	??_sprintf^(0+128),w
  3241     04FF  07BA               	addwf	sprintf@sp^(0+128),f
  3242     0500                     l4206:
  3243                           
  3244                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3245     0500  0845               	movf	sprintf@c^(0+128),w
  3246     0501  120A  158A  249D  120A  118A  	fcall	_scale
  3247     0506  1283               	bcf	3,5	;RP0=0, select bank0
  3248     0507  1303               	bcf	3,6	;RP1=0, select bank0
  3249     0508  0845               	movf	?_scale+3,w
  3250     0509  1683               	bsf	3,5	;RP0=1, select bank1
  3251     050A  1303               	bcf	3,6	;RP1=0, select bank1
  3252     050B  00B0               	movwf	(_sprintf$1080+3)^(0+128)
  3253     050C  1283               	bcf	3,5	;RP0=0, select bank0
  3254     050D  1303               	bcf	3,6	;RP1=0, select bank0
  3255     050E  0844               	movf	?_scale+2,w
  3256     050F  1683               	bsf	3,5	;RP0=1, select bank1
  3257     0510  1303               	bcf	3,6	;RP1=0, select bank1
  3258     0511  00AF               	movwf	(_sprintf$1080+2)^(0+128)
  3259     0512  1283               	bcf	3,5	;RP0=0, select bank0
  3260     0513  1303               	bcf	3,6	;RP1=0, select bank0
  3261     0514  0843               	movf	?_scale+1,w
  3262     0515  1683               	bsf	3,5	;RP0=1, select bank1
  3263     0516  1303               	bcf	3,6	;RP1=0, select bank1
  3264     0517  00AE               	movwf	(_sprintf$1080+1)^(0+128)
  3265     0518  1283               	bcf	3,5	;RP0=0, select bank0
  3266     0519  1303               	bcf	3,6	;RP1=0, select bank0
  3267     051A  0842               	movf	?_scale,w
  3268     051B  1683               	bsf	3,5	;RP0=1, select bank1
  3269     051C  1303               	bcf	3,6	;RP1=0, select bank1
  3270     051D  00AD               	movwf	_sprintf$1080^(0+128)
  3271     051E                     l4208:
  3272                           
  3273                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3274     051E  0830               	movf	(_sprintf$1080+3)^(0+128),w
  3275     051F  1283               	bcf	3,5	;RP0=0, select bank0
  3276     0520  1303               	bcf	3,6	;RP1=0, select bank0
  3277     0521  00AF               	movwf	___flmul@a+3
  3278     0522  1683               	bsf	3,5	;RP0=1, select bank1
  3279     0523  1303               	bcf	3,6	;RP1=0, select bank1
  3280     0524  082F               	movf	(_sprintf$1080+2)^(0+128),w
  3281     0525  1283               	bcf	3,5	;RP0=0, select bank0
  3282     0526  1303               	bcf	3,6	;RP1=0, select bank0
  3283     0527  00AE               	movwf	___flmul@a+2
  3284     0528  1683               	bsf	3,5	;RP0=1, select bank1
  3285     0529  1303               	bcf	3,6	;RP1=0, select bank1
  3286     052A  082E               	movf	(_sprintf$1080+1)^(0+128),w
  3287     052B  1283               	bcf	3,5	;RP0=0, select bank0
  3288     052C  1303               	bcf	3,6	;RP1=0, select bank0
  3289     052D  00AD               	movwf	___flmul@a+1
  3290     052E  1683               	bsf	3,5	;RP0=1, select bank1
  3291     052F  1303               	bcf	3,6	;RP1=0, select bank1
  3292     0530  082D               	movf	_sprintf$1080^(0+128),w
  3293     0531  1283               	bcf	3,5	;RP0=0, select bank0
  3294     0532  1303               	bcf	3,6	;RP1=0, select bank0
  3295     0533  00AC               	movwf	___flmul@a
  3296     0534  1683               	bsf	3,5	;RP0=1, select bank1
  3297     0535  1303               	bcf	3,6	;RP1=0, select bank1
  3298     0536  0844               	movf	(sprintf@fval+3)^(0+128),w
  3299     0537  1283               	bcf	3,5	;RP0=0, select bank0
  3300     0538  1303               	bcf	3,6	;RP1=0, select bank0
  3301     0539  00AB               	movwf	___flmul@b+3
  3302     053A  1683               	bsf	3,5	;RP0=1, select bank1
  3303     053B  1303               	bcf	3,6	;RP1=0, select bank1
  3304     053C  0843               	movf	(sprintf@fval+2)^(0+128),w
  3305     053D  1283               	bcf	3,5	;RP0=0, select bank0
  3306     053E  1303               	bcf	3,6	;RP1=0, select bank0
  3307     053F  00AA               	movwf	___flmul@b+2
  3308     0540  1683               	bsf	3,5	;RP0=1, select bank1
  3309     0541  1303               	bcf	3,6	;RP1=0, select bank1
  3310     0542  0842               	movf	(sprintf@fval+1)^(0+128),w
  3311     0543  1283               	bcf	3,5	;RP0=0, select bank0
  3312     0544  1303               	bcf	3,6	;RP1=0, select bank0
  3313     0545  00A9               	movwf	___flmul@b+1
  3314     0546  1683               	bsf	3,5	;RP0=1, select bank1
  3315     0547  1303               	bcf	3,6	;RP1=0, select bank1
  3316     0548  0841               	movf	sprintf@fval^(0+128),w
  3317     0549  1283               	bcf	3,5	;RP0=0, select bank0
  3318     054A  1303               	bcf	3,6	;RP1=0, select bank0
  3319     054B  00A8               	movwf	___flmul@b
  3320     054C  120A  158A  2158  120A  118A  	fcall	___flmul
  3321     0551  1283               	bcf	3,5	;RP0=0, select bank0
  3322     0552  1303               	bcf	3,6	;RP1=0, select bank0
  3323     0553  082B               	movf	?___flmul+3,w
  3324     0554  00D8               	movwf	___fltol@f1+3
  3325     0555  082A               	movf	?___flmul+2,w
  3326     0556  00D7               	movwf	___fltol@f1+2
  3327     0557  0829               	movf	?___flmul+1,w
  3328     0558  00D6               	movwf	___fltol@f1+1
  3329     0559  0828               	movf	?___flmul,w
  3330     055A  00D5               	movwf	___fltol@f1
  3331     055B  120A  158A  20E0  120A  118A  	fcall	___fltol
  3332     0560  1283               	bcf	3,5	;RP0=0, select bank0
  3333     0561  1303               	bcf	3,6	;RP1=0, select bank0
  3334     0562  0858               	movf	?___fltol+3,w
  3335     0563  1683               	bsf	3,5	;RP0=1, select bank1
  3336     0564  1303               	bcf	3,6	;RP1=0, select bank1
  3337     0565  00B7               	movwf	(sprintf@val+3)^(0+128)
  3338     0566  1283               	bcf	3,5	;RP0=0, select bank0
  3339     0567  1303               	bcf	3,6	;RP1=0, select bank0
  3340     0568  0857               	movf	?___fltol+2,w
  3341     0569  1683               	bsf	3,5	;RP0=1, select bank1
  3342     056A  1303               	bcf	3,6	;RP1=0, select bank1
  3343     056B  00B6               	movwf	(sprintf@val+2)^(0+128)
  3344     056C  1283               	bcf	3,5	;RP0=0, select bank0
  3345     056D  1303               	bcf	3,6	;RP1=0, select bank0
  3346     056E  0856               	movf	?___fltol+1,w
  3347     056F  1683               	bsf	3,5	;RP0=1, select bank1
  3348     0570  1303               	bcf	3,6	;RP1=0, select bank1
  3349     0571  00B5               	movwf	(sprintf@val+1)^(0+128)
  3350     0572  1283               	bcf	3,5	;RP0=0, select bank0
  3351     0573  1303               	bcf	3,6	;RP1=0, select bank0
  3352     0574  0855               	movf	?___fltol,w
  3353     0575  1683               	bsf	3,5	;RP0=1, select bank1
  3354     0576  1303               	bcf	3,6	;RP1=0, select bank1
  3355     0577  00B4               	movwf	sprintf@val^(0+128)
  3356                           
  3357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3358     0578  2E18               	goto	l4218
  3359     0579                     l4210:
  3360                           
  3361                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3362     0579  0845               	movf	sprintf@c^(0+128),w
  3363     057A  00A8               	movwf	??_sprintf^(0+128)
  3364     057B  3001               	movlw	1
  3365     057C                     u7045:
  3366     057C  1003               	clrc
  3367     057D  0DA8               	rlf	??_sprintf^(0+128),f
  3368     057E  3EFF               	addlw	-1
  3369     057F  1D03               	skipz
  3370     0580  2D7C               	goto	u7045
  3371     0581  1003               	clrc
  3372     0582  0D28               	rlf	??_sprintf^(0+128),w
  3373     0583  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3374     0584  0084               	movwf	4
  3375     0585  120A  158A  200A  120A  118A  	fcall	stringdir
  3376     058A  00F2               	movwf	___lldiv@divisor
  3377     058B  120A  158A  200A  120A  118A  	fcall	stringdir
  3378     0590  00F3               	movwf	___lldiv@divisor+1
  3379     0591  120A  158A  200A  120A  118A  	fcall	stringdir
  3380     0596  00F4               	movwf	___lldiv@divisor+2
  3381     0597  120A  158A  200A  120A  118A  	fcall	stringdir
  3382     059C  00F5               	movwf	___lldiv@divisor+3
  3383     059D  0837               	movf	(sprintf@val+3)^(0+128),w
  3384     059E  00F9               	movwf	___lldiv@dividend+3
  3385     059F  0836               	movf	(sprintf@val+2)^(0+128),w
  3386     05A0  00F8               	movwf	___lldiv@dividend+2
  3387     05A1  0835               	movf	(sprintf@val+1)^(0+128),w
  3388     05A2  00F7               	movwf	___lldiv@dividend+1
  3389     05A3  0834               	movf	sprintf@val^(0+128),w
  3390     05A4  00F6               	movwf	___lldiv@dividend
  3391     05A5  160A  158A  2798  120A  118A  	fcall	___lldiv
  3392     05AA  0875               	movf	?___lldiv+3,w
  3393     05AB  1683               	bsf	3,5	;RP0=1, select bank1
  3394     05AC  1303               	bcf	3,6	;RP1=0, select bank1
  3395     05AD  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  3396     05AE  0874               	movf	?___lldiv+2,w
  3397     05AF  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  3398     05B0  0873               	movf	?___lldiv+1,w
  3399     05B1  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  3400     05B2  0872               	movf	?___lldiv,w
  3401     05B3  00BB               	movwf	sprintf@tmpval^(0+128)
  3402     05B4                     l4212:
  3403                           
  3404                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3405     05B4  3000               	movlw	0
  3406     05B5  00F5               	movwf	___llmod@divisor+3
  3407     05B6  3000               	movlw	0
  3408     05B7  00F4               	movwf	___llmod@divisor+2
  3409     05B8  3000               	movlw	0
  3410     05B9  00F3               	movwf	___llmod@divisor+1
  3411     05BA  300A               	movlw	10
  3412     05BB  00F2               	movwf	___llmod@divisor
  3413     05BC  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  3414     05BD  00F9               	movwf	___llmod@dividend+3
  3415     05BE  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  3416     05BF  00F8               	movwf	___llmod@dividend+2
  3417     05C0  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  3418     05C1  00F7               	movwf	___llmod@dividend+1
  3419     05C2  083B               	movf	sprintf@tmpval^(0+128),w
  3420     05C3  00F6               	movwf	___llmod@dividend
  3421     05C4  160A  158A  26E9  120A  118A  	fcall	___llmod
  3422     05C9  0875               	movf	?___llmod+3,w
  3423     05CA  1683               	bsf	3,5	;RP0=1, select bank1
  3424     05CB  1303               	bcf	3,6	;RP1=0, select bank1
  3425     05CC  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  3426     05CD  0874               	movf	?___llmod+2,w
  3427     05CE  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  3428     05CF  0873               	movf	?___llmod+1,w
  3429     05D0  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  3430     05D1  0872               	movf	?___llmod,w
  3431     05D2  00BB               	movwf	sprintf@tmpval^(0+128)
  3432     05D3                     l4214:
  3433                           
  3434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3435     05D3  083A               	movf	sprintf@sp^(0+128),w
  3436     05D4  0084               	movwf	4
  3437     05D5  083B               	movf	sprintf@tmpval^(0+128),w
  3438     05D6  3E30               	addlw	48
  3439     05D7  1383               	bcf	3,7	;select IRP bank0
  3440     05D8  0080               	movwf	0
  3441     05D9  3001               	movlw	1
  3442     05DA  00A8               	movwf	??_sprintf^(0+128)
  3443     05DB  0828               	movf	??_sprintf^(0+128),w
  3444     05DC  07BA               	addwf	sprintf@sp^(0+128),f
  3445     05DD                     l4216:
  3446                           
  3447                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3448     05DD  0845               	movf	sprintf@c^(0+128),w
  3449     05DE  00A8               	movwf	??_sprintf^(0+128)
  3450     05DF  3001               	movlw	1
  3451     05E0                     u7055:
  3452     05E0  1003               	clrc
  3453     05E1  0DA8               	rlf	??_sprintf^(0+128),f
  3454     05E2  3EFF               	addlw	-1
  3455     05E3  1D03               	skipz
  3456     05E4  2DE0               	goto	u7055
  3457     05E5  1003               	clrc
  3458     05E6  0D28               	rlf	??_sprintf^(0+128),w
  3459     05E7  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3460     05E8  0084               	movwf	4
  3461     05E9  120A  158A  200A  120A  118A  	fcall	stringdir
  3462     05EE  00F2               	movwf	___llmod@divisor
  3463     05EF  120A  158A  200A  120A  118A  	fcall	stringdir
  3464     05F4  00F3               	movwf	___llmod@divisor+1
  3465     05F5  120A  158A  200A  120A  118A  	fcall	stringdir
  3466     05FA  00F4               	movwf	___llmod@divisor+2
  3467     05FB  120A  158A  200A  120A  118A  	fcall	stringdir
  3468     0600  00F5               	movwf	___llmod@divisor+3
  3469     0601  0837               	movf	(sprintf@val+3)^(0+128),w
  3470     0602  00F9               	movwf	___llmod@dividend+3
  3471     0603  0836               	movf	(sprintf@val+2)^(0+128),w
  3472     0604  00F8               	movwf	___llmod@dividend+2
  3473     0605  0835               	movf	(sprintf@val+1)^(0+128),w
  3474     0606  00F7               	movwf	___llmod@dividend+1
  3475     0607  0834               	movf	sprintf@val^(0+128),w
  3476     0608  00F6               	movwf	___llmod@dividend
  3477     0609  160A  158A  26E9  120A  118A  	fcall	___llmod
  3478     060E  0875               	movf	?___llmod+3,w
  3479     060F  1683               	bsf	3,5	;RP0=1, select bank1
  3480     0610  1303               	bcf	3,6	;RP1=0, select bank1
  3481     0611  00B7               	movwf	(sprintf@val+3)^(0+128)
  3482     0612  0874               	movf	?___llmod+2,w
  3483     0613  00B6               	movwf	(sprintf@val+2)^(0+128)
  3484     0614  0873               	movf	?___llmod+1,w
  3485     0615  00B5               	movwf	(sprintf@val+1)^(0+128)
  3486     0616  0872               	movf	?___llmod,w
  3487     0617  00B4               	movwf	sprintf@val^(0+128)
  3488     0618                     l4218:
  3489                           
  3490                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3491     0618  3001               	movlw	1
  3492     0619  02C5               	subwf	sprintf@c^(0+128),f
  3493     061A  0A45               	incf	sprintf@c^(0+128),w
  3494     061B  1D03               	btfss	3,2
  3495     061C  2E1E               	goto	u7061
  3496     061D  2E1F               	goto	u7060
  3497     061E                     u7061:
  3498     061E  2D79               	goto	l4210
  3499     061F                     u7060:
  3500     061F  2E2F               	goto	l4226
  3501     0620                     l4220:
  3502                           
  3503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3504     0620  083A               	movf	sprintf@sp^(0+128),w
  3505     0621  0084               	movwf	4
  3506     0622  3030               	movlw	48
  3507     0623  1383               	bcf	3,7	;select IRP bank0
  3508     0624  0080               	movwf	0
  3509     0625                     l4222:
  3510     0625  3001               	movlw	1
  3511     0626  00A8               	movwf	??_sprintf^(0+128)
  3512     0627  0828               	movf	??_sprintf^(0+128),w
  3513     0628  07BA               	addwf	sprintf@sp^(0+128),f
  3514     0629                     l4224:
  3515                           
  3516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3517     0629  30FF               	movlw	255
  3518     062A  07BF               	addwf	sprintf@prec^(0+128),f
  3519     062B  1803               	skipnc
  3520     062C  0AC0               	incf	(sprintf@prec+1)^(0+128),f
  3521     062D  30FF               	movlw	255
  3522     062E  07C0               	addwf	(sprintf@prec+1)^(0+128),f
  3523     062F                     l4226:
  3524                           
  3525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3526     062F  083F               	movf	sprintf@prec^(0+128),w
  3527     0630  0440               	iorwf	(sprintf@prec+1)^(0+128),w
  3528     0631  1D03               	btfss	3,2
  3529     0632  2E34               	goto	u7071
  3530     0633  2E35               	goto	u7070
  3531     0634                     u7071:
  3532     0634  2E20               	goto	l4220
  3533     0635                     u7070:
  3534     0635  2E79               	goto	l4246
  3535     0636                     l4228:
  3536                           
  3537                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3538     0636  083F               	movf	sprintf@prec^(0+128),w
  3539     0637  0440               	iorwf	(sprintf@prec+1)^(0+128),w
  3540     0638  1D03               	btfss	3,2
  3541     0639  2E3B               	goto	u7081
  3542     063A  2E3C               	goto	u7080
  3543     063B                     u7081:
  3544     063B  2E4A               	goto	l399
  3545     063C                     u7080:
  3546     063C                     l4230:
  3547     063C  0837               	movf	(sprintf@val+3)^(0+128),w
  3548     063D  0436               	iorwf	(sprintf@val+2)^(0+128),w
  3549     063E  0435               	iorwf	(sprintf@val+1)^(0+128),w
  3550     063F  0434               	iorwf	sprintf@val^(0+128),w
  3551     0640  1D03               	skipz
  3552     0641  2E43               	goto	u7091
  3553     0642  2E44               	goto	u7090
  3554     0643                     u7091:
  3555     0643  2E4A               	goto	l399
  3556     0644                     u7090:
  3557     0644                     l4232:
  3558                           
  3559                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3560     0644  3001               	movlw	1
  3561     0645  07BF               	addwf	sprintf@prec^(0+128),f
  3562     0646  1803               	skipnc
  3563     0647  0AC0               	incf	(sprintf@prec+1)^(0+128),f
  3564     0648  3000               	movlw	0
  3565     0649  07C0               	addwf	(sprintf@prec+1)^(0+128),f
  3566     064A                     l399:
  3567                           
  3568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3569     064A  0840               	movf	(sprintf@prec+1)^(0+128),w
  3570     064B  3A80               	xorlw	128
  3571     064C  3C80               	sublw	128
  3572     064D  1D03               	skipz
  3573     064E  2E51               	goto	u7105
  3574     064F  083F               	movf	sprintf@prec^(0+128),w
  3575     0650  0245               	subwf	sprintf@c^(0+128),w
  3576     0651                     u7105:
  3577     0651  1803               	skipnc
  3578     0652  2E54               	goto	u7101
  3579     0653  2E55               	goto	u7100
  3580     0654                     u7101:
  3581     0654  2E56               	goto	l4236
  3582     0655                     u7100:
  3583     0655                     l4234:
  3584     0655  2E65               	goto	l4240
  3585     0656                     l4236:
  3586     0656  1683               	bsf	3,5	;RP0=1, select bank1
  3587     0657  1303               	bcf	3,6	;RP1=0, select bank1
  3588     0658  0840               	movf	(sprintf@prec+1)^(0+128),w
  3589     0659  3A80               	xorlw	128
  3590     065A  00A8               	movwf	??_sprintf^(0+128)
  3591     065B  3080               	movlw	128
  3592     065C  0228               	subwf	??_sprintf^(0+128),w
  3593     065D  1D03               	skipz
  3594     065E  2E61               	goto	u7115
  3595     065F  0845               	movf	sprintf@c^(0+128),w
  3596     0660  023F               	subwf	sprintf@prec^(0+128),w
  3597     0661                     u7115:
  3598     0661  1803               	skipnc
  3599     0662  2E64               	goto	u7111
  3600     0663  2E65               	goto	u7110
  3601     0664                     u7111:
  3602     0664  2E65               	goto	l4240
  3603     0665                     u7110:
  3604     0665                     l4238:
  3605     0665                     l4240:
  3606                           
  3607                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3608     0665  3003               	movlw	3
  3609     0666  1683               	bsf	3,5	;RP0=1, select bank1
  3610     0667  1303               	bcf	3,6	;RP1=0, select bank1
  3611     0668  0532               	andwf	sprintf@flag^(0+128),w
  3612     0669  00A8               	movwf	??_sprintf^(0+128)
  3613     066A  3000               	movlw	0
  3614     066B  0533               	andwf	(sprintf@flag+1)^(0+128),w
  3615     066C  00A9               	movwf	(??_sprintf+1)^(0+128)
  3616     066D  0828               	movf	??_sprintf^(0+128),w
  3617     066E  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3618     066F  1903               	btfsc	3,2
  3619     0670  2E72               	goto	u7121
  3620     0671  2E73               	goto	u7120
  3621     0672                     u7121:
  3622     0672  2E79               	goto	l4246
  3623     0673                     u7120:
  3624     0673                     l4242:
  3625                           
  3626                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3627     0673  083A               	movf	sprintf@sp^(0+128),w
  3628     0674  0084               	movwf	4
  3629     0675  302D               	movlw	45
  3630     0676  1383               	bcf	3,7	;select IRP bank0
  3631     0677  0080               	movwf	0
  3632     0678  283E               	goto	l4058
  3633     0679                     l4246:
  3634                           
  3635                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3636     0679  3001               	movlw	1
  3637     067A  1283               	bcf	3,5	;RP0=0, select bank0
  3638     067B  1303               	bcf	3,6	;RP1=0, select bank0
  3639     067C  07EA               	addwf	sprintf@f,f
  3640     067D  30FF               	movlw	-1
  3641     067E  076A               	addwf	sprintf@f,w
  3642     067F  0084               	movwf	4
  3643     0680  120A  158A  200A  120A  118A  	fcall	stringdir
  3644     0685  1683               	bsf	3,5	;RP0=1, select bank1
  3645     0686  1303               	bcf	3,6	;RP1=0, select bank1
  3646     0687  00C5               	movwf	sprintf@c^(0+128)
  3647     0688  0845               	movf	sprintf@c^(0+128),w
  3648     0689  1D03               	btfss	3,2
  3649     068A  2E8C               	goto	u7131
  3650     068B  2E8D               	goto	u7130
  3651     068C                     u7131:
  3652     068C  2833               	goto	l4054
  3653     068D                     u7130:
  3654     068D                     l4248:
  3655                           
  3656                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3657     068D  083A               	movf	sprintf@sp^(0+128),w
  3658     068E  0084               	movwf	4
  3659     068F  1383               	bcf	3,7	;select IRP bank0
  3660     0690  0180               	clrf	0
  3661     0691                     l405:
  3662     0691  0008               	return
  3663     0692                     __end_of_sprintf:
  3664                           
  3665                           	psect	text2
  3666     0C9D                     __ptext2:	
  3667 ;; *************** function _scale *****************
  3668 ;; Defined at:
  3669 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;  scl             1    wreg     char 
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;  scl             1   52[BANK0 ] char 
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  4   34[BANK0 ] char 
  3676 ;; Registers used:
  3677 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3683 ;;      Params:         0       4       0       0       0
  3684 ;;      Locals:         0       5       0       0       0
  3685 ;;      Temps:          0      10       0       0       0
  3686 ;;      Totals:         0      19       0       0       0
  3687 ;;Total ram usage:       19 bytes
  3688 ;; Hardware stack levels used: 1
  3689 ;; Hardware stack levels required when called: 3
  3690 ;; This function calls:
  3691 ;;		___awdiv
  3692 ;;		___awmod
  3693 ;;		___flmul
  3694 ;; This function is called by:
  3695 ;;		_sprintf
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699     0C9D                     _scale:	
  3700                           ;psect for function _scale
  3701                           
  3702                           
  3703                           ;incstack = 0
  3704                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3705                           ;scale@scl stored from wreg
  3706     0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  3707     0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  3708     0C9F  00D4               	movwf	scale@scl
  3709     0CA0                     l3830:
  3710                           
  3711                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3712     0CA0  1FD4               	btfss	scale@scl,7
  3713     0CA1  2CA3               	goto	u6221
  3714     0CA2  2CA4               	goto	u6220
  3715     0CA3                     u6221:
  3716     0CA3  2E53               	goto	l3852
  3717     0CA4                     u6220:
  3718     0CA4                     l3832:
  3719                           
  3720                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3721     0CA4  09D4               	comf	scale@scl,f
  3722     0CA5  0AD4               	incf	scale@scl,f
  3723     0CA6                     l3834:
  3724                           
  3725                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3726     0CA6  0854               	movf	scale@scl,w
  3727     0CA7  3A80               	xorlw	128
  3728     0CA8  3E12               	addlw	-238
  3729     0CA9  1C03               	skipc
  3730     0CAA  2CAC               	goto	u6231
  3731     0CAB  2CAD               	goto	u6230
  3732     0CAC                     u6231:
  3733     0CAC  2D97               	goto	l3842
  3734     0CAD                     u6230:
  3735     0CAD                     l3836:
  3736                           
  3737                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3738     0CAD  300A               	movlw	10
  3739     0CAE  00A0               	movwf	___awdiv@divisor
  3740     0CAF  3000               	movlw	0
  3741     0CB0  00A1               	movwf	___awdiv@divisor+1
  3742     0CB1  0854               	movf	scale@scl,w
  3743     0CB2  00F4               	movwf	___awmod@dividend
  3744     0CB3  01F5               	clrf	___awmod@dividend+1
  3745     0CB4  1BF4               	btfsc	___awmod@dividend,7
  3746     0CB5  03F5               	decf	___awmod@dividend+1,f
  3747     0CB6  3064               	movlw	100
  3748     0CB7  00F2               	movwf	___awmod@divisor
  3749     0CB8  3000               	movlw	0
  3750     0CB9  00F3               	movwf	___awmod@divisor+1
  3751     0CBA  160A  158A  273F  120A  158A  	fcall	___awmod
  3752     0CBF  0873               	movf	?___awmod+1,w
  3753     0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  3754     0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  3755     0CC2  00A3               	movwf	___awdiv@dividend+1
  3756     0CC3  0872               	movf	?___awmod,w
  3757     0CC4  00A2               	movwf	___awdiv@dividend
  3758     0CC5  160A  118A  2065  120A  158A  	fcall	___awdiv
  3759     0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  3760     0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  3761     0CCC  0820               	movf	?___awdiv,w
  3762     0CCD  00C6               	movwf	??_scale
  3763     0CCE  3001               	movlw	1
  3764     0CCF                     u6245:
  3765     0CCF  1003               	clrc
  3766     0CD0  0DC6               	rlf	??_scale,f
  3767     0CD1  3EFF               	addlw	-1
  3768     0CD2  1D03               	skipz
  3769     0CD3  2CCF               	goto	u6245
  3770     0CD4  1003               	clrc
  3771     0CD5  0D46               	rlf	??_scale,w
  3772     0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3773     0CD7  0084               	movwf	4
  3774     0CD8  120A  158A  200A  120A  158A  	fcall	stringdir
  3775     0CDD  00C7               	movwf	??_scale+1
  3776     0CDE  120A  158A  200A  120A  158A  	fcall	stringdir
  3777     0CE3  00C8               	movwf	??_scale+2
  3778     0CE4  120A  158A  200A  120A  158A  	fcall	stringdir
  3779     0CE9  00C9               	movwf	??_scale+3
  3780     0CEA  120A  158A  200A  120A  158A  	fcall	stringdir
  3781     0CEF  00CA               	movwf	??_scale+4
  3782     0CF0  084A               	movf	??_scale+4,w
  3783     0CF1  00AB               	movwf	___flmul@b+3
  3784     0CF2  0849               	movf	??_scale+3,w
  3785     0CF3  00AA               	movwf	___flmul@b+2
  3786     0CF4  0848               	movf	??_scale+2,w
  3787     0CF5  00A9               	movwf	___flmul@b+1
  3788     0CF6  0847               	movf	??_scale+1,w
  3789     0CF7  00A8               	movwf	___flmul@b
  3790     0CF8  3064               	movlw	100
  3791     0CF9  00A0               	movwf	___awdiv@divisor
  3792     0CFA  3000               	movlw	0
  3793     0CFB  00A1               	movwf	___awdiv@divisor+1
  3794     0CFC  0854               	movf	scale@scl,w
  3795     0CFD  00A2               	movwf	___awdiv@dividend
  3796     0CFE  01A3               	clrf	___awdiv@dividend+1
  3797     0CFF  1BA2               	btfsc	___awdiv@dividend,7
  3798     0D00  03A3               	decf	___awdiv@dividend+1,f
  3799     0D01  160A  118A  2065  120A  158A  	fcall	___awdiv
  3800     0D06  1283               	bcf	3,5	;RP0=0, select bank0
  3801     0D07  1303               	bcf	3,6	;RP1=0, select bank0
  3802     0D08  0820               	movf	?___awdiv,w
  3803     0D09  00CB               	movwf	??_scale+5
  3804     0D0A  3001               	movlw	1
  3805     0D0B                     u6255:
  3806     0D0B  1003               	clrc
  3807     0D0C  0DCB               	rlf	??_scale+5,f
  3808     0D0D  3EFF               	addlw	-1
  3809     0D0E  1D03               	skipz
  3810     0D0F  2D0B               	goto	u6255
  3811     0D10  1003               	clrc
  3812     0D11  0D4B               	rlf	??_scale+5,w
  3813     0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3814     0D13  0084               	movwf	4
  3815     0D14  120A  158A  200A  120A  158A  	fcall	stringdir
  3816     0D19  00CC               	movwf	??_scale+6
  3817     0D1A  120A  158A  200A  120A  158A  	fcall	stringdir
  3818     0D1F  00CD               	movwf	??_scale+7
  3819     0D20  120A  158A  200A  120A  158A  	fcall	stringdir
  3820     0D25  00CE               	movwf	??_scale+8
  3821     0D26  120A  158A  200A  120A  158A  	fcall	stringdir
  3822     0D2B  00CF               	movwf	??_scale+9
  3823     0D2C  084F               	movf	??_scale+9,w
  3824     0D2D  00AF               	movwf	___flmul@a+3
  3825     0D2E  084E               	movf	??_scale+8,w
  3826     0D2F  00AE               	movwf	___flmul@a+2
  3827     0D30  084D               	movf	??_scale+7,w
  3828     0D31  00AD               	movwf	___flmul@a+1
  3829     0D32  084C               	movf	??_scale+6,w
  3830     0D33  00AC               	movwf	___flmul@a
  3831     0D34  120A  158A  2158  120A  158A  	fcall	___flmul
  3832     0D39  1283               	bcf	3,5	;RP0=0, select bank0
  3833     0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  3834     0D3B  082B               	movf	?___flmul+3,w
  3835     0D3C  00D3               	movwf	_scale$1079+3
  3836     0D3D  082A               	movf	?___flmul+2,w
  3837     0D3E  00D2               	movwf	_scale$1079+2
  3838     0D3F  0829               	movf	?___flmul+1,w
  3839     0D40  00D1               	movwf	_scale$1079+1
  3840     0D41  0828               	movf	?___flmul,w
  3841     0D42  00D0               	movwf	_scale$1079
  3842                           
  3843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3844     0D43  300A               	movlw	10
  3845     0D44  00F2               	movwf	___awmod@divisor
  3846     0D45  3000               	movlw	0
  3847     0D46  00F3               	movwf	___awmod@divisor+1
  3848     0D47  0854               	movf	scale@scl,w
  3849     0D48  00F4               	movwf	___awmod@dividend
  3850     0D49  01F5               	clrf	___awmod@dividend+1
  3851     0D4A  1BF4               	btfsc	___awmod@dividend,7
  3852     0D4B  03F5               	decf	___awmod@dividend+1,f
  3853     0D4C  160A  158A  273F  120A  158A  	fcall	___awmod
  3854     0D51  0872               	movf	?___awmod,w
  3855     0D52  1283               	bcf	3,5	;RP0=0, select bank0
  3856     0D53  1303               	bcf	3,6	;RP1=0, select bank0
  3857     0D54  00C6               	movwf	??_scale
  3858     0D55  3001               	movlw	1
  3859     0D56                     u6265:
  3860     0D56  1003               	clrc
  3861     0D57  0DC6               	rlf	??_scale,f
  3862     0D58  3EFF               	addlw	-1
  3863     0D59  1D03               	skipz
  3864     0D5A  2D56               	goto	u6265
  3865     0D5B  1003               	clrc
  3866     0D5C  0D46               	rlf	??_scale,w
  3867     0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3868     0D5E  0084               	movwf	4
  3869     0D5F  120A  158A  200A  120A  158A  	fcall	stringdir
  3870     0D64  00C7               	movwf	??_scale+1
  3871     0D65  120A  158A  200A  120A  158A  	fcall	stringdir
  3872     0D6A  00C8               	movwf	??_scale+2
  3873     0D6B  120A  158A  200A  120A  158A  	fcall	stringdir
  3874     0D70  00C9               	movwf	??_scale+3
  3875     0D71  120A  158A  200A  120A  158A  	fcall	stringdir
  3876     0D76  00CA               	movwf	??_scale+4
  3877     0D77  084A               	movf	??_scale+4,w
  3878     0D78  00AB               	movwf	___flmul@b+3
  3879     0D79  0849               	movf	??_scale+3,w
  3880     0D7A  00AA               	movwf	___flmul@b+2
  3881     0D7B  0848               	movf	??_scale+2,w
  3882     0D7C  00A9               	movwf	___flmul@b+1
  3883     0D7D  0847               	movf	??_scale+1,w
  3884     0D7E  00A8               	movwf	___flmul@b
  3885     0D7F  0853               	movf	_scale$1079+3,w
  3886     0D80  00AF               	movwf	___flmul@a+3
  3887     0D81  0852               	movf	_scale$1079+2,w
  3888     0D82  00AE               	movwf	___flmul@a+2
  3889     0D83  0851               	movf	_scale$1079+1,w
  3890     0D84  00AD               	movwf	___flmul@a+1
  3891     0D85  0850               	movf	_scale$1079,w
  3892     0D86  00AC               	movwf	___flmul@a
  3893     0D87  120A  158A  2158  120A  158A  	fcall	___flmul
  3894     0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  3895     0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  3896     0D8E  082B               	movf	?___flmul+3,w
  3897     0D8F  00C5               	movwf	?_scale+3
  3898     0D90  082A               	movf	?___flmul+2,w
  3899     0D91  00C4               	movwf	?_scale+2
  3900     0D92  0829               	movf	?___flmul+1,w
  3901     0D93  00C3               	movwf	?_scale+1
  3902     0D94  0828               	movf	?___flmul,w
  3903     0D95  00C2               	movwf	?_scale
  3904     0D96  2FFF               	goto	l339
  3905     0D97                     l3842:
  3906     0D97  0854               	movf	scale@scl,w
  3907     0D98  3A80               	xorlw	128
  3908     0D99  3E75               	addlw	-139
  3909     0D9A  1C03               	skipc
  3910     0D9B  2D9D               	goto	u6271
  3911     0D9C  2D9E               	goto	u6270
  3912     0D9D                     u6271:
  3913     0D9D  2E26               	goto	l3848
  3914     0D9E                     u6270:
  3915     0D9E                     l3844:
  3916                           
  3917                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3918     0D9E  300A               	movlw	10
  3919     0D9F  00F2               	movwf	___awmod@divisor
  3920     0DA0  3000               	movlw	0
  3921     0DA1  00F3               	movwf	___awmod@divisor+1
  3922     0DA2  0854               	movf	scale@scl,w
  3923     0DA3  00F4               	movwf	___awmod@dividend
  3924     0DA4  01F5               	clrf	___awmod@dividend+1
  3925     0DA5  1BF4               	btfsc	___awmod@dividend,7
  3926     0DA6  03F5               	decf	___awmod@dividend+1,f
  3927     0DA7  160A  158A  273F  120A  158A  	fcall	___awmod
  3928     0DAC  0872               	movf	?___awmod,w
  3929     0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  3930     0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  3931     0DAF  00C6               	movwf	??_scale
  3932     0DB0  3001               	movlw	1
  3933     0DB1                     u6285:
  3934     0DB1  1003               	clrc
  3935     0DB2  0DC6               	rlf	??_scale,f
  3936     0DB3  3EFF               	addlw	-1
  3937     0DB4  1D03               	skipz
  3938     0DB5  2DB1               	goto	u6285
  3939     0DB6  1003               	clrc
  3940     0DB7  0D46               	rlf	??_scale,w
  3941     0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3942     0DB9  0084               	movwf	4
  3943     0DBA  120A  158A  200A  120A  158A  	fcall	stringdir
  3944     0DBF  00C7               	movwf	??_scale+1
  3945     0DC0  120A  158A  200A  120A  158A  	fcall	stringdir
  3946     0DC5  00C8               	movwf	??_scale+2
  3947     0DC6  120A  158A  200A  120A  158A  	fcall	stringdir
  3948     0DCB  00C9               	movwf	??_scale+3
  3949     0DCC  120A  158A  200A  120A  158A  	fcall	stringdir
  3950     0DD1  00CA               	movwf	??_scale+4
  3951     0DD2  084A               	movf	??_scale+4,w
  3952     0DD3  00AB               	movwf	___flmul@b+3
  3953     0DD4  0849               	movf	??_scale+3,w
  3954     0DD5  00AA               	movwf	___flmul@b+2
  3955     0DD6  0848               	movf	??_scale+2,w
  3956     0DD7  00A9               	movwf	___flmul@b+1
  3957     0DD8  0847               	movf	??_scale+1,w
  3958     0DD9  00A8               	movwf	___flmul@b
  3959     0DDA  300A               	movlw	10
  3960     0DDB  00A0               	movwf	___awdiv@divisor
  3961     0DDC  3000               	movlw	0
  3962     0DDD  00A1               	movwf	___awdiv@divisor+1
  3963     0DDE  0854               	movf	scale@scl,w
  3964     0DDF  00A2               	movwf	___awdiv@dividend
  3965     0DE0  01A3               	clrf	___awdiv@dividend+1
  3966     0DE1  1BA2               	btfsc	___awdiv@dividend,7
  3967     0DE2  03A3               	decf	___awdiv@dividend+1,f
  3968     0DE3  160A  118A  2065  120A  158A  	fcall	___awdiv
  3969     0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3970     0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3971     0DEA  0820               	movf	?___awdiv,w
  3972     0DEB  00CB               	movwf	??_scale+5
  3973     0DEC  3001               	movlw	1
  3974     0DED                     u6295:
  3975     0DED  1003               	clrc
  3976     0DEE  0DCB               	rlf	??_scale+5,f
  3977     0DEF  3EFF               	addlw	-1
  3978     0DF0  1D03               	skipz
  3979     0DF1  2DED               	goto	u6295
  3980     0DF2  1003               	clrc
  3981     0DF3  0D4B               	rlf	??_scale+5,w
  3982     0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3983     0DF5  0084               	movwf	4
  3984     0DF6  120A  158A  200A  120A  158A  	fcall	stringdir
  3985     0DFB  00CC               	movwf	??_scale+6
  3986     0DFC  120A  158A  200A  120A  158A  	fcall	stringdir
  3987     0E01  00CD               	movwf	??_scale+7
  3988     0E02  120A  158A  200A  120A  158A  	fcall	stringdir
  3989     0E07  00CE               	movwf	??_scale+8
  3990     0E08  120A  158A  200A  120A  158A  	fcall	stringdir
  3991     0E0D  00CF               	movwf	??_scale+9
  3992     0E0E  084F               	movf	??_scale+9,w
  3993     0E0F  00AF               	movwf	___flmul@a+3
  3994     0E10  084E               	movf	??_scale+8,w
  3995     0E11  00AE               	movwf	___flmul@a+2
  3996     0E12  084D               	movf	??_scale+7,w
  3997     0E13  00AD               	movwf	___flmul@a+1
  3998     0E14  084C               	movf	??_scale+6,w
  3999     0E15  00AC               	movwf	___flmul@a
  4000     0E16  120A  158A  2158  120A  158A  	fcall	___flmul
  4001     0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  4002     0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  4003     0E1D  082B               	movf	?___flmul+3,w
  4004     0E1E  00C5               	movwf	?_scale+3
  4005     0E1F  082A               	movf	?___flmul+2,w
  4006     0E20  00C4               	movwf	?_scale+2
  4007     0E21  0829               	movf	?___flmul+1,w
  4008     0E22  00C3               	movwf	?_scale+1
  4009     0E23  0828               	movf	?___flmul,w
  4010     0E24  00C2               	movwf	?_scale
  4011     0E25  2FFF               	goto	l339
  4012     0E26                     l3848:
  4013                           
  4014                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4015     0E26  0854               	movf	scale@scl,w
  4016     0E27  00C6               	movwf	??_scale
  4017     0E28  3001               	movlw	1
  4018     0E29                     u6305:
  4019     0E29  1003               	clrc
  4020     0E2A  0DC6               	rlf	??_scale,f
  4021     0E2B  3EFF               	addlw	-1
  4022     0E2C  1D03               	skipz
  4023     0E2D  2E29               	goto	u6305
  4024     0E2E  1003               	clrc
  4025     0E2F  0D46               	rlf	??_scale,w
  4026     0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4027     0E31  0084               	movwf	4
  4028     0E32  120A  158A  200A  120A  158A  	fcall	stringdir
  4029     0E37  00C7               	movwf	??_scale+1
  4030     0E38  120A  158A  200A  120A  158A  	fcall	stringdir
  4031     0E3D  00C8               	movwf	??_scale+2
  4032     0E3E  120A  158A  200A  120A  158A  	fcall	stringdir
  4033     0E43  00C9               	movwf	??_scale+3
  4034     0E44  120A  158A  200A  120A  158A  	fcall	stringdir
  4035     0E49  00CA               	movwf	??_scale+4
  4036     0E4A  084A               	movf	??_scale+4,w
  4037     0E4B  00C5               	movwf	?_scale+3
  4038     0E4C  0849               	movf	??_scale+3,w
  4039     0E4D  00C4               	movwf	?_scale+2
  4040     0E4E  0848               	movf	??_scale+2,w
  4041     0E4F  00C3               	movwf	?_scale+1
  4042     0E50  0847               	movf	??_scale+1,w
  4043     0E51  00C2               	movwf	?_scale
  4044     0E52  2FFF               	goto	l339
  4045     0E53                     l3852:
  4046                           
  4047                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4048     0E53  0854               	movf	scale@scl,w
  4049     0E54  3A80               	xorlw	128
  4050     0E55  3E12               	addlw	-238
  4051     0E56  1C03               	skipc
  4052     0E57  2E59               	goto	u6311
  4053     0E58  2E5A               	goto	u6310
  4054     0E59                     u6311:
  4055     0E59  2F44               	goto	l3860
  4056     0E5A                     u6310:
  4057     0E5A                     l3854:
  4058                           
  4059                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4060     0E5A  300A               	movlw	10
  4061     0E5B  00A0               	movwf	___awdiv@divisor
  4062     0E5C  3000               	movlw	0
  4063     0E5D  00A1               	movwf	___awdiv@divisor+1
  4064     0E5E  0854               	movf	scale@scl,w
  4065     0E5F  00F4               	movwf	___awmod@dividend
  4066     0E60  01F5               	clrf	___awmod@dividend+1
  4067     0E61  1BF4               	btfsc	___awmod@dividend,7
  4068     0E62  03F5               	decf	___awmod@dividend+1,f
  4069     0E63  3064               	movlw	100
  4070     0E64  00F2               	movwf	___awmod@divisor
  4071     0E65  3000               	movlw	0
  4072     0E66  00F3               	movwf	___awmod@divisor+1
  4073     0E67  160A  158A  273F  120A  158A  	fcall	___awmod
  4074     0E6C  0873               	movf	?___awmod+1,w
  4075     0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  4076     0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  4077     0E6F  00A3               	movwf	___awdiv@dividend+1
  4078     0E70  0872               	movf	?___awmod,w
  4079     0E71  00A2               	movwf	___awdiv@dividend
  4080     0E72  160A  118A  2065  120A  158A  	fcall	___awdiv
  4081     0E77  1283               	bcf	3,5	;RP0=0, select bank0
  4082     0E78  1303               	bcf	3,6	;RP1=0, select bank0
  4083     0E79  0820               	movf	?___awdiv,w
  4084     0E7A  00C6               	movwf	??_scale
  4085     0E7B  3001               	movlw	1
  4086     0E7C                     u6325:
  4087     0E7C  1003               	clrc
  4088     0E7D  0DC6               	rlf	??_scale,f
  4089     0E7E  3EFF               	addlw	-1
  4090     0E7F  1D03               	skipz
  4091     0E80  2E7C               	goto	u6325
  4092     0E81  1003               	clrc
  4093     0E82  0D46               	rlf	??_scale,w
  4094     0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4095     0E84  0084               	movwf	4
  4096     0E85  120A  158A  200A  120A  158A  	fcall	stringdir
  4097     0E8A  00C7               	movwf	??_scale+1
  4098     0E8B  120A  158A  200A  120A  158A  	fcall	stringdir
  4099     0E90  00C8               	movwf	??_scale+2
  4100     0E91  120A  158A  200A  120A  158A  	fcall	stringdir
  4101     0E96  00C9               	movwf	??_scale+3
  4102     0E97  120A  158A  200A  120A  158A  	fcall	stringdir
  4103     0E9C  00CA               	movwf	??_scale+4
  4104     0E9D  084A               	movf	??_scale+4,w
  4105     0E9E  00AB               	movwf	___flmul@b+3
  4106     0E9F  0849               	movf	??_scale+3,w
  4107     0EA0  00AA               	movwf	___flmul@b+2
  4108     0EA1  0848               	movf	??_scale+2,w
  4109     0EA2  00A9               	movwf	___flmul@b+1
  4110     0EA3  0847               	movf	??_scale+1,w
  4111     0EA4  00A8               	movwf	___flmul@b
  4112     0EA5  3064               	movlw	100
  4113     0EA6  00A0               	movwf	___awdiv@divisor
  4114     0EA7  3000               	movlw	0
  4115     0EA8  00A1               	movwf	___awdiv@divisor+1
  4116     0EA9  0854               	movf	scale@scl,w
  4117     0EAA  00A2               	movwf	___awdiv@dividend
  4118     0EAB  01A3               	clrf	___awdiv@dividend+1
  4119     0EAC  1BA2               	btfsc	___awdiv@dividend,7
  4120     0EAD  03A3               	decf	___awdiv@dividend+1,f
  4121     0EAE  160A  118A  2065  120A  158A  	fcall	___awdiv
  4122     0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  4123     0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  4124     0EB5  0820               	movf	?___awdiv,w
  4125     0EB6  00CB               	movwf	??_scale+5
  4126     0EB7  3001               	movlw	1
  4127     0EB8                     u6335:
  4128     0EB8  1003               	clrc
  4129     0EB9  0DCB               	rlf	??_scale+5,f
  4130     0EBA  3EFF               	addlw	-1
  4131     0EBB  1D03               	skipz
  4132     0EBC  2EB8               	goto	u6335
  4133     0EBD  1003               	clrc
  4134     0EBE  0D4B               	rlf	??_scale+5,w
  4135     0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4136     0EC0  0084               	movwf	4
  4137     0EC1  120A  158A  200A  120A  158A  	fcall	stringdir
  4138     0EC6  00CC               	movwf	??_scale+6
  4139     0EC7  120A  158A  200A  120A  158A  	fcall	stringdir
  4140     0ECC  00CD               	movwf	??_scale+7
  4141     0ECD  120A  158A  200A  120A  158A  	fcall	stringdir
  4142     0ED2  00CE               	movwf	??_scale+8
  4143     0ED3  120A  158A  200A  120A  158A  	fcall	stringdir
  4144     0ED8  00CF               	movwf	??_scale+9
  4145     0ED9  084F               	movf	??_scale+9,w
  4146     0EDA  00AF               	movwf	___flmul@a+3
  4147     0EDB  084E               	movf	??_scale+8,w
  4148     0EDC  00AE               	movwf	___flmul@a+2
  4149     0EDD  084D               	movf	??_scale+7,w
  4150     0EDE  00AD               	movwf	___flmul@a+1
  4151     0EDF  084C               	movf	??_scale+6,w
  4152     0EE0  00AC               	movwf	___flmul@a
  4153     0EE1  120A  158A  2158  120A  158A  	fcall	___flmul
  4154     0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4155     0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4156     0EE8  082B               	movf	?___flmul+3,w
  4157     0EE9  00D3               	movwf	_scale$1079+3
  4158     0EEA  082A               	movf	?___flmul+2,w
  4159     0EEB  00D2               	movwf	_scale$1079+2
  4160     0EEC  0829               	movf	?___flmul+1,w
  4161     0EED  00D1               	movwf	_scale$1079+1
  4162     0EEE  0828               	movf	?___flmul,w
  4163     0EEF  00D0               	movwf	_scale$1079
  4164                           
  4165                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4166     0EF0  300A               	movlw	10
  4167     0EF1  00F2               	movwf	___awmod@divisor
  4168     0EF2  3000               	movlw	0
  4169     0EF3  00F3               	movwf	___awmod@divisor+1
  4170     0EF4  0854               	movf	scale@scl,w
  4171     0EF5  00F4               	movwf	___awmod@dividend
  4172     0EF6  01F5               	clrf	___awmod@dividend+1
  4173     0EF7  1BF4               	btfsc	___awmod@dividend,7
  4174     0EF8  03F5               	decf	___awmod@dividend+1,f
  4175     0EF9  160A  158A  273F  120A  158A  	fcall	___awmod
  4176     0EFE  0872               	movf	?___awmod,w
  4177     0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4178     0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4179     0F01  00C6               	movwf	??_scale
  4180     0F02  3001               	movlw	1
  4181     0F03                     u6345:
  4182     0F03  1003               	clrc
  4183     0F04  0DC6               	rlf	??_scale,f
  4184     0F05  3EFF               	addlw	-1
  4185     0F06  1D03               	skipz
  4186     0F07  2F03               	goto	u6345
  4187     0F08  1003               	clrc
  4188     0F09  0D46               	rlf	??_scale,w
  4189     0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4190     0F0B  0084               	movwf	4
  4191     0F0C  120A  158A  200A  120A  158A  	fcall	stringdir
  4192     0F11  00C7               	movwf	??_scale+1
  4193     0F12  120A  158A  200A  120A  158A  	fcall	stringdir
  4194     0F17  00C8               	movwf	??_scale+2
  4195     0F18  120A  158A  200A  120A  158A  	fcall	stringdir
  4196     0F1D  00C9               	movwf	??_scale+3
  4197     0F1E  120A  158A  200A  120A  158A  	fcall	stringdir
  4198     0F23  00CA               	movwf	??_scale+4
  4199     0F24  084A               	movf	??_scale+4,w
  4200     0F25  00AB               	movwf	___flmul@b+3
  4201     0F26  0849               	movf	??_scale+3,w
  4202     0F27  00AA               	movwf	___flmul@b+2
  4203     0F28  0848               	movf	??_scale+2,w
  4204     0F29  00A9               	movwf	___flmul@b+1
  4205     0F2A  0847               	movf	??_scale+1,w
  4206     0F2B  00A8               	movwf	___flmul@b
  4207     0F2C  0853               	movf	_scale$1079+3,w
  4208     0F2D  00AF               	movwf	___flmul@a+3
  4209     0F2E  0852               	movf	_scale$1079+2,w
  4210     0F2F  00AE               	movwf	___flmul@a+2
  4211     0F30  0851               	movf	_scale$1079+1,w
  4212     0F31  00AD               	movwf	___flmul@a+1
  4213     0F32  0850               	movf	_scale$1079,w
  4214     0F33  00AC               	movwf	___flmul@a
  4215     0F34  120A  158A  2158  120A  158A  	fcall	___flmul
  4216     0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4217     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4218     0F3B  082B               	movf	?___flmul+3,w
  4219     0F3C  00C5               	movwf	?_scale+3
  4220     0F3D  082A               	movf	?___flmul+2,w
  4221     0F3E  00C4               	movwf	?_scale+2
  4222     0F3F  0829               	movf	?___flmul+1,w
  4223     0F40  00C3               	movwf	?_scale+1
  4224     0F41  0828               	movf	?___flmul,w
  4225     0F42  00C2               	movwf	?_scale
  4226     0F43  2FFF               	goto	l339
  4227     0F44                     l3860:
  4228     0F44  0854               	movf	scale@scl,w
  4229     0F45  3A80               	xorlw	128
  4230     0F46  3E75               	addlw	-139
  4231     0F47  1C03               	skipc
  4232     0F48  2F4A               	goto	u6351
  4233     0F49  2F4B               	goto	u6350
  4234     0F4A                     u6351:
  4235     0F4A  2FD3               	goto	l3866
  4236     0F4B                     u6350:
  4237     0F4B                     l3862:
  4238                           
  4239                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4240     0F4B  300A               	movlw	10
  4241     0F4C  00F2               	movwf	___awmod@divisor
  4242     0F4D  3000               	movlw	0
  4243     0F4E  00F3               	movwf	___awmod@divisor+1
  4244     0F4F  0854               	movf	scale@scl,w
  4245     0F50  00F4               	movwf	___awmod@dividend
  4246     0F51  01F5               	clrf	___awmod@dividend+1
  4247     0F52  1BF4               	btfsc	___awmod@dividend,7
  4248     0F53  03F5               	decf	___awmod@dividend+1,f
  4249     0F54  160A  158A  273F  120A  158A  	fcall	___awmod
  4250     0F59  0872               	movf	?___awmod,w
  4251     0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4252     0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4253     0F5C  00C6               	movwf	??_scale
  4254     0F5D  3001               	movlw	1
  4255     0F5E                     u6365:
  4256     0F5E  1003               	clrc
  4257     0F5F  0DC6               	rlf	??_scale,f
  4258     0F60  3EFF               	addlw	-1
  4259     0F61  1D03               	skipz
  4260     0F62  2F5E               	goto	u6365
  4261     0F63  1003               	clrc
  4262     0F64  0D46               	rlf	??_scale,w
  4263     0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4264     0F66  0084               	movwf	4
  4265     0F67  120A  158A  200A  120A  158A  	fcall	stringdir
  4266     0F6C  00C7               	movwf	??_scale+1
  4267     0F6D  120A  158A  200A  120A  158A  	fcall	stringdir
  4268     0F72  00C8               	movwf	??_scale+2
  4269     0F73  120A  158A  200A  120A  158A  	fcall	stringdir
  4270     0F78  00C9               	movwf	??_scale+3
  4271     0F79  120A  158A  200A  120A  158A  	fcall	stringdir
  4272     0F7E  00CA               	movwf	??_scale+4
  4273     0F7F  084A               	movf	??_scale+4,w
  4274     0F80  00AB               	movwf	___flmul@b+3
  4275     0F81  0849               	movf	??_scale+3,w
  4276     0F82  00AA               	movwf	___flmul@b+2
  4277     0F83  0848               	movf	??_scale+2,w
  4278     0F84  00A9               	movwf	___flmul@b+1
  4279     0F85  0847               	movf	??_scale+1,w
  4280     0F86  00A8               	movwf	___flmul@b
  4281     0F87  300A               	movlw	10
  4282     0F88  00A0               	movwf	___awdiv@divisor
  4283     0F89  3000               	movlw	0
  4284     0F8A  00A1               	movwf	___awdiv@divisor+1
  4285     0F8B  0854               	movf	scale@scl,w
  4286     0F8C  00A2               	movwf	___awdiv@dividend
  4287     0F8D  01A3               	clrf	___awdiv@dividend+1
  4288     0F8E  1BA2               	btfsc	___awdiv@dividend,7
  4289     0F8F  03A3               	decf	___awdiv@dividend+1,f
  4290     0F90  160A  118A  2065  120A  158A  	fcall	___awdiv
  4291     0F95  1283               	bcf	3,5	;RP0=0, select bank0
  4292     0F96  1303               	bcf	3,6	;RP1=0, select bank0
  4293     0F97  0820               	movf	?___awdiv,w
  4294     0F98  00CB               	movwf	??_scale+5
  4295     0F99  3001               	movlw	1
  4296     0F9A                     u6375:
  4297     0F9A  1003               	clrc
  4298     0F9B  0DCB               	rlf	??_scale+5,f
  4299     0F9C  3EFF               	addlw	-1
  4300     0F9D  1D03               	skipz
  4301     0F9E  2F9A               	goto	u6375
  4302     0F9F  1003               	clrc
  4303     0FA0  0D4B               	rlf	??_scale+5,w
  4304     0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4305     0FA2  0084               	movwf	4
  4306     0FA3  120A  158A  200A  120A  158A  	fcall	stringdir
  4307     0FA8  00CC               	movwf	??_scale+6
  4308     0FA9  120A  158A  200A  120A  158A  	fcall	stringdir
  4309     0FAE  00CD               	movwf	??_scale+7
  4310     0FAF  120A  158A  200A  120A  158A  	fcall	stringdir
  4311     0FB4  00CE               	movwf	??_scale+8
  4312     0FB5  120A  158A  200A  120A  158A  	fcall	stringdir
  4313     0FBA  00CF               	movwf	??_scale+9
  4314     0FBB  084F               	movf	??_scale+9,w
  4315     0FBC  00AF               	movwf	___flmul@a+3
  4316     0FBD  084E               	movf	??_scale+8,w
  4317     0FBE  00AE               	movwf	___flmul@a+2
  4318     0FBF  084D               	movf	??_scale+7,w
  4319     0FC0  00AD               	movwf	___flmul@a+1
  4320     0FC1  084C               	movf	??_scale+6,w
  4321     0FC2  00AC               	movwf	___flmul@a
  4322     0FC3  120A  158A  2158  120A  158A  	fcall	___flmul
  4323     0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4324     0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4325     0FCA  082B               	movf	?___flmul+3,w
  4326     0FCB  00C5               	movwf	?_scale+3
  4327     0FCC  082A               	movf	?___flmul+2,w
  4328     0FCD  00C4               	movwf	?_scale+2
  4329     0FCE  0829               	movf	?___flmul+1,w
  4330     0FCF  00C3               	movwf	?_scale+1
  4331     0FD0  0828               	movf	?___flmul,w
  4332     0FD1  00C2               	movwf	?_scale
  4333     0FD2  2FFF               	goto	l339
  4334     0FD3                     l3866:
  4335                           
  4336                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4337     0FD3  0854               	movf	scale@scl,w
  4338     0FD4  00C6               	movwf	??_scale
  4339     0FD5  3001               	movlw	1
  4340     0FD6                     u6385:
  4341     0FD6  1003               	clrc
  4342     0FD7  0DC6               	rlf	??_scale,f
  4343     0FD8  3EFF               	addlw	-1
  4344     0FD9  1D03               	skipz
  4345     0FDA  2FD6               	goto	u6385
  4346     0FDB  1003               	clrc
  4347     0FDC  0D46               	rlf	??_scale,w
  4348     0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4349     0FDE  0084               	movwf	4
  4350     0FDF  120A  158A  200A  120A  158A  	fcall	stringdir
  4351     0FE4  00C7               	movwf	??_scale+1
  4352     0FE5  120A  158A  200A  120A  158A  	fcall	stringdir
  4353     0FEA  00C8               	movwf	??_scale+2
  4354     0FEB  120A  158A  200A  120A  158A  	fcall	stringdir
  4355     0FF0  00C9               	movwf	??_scale+3
  4356     0FF1  120A  158A  200A  120A  158A  	fcall	stringdir
  4357     0FF6  00CA               	movwf	??_scale+4
  4358     0FF7  084A               	movf	??_scale+4,w
  4359     0FF8  00C5               	movwf	?_scale+3
  4360     0FF9  0849               	movf	??_scale+3,w
  4361     0FFA  00C4               	movwf	?_scale+2
  4362     0FFB  0848               	movf	??_scale+2,w
  4363     0FFC  00C3               	movwf	?_scale+1
  4364     0FFD  0847               	movf	??_scale+1,w
  4365     0FFE  00C2               	movwf	?_scale
  4366     0FFF                     l339:
  4367     0FFF  0008               	return
  4368     1000                     __end_of_scale:
  4369                           
  4370                           	psect	text3
  4371     1F3F                     __ptext3:	
  4372 ;; *************** function ___awmod *****************
  4373 ;; Defined at:
  4374 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;  divisor         2    2[COMMON] int 
  4377 ;;  dividend        2    4[COMMON] int 
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;  sign            1    8[COMMON] unsigned char 
  4380 ;;  counter         1    7[COMMON] unsigned char 
  4381 ;; Return value:  Size  Location     Type
  4382 ;;                  2    2[COMMON] int 
  4383 ;; Registers used:
  4384 ;;		wreg, status,2, status,0
  4385 ;; Tracked objects:
  4386 ;;		On entry : 0/0
  4387 ;;		On exit  : 0/0
  4388 ;;		Unchanged: 0/0
  4389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4390 ;;      Params:         4       0       0       0       0
  4391 ;;      Locals:         2       0       0       0       0
  4392 ;;      Temps:          1       0       0       0       0
  4393 ;;      Totals:         7       0       0       0       0
  4394 ;;Total ram usage:        7 bytes
  4395 ;; Hardware stack levels used: 1
  4396 ;; Hardware stack levels required when called: 1
  4397 ;; This function calls:
  4398 ;;		Nothing
  4399 ;; This function is called by:
  4400 ;;		_scale
  4401 ;; This function uses a non-reentrant model
  4402 ;;
  4403                           
  4404     1F3F                     ___awmod:	
  4405                           ;psect for function ___awmod
  4406                           
  4407     1F3F                     l2374:	
  4408                           ;incstack = 0
  4409                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4410                           
  4411     1F3F  01F8               	clrf	___awmod@sign
  4412     1F40                     l2376:
  4413     1F40  1FF5               	btfss	___awmod@dividend+1,7
  4414     1F41  2F43               	goto	u3041
  4415     1F42  2F44               	goto	u3040
  4416     1F43                     u3041:
  4417     1F43  2F4B               	goto	l2382
  4418     1F44                     u3040:
  4419     1F44                     l2378:
  4420     1F44  09F4               	comf	___awmod@dividend,f
  4421     1F45  09F5               	comf	___awmod@dividend+1,f
  4422     1F46  0AF4               	incf	___awmod@dividend,f
  4423     1F47  1903               	skipnz
  4424     1F48  0AF5               	incf	___awmod@dividend+1,f
  4425     1F49                     l2380:
  4426     1F49  01F8               	clrf	___awmod@sign
  4427     1F4A  0AF8               	incf	___awmod@sign,f
  4428     1F4B                     l2382:
  4429     1F4B  1FF3               	btfss	___awmod@divisor+1,7
  4430     1F4C  2F4E               	goto	u3051
  4431     1F4D  2F4F               	goto	u3050
  4432     1F4E                     u3051:
  4433     1F4E  2F54               	goto	l2386
  4434     1F4F                     u3050:
  4435     1F4F                     l2384:
  4436     1F4F  09F2               	comf	___awmod@divisor,f
  4437     1F50  09F3               	comf	___awmod@divisor+1,f
  4438     1F51  0AF2               	incf	___awmod@divisor,f
  4439     1F52  1903               	skipnz
  4440     1F53  0AF3               	incf	___awmod@divisor+1,f
  4441     1F54                     l2386:
  4442     1F54  0872               	movf	___awmod@divisor,w
  4443     1F55  0473               	iorwf	___awmod@divisor+1,w
  4444     1F56  1903               	btfsc	3,2
  4445     1F57  2F59               	goto	u3061
  4446     1F58  2F5A               	goto	u3060
  4447     1F59                     u3061:
  4448     1F59  2F89               	goto	l2404
  4449     1F5A                     u3060:
  4450     1F5A                     l2388:
  4451     1F5A  01F7               	clrf	___awmod@counter
  4452     1F5B  0AF7               	incf	___awmod@counter,f
  4453     1F5C  2F68               	goto	l2394
  4454     1F5D                     l2390:
  4455     1F5D  3001               	movlw	1
  4456     1F5E                     u3075:
  4457     1F5E  1003               	clrc
  4458     1F5F  0DF2               	rlf	___awmod@divisor,f
  4459     1F60  0DF3               	rlf	___awmod@divisor+1,f
  4460     1F61  3EFF               	addlw	-1
  4461     1F62  1D03               	skipz
  4462     1F63  2F5E               	goto	u3075
  4463     1F64                     l2392:
  4464     1F64  3001               	movlw	1
  4465     1F65  00F6               	movwf	??___awmod
  4466     1F66  0876               	movf	??___awmod,w
  4467     1F67  07F7               	addwf	___awmod@counter,f
  4468     1F68                     l2394:
  4469     1F68  1FF3               	btfss	___awmod@divisor+1,7
  4470     1F69  2F6B               	goto	u3081
  4471     1F6A  2F6C               	goto	u3080
  4472     1F6B                     u3081:
  4473     1F6B  2F5D               	goto	l2390
  4474     1F6C                     u3080:
  4475     1F6C                     l2396:
  4476     1F6C  0873               	movf	___awmod@divisor+1,w
  4477     1F6D  0275               	subwf	___awmod@dividend+1,w
  4478     1F6E  1D03               	skipz
  4479     1F6F  2F72               	goto	u3095
  4480     1F70  0872               	movf	___awmod@divisor,w
  4481     1F71  0274               	subwf	___awmod@dividend,w
  4482     1F72                     u3095:
  4483     1F72  1C03               	skipc
  4484     1F73  2F75               	goto	u3091
  4485     1F74  2F76               	goto	u3090
  4486     1F75                     u3091:
  4487     1F75  2F7C               	goto	l2400
  4488     1F76                     u3090:
  4489     1F76                     l2398:
  4490     1F76  0872               	movf	___awmod@divisor,w
  4491     1F77  02F4               	subwf	___awmod@dividend,f
  4492     1F78  0873               	movf	___awmod@divisor+1,w
  4493     1F79  1C03               	skipc
  4494     1F7A  03F5               	decf	___awmod@dividend+1,f
  4495     1F7B  02F5               	subwf	___awmod@dividend+1,f
  4496     1F7C                     l2400:
  4497     1F7C  3001               	movlw	1
  4498     1F7D                     u3105:
  4499     1F7D  1003               	clrc
  4500     1F7E  0CF3               	rrf	___awmod@divisor+1,f
  4501     1F7F  0CF2               	rrf	___awmod@divisor,f
  4502     1F80  3EFF               	addlw	-1
  4503     1F81  1D03               	skipz
  4504     1F82  2F7D               	goto	u3105
  4505     1F83                     l2402:
  4506     1F83  3001               	movlw	1
  4507     1F84  02F7               	subwf	___awmod@counter,f
  4508     1F85  1D03               	btfss	3,2
  4509     1F86  2F88               	goto	u3111
  4510     1F87  2F89               	goto	u3110
  4511     1F88                     u3111:
  4512     1F88  2F6C               	goto	l2396
  4513     1F89                     u3110:
  4514     1F89                     l2404:
  4515     1F89  0878               	movf	___awmod@sign,w
  4516     1F8A  1903               	btfsc	3,2
  4517     1F8B  2F8D               	goto	u3121
  4518     1F8C  2F8E               	goto	u3120
  4519     1F8D                     u3121:
  4520     1F8D  2F93               	goto	l2408
  4521     1F8E                     u3120:
  4522     1F8E                     l2406:
  4523     1F8E  09F4               	comf	___awmod@dividend,f
  4524     1F8F  09F5               	comf	___awmod@dividend+1,f
  4525     1F90  0AF4               	incf	___awmod@dividend,f
  4526     1F91  1903               	skipnz
  4527     1F92  0AF5               	incf	___awmod@dividend+1,f
  4528     1F93                     l2408:
  4529     1F93  0875               	movf	___awmod@dividend+1,w
  4530     1F94  00F3               	movwf	?___awmod+1
  4531     1F95  0874               	movf	___awmod@dividend,w
  4532     1F96  00F2               	movwf	?___awmod
  4533     1F97                     l575:
  4534     1F97  0008               	return
  4535     1F98                     __end_of___awmod:
  4536                           
  4537                           	psect	text4
  4538     1065                     __ptext4:	
  4539 ;; *************** function ___awdiv *****************
  4540 ;; Defined at:
  4541 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;  divisor         2    0[BANK0 ] int 
  4544 ;;  dividend        2    2[BANK0 ] int 
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;  quotient        2    6[BANK0 ] int 
  4547 ;;  sign            1    5[BANK0 ] unsigned char 
  4548 ;;  counter         1    4[BANK0 ] unsigned char 
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  2    0[BANK0 ] int 
  4551 ;; Registers used:
  4552 ;;		wreg, status,2, status,0
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4558 ;;      Params:         0       4       0       0       0
  4559 ;;      Locals:         0       4       0       0       0
  4560 ;;      Temps:          1       0       0       0       0
  4561 ;;      Totals:         1       8       0       0       0
  4562 ;;Total ram usage:        9 bytes
  4563 ;; Hardware stack levels used: 1
  4564 ;; Hardware stack levels required when called: 1
  4565 ;; This function calls:
  4566 ;;		Nothing
  4567 ;; This function is called by:
  4568 ;;		_scale
  4569 ;;		_sprintf
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573     1065                     ___awdiv:	
  4574                           ;psect for function ___awdiv
  4575                           
  4576     1065                     l2330:	
  4577                           ;incstack = 0
  4578                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4579                           
  4580     1065  1283               	bcf	3,5	;RP0=0, select bank0
  4581     1066  1303               	bcf	3,6	;RP1=0, select bank0
  4582     1067  01A5               	clrf	___awdiv@sign
  4583     1068                     l2332:
  4584     1068  1FA1               	btfss	___awdiv@divisor+1,7
  4585     1069  286B               	goto	u2941
  4586     106A  286C               	goto	u2940
  4587     106B                     u2941:
  4588     106B  2873               	goto	l2338
  4589     106C                     u2940:
  4590     106C                     l2334:
  4591     106C  09A0               	comf	___awdiv@divisor,f
  4592     106D  09A1               	comf	___awdiv@divisor+1,f
  4593     106E  0AA0               	incf	___awdiv@divisor,f
  4594     106F  1903               	skipnz
  4595     1070  0AA1               	incf	___awdiv@divisor+1,f
  4596     1071                     l2336:
  4597     1071  01A5               	clrf	___awdiv@sign
  4598     1072  0AA5               	incf	___awdiv@sign,f
  4599     1073                     l2338:
  4600     1073  1FA3               	btfss	___awdiv@dividend+1,7
  4601     1074  2876               	goto	u2951
  4602     1075  2877               	goto	u2950
  4603     1076                     u2951:
  4604     1076  2880               	goto	l2344
  4605     1077                     u2950:
  4606     1077                     l2340:
  4607     1077  09A2               	comf	___awdiv@dividend,f
  4608     1078  09A3               	comf	___awdiv@dividend+1,f
  4609     1079  0AA2               	incf	___awdiv@dividend,f
  4610     107A  1903               	skipnz
  4611     107B  0AA3               	incf	___awdiv@dividend+1,f
  4612     107C                     l2342:
  4613     107C  3001               	movlw	1
  4614     107D  00F9               	movwf	??___awdiv
  4615     107E  0879               	movf	??___awdiv,w
  4616     107F  06A5               	xorwf	___awdiv@sign,f
  4617     1080                     l2344:
  4618     1080  01A6               	clrf	___awdiv@quotient
  4619     1081  01A7               	clrf	___awdiv@quotient+1
  4620     1082                     l2346:
  4621     1082  0820               	movf	___awdiv@divisor,w
  4622     1083  0421               	iorwf	___awdiv@divisor+1,w
  4623     1084  1903               	btfsc	3,2
  4624     1085  2887               	goto	u2961
  4625     1086  2888               	goto	u2960
  4626     1087                     u2961:
  4627     1087  28BF               	goto	l2366
  4628     1088                     u2960:
  4629     1088                     l2348:
  4630     1088  01A4               	clrf	___awdiv@counter
  4631     1089  0AA4               	incf	___awdiv@counter,f
  4632     108A  2896               	goto	l2354
  4633     108B                     l2350:
  4634     108B  3001               	movlw	1
  4635     108C                     u2975:
  4636     108C  1003               	clrc
  4637     108D  0DA0               	rlf	___awdiv@divisor,f
  4638     108E  0DA1               	rlf	___awdiv@divisor+1,f
  4639     108F  3EFF               	addlw	-1
  4640     1090  1D03               	skipz
  4641     1091  288C               	goto	u2975
  4642     1092                     l2352:
  4643     1092  3001               	movlw	1
  4644     1093  00F9               	movwf	??___awdiv
  4645     1094  0879               	movf	??___awdiv,w
  4646     1095  07A4               	addwf	___awdiv@counter,f
  4647     1096                     l2354:
  4648     1096  1FA1               	btfss	___awdiv@divisor+1,7
  4649     1097  2899               	goto	u2981
  4650     1098  289A               	goto	u2980
  4651     1099                     u2981:
  4652     1099  288B               	goto	l2350
  4653     109A                     u2980:
  4654     109A                     l2356:
  4655     109A  3001               	movlw	1
  4656     109B                     u2995:
  4657     109B  1003               	clrc
  4658     109C  0DA6               	rlf	___awdiv@quotient,f
  4659     109D  0DA7               	rlf	___awdiv@quotient+1,f
  4660     109E  3EFF               	addlw	-1
  4661     109F  1D03               	skipz
  4662     10A0  289B               	goto	u2995
  4663     10A1  0821               	movf	___awdiv@divisor+1,w
  4664     10A2  0223               	subwf	___awdiv@dividend+1,w
  4665     10A3  1D03               	skipz
  4666     10A4  28A7               	goto	u3005
  4667     10A5  0820               	movf	___awdiv@divisor,w
  4668     10A6  0222               	subwf	___awdiv@dividend,w
  4669     10A7                     u3005:
  4670     10A7  1C03               	skipc
  4671     10A8  28AA               	goto	u3001
  4672     10A9  28AB               	goto	u3000
  4673     10AA                     u3001:
  4674     10AA  28B2               	goto	l2362
  4675     10AB                     u3000:
  4676     10AB                     l2358:
  4677     10AB  0820               	movf	___awdiv@divisor,w
  4678     10AC  02A2               	subwf	___awdiv@dividend,f
  4679     10AD  0821               	movf	___awdiv@divisor+1,w
  4680     10AE  1C03               	skipc
  4681     10AF  03A3               	decf	___awdiv@dividend+1,f
  4682     10B0  02A3               	subwf	___awdiv@dividend+1,f
  4683     10B1                     l2360:
  4684     10B1  1426               	bsf	___awdiv@quotient,0
  4685     10B2                     l2362:
  4686     10B2  3001               	movlw	1
  4687     10B3                     u3015:
  4688     10B3  1003               	clrc
  4689     10B4  0CA1               	rrf	___awdiv@divisor+1,f
  4690     10B5  0CA0               	rrf	___awdiv@divisor,f
  4691     10B6  3EFF               	addlw	-1
  4692     10B7  1D03               	skipz
  4693     10B8  28B3               	goto	u3015
  4694     10B9                     l2364:
  4695     10B9  3001               	movlw	1
  4696     10BA  02A4               	subwf	___awdiv@counter,f
  4697     10BB  1D03               	btfss	3,2
  4698     10BC  28BE               	goto	u3021
  4699     10BD  28BF               	goto	u3020
  4700     10BE                     u3021:
  4701     10BE  289A               	goto	l2356
  4702     10BF                     u3020:
  4703     10BF                     l2366:
  4704     10BF  0825               	movf	___awdiv@sign,w
  4705     10C0  1903               	btfsc	3,2
  4706     10C1  28C3               	goto	u3031
  4707     10C2  28C4               	goto	u3030
  4708     10C3                     u3031:
  4709     10C3  28C9               	goto	l2370
  4710     10C4                     u3030:
  4711     10C4                     l2368:
  4712     10C4  09A6               	comf	___awdiv@quotient,f
  4713     10C5  09A7               	comf	___awdiv@quotient+1,f
  4714     10C6  0AA6               	incf	___awdiv@quotient,f
  4715     10C7  1903               	skipnz
  4716     10C8  0AA7               	incf	___awdiv@quotient+1,f
  4717     10C9                     l2370:
  4718     10C9  0827               	movf	___awdiv@quotient+1,w
  4719     10CA  00A1               	movwf	?___awdiv+1
  4720     10CB  0826               	movf	___awdiv@quotient,w
  4721     10CC  00A0               	movwf	?___awdiv
  4722     10CD                     l562:
  4723     10CD  0008               	return
  4724     10CE                     __end_of___awdiv:
  4725                           
  4726                           	psect	text5
  4727     1BB9                     __ptext5:	
  4728 ;; *************** function _isdigit *****************
  4729 ;; Defined at:
  4730 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;  c               1    wreg     unsigned char 
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;  c               1    3[COMMON] unsigned char 
  4735 ;; Return value:  Size  Location     Type
  4736 ;;		None               void
  4737 ;; Registers used:
  4738 ;;		wreg, status,2, status,0
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4744 ;;      Params:         0       0       0       0       0
  4745 ;;      Locals:         2       0       0       0       0
  4746 ;;      Temps:          0       0       0       0       0
  4747 ;;      Totals:         2       0       0       0       0
  4748 ;;Total ram usage:        2 bytes
  4749 ;; Hardware stack levels used: 1
  4750 ;; Hardware stack levels required when called: 1
  4751 ;; This function calls:
  4752 ;;		Nothing
  4753 ;; This function is called by:
  4754 ;;		_sprintf
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758     1BB9                     _isdigit:	
  4759                           ;psect for function _isdigit
  4760                           
  4761                           
  4762                           ;incstack = 0
  4763                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4764                           ;isdigit@c stored from wreg
  4765     1BB9  00F3               	movwf	isdigit@c
  4766     1BBA                     l2898:
  4767     1BBA  01F2               	clrf	_isdigit$890
  4768     1BBB                     l2900:
  4769     1BBB  303A               	movlw	58
  4770     1BBC  0273               	subwf	isdigit@c,w
  4771     1BBD  1803               	skipnc
  4772     1BBE  2BC0               	goto	u4381
  4773     1BBF  2BC1               	goto	u4380
  4774     1BC0                     u4381:
  4775     1BC0  2BC9               	goto	l2906
  4776     1BC1                     u4380:
  4777     1BC1                     l2902:
  4778     1BC1  3030               	movlw	48
  4779     1BC2  0273               	subwf	isdigit@c,w
  4780     1BC3  1C03               	skipc
  4781     1BC4  2BC6               	goto	u4391
  4782     1BC5  2BC7               	goto	u4390
  4783     1BC6                     u4391:
  4784     1BC6  2BC9               	goto	l2906
  4785     1BC7                     u4390:
  4786     1BC7                     l2904:
  4787     1BC7  01F2               	clrf	_isdigit$890
  4788     1BC8  0AF2               	incf	_isdigit$890,f
  4789     1BC9                     l2906:
  4790     1BC9  0C72               	rrf	_isdigit$890,w
  4791     1BCA                     l896:
  4792     1BCA  0008               	return
  4793     1BCB                     __end_of_isdigit:
  4794                           
  4795                           	psect	text6
  4796     139B                     __ptext6:	
  4797 ;; *************** function _fround *****************
  4798 ;; Defined at:
  4799 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;  prec            1    wreg     unsigned char 
  4802 ;; Auto vars:     Size  Location     Type
  4803 ;;  prec            1   53[BANK0 ] unsigned char 
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  4   34[BANK0 ] unsigned char 
  4806 ;; Registers used:
  4807 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4813 ;;      Params:         0       4       0       0       0
  4814 ;;      Locals:         0       9       0       0       0
  4815 ;;      Temps:          0       7       0       0       0
  4816 ;;      Totals:         0      20       0       0       0
  4817 ;;Total ram usage:       20 bytes
  4818 ;; Hardware stack levels used: 1
  4819 ;; Hardware stack levels required when called: 3
  4820 ;; This function calls:
  4821 ;;		___flmul
  4822 ;;		___lwdiv
  4823 ;;		___lwmod
  4824 ;; This function is called by:
  4825 ;;		_sprintf
  4826 ;; This function uses a non-reentrant model
  4827 ;;
  4828                           
  4829     139B                     _fround:	
  4830                           ;psect for function _fround
  4831                           
  4832                           
  4833                           ;incstack = 0
  4834                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4835                           ;fround@prec stored from wreg
  4836     139B  1283               	bcf	3,5	;RP0=0, select bank0
  4837     139C  1303               	bcf	3,6	;RP1=0, select bank0
  4838     139D  00D5               	movwf	fround@prec
  4839     139E                     l3812:
  4840                           
  4841                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4842     139E  306E               	movlw	110
  4843     139F  0255               	subwf	fround@prec,w
  4844     13A0  1C03               	skipc
  4845     13A1  2BA3               	goto	u6141
  4846     13A2  2BA4               	goto	u6140
  4847     13A3                     u6141:
  4848     13A3  2CB3               	goto	l3820
  4849     13A4                     u6140:
  4850     13A4                     l3814:
  4851                           
  4852                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4853     13A4  303F               	movlw	63
  4854     13A5  00AB               	movwf	___flmul@b+3
  4855     13A6  3000               	movlw	0
  4856     13A7  00AA               	movwf	___flmul@b+2
  4857     13A8  3000               	movlw	0
  4858     13A9  00A9               	movwf	___flmul@b+1
  4859     13AA  3000               	movlw	0
  4860     13AB  00A8               	movwf	___flmul@b
  4861     13AC  3064               	movlw	100
  4862     13AD  00A0               	movwf	___lwdiv@divisor
  4863     13AE  3000               	movlw	0
  4864     13AF  00A1               	movwf	___lwdiv@divisor+1
  4865     13B0  0855               	movf	fround@prec,w
  4866     13B1  00C6               	movwf	??_fround
  4867     13B2  01C7               	clrf	??_fround+1
  4868     13B3  0846               	movf	??_fround,w
  4869     13B4  00A2               	movwf	___lwdiv@dividend
  4870     13B5  0847               	movf	??_fround+1,w
  4871     13B6  00A3               	movwf	___lwdiv@dividend+1
  4872     13B7  160A  158A  25B7  160A  118A  	fcall	___lwdiv
  4873     13BC  1283               	bcf	3,5	;RP0=0, select bank0
  4874     13BD  1303               	bcf	3,6	;RP1=0, select bank0
  4875     13BE  0820               	movf	?___lwdiv,w
  4876     13BF  00C8               	movwf	??_fround+2
  4877     13C0  3001               	movlw	1
  4878     13C1                     u6155:
  4879     13C1  1003               	clrc
  4880     13C2  0DC8               	rlf	??_fround+2,f
  4881     13C3  3EFF               	addlw	-1
  4882     13C4  1D03               	skipz
  4883     13C5  2BC1               	goto	u6155
  4884     13C6  1003               	clrc
  4885     13C7  0D48               	rlf	??_fround+2,w
  4886     13C8  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4887     13C9  0084               	movwf	4
  4888     13CA  120A  158A  200A  160A  118A  	fcall	stringdir
  4889     13CF  00C9               	movwf	??_fround+3
  4890     13D0  120A  158A  200A  160A  118A  	fcall	stringdir
  4891     13D5  00CA               	movwf	??_fround+4
  4892     13D6  120A  158A  200A  160A  118A  	fcall	stringdir
  4893     13DB  00CB               	movwf	??_fround+5
  4894     13DC  120A  158A  200A  160A  118A  	fcall	stringdir
  4895     13E1  00CC               	movwf	??_fround+6
  4896     13E2  084C               	movf	??_fround+6,w
  4897     13E3  00AF               	movwf	___flmul@a+3
  4898     13E4  084B               	movf	??_fround+5,w
  4899     13E5  00AE               	movwf	___flmul@a+2
  4900     13E6  084A               	movf	??_fround+4,w
  4901     13E7  00AD               	movwf	___flmul@a+1
  4902     13E8  0849               	movf	??_fround+3,w
  4903     13E9  00AC               	movwf	___flmul@a
  4904     13EA  120A  158A  2158  160A  118A  	fcall	___flmul
  4905     13EF  1283               	bcf	3,5	;RP0=0, select bank0
  4906     13F0  1303               	bcf	3,6	;RP1=0, select bank0
  4907     13F1  082B               	movf	?___flmul+3,w
  4908     13F2  00D4               	movwf	_fround$1077+3
  4909     13F3  082A               	movf	?___flmul+2,w
  4910     13F4  00D3               	movwf	_fround$1077+2
  4911     13F5  0829               	movf	?___flmul+1,w
  4912     13F6  00D2               	movwf	_fround$1077+1
  4913     13F7  0828               	movf	?___flmul,w
  4914     13F8  00D1               	movwf	_fround$1077
  4915                           
  4916                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4917     13F9  300A               	movlw	10
  4918     13FA  00A0               	movwf	___lwdiv@divisor
  4919     13FB  3000               	movlw	0
  4920     13FC  00A1               	movwf	___lwdiv@divisor+1
  4921     13FD  0855               	movf	fround@prec,w
  4922     13FE  00C6               	movwf	??_fround
  4923     13FF  01C7               	clrf	??_fround+1
  4924     1400  0846               	movf	??_fround,w
  4925     1401  00F4               	movwf	___lwmod@dividend
  4926     1402  0847               	movf	??_fround+1,w
  4927     1403  00F5               	movwf	___lwmod@dividend+1
  4928     1404  3064               	movlw	100
  4929     1405  00F2               	movwf	___lwmod@divisor
  4930     1406  3000               	movlw	0
  4931     1407  00F3               	movwf	___lwmod@divisor+1
  4932     1408  160A  158A  2537  160A  118A  	fcall	___lwmod
  4933     140D  0873               	movf	?___lwmod+1,w
  4934     140E  1283               	bcf	3,5	;RP0=0, select bank0
  4935     140F  1303               	bcf	3,6	;RP1=0, select bank0
  4936     1410  00A3               	movwf	___lwdiv@dividend+1
  4937     1411  0872               	movf	?___lwmod,w
  4938     1412  00A2               	movwf	___lwdiv@dividend
  4939     1413  160A  158A  25B7  160A  118A  	fcall	___lwdiv
  4940     1418  1283               	bcf	3,5	;RP0=0, select bank0
  4941     1419  1303               	bcf	3,6	;RP1=0, select bank0
  4942     141A  0820               	movf	?___lwdiv,w
  4943     141B  00C8               	movwf	??_fround+2
  4944     141C  3001               	movlw	1
  4945     141D                     u6165:
  4946     141D  1003               	clrc
  4947     141E  0DC8               	rlf	??_fround+2,f
  4948     141F  3EFF               	addlw	-1
  4949     1420  1D03               	skipz
  4950     1421  2C1D               	goto	u6165
  4951     1422  1003               	clrc
  4952     1423  0D48               	rlf	??_fround+2,w
  4953     1424  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4954     1425  0084               	movwf	4
  4955     1426  120A  158A  200A  160A  118A  	fcall	stringdir
  4956     142B  00C9               	movwf	??_fround+3
  4957     142C  120A  158A  200A  160A  118A  	fcall	stringdir
  4958     1431  00CA               	movwf	??_fround+4
  4959     1432  120A  158A  200A  160A  118A  	fcall	stringdir
  4960     1437  00CB               	movwf	??_fround+5
  4961     1438  120A  158A  200A  160A  118A  	fcall	stringdir
  4962     143D  00CC               	movwf	??_fround+6
  4963     143E  084C               	movf	??_fround+6,w
  4964     143F  00AB               	movwf	___flmul@b+3
  4965     1440  084B               	movf	??_fround+5,w
  4966     1441  00AA               	movwf	___flmul@b+2
  4967     1442  084A               	movf	??_fround+4,w
  4968     1443  00A9               	movwf	___flmul@b+1
  4969     1444  0849               	movf	??_fround+3,w
  4970     1445  00A8               	movwf	___flmul@b
  4971     1446  0854               	movf	_fround$1077+3,w
  4972     1447  00AF               	movwf	___flmul@a+3
  4973     1448  0853               	movf	_fround$1077+2,w
  4974     1449  00AE               	movwf	___flmul@a+2
  4975     144A  0852               	movf	_fround$1077+1,w
  4976     144B  00AD               	movwf	___flmul@a+1
  4977     144C  0851               	movf	_fround$1077,w
  4978     144D  00AC               	movwf	___flmul@a
  4979     144E  120A  158A  2158  160A  118A  	fcall	___flmul
  4980     1453  1283               	bcf	3,5	;RP0=0, select bank0
  4981     1454  1303               	bcf	3,6	;RP1=0, select bank0
  4982     1455  082B               	movf	?___flmul+3,w
  4983     1456  00D0               	movwf	_fround$1078+3
  4984     1457  082A               	movf	?___flmul+2,w
  4985     1458  00CF               	movwf	_fround$1078+2
  4986     1459  0829               	movf	?___flmul+1,w
  4987     145A  00CE               	movwf	_fround$1078+1
  4988     145B  0828               	movf	?___flmul,w
  4989     145C  00CD               	movwf	_fround$1078
  4990                           
  4991                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4992     145D  300A               	movlw	10
  4993     145E  00F2               	movwf	___lwmod@divisor
  4994     145F  3000               	movlw	0
  4995     1460  00F3               	movwf	___lwmod@divisor+1
  4996     1461  0855               	movf	fround@prec,w
  4997     1462  00C6               	movwf	??_fround
  4998     1463  01C7               	clrf	??_fround+1
  4999     1464  0846               	movf	??_fround,w
  5000     1465  00F4               	movwf	___lwmod@dividend
  5001     1466  0847               	movf	??_fround+1,w
  5002     1467  00F5               	movwf	___lwmod@dividend+1
  5003     1468  160A  158A  2537  160A  118A  	fcall	___lwmod
  5004     146D  0872               	movf	?___lwmod,w
  5005     146E  1283               	bcf	3,5	;RP0=0, select bank0
  5006     146F  1303               	bcf	3,6	;RP1=0, select bank0
  5007     1470  00C8               	movwf	??_fround+2
  5008     1471  3001               	movlw	1
  5009     1472                     u6175:
  5010     1472  1003               	clrc
  5011     1473  0DC8               	rlf	??_fround+2,f
  5012     1474  3EFF               	addlw	-1
  5013     1475  1D03               	skipz
  5014     1476  2C72               	goto	u6175
  5015     1477  1003               	clrc
  5016     1478  0D48               	rlf	??_fround+2,w
  5017     1479  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5018     147A  0084               	movwf	4
  5019     147B  120A  158A  200A  160A  118A  	fcall	stringdir
  5020     1480  00C9               	movwf	??_fround+3
  5021     1481  120A  158A  200A  160A  118A  	fcall	stringdir
  5022     1486  00CA               	movwf	??_fround+4
  5023     1487  120A  158A  200A  160A  118A  	fcall	stringdir
  5024     148C  00CB               	movwf	??_fround+5
  5025     148D  120A  158A  200A  160A  118A  	fcall	stringdir
  5026     1492  00CC               	movwf	??_fround+6
  5027     1493  084C               	movf	??_fround+6,w
  5028     1494  00AB               	movwf	___flmul@b+3
  5029     1495  084B               	movf	??_fround+5,w
  5030     1496  00AA               	movwf	___flmul@b+2
  5031     1497  084A               	movf	??_fround+4,w
  5032     1498  00A9               	movwf	___flmul@b+1
  5033     1499  0849               	movf	??_fround+3,w
  5034     149A  00A8               	movwf	___flmul@b
  5035     149B  0850               	movf	_fround$1078+3,w
  5036     149C  00AF               	movwf	___flmul@a+3
  5037     149D  084F               	movf	_fround$1078+2,w
  5038     149E  00AE               	movwf	___flmul@a+2
  5039     149F  084E               	movf	_fround$1078+1,w
  5040     14A0  00AD               	movwf	___flmul@a+1
  5041     14A1  084D               	movf	_fround$1078,w
  5042     14A2  00AC               	movwf	___flmul@a
  5043     14A3  120A  158A  2158  160A  118A  	fcall	___flmul
  5044     14A8  1283               	bcf	3,5	;RP0=0, select bank0
  5045     14A9  1303               	bcf	3,6	;RP1=0, select bank0
  5046     14AA  082B               	movf	?___flmul+3,w
  5047     14AB  00C5               	movwf	?_fround+3
  5048     14AC  082A               	movf	?___flmul+2,w
  5049     14AD  00C4               	movwf	?_fround+2
  5050     14AE  0829               	movf	?___flmul+1,w
  5051     14AF  00C3               	movwf	?_fround+1
  5052     14B0  0828               	movf	?___flmul,w
  5053     14B1  00C2               	movwf	?_fround
  5054     14B2  2DA7               	goto	l332
  5055     14B3                     l3820:
  5056     14B3  300B               	movlw	11
  5057     14B4  0255               	subwf	fround@prec,w
  5058     14B5  1C03               	skipc
  5059     14B6  2CB8               	goto	u6181
  5060     14B7  2CB9               	goto	u6180
  5061     14B8                     u6181:
  5062     14B8  2D64               	goto	l3826
  5063     14B9                     u6180:
  5064     14B9                     l3822:
  5065                           
  5066                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5067     14B9  303F               	movlw	63
  5068     14BA  00AB               	movwf	___flmul@b+3
  5069     14BB  3000               	movlw	0
  5070     14BC  00AA               	movwf	___flmul@b+2
  5071     14BD  3000               	movlw	0
  5072     14BE  00A9               	movwf	___flmul@b+1
  5073     14BF  3000               	movlw	0
  5074     14C0  00A8               	movwf	___flmul@b
  5075     14C1  300A               	movlw	10
  5076     14C2  00A0               	movwf	___lwdiv@divisor
  5077     14C3  3000               	movlw	0
  5078     14C4  00A1               	movwf	___lwdiv@divisor+1
  5079     14C5  0855               	movf	fround@prec,w
  5080     14C6  00C6               	movwf	??_fround
  5081     14C7  01C7               	clrf	??_fround+1
  5082     14C8  0846               	movf	??_fround,w
  5083     14C9  00A2               	movwf	___lwdiv@dividend
  5084     14CA  0847               	movf	??_fround+1,w
  5085     14CB  00A3               	movwf	___lwdiv@dividend+1
  5086     14CC  160A  158A  25B7  160A  118A  	fcall	___lwdiv
  5087     14D1  1283               	bcf	3,5	;RP0=0, select bank0
  5088     14D2  1303               	bcf	3,6	;RP1=0, select bank0
  5089     14D3  0820               	movf	?___lwdiv,w
  5090     14D4  00C8               	movwf	??_fround+2
  5091     14D5  3001               	movlw	1
  5092     14D6                     u6195:
  5093     14D6  1003               	clrc
  5094     14D7  0DC8               	rlf	??_fround+2,f
  5095     14D8  3EFF               	addlw	-1
  5096     14D9  1D03               	skipz
  5097     14DA  2CD6               	goto	u6195
  5098     14DB  1003               	clrc
  5099     14DC  0D48               	rlf	??_fround+2,w
  5100     14DD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5101     14DE  0084               	movwf	4
  5102     14DF  120A  158A  200A  160A  118A  	fcall	stringdir
  5103     14E4  00C9               	movwf	??_fround+3
  5104     14E5  120A  158A  200A  160A  118A  	fcall	stringdir
  5105     14EA  00CA               	movwf	??_fround+4
  5106     14EB  120A  158A  200A  160A  118A  	fcall	stringdir
  5107     14F0  00CB               	movwf	??_fround+5
  5108     14F1  120A  158A  200A  160A  118A  	fcall	stringdir
  5109     14F6  00CC               	movwf	??_fround+6
  5110     14F7  084C               	movf	??_fround+6,w
  5111     14F8  00AF               	movwf	___flmul@a+3
  5112     14F9  084B               	movf	??_fround+5,w
  5113     14FA  00AE               	movwf	___flmul@a+2
  5114     14FB  084A               	movf	??_fround+4,w
  5115     14FC  00AD               	movwf	___flmul@a+1
  5116     14FD  0849               	movf	??_fround+3,w
  5117     14FE  00AC               	movwf	___flmul@a
  5118     14FF  120A  158A  2158  160A  118A  	fcall	___flmul
  5119     1504  1283               	bcf	3,5	;RP0=0, select bank0
  5120     1505  1303               	bcf	3,6	;RP1=0, select bank0
  5121     1506  082B               	movf	?___flmul+3,w
  5122     1507  00D4               	movwf	_fround$1077+3
  5123     1508  082A               	movf	?___flmul+2,w
  5124     1509  00D3               	movwf	_fround$1077+2
  5125     150A  0829               	movf	?___flmul+1,w
  5126     150B  00D2               	movwf	_fround$1077+1
  5127     150C  0828               	movf	?___flmul,w
  5128     150D  00D1               	movwf	_fround$1077
  5129                           
  5130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5131     150E  300A               	movlw	10
  5132     150F  00F2               	movwf	___lwmod@divisor
  5133     1510  3000               	movlw	0
  5134     1511  00F3               	movwf	___lwmod@divisor+1
  5135     1512  0855               	movf	fround@prec,w
  5136     1513  00C6               	movwf	??_fround
  5137     1514  01C7               	clrf	??_fround+1
  5138     1515  0846               	movf	??_fround,w
  5139     1516  00F4               	movwf	___lwmod@dividend
  5140     1517  0847               	movf	??_fround+1,w
  5141     1518  00F5               	movwf	___lwmod@dividend+1
  5142     1519  160A  158A  2537  160A  118A  	fcall	___lwmod
  5143     151E  0872               	movf	?___lwmod,w
  5144     151F  1283               	bcf	3,5	;RP0=0, select bank0
  5145     1520  1303               	bcf	3,6	;RP1=0, select bank0
  5146     1521  00C8               	movwf	??_fround+2
  5147     1522  3001               	movlw	1
  5148     1523                     u6205:
  5149     1523  1003               	clrc
  5150     1524  0DC8               	rlf	??_fround+2,f
  5151     1525  3EFF               	addlw	-1
  5152     1526  1D03               	skipz
  5153     1527  2D23               	goto	u6205
  5154     1528  1003               	clrc
  5155     1529  0D48               	rlf	??_fround+2,w
  5156     152A  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5157     152B  0084               	movwf	4
  5158     152C  120A  158A  200A  160A  118A  	fcall	stringdir
  5159     1531  00C9               	movwf	??_fround+3
  5160     1532  120A  158A  200A  160A  118A  	fcall	stringdir
  5161     1537  00CA               	movwf	??_fround+4
  5162     1538  120A  158A  200A  160A  118A  	fcall	stringdir
  5163     153D  00CB               	movwf	??_fround+5
  5164     153E  120A  158A  200A  160A  118A  	fcall	stringdir
  5165     1543  00CC               	movwf	??_fround+6
  5166     1544  084C               	movf	??_fround+6,w
  5167     1545  00AB               	movwf	___flmul@b+3
  5168     1546  084B               	movf	??_fround+5,w
  5169     1547  00AA               	movwf	___flmul@b+2
  5170     1548  084A               	movf	??_fround+4,w
  5171     1549  00A9               	movwf	___flmul@b+1
  5172     154A  0849               	movf	??_fround+3,w
  5173     154B  00A8               	movwf	___flmul@b
  5174     154C  0854               	movf	_fround$1077+3,w
  5175     154D  00AF               	movwf	___flmul@a+3
  5176     154E  0853               	movf	_fround$1077+2,w
  5177     154F  00AE               	movwf	___flmul@a+2
  5178     1550  0852               	movf	_fround$1077+1,w
  5179     1551  00AD               	movwf	___flmul@a+1
  5180     1552  0851               	movf	_fround$1077,w
  5181     1553  00AC               	movwf	___flmul@a
  5182     1554  120A  158A  2158  160A  118A  	fcall	___flmul
  5183     1559  1283               	bcf	3,5	;RP0=0, select bank0
  5184     155A  1303               	bcf	3,6	;RP1=0, select bank0
  5185     155B  082B               	movf	?___flmul+3,w
  5186     155C  00C5               	movwf	?_fround+3
  5187     155D  082A               	movf	?___flmul+2,w
  5188     155E  00C4               	movwf	?_fround+2
  5189     155F  0829               	movf	?___flmul+1,w
  5190     1560  00C3               	movwf	?_fround+1
  5191     1561  0828               	movf	?___flmul,w
  5192     1562  00C2               	movwf	?_fround
  5193     1563  2DA7               	goto	l332
  5194     1564                     l3826:
  5195                           
  5196                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5197     1564  303F               	movlw	63
  5198     1565  00AB               	movwf	___flmul@b+3
  5199     1566  3000               	movlw	0
  5200     1567  00AA               	movwf	___flmul@b+2
  5201     1568  3000               	movlw	0
  5202     1569  00A9               	movwf	___flmul@b+1
  5203     156A  3000               	movlw	0
  5204     156B  00A8               	movwf	___flmul@b
  5205     156C  0855               	movf	fround@prec,w
  5206     156D  00C6               	movwf	??_fround
  5207     156E  3001               	movlw	1
  5208     156F                     u6215:
  5209     156F  1003               	clrc
  5210     1570  0DC6               	rlf	??_fround,f
  5211     1571  3EFF               	addlw	-1
  5212     1572  1D03               	skipz
  5213     1573  2D6F               	goto	u6215
  5214     1574  1003               	clrc
  5215     1575  0D46               	rlf	??_fround,w
  5216     1576  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5217     1577  0084               	movwf	4
  5218     1578  120A  158A  200A  160A  118A  	fcall	stringdir
  5219     157D  00C7               	movwf	??_fround+1
  5220     157E  120A  158A  200A  160A  118A  	fcall	stringdir
  5221     1583  00C8               	movwf	??_fround+2
  5222     1584  120A  158A  200A  160A  118A  	fcall	stringdir
  5223     1589  00C9               	movwf	??_fround+3
  5224     158A  120A  158A  200A  160A  118A  	fcall	stringdir
  5225     158F  00CA               	movwf	??_fround+4
  5226     1590  084A               	movf	??_fround+4,w
  5227     1591  00AF               	movwf	___flmul@a+3
  5228     1592  0849               	movf	??_fround+3,w
  5229     1593  00AE               	movwf	___flmul@a+2
  5230     1594  0848               	movf	??_fround+2,w
  5231     1595  00AD               	movwf	___flmul@a+1
  5232     1596  0847               	movf	??_fround+1,w
  5233     1597  00AC               	movwf	___flmul@a
  5234     1598  120A  158A  2158  160A  118A  	fcall	___flmul
  5235     159D  1283               	bcf	3,5	;RP0=0, select bank0
  5236     159E  1303               	bcf	3,6	;RP1=0, select bank0
  5237     159F  082B               	movf	?___flmul+3,w
  5238     15A0  00C5               	movwf	?_fround+3
  5239     15A1  082A               	movf	?___flmul+2,w
  5240     15A2  00C4               	movwf	?_fround+2
  5241     15A3  0829               	movf	?___flmul+1,w
  5242     15A4  00C3               	movwf	?_fround+1
  5243     15A5  0828               	movf	?___flmul,w
  5244     15A6  00C2               	movwf	?_fround
  5245     15A7                     l332:
  5246     15A7  0008               	return
  5247     15A8                     __end_of_fround:
  5248                           
  5249                           	psect	text7
  5250     1D37                     __ptext7:	
  5251 ;; *************** function ___lwmod *****************
  5252 ;; Defined at:
  5253 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  5254 ;; Parameters:    Size  Location     Type
  5255 ;;  divisor         2    2[COMMON] unsigned int 
  5256 ;;  dividend        2    4[COMMON] unsigned int 
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;  counter         1    7[COMMON] unsigned char 
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  2    2[COMMON] unsigned int 
  5261 ;; Registers used:
  5262 ;;		wreg, status,2, status,0
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5268 ;;      Params:         4       0       0       0       0
  5269 ;;      Locals:         1       0       0       0       0
  5270 ;;      Temps:          1       0       0       0       0
  5271 ;;      Totals:         6       0       0       0       0
  5272 ;;Total ram usage:        6 bytes
  5273 ;; Hardware stack levels used: 1
  5274 ;; Hardware stack levels required when called: 1
  5275 ;; This function calls:
  5276 ;;		Nothing
  5277 ;; This function is called by:
  5278 ;;		_fround
  5279 ;; This function uses a non-reentrant model
  5280 ;;
  5281                           
  5282     1D37                     ___lwmod:	
  5283                           ;psect for function ___lwmod
  5284                           
  5285     1D37                     l2438:	
  5286                           ;incstack = 0
  5287                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5288                           
  5289     1D37  0872               	movf	___lwmod@divisor,w
  5290     1D38  0473               	iorwf	___lwmod@divisor+1,w
  5291     1D39  1903               	btfsc	3,2
  5292     1D3A  2D3C               	goto	u3201
  5293     1D3B  2D3D               	goto	u3200
  5294     1D3C                     u3201:
  5295     1D3C  2D6C               	goto	l2456
  5296     1D3D                     u3200:
  5297     1D3D                     l2440:
  5298     1D3D  01F7               	clrf	___lwmod@counter
  5299     1D3E  0AF7               	incf	___lwmod@counter,f
  5300     1D3F  2D4B               	goto	l2446
  5301     1D40                     l2442:
  5302     1D40  3001               	movlw	1
  5303     1D41                     u3215:
  5304     1D41  1003               	clrc
  5305     1D42  0DF2               	rlf	___lwmod@divisor,f
  5306     1D43  0DF3               	rlf	___lwmod@divisor+1,f
  5307     1D44  3EFF               	addlw	-1
  5308     1D45  1D03               	skipz
  5309     1D46  2D41               	goto	u3215
  5310     1D47                     l2444:
  5311     1D47  3001               	movlw	1
  5312     1D48  00F6               	movwf	??___lwmod
  5313     1D49  0876               	movf	??___lwmod,w
  5314     1D4A  07F7               	addwf	___lwmod@counter,f
  5315     1D4B                     l2446:
  5316     1D4B  1FF3               	btfss	___lwmod@divisor+1,7
  5317     1D4C  2D4E               	goto	u3221
  5318     1D4D  2D4F               	goto	u3220
  5319     1D4E                     u3221:
  5320     1D4E  2D40               	goto	l2442
  5321     1D4F                     u3220:
  5322     1D4F                     l2448:
  5323     1D4F  0873               	movf	___lwmod@divisor+1,w
  5324     1D50  0275               	subwf	___lwmod@dividend+1,w
  5325     1D51  1D03               	skipz
  5326     1D52  2D55               	goto	u3235
  5327     1D53  0872               	movf	___lwmod@divisor,w
  5328     1D54  0274               	subwf	___lwmod@dividend,w
  5329     1D55                     u3235:
  5330     1D55  1C03               	skipc
  5331     1D56  2D58               	goto	u3231
  5332     1D57  2D59               	goto	u3230
  5333     1D58                     u3231:
  5334     1D58  2D5F               	goto	l2452
  5335     1D59                     u3230:
  5336     1D59                     l2450:
  5337     1D59  0872               	movf	___lwmod@divisor,w
  5338     1D5A  02F4               	subwf	___lwmod@dividend,f
  5339     1D5B  0873               	movf	___lwmod@divisor+1,w
  5340     1D5C  1C03               	skipc
  5341     1D5D  03F5               	decf	___lwmod@dividend+1,f
  5342     1D5E  02F5               	subwf	___lwmod@dividend+1,f
  5343     1D5F                     l2452:
  5344     1D5F  3001               	movlw	1
  5345     1D60                     u3245:
  5346     1D60  1003               	clrc
  5347     1D61  0CF3               	rrf	___lwmod@divisor+1,f
  5348     1D62  0CF2               	rrf	___lwmod@divisor,f
  5349     1D63  3EFF               	addlw	-1
  5350     1D64  1D03               	skipz
  5351     1D65  2D60               	goto	u3245
  5352     1D66                     l2454:
  5353     1D66  3001               	movlw	1
  5354     1D67  02F7               	subwf	___lwmod@counter,f
  5355     1D68  1D03               	btfss	3,2
  5356     1D69  2D6B               	goto	u3251
  5357     1D6A  2D6C               	goto	u3250
  5358     1D6B                     u3251:
  5359     1D6B  2D4F               	goto	l2448
  5360     1D6C                     u3250:
  5361     1D6C                     l2456:
  5362     1D6C  0875               	movf	___lwmod@dividend+1,w
  5363     1D6D  00F3               	movwf	?___lwmod+1
  5364     1D6E  0874               	movf	___lwmod@dividend,w
  5365     1D6F  00F2               	movwf	?___lwmod
  5366     1D70                     l725:
  5367     1D70  0008               	return
  5368     1D71                     __end_of___lwmod:
  5369                           
  5370                           	psect	text8
  5371     1DB7                     __ptext8:	
  5372 ;; *************** function ___lwdiv *****************
  5373 ;; Defined at:
  5374 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;  divisor         2    0[BANK0 ] unsigned int 
  5377 ;;  dividend        2    2[BANK0 ] unsigned int 
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;  quotient        2    5[BANK0 ] unsigned int 
  5380 ;;  counter         1    4[BANK0 ] unsigned char 
  5381 ;; Return value:  Size  Location     Type
  5382 ;;                  2    0[BANK0 ] unsigned int 
  5383 ;; Registers used:
  5384 ;;		wreg, status,2, status,0
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5390 ;;      Params:         0       4       0       0       0
  5391 ;;      Locals:         0       3       0       0       0
  5392 ;;      Temps:          1       0       0       0       0
  5393 ;;      Totals:         1       7       0       0       0
  5394 ;;Total ram usage:        8 bytes
  5395 ;; Hardware stack levels used: 1
  5396 ;; Hardware stack levels required when called: 1
  5397 ;; This function calls:
  5398 ;;		Nothing
  5399 ;; This function is called by:
  5400 ;;		_fround
  5401 ;; This function uses a non-reentrant model
  5402 ;;
  5403                           
  5404     1DB7                     ___lwdiv:	
  5405                           ;psect for function ___lwdiv
  5406                           
  5407     1DB7                     l3604:	
  5408                           ;incstack = 0
  5409                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5410                           
  5411     1DB7  1283               	bcf	3,5	;RP0=0, select bank0
  5412     1DB8  1303               	bcf	3,6	;RP1=0, select bank0
  5413     1DB9  01A5               	clrf	___lwdiv@quotient
  5414     1DBA  01A6               	clrf	___lwdiv@quotient+1
  5415     1DBB                     l3606:
  5416     1DBB  0820               	movf	___lwdiv@divisor,w
  5417     1DBC  0421               	iorwf	___lwdiv@divisor+1,w
  5418     1DBD  1903               	btfsc	3,2
  5419     1DBE  2DC0               	goto	u5681
  5420     1DBF  2DC1               	goto	u5680
  5421     1DC0                     u5681:
  5422     1DC0  2DF8               	goto	l3626
  5423     1DC1                     u5680:
  5424     1DC1                     l3608:
  5425     1DC1  01A4               	clrf	___lwdiv@counter
  5426     1DC2  0AA4               	incf	___lwdiv@counter,f
  5427     1DC3  2DCF               	goto	l3614
  5428     1DC4                     l3610:
  5429     1DC4  3001               	movlw	1
  5430     1DC5                     u5695:
  5431     1DC5  1003               	clrc
  5432     1DC6  0DA0               	rlf	___lwdiv@divisor,f
  5433     1DC7  0DA1               	rlf	___lwdiv@divisor+1,f
  5434     1DC8  3EFF               	addlw	-1
  5435     1DC9  1D03               	skipz
  5436     1DCA  2DC5               	goto	u5695
  5437     1DCB                     l3612:
  5438     1DCB  3001               	movlw	1
  5439     1DCC  00F8               	movwf	??___lwdiv
  5440     1DCD  0878               	movf	??___lwdiv,w
  5441     1DCE  07A4               	addwf	___lwdiv@counter,f
  5442     1DCF                     l3614:
  5443     1DCF  1FA1               	btfss	___lwdiv@divisor+1,7
  5444     1DD0  2DD2               	goto	u5701
  5445     1DD1  2DD3               	goto	u5700
  5446     1DD2                     u5701:
  5447     1DD2  2DC4               	goto	l3610
  5448     1DD3                     u5700:
  5449     1DD3                     l3616:
  5450     1DD3  3001               	movlw	1
  5451     1DD4                     u5715:
  5452     1DD4  1003               	clrc
  5453     1DD5  0DA5               	rlf	___lwdiv@quotient,f
  5454     1DD6  0DA6               	rlf	___lwdiv@quotient+1,f
  5455     1DD7  3EFF               	addlw	-1
  5456     1DD8  1D03               	skipz
  5457     1DD9  2DD4               	goto	u5715
  5458     1DDA  0821               	movf	___lwdiv@divisor+1,w
  5459     1DDB  0223               	subwf	___lwdiv@dividend+1,w
  5460     1DDC  1D03               	skipz
  5461     1DDD  2DE0               	goto	u5725
  5462     1DDE  0820               	movf	___lwdiv@divisor,w
  5463     1DDF  0222               	subwf	___lwdiv@dividend,w
  5464     1DE0                     u5725:
  5465     1DE0  1C03               	skipc
  5466     1DE1  2DE3               	goto	u5721
  5467     1DE2  2DE4               	goto	u5720
  5468     1DE3                     u5721:
  5469     1DE3  2DEB               	goto	l3622
  5470     1DE4                     u5720:
  5471     1DE4                     l3618:
  5472     1DE4  0820               	movf	___lwdiv@divisor,w
  5473     1DE5  02A2               	subwf	___lwdiv@dividend,f
  5474     1DE6  0821               	movf	___lwdiv@divisor+1,w
  5475     1DE7  1C03               	skipc
  5476     1DE8  03A3               	decf	___lwdiv@dividend+1,f
  5477     1DE9  02A3               	subwf	___lwdiv@dividend+1,f
  5478     1DEA                     l3620:
  5479     1DEA  1425               	bsf	___lwdiv@quotient,0
  5480     1DEB                     l3622:
  5481     1DEB  3001               	movlw	1
  5482     1DEC                     u5735:
  5483     1DEC  1003               	clrc
  5484     1DED  0CA1               	rrf	___lwdiv@divisor+1,f
  5485     1DEE  0CA0               	rrf	___lwdiv@divisor,f
  5486     1DEF  3EFF               	addlw	-1
  5487     1DF0  1D03               	skipz
  5488     1DF1  2DEC               	goto	u5735
  5489     1DF2                     l3624:
  5490     1DF2  3001               	movlw	1
  5491     1DF3  02A4               	subwf	___lwdiv@counter,f
  5492     1DF4  1D03               	btfss	3,2
  5493     1DF5  2DF7               	goto	u5741
  5494     1DF6  2DF8               	goto	u5740
  5495     1DF7                     u5741:
  5496     1DF7  2DD3               	goto	l3616
  5497     1DF8                     u5740:
  5498     1DF8                     l3626:
  5499     1DF8  0826               	movf	___lwdiv@quotient+1,w
  5500     1DF9  00A1               	movwf	?___lwdiv+1
  5501     1DFA  0825               	movf	___lwdiv@quotient,w
  5502     1DFB  00A0               	movwf	?___lwdiv
  5503     1DFC                     l715:
  5504     1DFC  0008               	return
  5505     1DFD                     __end_of___lwdiv:
  5506                           
  5507                           	psect	text9
  5508     0958                     __ptext9:	
  5509 ;; *************** function ___flmul *****************
  5510 ;; Defined at:
  5511 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;  b               4    8[BANK0 ] unsigned int 
  5514 ;;  a               4   12[BANK0 ] unsigned int 
  5515 ;; Auto vars:     Size  Location     Type
  5516 ;;  prod            4   28[BANK0 ] struct .
  5517 ;;  grs             4   23[BANK0 ] unsigned long 
  5518 ;;  temp            2   32[BANK0 ] struct .
  5519 ;;  bexp            1   27[BANK0 ] unsigned char 
  5520 ;;  aexp            1   22[BANK0 ] unsigned char 
  5521 ;;  sign            1   21[BANK0 ] unsigned char 
  5522 ;; Return value:  Size  Location     Type
  5523 ;;                  4    8[BANK0 ] unsigned char 
  5524 ;; Registers used:
  5525 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5526 ;; Tracked objects:
  5527 ;;		On entry : 0/0
  5528 ;;		On exit  : 0/0
  5529 ;;		Unchanged: 0/0
  5530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5531 ;;      Params:         0       8       0       0       0
  5532 ;;      Locals:         0      13       0       0       0
  5533 ;;      Temps:          0       5       0       0       0
  5534 ;;      Totals:         0      26       0       0       0
  5535 ;;Total ram usage:       26 bytes
  5536 ;; Hardware stack levels used: 1
  5537 ;; Hardware stack levels required when called: 2
  5538 ;; This function calls:
  5539 ;;		__Umul8_16
  5540 ;; This function is called by:
  5541 ;;		_fround
  5542 ;;		_scale
  5543 ;;		_sprintf
  5544 ;; This function uses a non-reentrant model
  5545 ;;
  5546                           
  5547     0958                     ___flmul:	
  5548                           ;psect for function ___flmul
  5549                           
  5550     0958                     l3630:	
  5551                           ;incstack = 0
  5552                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5553                           
  5554     0958  1283               	bcf	3,5	;RP0=0, select bank0
  5555     0959  1303               	bcf	3,6	;RP1=0, select bank0
  5556     095A  082B               	movf	___flmul@b+3,w
  5557     095B  3980               	andlw	128
  5558     095C  00B5               	movwf	___flmul@sign
  5559     095D                     l3632:
  5560     095D  082B               	movf	___flmul@b+3,w
  5561     095E  00B0               	movwf	??___flmul
  5562     095F  0730               	addwf	??___flmul,w
  5563     0960  00BB               	movwf	___flmul@bexp
  5564     0961                     l3634:
  5565     0961  1FAA               	btfss	___flmul@b+2,7
  5566     0962  2964               	goto	u5751
  5567     0963  2965               	goto	u5750
  5568     0964                     u5751:
  5569     0964  2966               	goto	l3638
  5570     0965                     u5750:
  5571     0965                     l3636:
  5572     0965  143B               	bsf	___flmul@bexp,0
  5573     0966                     l3638:
  5574     0966  083B               	movf	___flmul@bexp,w
  5575     0967  1903               	btfsc	3,2
  5576     0968  296A               	goto	u5761
  5577     0969  296B               	goto	u5760
  5578     096A                     u5761:
  5579     096A  297A               	goto	l3646
  5580     096B                     u5760:
  5581     096B                     l3640:
  5582     096B  0A3B               	incf	___flmul@bexp,w
  5583     096C  1D03               	btfss	3,2
  5584     096D  296F               	goto	u5771
  5585     096E  2970               	goto	u5770
  5586     096F                     u5771:
  5587     096F  2978               	goto	l3644
  5588     0970                     u5770:
  5589     0970                     l3642:
  5590     0970  3000               	movlw	0
  5591     0971  00AB               	movwf	___flmul@b+3
  5592     0972  3000               	movlw	0
  5593     0973  00AA               	movwf	___flmul@b+2
  5594     0974  3000               	movlw	0
  5595     0975  00A9               	movwf	___flmul@b+1
  5596     0976  3000               	movlw	0
  5597     0977  00A8               	movwf	___flmul@b
  5598     0978                     l3644:
  5599     0978  17AA               	bsf	___flmul@b+2,7
  5600     0979  2982               	goto	l3648
  5601     097A                     l3646:
  5602     097A  3000               	movlw	0
  5603     097B  00AB               	movwf	___flmul@b+3
  5604     097C  3000               	movlw	0
  5605     097D  00AA               	movwf	___flmul@b+2
  5606     097E  3000               	movlw	0
  5607     097F  00A9               	movwf	___flmul@b+1
  5608     0980  3000               	movlw	0
  5609     0981  00A8               	movwf	___flmul@b
  5610     0982                     l3648:
  5611     0982  082F               	movf	___flmul@a+3,w
  5612     0983  3980               	andlw	128
  5613     0984  00B0               	movwf	??___flmul
  5614     0985  0830               	movf	??___flmul,w
  5615     0986  06B5               	xorwf	___flmul@sign,f
  5616     0987                     l3650:
  5617     0987  082F               	movf	___flmul@a+3,w
  5618     0988  00B0               	movwf	??___flmul
  5619     0989  0730               	addwf	??___flmul,w
  5620     098A  00B6               	movwf	___flmul@aexp
  5621     098B                     l3652:
  5622     098B  1FAE               	btfss	___flmul@a+2,7
  5623     098C  298E               	goto	u5781
  5624     098D  298F               	goto	u5780
  5625     098E                     u5781:
  5626     098E  2990               	goto	l3656
  5627     098F                     u5780:
  5628     098F                     l3654:
  5629     098F  1436               	bsf	___flmul@aexp,0
  5630     0990                     l3656:
  5631     0990  0836               	movf	___flmul@aexp,w
  5632     0991  1903               	btfsc	3,2
  5633     0992  2994               	goto	u5791
  5634     0993  2995               	goto	u5790
  5635     0994                     u5791:
  5636     0994  29A4               	goto	l3664
  5637     0995                     u5790:
  5638     0995                     l3658:
  5639     0995  0A36               	incf	___flmul@aexp,w
  5640     0996  1D03               	btfss	3,2
  5641     0997  2999               	goto	u5801
  5642     0998  299A               	goto	u5800
  5643     0999                     u5801:
  5644     0999  29A2               	goto	l3662
  5645     099A                     u5800:
  5646     099A                     l3660:
  5647     099A  3000               	movlw	0
  5648     099B  00AF               	movwf	___flmul@a+3
  5649     099C  3000               	movlw	0
  5650     099D  00AE               	movwf	___flmul@a+2
  5651     099E  3000               	movlw	0
  5652     099F  00AD               	movwf	___flmul@a+1
  5653     09A0  3000               	movlw	0
  5654     09A1  00AC               	movwf	___flmul@a
  5655     09A2                     l3662:
  5656     09A2  17AE               	bsf	___flmul@a+2,7
  5657     09A3  29AC               	goto	l3666
  5658     09A4                     l3664:
  5659     09A4  3000               	movlw	0
  5660     09A5  00AF               	movwf	___flmul@a+3
  5661     09A6  3000               	movlw	0
  5662     09A7  00AE               	movwf	___flmul@a+2
  5663     09A8  3000               	movlw	0
  5664     09A9  00AD               	movwf	___flmul@a+1
  5665     09AA  3000               	movlw	0
  5666     09AB  00AC               	movwf	___flmul@a
  5667     09AC                     l3666:
  5668     09AC  0836               	movf	___flmul@aexp,w
  5669     09AD  1903               	btfsc	3,2
  5670     09AE  29B0               	goto	u5811
  5671     09AF  29B1               	goto	u5810
  5672     09B0                     u5811:
  5673     09B0  29B6               	goto	l3670
  5674     09B1                     u5810:
  5675     09B1                     l3668:
  5676     09B1  083B               	movf	___flmul@bexp,w
  5677     09B2  1D03               	btfss	3,2
  5678     09B3  29B5               	goto	u5821
  5679     09B4  29B6               	goto	u5820
  5680     09B5                     u5821:
  5681     09B5  29BF               	goto	l3674
  5682     09B6                     u5820:
  5683     09B6                     l3670:
  5684     09B6  3000               	movlw	0
  5685     09B7  00AB               	movwf	?___flmul+3
  5686     09B8  3000               	movlw	0
  5687     09B9  00AA               	movwf	?___flmul+2
  5688     09BA  3000               	movlw	0
  5689     09BB  00A9               	movwf	?___flmul+1
  5690     09BC  3000               	movlw	0
  5691     09BD  00A8               	movwf	?___flmul
  5692     09BE  2C9C               	goto	l832
  5693     09BF                     l3674:
  5694     09BF  0828               	movf	___flmul@b,w
  5695     09C0  00F2               	movwf	__Umul8_16@multiplicand
  5696     09C1  082E               	movf	___flmul@a+2,w
  5697     09C2  160A  158A  243F  120A  158A  	fcall	__Umul8_16
  5698     09C7  0873               	movf	?__Umul8_16+1,w
  5699     09C8  1283               	bcf	3,5	;RP0=0, select bank0
  5700     09C9  1303               	bcf	3,6	;RP1=0, select bank0
  5701     09CA  00C1               	movwf	___flmul@temp+1
  5702     09CB  0872               	movf	?__Umul8_16,w
  5703     09CC  00C0               	movwf	___flmul@temp
  5704     09CD                     l3676:
  5705     09CD  0840               	movf	___flmul@temp,w
  5706     09CE  00B0               	movwf	??___flmul
  5707     09CF  01B1               	clrf	??___flmul+1
  5708     09D0  01B2               	clrf	??___flmul+2
  5709     09D1  01B3               	clrf	??___flmul+3
  5710     09D2  0833               	movf	??___flmul+3,w
  5711     09D3  00BA               	movwf	___flmul@grs+3
  5712     09D4  0832               	movf	??___flmul+2,w
  5713     09D5  00B9               	movwf	___flmul@grs+2
  5714     09D6  0831               	movf	??___flmul+1,w
  5715     09D7  00B8               	movwf	___flmul@grs+1
  5716     09D8  0830               	movf	??___flmul,w
  5717     09D9  00B7               	movwf	___flmul@grs
  5718     09DA                     l3678:
  5719     09DA  0841               	movf	___flmul@temp+1,w
  5720     09DB  00B0               	movwf	??___flmul
  5721     09DC  01B1               	clrf	??___flmul+1
  5722     09DD  01B2               	clrf	??___flmul+2
  5723     09DE  01B3               	clrf	??___flmul+3
  5724     09DF  0833               	movf	??___flmul+3,w
  5725     09E0  00BF               	movwf	___flmul@prod+3
  5726     09E1  0832               	movf	??___flmul+2,w
  5727     09E2  00BE               	movwf	___flmul@prod+2
  5728     09E3  0831               	movf	??___flmul+1,w
  5729     09E4  00BD               	movwf	___flmul@prod+1
  5730     09E5  0830               	movf	??___flmul,w
  5731     09E6  00BC               	movwf	___flmul@prod
  5732     09E7  0829               	movf	___flmul@b+1,w
  5733     09E8  00F2               	movwf	__Umul8_16@multiplicand
  5734     09E9  082D               	movf	___flmul@a+1,w
  5735     09EA  160A  158A  243F  120A  158A  	fcall	__Umul8_16
  5736     09EF  0873               	movf	?__Umul8_16+1,w
  5737     09F0  1283               	bcf	3,5	;RP0=0, select bank0
  5738     09F1  1303               	bcf	3,6	;RP1=0, select bank0
  5739     09F2  00C1               	movwf	___flmul@temp+1
  5740     09F3  0872               	movf	?__Umul8_16,w
  5741     09F4  00C0               	movwf	___flmul@temp
  5742     09F5                     l3680:
  5743     09F5  0840               	movf	___flmul@temp,w
  5744     09F6  00B0               	movwf	??___flmul
  5745     09F7  01B1               	clrf	??___flmul+1
  5746     09F8  01B2               	clrf	??___flmul+2
  5747     09F9  01B3               	clrf	??___flmul+3
  5748     09FA  0830               	movf	??___flmul,w
  5749     09FB  07B7               	addwf	___flmul@grs,f
  5750     09FC  0831               	movf	??___flmul+1,w
  5751     09FD  1103               	clrz
  5752     09FE  1803               	skipnc
  5753     09FF  3E01               	addlw	1
  5754     0A00  1903               	skipnz
  5755     0A01  2A03               	goto	u5831
  5756     0A02  07B8               	addwf	___flmul@grs+1,f
  5757     0A03                     u5831:
  5758     0A03  0832               	movf	??___flmul+2,w
  5759     0A04  1103               	clrz
  5760     0A05  1803               	skipnc
  5761     0A06  3E01               	addlw	1
  5762     0A07  1903               	skipnz
  5763     0A08  2A0A               	goto	u5832
  5764     0A09  07B9               	addwf	___flmul@grs+2,f
  5765     0A0A                     u5832:
  5766     0A0A  0833               	movf	??___flmul+3,w
  5767     0A0B  1103               	clrz
  5768     0A0C  1803               	skipnc
  5769     0A0D  3E01               	addlw	1
  5770     0A0E  1903               	skipnz
  5771     0A0F  2A11               	goto	u5833
  5772     0A10  07BA               	addwf	___flmul@grs+3,f
  5773     0A11                     u5833:
  5774     0A11                     l3682:
  5775     0A11  0841               	movf	___flmul@temp+1,w
  5776     0A12  00B0               	movwf	??___flmul
  5777     0A13  01B1               	clrf	??___flmul+1
  5778     0A14  01B2               	clrf	??___flmul+2
  5779     0A15  01B3               	clrf	??___flmul+3
  5780     0A16  0830               	movf	??___flmul,w
  5781     0A17  07BC               	addwf	___flmul@prod,f
  5782     0A18  0831               	movf	??___flmul+1,w
  5783     0A19  1103               	clrz
  5784     0A1A  1803               	skipnc
  5785     0A1B  3E01               	addlw	1
  5786     0A1C  1903               	skipnz
  5787     0A1D  2A1F               	goto	u5841
  5788     0A1E  07BD               	addwf	___flmul@prod+1,f
  5789     0A1F                     u5841:
  5790     0A1F  0832               	movf	??___flmul+2,w
  5791     0A20  1103               	clrz
  5792     0A21  1803               	skipnc
  5793     0A22  3E01               	addlw	1
  5794     0A23  1903               	skipnz
  5795     0A24  2A26               	goto	u5842
  5796     0A25  07BE               	addwf	___flmul@prod+2,f
  5797     0A26                     u5842:
  5798     0A26  0833               	movf	??___flmul+3,w
  5799     0A27  1103               	clrz
  5800     0A28  1803               	skipnc
  5801     0A29  3E01               	addlw	1
  5802     0A2A  1903               	skipnz
  5803     0A2B  2A2D               	goto	u5843
  5804     0A2C  07BF               	addwf	___flmul@prod+3,f
  5805     0A2D                     u5843:
  5806     0A2D  082A               	movf	___flmul@b+2,w
  5807     0A2E  00F2               	movwf	__Umul8_16@multiplicand
  5808     0A2F  082C               	movf	___flmul@a,w
  5809     0A30  160A  158A  243F  120A  158A  	fcall	__Umul8_16
  5810     0A35  0873               	movf	?__Umul8_16+1,w
  5811     0A36  1283               	bcf	3,5	;RP0=0, select bank0
  5812     0A37  1303               	bcf	3,6	;RP1=0, select bank0
  5813     0A38  00C1               	movwf	___flmul@temp+1
  5814     0A39  0872               	movf	?__Umul8_16,w
  5815     0A3A  00C0               	movwf	___flmul@temp
  5816     0A3B                     l3684:
  5817     0A3B  0840               	movf	___flmul@temp,w
  5818     0A3C  00B0               	movwf	??___flmul
  5819     0A3D  01B1               	clrf	??___flmul+1
  5820     0A3E  01B2               	clrf	??___flmul+2
  5821     0A3F  01B3               	clrf	??___flmul+3
  5822     0A40  0830               	movf	??___flmul,w
  5823     0A41  07B7               	addwf	___flmul@grs,f
  5824     0A42  0831               	movf	??___flmul+1,w
  5825     0A43  1103               	clrz
  5826     0A44  1803               	skipnc
  5827     0A45  3E01               	addlw	1
  5828     0A46  1903               	skipnz
  5829     0A47  2A49               	goto	u5851
  5830     0A48  07B8               	addwf	___flmul@grs+1,f
  5831     0A49                     u5851:
  5832     0A49  0832               	movf	??___flmul+2,w
  5833     0A4A  1103               	clrz
  5834     0A4B  1803               	skipnc
  5835     0A4C  3E01               	addlw	1
  5836     0A4D  1903               	skipnz
  5837     0A4E  2A50               	goto	u5852
  5838     0A4F  07B9               	addwf	___flmul@grs+2,f
  5839     0A50                     u5852:
  5840     0A50  0833               	movf	??___flmul+3,w
  5841     0A51  1103               	clrz
  5842     0A52  1803               	skipnc
  5843     0A53  3E01               	addlw	1
  5844     0A54  1903               	skipnz
  5845     0A55  2A57               	goto	u5853
  5846     0A56  07BA               	addwf	___flmul@grs+3,f
  5847     0A57                     u5853:
  5848     0A57                     l3686:
  5849     0A57  0841               	movf	___flmul@temp+1,w
  5850     0A58  00B0               	movwf	??___flmul
  5851     0A59  01B1               	clrf	??___flmul+1
  5852     0A5A  01B2               	clrf	??___flmul+2
  5853     0A5B  01B3               	clrf	??___flmul+3
  5854     0A5C  0830               	movf	??___flmul,w
  5855     0A5D  07BC               	addwf	___flmul@prod,f
  5856     0A5E  0831               	movf	??___flmul+1,w
  5857     0A5F  1103               	clrz
  5858     0A60  1803               	skipnc
  5859     0A61  3E01               	addlw	1
  5860     0A62  1903               	skipnz
  5861     0A63  2A65               	goto	u5861
  5862     0A64  07BD               	addwf	___flmul@prod+1,f
  5863     0A65                     u5861:
  5864     0A65  0832               	movf	??___flmul+2,w
  5865     0A66  1103               	clrz
  5866     0A67  1803               	skipnc
  5867     0A68  3E01               	addlw	1
  5868     0A69  1903               	skipnz
  5869     0A6A  2A6C               	goto	u5862
  5870     0A6B  07BE               	addwf	___flmul@prod+2,f
  5871     0A6C                     u5862:
  5872     0A6C  0833               	movf	??___flmul+3,w
  5873     0A6D  1103               	clrz
  5874     0A6E  1803               	skipnc
  5875     0A6F  3E01               	addlw	1
  5876     0A70  1903               	skipnz
  5877     0A71  2A73               	goto	u5863
  5878     0A72  07BF               	addwf	___flmul@prod+3,f
  5879     0A73                     u5863:
  5880     0A73                     l3688:
  5881     0A73  3008               	movlw	8
  5882     0A74  00B0               	movwf	??___flmul
  5883     0A75                     u5875:
  5884     0A75  1003               	clrc
  5885     0A76  0DB7               	rlf	___flmul@grs,f
  5886     0A77  0DB8               	rlf	___flmul@grs+1,f
  5887     0A78  0DB9               	rlf	___flmul@grs+2,f
  5888     0A79  0DBA               	rlf	___flmul@grs+3,f
  5889     0A7A  0BB0               	decfsz	??___flmul,f
  5890     0A7B  2A75               	goto	u5875
  5891     0A7C                     l3690:
  5892     0A7C  0829               	movf	___flmul@b+1,w
  5893     0A7D  00F2               	movwf	__Umul8_16@multiplicand
  5894     0A7E  082C               	movf	___flmul@a,w
  5895     0A7F  160A  158A  243F  120A  158A  	fcall	__Umul8_16
  5896     0A84  0873               	movf	?__Umul8_16+1,w
  5897     0A85  1283               	bcf	3,5	;RP0=0, select bank0
  5898     0A86  1303               	bcf	3,6	;RP1=0, select bank0
  5899     0A87  00C1               	movwf	___flmul@temp+1
  5900     0A88  0872               	movf	?__Umul8_16,w
  5901     0A89  00C0               	movwf	___flmul@temp
  5902     0A8A                     l3692:
  5903     0A8A  0840               	movf	___flmul@temp,w
  5904     0A8B  00B0               	movwf	??___flmul
  5905     0A8C  0841               	movf	___flmul@temp+1,w
  5906     0A8D  00B1               	movwf	??___flmul+1
  5907     0A8E  01B2               	clrf	??___flmul+2
  5908     0A8F  01B3               	clrf	??___flmul+3
  5909     0A90  0830               	movf	??___flmul,w
  5910     0A91  07B7               	addwf	___flmul@grs,f
  5911     0A92  0831               	movf	??___flmul+1,w
  5912     0A93  1103               	clrz
  5913     0A94  1803               	skipnc
  5914     0A95  3E01               	addlw	1
  5915     0A96  1903               	skipnz
  5916     0A97  2A99               	goto	u5881
  5917     0A98  07B8               	addwf	___flmul@grs+1,f
  5918     0A99                     u5881:
  5919     0A99  0832               	movf	??___flmul+2,w
  5920     0A9A  1103               	clrz
  5921     0A9B  1803               	skipnc
  5922     0A9C  3E01               	addlw	1
  5923     0A9D  1903               	skipnz
  5924     0A9E  2AA0               	goto	u5882
  5925     0A9F  07B9               	addwf	___flmul@grs+2,f
  5926     0AA0                     u5882:
  5927     0AA0  0833               	movf	??___flmul+3,w
  5928     0AA1  1103               	clrz
  5929     0AA2  1803               	skipnc
  5930     0AA3  3E01               	addlw	1
  5931     0AA4  1903               	skipnz
  5932     0AA5  2AA7               	goto	u5883
  5933     0AA6  07BA               	addwf	___flmul@grs+3,f
  5934     0AA7                     u5883:
  5935     0AA7                     l3694:
  5936     0AA7  0828               	movf	___flmul@b,w
  5937     0AA8  00F2               	movwf	__Umul8_16@multiplicand
  5938     0AA9  082D               	movf	___flmul@a+1,w
  5939     0AAA  160A  158A  243F  120A  158A  	fcall	__Umul8_16
  5940     0AAF  0873               	movf	?__Umul8_16+1,w
  5941     0AB0  1283               	bcf	3,5	;RP0=0, select bank0
  5942     0AB1  1303               	bcf	3,6	;RP1=0, select bank0
  5943     0AB2  00C1               	movwf	___flmul@temp+1
  5944     0AB3  0872               	movf	?__Umul8_16,w
  5945     0AB4  00C0               	movwf	___flmul@temp
  5946     0AB5                     l3696:
  5947     0AB5  0840               	movf	___flmul@temp,w
  5948     0AB6  00B0               	movwf	??___flmul
  5949     0AB7  0841               	movf	___flmul@temp+1,w
  5950     0AB8  00B1               	movwf	??___flmul+1
  5951     0AB9  01B2               	clrf	??___flmul+2
  5952     0ABA  01B3               	clrf	??___flmul+3
  5953     0ABB  0830               	movf	??___flmul,w
  5954     0ABC  07B7               	addwf	___flmul@grs,f
  5955     0ABD  0831               	movf	??___flmul+1,w
  5956     0ABE  1103               	clrz
  5957     0ABF  1803               	skipnc
  5958     0AC0  3E01               	addlw	1
  5959     0AC1  1903               	skipnz
  5960     0AC2  2AC4               	goto	u5891
  5961     0AC3  07B8               	addwf	___flmul@grs+1,f
  5962     0AC4                     u5891:
  5963     0AC4  0832               	movf	??___flmul+2,w
  5964     0AC5  1103               	clrz
  5965     0AC6  1803               	skipnc
  5966     0AC7  3E01               	addlw	1
  5967     0AC8  1903               	skipnz
  5968     0AC9  2ACB               	goto	u5892
  5969     0ACA  07B9               	addwf	___flmul@grs+2,f
  5970     0ACB                     u5892:
  5971     0ACB  0833               	movf	??___flmul+3,w
  5972     0ACC  1103               	clrz
  5973     0ACD  1803               	skipnc
  5974     0ACE  3E01               	addlw	1
  5975     0ACF  1903               	skipnz
  5976     0AD0  2AD2               	goto	u5893
  5977     0AD1  07BA               	addwf	___flmul@grs+3,f
  5978     0AD2                     u5893:
  5979     0AD2                     l3698:
  5980     0AD2  3008               	movlw	8
  5981     0AD3  00B0               	movwf	??___flmul
  5982     0AD4                     u5905:
  5983     0AD4  1003               	clrc
  5984     0AD5  0DB7               	rlf	___flmul@grs,f
  5985     0AD6  0DB8               	rlf	___flmul@grs+1,f
  5986     0AD7  0DB9               	rlf	___flmul@grs+2,f
  5987     0AD8  0DBA               	rlf	___flmul@grs+3,f
  5988     0AD9  0BB0               	decfsz	??___flmul,f
  5989     0ADA  2AD4               	goto	u5905
  5990     0ADB  0828               	movf	___flmul@b,w
  5991     0ADC  00F2               	movwf	__Umul8_16@multiplicand
  5992     0ADD  082C               	movf	___flmul@a,w
  5993     0ADE  160A  158A  243F  120A  158A  	fcall	__Umul8_16
  5994     0AE3  0873               	movf	?__Umul8_16+1,w
  5995     0AE4  1283               	bcf	3,5	;RP0=0, select bank0
  5996     0AE5  1303               	bcf	3,6	;RP1=0, select bank0
  5997     0AE6  00C1               	movwf	___flmul@temp+1
  5998     0AE7  0872               	movf	?__Umul8_16,w
  5999     0AE8  00C0               	movwf	___flmul@temp
  6000     0AE9                     l3700:
  6001     0AE9  0840               	movf	___flmul@temp,w
  6002     0AEA  00B0               	movwf	??___flmul
  6003     0AEB  0841               	movf	___flmul@temp+1,w
  6004     0AEC  00B1               	movwf	??___flmul+1
  6005     0AED  01B2               	clrf	??___flmul+2
  6006     0AEE  01B3               	clrf	??___flmul+3
  6007     0AEF  0830               	movf	??___flmul,w
  6008     0AF0  07B7               	addwf	___flmul@grs,f
  6009     0AF1  0831               	movf	??___flmul+1,w
  6010     0AF2  1103               	clrz
  6011     0AF3  1803               	skipnc
  6012     0AF4  3E01               	addlw	1
  6013     0AF5  1903               	skipnz
  6014     0AF6  2AF8               	goto	u5911
  6015     0AF7  07B8               	addwf	___flmul@grs+1,f
  6016     0AF8                     u5911:
  6017     0AF8  0832               	movf	??___flmul+2,w
  6018     0AF9  1103               	clrz
  6019     0AFA  1803               	skipnc
  6020     0AFB  3E01               	addlw	1
  6021     0AFC  1903               	skipnz
  6022     0AFD  2AFF               	goto	u5912
  6023     0AFE  07B9               	addwf	___flmul@grs+2,f
  6024     0AFF                     u5912:
  6025     0AFF  0833               	movf	??___flmul+3,w
  6026     0B00  1103               	clrz
  6027     0B01  1803               	skipnc
  6028     0B02  3E01               	addlw	1
  6029     0B03  1903               	skipnz
  6030     0B04  2B06               	goto	u5913
  6031     0B05  07BA               	addwf	___flmul@grs+3,f
  6032     0B06                     u5913:
  6033     0B06                     l3702:
  6034     0B06  0829               	movf	___flmul@b+1,w
  6035     0B07  00F2               	movwf	__Umul8_16@multiplicand
  6036     0B08  082E               	movf	___flmul@a+2,w
  6037     0B09  160A  158A  243F  120A  158A  	fcall	__Umul8_16
  6038     0B0E  0873               	movf	?__Umul8_16+1,w
  6039     0B0F  1283               	bcf	3,5	;RP0=0, select bank0
  6040     0B10  1303               	bcf	3,6	;RP1=0, select bank0
  6041     0B11  00C1               	movwf	___flmul@temp+1
  6042     0B12  0872               	movf	?__Umul8_16,w
  6043     0B13  00C0               	movwf	___flmul@temp
  6044     0B14  0840               	movf	___flmul@temp,w
  6045     0B15  00B0               	movwf	??___flmul
  6046     0B16  0841               	movf	___flmul@temp+1,w
  6047     0B17  00B1               	movwf	??___flmul+1
  6048     0B18  01B2               	clrf	??___flmul+2
  6049     0B19  01B3               	clrf	??___flmul+3
  6050     0B1A  0830               	movf	??___flmul,w
  6051     0B1B  07BC               	addwf	___flmul@prod,f
  6052     0B1C  0831               	movf	??___flmul+1,w
  6053     0B1D  1103               	clrz
  6054     0B1E  1803               	skipnc
  6055     0B1F  3E01               	addlw	1
  6056     0B20  1903               	skipnz
  6057     0B21  2B23               	goto	u5921
  6058     0B22  07BD               	addwf	___flmul@prod+1,f
  6059     0B23                     u5921:
  6060     0B23  0832               	movf	??___flmul+2,w
  6061     0B24  1103               	clrz
  6062     0B25  1803               	skipnc
  6063     0B26  3E01               	addlw	1
  6064     0B27  1903               	skipnz
  6065     0B28  2B2A               	goto	u5922
  6066     0B29  07BE               	addwf	___flmul@prod+2,f
  6067     0B2A                     u5922:
  6068     0B2A  0833               	movf	??___flmul+3,w
  6069     0B2B  1103               	clrz
  6070     0B2C  1803               	skipnc
  6071     0B2D  3E01               	addlw	1
  6072     0B2E  1903               	skipnz
  6073     0B2F  2B31               	goto	u5923
  6074     0B30  07BF               	addwf	___flmul@prod+3,f
  6075     0B31                     u5923:
  6076     0B31                     l3704:
  6077     0B31  082A               	movf	___flmul@b+2,w
  6078     0B32  00F2               	movwf	__Umul8_16@multiplicand
  6079     0B33  082D               	movf	___flmul@a+1,w
  6080     0B34  160A  158A  243F  120A  158A  	fcall	__Umul8_16
  6081     0B39  0873               	movf	?__Umul8_16+1,w
  6082     0B3A  1283               	bcf	3,5	;RP0=0, select bank0
  6083     0B3B  1303               	bcf	3,6	;RP1=0, select bank0
  6084     0B3C  00C1               	movwf	___flmul@temp+1
  6085     0B3D  0872               	movf	?__Umul8_16,w
  6086     0B3E  00C0               	movwf	___flmul@temp
  6087     0B3F                     l3706:
  6088     0B3F  0840               	movf	___flmul@temp,w
  6089     0B40  00B0               	movwf	??___flmul
  6090     0B41  0841               	movf	___flmul@temp+1,w
  6091     0B42  00B1               	movwf	??___flmul+1
  6092     0B43  01B2               	clrf	??___flmul+2
  6093     0B44  01B3               	clrf	??___flmul+3
  6094     0B45  0830               	movf	??___flmul,w
  6095     0B46  07BC               	addwf	___flmul@prod,f
  6096     0B47  0831               	movf	??___flmul+1,w
  6097     0B48  1103               	clrz
  6098     0B49  1803               	skipnc
  6099     0B4A  3E01               	addlw	1
  6100     0B4B  1903               	skipnz
  6101     0B4C  2B4E               	goto	u5931
  6102     0B4D  07BD               	addwf	___flmul@prod+1,f
  6103     0B4E                     u5931:
  6104     0B4E  0832               	movf	??___flmul+2,w
  6105     0B4F  1103               	clrz
  6106     0B50  1803               	skipnc
  6107     0B51  3E01               	addlw	1
  6108     0B52  1903               	skipnz
  6109     0B53  2B55               	goto	u5932
  6110     0B54  07BE               	addwf	___flmul@prod+2,f
  6111     0B55                     u5932:
  6112     0B55  0833               	movf	??___flmul+3,w
  6113     0B56  1103               	clrz
  6114     0B57  1803               	skipnc
  6115     0B58  3E01               	addlw	1
  6116     0B59  1903               	skipnz
  6117     0B5A  2B5C               	goto	u5933
  6118     0B5B  07BF               	addwf	___flmul@prod+3,f
  6119     0B5C                     u5933:
  6120     0B5C  082A               	movf	___flmul@b+2,w
  6121     0B5D  00F2               	movwf	__Umul8_16@multiplicand
  6122     0B5E  082E               	movf	___flmul@a+2,w
  6123     0B5F  160A  158A  243F  120A  158A  	fcall	__Umul8_16
  6124     0B64  0873               	movf	?__Umul8_16+1,w
  6125     0B65  1283               	bcf	3,5	;RP0=0, select bank0
  6126     0B66  1303               	bcf	3,6	;RP1=0, select bank0
  6127     0B67  00C1               	movwf	___flmul@temp+1
  6128     0B68  0872               	movf	?__Umul8_16,w
  6129     0B69  00C0               	movwf	___flmul@temp
  6130     0B6A                     l3708:
  6131     0B6A  0840               	movf	___flmul@temp,w
  6132     0B6B  00B0               	movwf	??___flmul
  6133     0B6C  0841               	movf	___flmul@temp+1,w
  6134     0B6D  00B1               	movwf	??___flmul+1
  6135     0B6E  01B2               	clrf	??___flmul+2
  6136     0B6F  01B3               	clrf	??___flmul+3
  6137     0B70  3008               	movlw	8
  6138     0B71                     u5945:
  6139     0B71  1003               	clrc
  6140     0B72  0DB0               	rlf	??___flmul,f
  6141     0B73  0DB1               	rlf	??___flmul+1,f
  6142     0B74  0DB2               	rlf	??___flmul+2,f
  6143     0B75  0DB3               	rlf	??___flmul+3,f
  6144     0B76                     u5940:
  6145     0B76  3EFF               	addlw	-1
  6146     0B77  1D03               	skipz
  6147     0B78  2B71               	goto	u5945
  6148     0B79  0830               	movf	??___flmul,w
  6149     0B7A  07BC               	addwf	___flmul@prod,f
  6150     0B7B  0831               	movf	??___flmul+1,w
  6151     0B7C  1103               	clrz
  6152     0B7D  1803               	skipnc
  6153     0B7E  3E01               	addlw	1
  6154     0B7F  1903               	skipnz
  6155     0B80  2B82               	goto	u5951
  6156     0B81  07BD               	addwf	___flmul@prod+1,f
  6157     0B82                     u5951:
  6158     0B82  0832               	movf	??___flmul+2,w
  6159     0B83  1103               	clrz
  6160     0B84  1803               	skipnc
  6161     0B85  3E01               	addlw	1
  6162     0B86  1903               	skipnz
  6163     0B87  2B89               	goto	u5952
  6164     0B88  07BE               	addwf	___flmul@prod+2,f
  6165     0B89                     u5952:
  6166     0B89  0833               	movf	??___flmul+3,w
  6167     0B8A  1103               	clrz
  6168     0B8B  1803               	skipnc
  6169     0B8C  3E01               	addlw	1
  6170     0B8D  1903               	skipnz
  6171     0B8E  2B90               	goto	u5953
  6172     0B8F  07BF               	addwf	___flmul@prod+3,f
  6173     0B90                     u5953:
  6174     0B90                     l3710:
  6175     0B90  0837               	movf	___flmul@grs,w
  6176     0B91  00B0               	movwf	??___flmul
  6177     0B92  0838               	movf	___flmul@grs+1,w
  6178     0B93  00B1               	movwf	??___flmul+1
  6179     0B94  0839               	movf	___flmul@grs+2,w
  6180     0B95  00B2               	movwf	??___flmul+2
  6181     0B96  083A               	movf	___flmul@grs+3,w
  6182     0B97  00B3               	movwf	??___flmul+3
  6183     0B98  3018               	movlw	24
  6184     0B99                     u5965:
  6185     0B99  1003               	clrc
  6186     0B9A  0CB3               	rrf	??___flmul+3,f
  6187     0B9B  0CB2               	rrf	??___flmul+2,f
  6188     0B9C  0CB1               	rrf	??___flmul+1,f
  6189     0B9D  0CB0               	rrf	??___flmul,f
  6190     0B9E                     u5960:
  6191     0B9E  3EFF               	addlw	-1
  6192     0B9F  1D03               	skipz
  6193     0BA0  2B99               	goto	u5965
  6194     0BA1  0830               	movf	??___flmul,w
  6195     0BA2  07BC               	addwf	___flmul@prod,f
  6196     0BA3  0831               	movf	??___flmul+1,w
  6197     0BA4  1103               	clrz
  6198     0BA5  1803               	skipnc
  6199     0BA6  3E01               	addlw	1
  6200     0BA7  1903               	skipnz
  6201     0BA8  2BAA               	goto	u5971
  6202     0BA9  07BD               	addwf	___flmul@prod+1,f
  6203     0BAA                     u5971:
  6204     0BAA  0832               	movf	??___flmul+2,w
  6205     0BAB  1103               	clrz
  6206     0BAC  1803               	skipnc
  6207     0BAD  3E01               	addlw	1
  6208     0BAE  1903               	skipnz
  6209     0BAF  2BB1               	goto	u5972
  6210     0BB0  07BE               	addwf	___flmul@prod+2,f
  6211     0BB1                     u5972:
  6212     0BB1  0833               	movf	??___flmul+3,w
  6213     0BB2  1103               	clrz
  6214     0BB3  1803               	skipnc
  6215     0BB4  3E01               	addlw	1
  6216     0BB5  1903               	skipnz
  6217     0BB6  2BB8               	goto	u5973
  6218     0BB7  07BF               	addwf	___flmul@prod+3,f
  6219     0BB8                     u5973:
  6220     0BB8                     l3712:
  6221     0BB8  3008               	movlw	8
  6222     0BB9  00B0               	movwf	??___flmul
  6223     0BBA                     u5985:
  6224     0BBA  1003               	clrc
  6225     0BBB  0DB7               	rlf	___flmul@grs,f
  6226     0BBC  0DB8               	rlf	___flmul@grs+1,f
  6227     0BBD  0DB9               	rlf	___flmul@grs+2,f
  6228     0BBE  0DBA               	rlf	___flmul@grs+3,f
  6229     0BBF  0BB0               	decfsz	??___flmul,f
  6230     0BC0  2BBA               	goto	u5985
  6231     0BC1                     l3714:
  6232     0BC1  083B               	movf	___flmul@bexp,w
  6233     0BC2  0736               	addwf	___flmul@aexp,w
  6234     0BC3  00B0               	movwf	??___flmul
  6235     0BC4  01B1               	clrf	??___flmul+1
  6236     0BC5  0DB1               	rlf	??___flmul+1,f
  6237     0BC6  0830               	movf	??___flmul,w
  6238     0BC7  3E82               	addlw	130
  6239     0BC8  00C0               	movwf	___flmul@temp
  6240     0BC9  0831               	movf	??___flmul+1,w
  6241     0BCA  1803               	skipnc
  6242     0BCB  3E01               	addlw	1
  6243     0BCC  3EFF               	addlw	255
  6244     0BCD  00C1               	movwf	___flmul@temp+1
  6245     0BCE  2BEC               	goto	l3726
  6246     0BCF                     l3716:
  6247     0BCF  3001               	movlw	1
  6248     0BD0  00B0               	movwf	??___flmul
  6249     0BD1                     u5995:
  6250     0BD1  1003               	clrc
  6251     0BD2  0DBC               	rlf	___flmul@prod,f
  6252     0BD3  0DBD               	rlf	___flmul@prod+1,f
  6253     0BD4  0DBE               	rlf	___flmul@prod+2,f
  6254     0BD5  0DBF               	rlf	___flmul@prod+3,f
  6255     0BD6  0BB0               	decfsz	??___flmul,f
  6256     0BD7  2BD1               	goto	u5995
  6257     0BD8                     l3718:
  6258     0BD8  1FBA               	btfss	___flmul@grs+3,7
  6259     0BD9  2BDB               	goto	u6001
  6260     0BDA  2BDC               	goto	u6000
  6261     0BDB                     u6001:
  6262     0BDB  2BDD               	goto	l3722
  6263     0BDC                     u6000:
  6264     0BDC                     l3720:
  6265     0BDC  143C               	bsf	___flmul@prod,0
  6266     0BDD                     l3722:
  6267     0BDD  3001               	movlw	1
  6268     0BDE  00B0               	movwf	??___flmul
  6269     0BDF                     u6015:
  6270     0BDF  1003               	clrc
  6271     0BE0  0DB7               	rlf	___flmul@grs,f
  6272     0BE1  0DB8               	rlf	___flmul@grs+1,f
  6273     0BE2  0DB9               	rlf	___flmul@grs+2,f
  6274     0BE3  0DBA               	rlf	___flmul@grs+3,f
  6275     0BE4  0BB0               	decfsz	??___flmul,f
  6276     0BE5  2BDF               	goto	u6015
  6277     0BE6                     l3724:
  6278     0BE6  30FF               	movlw	255
  6279     0BE7  07C0               	addwf	___flmul@temp,f
  6280     0BE8  1803               	skipnc
  6281     0BE9  0AC1               	incf	___flmul@temp+1,f
  6282     0BEA  30FF               	movlw	255
  6283     0BEB  07C1               	addwf	___flmul@temp+1,f
  6284     0BEC                     l3726:
  6285     0BEC  1FBE               	btfss	___flmul@prod+2,7
  6286     0BED  2BEF               	goto	u6021
  6287     0BEE  2BF0               	goto	u6020
  6288     0BEF                     u6021:
  6289     0BEF  2BCF               	goto	l3716
  6290     0BF0                     u6020:
  6291     0BF0                     l3728:
  6292     0BF0  01B6               	clrf	___flmul@aexp
  6293     0BF1                     l3730:
  6294     0BF1  1FBA               	btfss	___flmul@grs+3,7
  6295     0BF2  2BF4               	goto	u6031
  6296     0BF3  2BF5               	goto	u6030
  6297     0BF4                     u6031:
  6298     0BF4  2C11               	goto	l3738
  6299     0BF5                     u6030:
  6300     0BF5                     l3732:
  6301     0BF5  30FF               	movlw	255
  6302     0BF6  0537               	andwf	___flmul@grs,w
  6303     0BF7  00B0               	movwf	??___flmul
  6304     0BF8  30FF               	movlw	255
  6305     0BF9  0538               	andwf	___flmul@grs+1,w
  6306     0BFA  00B1               	movwf	??___flmul+1
  6307     0BFB  30FF               	movlw	255
  6308     0BFC  0539               	andwf	___flmul@grs+2,w
  6309     0BFD  00B2               	movwf	??___flmul+2
  6310     0BFE  307F               	movlw	127
  6311     0BFF  053A               	andwf	___flmul@grs+3,w
  6312     0C00  00B3               	movwf	??___flmul+3
  6313     0C01  0833               	movf	??___flmul+3,w
  6314     0C02  0432               	iorwf	??___flmul+2,w
  6315     0C03  0431               	iorwf	??___flmul+1,w
  6316     0C04  0430               	iorwf	??___flmul,w
  6317     0C05  1903               	skipnz
  6318     0C06  2C08               	goto	u6041
  6319     0C07  2C09               	goto	u6040
  6320     0C08                     u6041:
  6321     0C08  2C0C               	goto	l838
  6322     0C09                     u6040:
  6323     0C09                     l3734:
  6324     0C09  01B6               	clrf	___flmul@aexp
  6325     0C0A  0AB6               	incf	___flmul@aexp,f
  6326     0C0B  2C11               	goto	l3738
  6327     0C0C                     l838:
  6328     0C0C  1C3C               	btfss	___flmul@prod,0
  6329     0C0D  2C0F               	goto	u6051
  6330     0C0E  2C10               	goto	u6050
  6331     0C0F                     u6051:
  6332     0C0F  2C11               	goto	l3738
  6333     0C10                     u6050:
  6334     0C10  2C09               	goto	l3734
  6335     0C11                     l3738:
  6336     0C11  0836               	movf	___flmul@aexp,w
  6337     0C12  1903               	btfsc	3,2
  6338     0C13  2C15               	goto	u6061
  6339     0C14  2C16               	goto	u6060
  6340     0C15                     u6061:
  6341     0C15  2C47               	goto	l3748
  6342     0C16                     u6060:
  6343     0C16                     l3740:
  6344     0C16  3001               	movlw	1
  6345     0C17  07BC               	addwf	___flmul@prod,f
  6346     0C18  3000               	movlw	0
  6347     0C19  1803               	skipnc
  6348     0C1A  3001               	movlw	1
  6349     0C1B  07BD               	addwf	___flmul@prod+1,f
  6350     0C1C  3000               	movlw	0
  6351     0C1D  1803               	skipnc
  6352     0C1E  3001               	movlw	1
  6353     0C1F  07BE               	addwf	___flmul@prod+2,f
  6354     0C20  3000               	movlw	0
  6355     0C21  1803               	skipnc
  6356     0C22  3001               	movlw	1
  6357     0C23  07BF               	addwf	___flmul@prod+3,f
  6358     0C24                     l3742:
  6359     0C24  1C3F               	btfss	___flmul@prod+3,0
  6360     0C25  2C27               	goto	u6071
  6361     0C26  2C28               	goto	u6070
  6362     0C27                     u6071:
  6363     0C27  2C47               	goto	l3748
  6364     0C28                     u6070:
  6365     0C28                     l3744:
  6366     0C28  083C               	movf	___flmul@prod,w
  6367     0C29  00B0               	movwf	??___flmul
  6368     0C2A  083D               	movf	___flmul@prod+1,w
  6369     0C2B  00B1               	movwf	??___flmul+1
  6370     0C2C  083E               	movf	___flmul@prod+2,w
  6371     0C2D  00B2               	movwf	??___flmul+2
  6372     0C2E  083F               	movf	___flmul@prod+3,w
  6373     0C2F  00B3               	movwf	??___flmul+3
  6374     0C30  3001               	movlw	1
  6375     0C31  00B4               	movwf	??___flmul+4
  6376     0C32                     u6085:
  6377     0C32  0D33               	rlf	??___flmul+3,w
  6378     0C33  0CB3               	rrf	??___flmul+3,f
  6379     0C34  0CB2               	rrf	??___flmul+2,f
  6380     0C35  0CB1               	rrf	??___flmul+1,f
  6381     0C36  0CB0               	rrf	??___flmul,f
  6382     0C37                     u6080:
  6383     0C37  0BB4               	decfsz	??___flmul+4,f
  6384     0C38  2C32               	goto	u6085
  6385     0C39  0833               	movf	??___flmul+3,w
  6386     0C3A  00BF               	movwf	___flmul@prod+3
  6387     0C3B  0832               	movf	??___flmul+2,w
  6388     0C3C  00BE               	movwf	___flmul@prod+2
  6389     0C3D  0831               	movf	??___flmul+1,w
  6390     0C3E  00BD               	movwf	___flmul@prod+1
  6391     0C3F  0830               	movf	??___flmul,w
  6392     0C40  00BC               	movwf	___flmul@prod
  6393     0C41                     l3746:
  6394     0C41  3001               	movlw	1
  6395     0C42  07C0               	addwf	___flmul@temp,f
  6396     0C43  1803               	skipnc
  6397     0C44  0AC1               	incf	___flmul@temp+1,f
  6398     0C45  3000               	movlw	0
  6399     0C46  07C1               	addwf	___flmul@temp+1,f
  6400     0C47                     l3748:
  6401     0C47  0841               	movf	___flmul@temp+1,w
  6402     0C48  3A80               	xorlw	128
  6403     0C49  00FF               	movwf	btemp+1
  6404     0C4A  3080               	movlw	128
  6405     0C4B  027F               	subwf	btemp+1,w
  6406     0C4C  1D03               	skipz
  6407     0C4D  2C50               	goto	u6095
  6408     0C4E  30FF               	movlw	255
  6409     0C4F  0240               	subwf	___flmul@temp,w
  6410     0C50                     u6095:
  6411     0C50  1C03               	skipc
  6412     0C51  2C53               	goto	u6091
  6413     0C52  2C54               	goto	u6090
  6414     0C53                     u6091:
  6415     0C53  2C5F               	goto	l3752
  6416     0C54                     u6090:
  6417     0C54                     l3750:
  6418     0C54  307F               	movlw	127
  6419     0C55  1283               	bcf	3,5	;RP0=0, select bank0
  6420     0C56  1303               	bcf	3,6	;RP1=0, select bank0
  6421     0C57  00BF               	movwf	___flmul@prod+3
  6422     0C58  3080               	movlw	128
  6423     0C59  00BE               	movwf	___flmul@prod+2
  6424     0C5A  3000               	movlw	0
  6425     0C5B  00BD               	movwf	___flmul@prod+1
  6426     0C5C  3000               	movlw	0
  6427     0C5D  00BC               	movwf	___flmul@prod
  6428     0C5E  2C90               	goto	l844
  6429     0C5F                     l3752:
  6430     0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  6431     0C60  1303               	bcf	3,6	;RP1=0, select bank0
  6432     0C61  0841               	movf	___flmul@temp+1,w
  6433     0C62  3A80               	xorlw	128
  6434     0C63  00FF               	movwf	btemp+1
  6435     0C64  3080               	movlw	128
  6436     0C65  027F               	subwf	btemp+1,w
  6437     0C66  1D03               	skipz
  6438     0C67  2C6A               	goto	u6105
  6439     0C68  3001               	movlw	1
  6440     0C69  0240               	subwf	___flmul@temp,w
  6441     0C6A                     u6105:
  6442     0C6A  1803               	skipnc
  6443     0C6B  2C6D               	goto	u6101
  6444     0C6C  2C6E               	goto	u6100
  6445     0C6D                     u6101:
  6446     0C6D  2C7A               	goto	l3758
  6447     0C6E                     u6100:
  6448     0C6E                     l3754:
  6449     0C6E  3000               	movlw	0
  6450     0C6F  1283               	bcf	3,5	;RP0=0, select bank0
  6451     0C70  1303               	bcf	3,6	;RP1=0, select bank0
  6452     0C71  00BF               	movwf	___flmul@prod+3
  6453     0C72  3000               	movlw	0
  6454     0C73  00BE               	movwf	___flmul@prod+2
  6455     0C74  3000               	movlw	0
  6456     0C75  00BD               	movwf	___flmul@prod+1
  6457     0C76  3000               	movlw	0
  6458     0C77  00BC               	movwf	___flmul@prod
  6459     0C78                     l3756:
  6460     0C78  01B5               	clrf	___flmul@sign
  6461     0C79  2C90               	goto	l844
  6462     0C7A                     l3758:
  6463     0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  6464     0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  6465     0C7C  0840               	movf	___flmul@temp,w
  6466     0C7D  00BB               	movwf	___flmul@bexp
  6467     0C7E  30FF               	movlw	255
  6468     0C7F  05BC               	andwf	___flmul@prod,f
  6469     0C80  30FF               	movlw	255
  6470     0C81  05BD               	andwf	___flmul@prod+1,f
  6471     0C82  307F               	movlw	127
  6472     0C83  05BE               	andwf	___flmul@prod+2,f
  6473     0C84  3000               	movlw	0
  6474     0C85  05BF               	andwf	___flmul@prod+3,f
  6475     0C86                     l3760:
  6476     0C86  1C3B               	btfss	___flmul@bexp,0
  6477     0C87  2C89               	goto	u6111
  6478     0C88  2C8A               	goto	u6110
  6479     0C89                     u6111:
  6480     0C89  2C8B               	goto	l3764
  6481     0C8A                     u6110:
  6482     0C8A                     l3762:
  6483     0C8A  17BE               	bsf	___flmul@prod+2,7
  6484     0C8B                     l3764:
  6485     0C8B  083B               	movf	___flmul@bexp,w
  6486     0C8C  00B0               	movwf	??___flmul
  6487     0C8D  1003               	clrc
  6488     0C8E  0C30               	rrf	??___flmul,w
  6489     0C8F  00BF               	movwf	___flmul@prod+3
  6490     0C90                     l844:
  6491     0C90  0835               	movf	___flmul@sign,w
  6492     0C91  00B0               	movwf	??___flmul
  6493     0C92  0830               	movf	??___flmul,w
  6494     0C93  04BF               	iorwf	___flmul@prod+3,f
  6495     0C94                     l3766:
  6496     0C94  083F               	movf	___flmul@prod+3,w
  6497     0C95  00AB               	movwf	?___flmul+3
  6498     0C96  083E               	movf	___flmul@prod+2,w
  6499     0C97  00AA               	movwf	?___flmul+2
  6500     0C98  083D               	movf	___flmul@prod+1,w
  6501     0C99  00A9               	movwf	?___flmul+1
  6502     0C9A  083C               	movf	___flmul@prod,w
  6503     0C9B  00A8               	movwf	?___flmul
  6504     0C9C                     l832:
  6505     0C9C  0008               	return
  6506     0C9D                     __end_of___flmul:
  6507                           
  6508                           	psect	text10
  6509     1C3F                     __ptext10:	
  6510 ;; *************** function __Umul8_16 *****************
  6511 ;; Defined at:
  6512 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  6513 ;; Parameters:    Size  Location     Type
  6514 ;;  multiplier      1    wreg     unsigned char 
  6515 ;;  multiplicand    1    2[COMMON] unsigned char 
  6516 ;; Auto vars:     Size  Location     Type
  6517 ;;  multiplier      1    4[BANK0 ] unsigned char 
  6518 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  6519 ;;  product         2    0[BANK0 ] unsigned int 
  6520 ;; Return value:  Size  Location     Type
  6521 ;;                  2    2[COMMON] unsigned int 
  6522 ;; Registers used:
  6523 ;;		wreg, status,2, status,0
  6524 ;; Tracked objects:
  6525 ;;		On entry : 0/0
  6526 ;;		On exit  : 0/0
  6527 ;;		Unchanged: 0/0
  6528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6529 ;;      Params:         2       0       0       0       0
  6530 ;;      Locals:         0       5       0       0       0
  6531 ;;      Temps:          2       0       0       0       0
  6532 ;;      Totals:         4       5       0       0       0
  6533 ;;Total ram usage:        9 bytes
  6534 ;; Hardware stack levels used: 1
  6535 ;; Hardware stack levels required when called: 1
  6536 ;; This function calls:
  6537 ;;		Nothing
  6538 ;; This function is called by:
  6539 ;;		___flmul
  6540 ;; This function uses a non-reentrant model
  6541 ;;
  6542                           
  6543     1C3F                     __Umul8_16:	
  6544                           ;psect for function __Umul8_16
  6545                           
  6546                           
  6547                           ;incstack = 0
  6548                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6549                           ;__Umul8_16@multiplier stored from wreg
  6550     1C3F  1283               	bcf	3,5	;RP0=0, select bank0
  6551     1C40  1303               	bcf	3,6	;RP1=0, select bank0
  6552     1C41  00A4               	movwf	__Umul8_16@multiplier
  6553     1C42                     l3556:
  6554     1C42  01A0               	clrf	__Umul8_16@product
  6555     1C43  01A1               	clrf	__Umul8_16@product+1
  6556     1C44                     l3558:
  6557     1C44  0872               	movf	__Umul8_16@multiplicand,w
  6558     1C45  00F4               	movwf	??__Umul8_16
  6559     1C46  01F5               	clrf	??__Umul8_16+1
  6560     1C47  0874               	movf	??__Umul8_16,w
  6561     1C48  00A2               	movwf	__Umul8_16@word_mpld
  6562     1C49  0875               	movf	??__Umul8_16+1,w
  6563     1C4A  00A3               	movwf	__Umul8_16@word_mpld+1
  6564     1C4B                     l3560:
  6565     1C4B  1C24               	btfss	__Umul8_16@multiplier,0
  6566     1C4C  2C4E               	goto	u5541
  6567     1C4D  2C4F               	goto	u5540
  6568     1C4E                     u5541:
  6569     1C4E  2C55               	goto	l851
  6570     1C4F                     u5540:
  6571     1C4F                     l3562:
  6572     1C4F  0822               	movf	__Umul8_16@word_mpld,w
  6573     1C50  07A0               	addwf	__Umul8_16@product,f
  6574     1C51  1803               	skipnc
  6575     1C52  0AA1               	incf	__Umul8_16@product+1,f
  6576     1C53  0823               	movf	__Umul8_16@word_mpld+1,w
  6577     1C54  07A1               	addwf	__Umul8_16@product+1,f
  6578     1C55                     l851:
  6579     1C55  3001               	movlw	1
  6580     1C56                     u5555:
  6581     1C56  1003               	clrc
  6582     1C57  0DA2               	rlf	__Umul8_16@word_mpld,f
  6583     1C58  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  6584     1C59  3EFF               	addlw	-1
  6585     1C5A  1D03               	skipz
  6586     1C5B  2C56               	goto	u5555
  6587     1C5C  1003               	clrc
  6588     1C5D  0CA4               	rrf	__Umul8_16@multiplier,f
  6589     1C5E                     l3564:
  6590     1C5E  0824               	movf	__Umul8_16@multiplier,w
  6591     1C5F  1D03               	btfss	3,2
  6592     1C60  2C62               	goto	u5561
  6593     1C61  2C63               	goto	u5560
  6594     1C62                     u5561:
  6595     1C62  2C4B               	goto	l3560
  6596     1C63                     u5560:
  6597     1C63                     l3566:
  6598     1C63  0821               	movf	__Umul8_16@product+1,w
  6599     1C64  00F3               	movwf	?__Umul8_16+1
  6600     1C65  0820               	movf	__Umul8_16@product,w
  6601     1C66  00F2               	movwf	?__Umul8_16
  6602     1C67                     l853:
  6603     1C67  0008               	return
  6604     1C68                     __end_of__Umul8_16:
  6605                           
  6606                           	psect	text11
  6607     1172                     __ptext11:	
  6608 ;; *************** function __tdiv_to_l_ *****************
  6609 ;; Defined at:
  6610 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftdivl.c"
  6611 ;; Parameters:    Size  Location     Type
  6612 ;;  f1              4    2[COMMON] float 
  6613 ;;  f2              4    6[COMMON] float 
  6614 ;; Auto vars:     Size  Location     Type
  6615 ;;  quot            4    3[BANK0 ] unsigned long 
  6616 ;;  exp1            1    8[BANK0 ] unsigned char 
  6617 ;;  cntr            1    7[BANK0 ] unsigned char 
  6618 ;; Return value:  Size  Location     Type
  6619 ;;                  4    2[COMMON] unsigned long 
  6620 ;; Registers used:
  6621 ;;		wreg, status,2, status,0
  6622 ;; Tracked objects:
  6623 ;;		On entry : 0/0
  6624 ;;		On exit  : 0/0
  6625 ;;		Unchanged: 0/0
  6626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6627 ;;      Params:         8       0       0       0       0
  6628 ;;      Locals:         0       6       0       0       0
  6629 ;;      Temps:          0       3       0       0       0
  6630 ;;      Totals:         8       9       0       0       0
  6631 ;;Total ram usage:       17 bytes
  6632 ;; Hardware stack levels used: 1
  6633 ;; Hardware stack levels required when called: 1
  6634 ;; This function calls:
  6635 ;;		Nothing
  6636 ;; This function is called by:
  6637 ;;		_sprintf
  6638 ;; This function uses a non-reentrant model
  6639 ;;
  6640                           
  6641     1172                     __tdiv_to_l_:	
  6642                           ;psect for function __tdiv_to_l_
  6643                           
  6644     1172                     l2910:	
  6645                           ;incstack = 0
  6646                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6647                           
  6648     1172  0872               	movf	__tdiv_to_l_@f1,w
  6649     1173  1283               	bcf	3,5	;RP0=0, select bank0
  6650     1174  1303               	bcf	3,6	;RP1=0, select bank0
  6651     1175  00A0               	movwf	??__tdiv_to_l_
  6652     1176  0873               	movf	__tdiv_to_l_@f1+1,w
  6653     1177  00A1               	movwf	??__tdiv_to_l_+1
  6654     1178  0874               	movf	__tdiv_to_l_@f1+2,w
  6655     1179  00A2               	movwf	??__tdiv_to_l_+2
  6656     117A  1003               	clrc
  6657     117B  0D21               	rlf	??__tdiv_to_l_+1,w
  6658     117C  0D22               	rlf	??__tdiv_to_l_+2,w
  6659     117D  00A8               	movwf	__tdiv_to_l_@exp1
  6660     117E  0828               	movf	__tdiv_to_l_@exp1,w
  6661     117F  1D03               	btfss	3,2
  6662     1180  2982               	goto	u4401
  6663     1181  2983               	goto	u4400
  6664     1182                     u4401:
  6665     1182  298C               	goto	l2916
  6666     1183                     u4400:
  6667     1183                     l2912:
  6668     1183  3000               	movlw	0
  6669     1184  00F5               	movwf	?__tdiv_to_l_+3
  6670     1185  3000               	movlw	0
  6671     1186  00F4               	movwf	?__tdiv_to_l_+2
  6672     1187  3000               	movlw	0
  6673     1188  00F3               	movwf	?__tdiv_to_l_+1
  6674     1189  3000               	movlw	0
  6675     118A  00F2               	movwf	?__tdiv_to_l_
  6676     118B  2A28               	goto	l626
  6677     118C                     l2916:
  6678     118C  0876               	movf	__tdiv_to_l_@f2,w
  6679     118D  00A0               	movwf	??__tdiv_to_l_
  6680     118E  0877               	movf	__tdiv_to_l_@f2+1,w
  6681     118F  00A1               	movwf	??__tdiv_to_l_+1
  6682     1190  0878               	movf	__tdiv_to_l_@f2+2,w
  6683     1191  00A2               	movwf	??__tdiv_to_l_+2
  6684     1192  1003               	clrc
  6685     1193  0D21               	rlf	??__tdiv_to_l_+1,w
  6686     1194  0D22               	rlf	??__tdiv_to_l_+2,w
  6687     1195  00A7               	movwf	__tdiv_to_l_@cntr
  6688     1196  0827               	movf	__tdiv_to_l_@cntr,w
  6689     1197  1D03               	btfss	3,2
  6690     1198  299A               	goto	u4411
  6691     1199  299B               	goto	u4410
  6692     119A                     u4411:
  6693     119A  299C               	goto	l627
  6694     119B                     u4410:
  6695     119B  2983               	goto	l2912
  6696     119C                     l627:
  6697     119C  17F3               	bsf	__tdiv_to_l_@f1+1,7
  6698     119D                     l2922:
  6699     119D  30FF               	movlw	255
  6700     119E  05F2               	andwf	__tdiv_to_l_@f1,f
  6701     119F  30FF               	movlw	255
  6702     11A0  05F3               	andwf	__tdiv_to_l_@f1+1,f
  6703     11A1  3000               	movlw	0
  6704     11A2  05F4               	andwf	__tdiv_to_l_@f1+2,f
  6705     11A3                     l2924:
  6706     11A3  17F7               	bsf	__tdiv_to_l_@f2+1,7
  6707     11A4  30FF               	movlw	255
  6708     11A5  05F6               	andwf	__tdiv_to_l_@f2,f
  6709     11A6  30FF               	movlw	255
  6710     11A7  05F7               	andwf	__tdiv_to_l_@f2+1,f
  6711     11A8  3000               	movlw	0
  6712     11A9  05F8               	andwf	__tdiv_to_l_@f2+2,f
  6713     11AA  3000               	movlw	0
  6714     11AB  00A6               	movwf	__tdiv_to_l_@quot+3
  6715     11AC  3000               	movlw	0
  6716     11AD  00A5               	movwf	__tdiv_to_l_@quot+2
  6717     11AE  3000               	movlw	0
  6718     11AF  00A4               	movwf	__tdiv_to_l_@quot+1
  6719     11B0  3000               	movlw	0
  6720     11B1  00A3               	movwf	__tdiv_to_l_@quot
  6721     11B2                     l2926:
  6722     11B2  307F               	movlw	127
  6723     11B3  02A8               	subwf	__tdiv_to_l_@exp1,f
  6724     11B4                     l2928:
  6725     11B4  3098               	movlw	152
  6726     11B5  0727               	addwf	__tdiv_to_l_@cntr,w
  6727     11B6  00A0               	movwf	??__tdiv_to_l_
  6728     11B7  0820               	movf	??__tdiv_to_l_,w
  6729     11B8  02A8               	subwf	__tdiv_to_l_@exp1,f
  6730     11B9  3018               	movlw	24
  6731     11BA  00A7               	movwf	__tdiv_to_l_@cntr
  6732     11BB                     l2930:
  6733     11BB  3001               	movlw	1
  6734     11BC  00A0               	movwf	??__tdiv_to_l_
  6735     11BD                     u4425:
  6736     11BD  1003               	clrc
  6737     11BE  0DA3               	rlf	__tdiv_to_l_@quot,f
  6738     11BF  0DA4               	rlf	__tdiv_to_l_@quot+1,f
  6739     11C0  0DA5               	rlf	__tdiv_to_l_@quot+2,f
  6740     11C1  0DA6               	rlf	__tdiv_to_l_@quot+3,f
  6741     11C2  0BA0               	decfsz	??__tdiv_to_l_,f
  6742     11C3  29BD               	goto	u4425
  6743     11C4                     l2932:
  6744     11C4  0878               	movf	__tdiv_to_l_@f2+2,w
  6745     11C5  0274               	subwf	__tdiv_to_l_@f1+2,w
  6746     11C6  1D03               	skipz
  6747     11C7  29CE               	goto	u4435
  6748     11C8  0877               	movf	__tdiv_to_l_@f2+1,w
  6749     11C9  0273               	subwf	__tdiv_to_l_@f1+1,w
  6750     11CA  1D03               	skipz
  6751     11CB  29CE               	goto	u4435
  6752     11CC  0876               	movf	__tdiv_to_l_@f2,w
  6753     11CD  0272               	subwf	__tdiv_to_l_@f1,w
  6754     11CE                     u4435:
  6755     11CE  1C03               	skipc
  6756     11CF  29D1               	goto	u4431
  6757     11D0  29D2               	goto	u4430
  6758     11D1                     u4431:
  6759     11D1  29DD               	goto	l2938
  6760     11D2                     u4430:
  6761     11D2                     l2934:
  6762     11D2  0876               	movf	__tdiv_to_l_@f2,w
  6763     11D3  02F2               	subwf	__tdiv_to_l_@f1,f
  6764     11D4  0877               	movf	__tdiv_to_l_@f2+1,w
  6765     11D5  1C03               	skipc
  6766     11D6  0F77               	incfsz	__tdiv_to_l_@f2+1,w
  6767     11D7  02F3               	subwf	__tdiv_to_l_@f1+1,f
  6768     11D8  0878               	movf	__tdiv_to_l_@f2+2,w
  6769     11D9  1C03               	skipc
  6770     11DA  0A78               	incf	__tdiv_to_l_@f2+2,w
  6771     11DB  02F4               	subwf	__tdiv_to_l_@f1+2,f
  6772     11DC                     l2936:
  6773     11DC  1423               	bsf	__tdiv_to_l_@quot,0
  6774     11DD                     l2938:
  6775     11DD  3001               	movlw	1
  6776     11DE                     u4445:
  6777     11DE  1003               	clrc
  6778     11DF  0DF2               	rlf	__tdiv_to_l_@f1,f
  6779     11E0  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  6780     11E1  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  6781     11E2  3EFF               	addlw	-1
  6782     11E3  1D03               	skipz
  6783     11E4  29DE               	goto	u4445
  6784     11E5                     l2940:
  6785     11E5  3001               	movlw	1
  6786     11E6  02A7               	subwf	__tdiv_to_l_@cntr,f
  6787     11E7  1D03               	btfss	3,2
  6788     11E8  29EA               	goto	u4451
  6789     11E9  29EB               	goto	u4450
  6790     11EA                     u4451:
  6791     11EA  29BB               	goto	l2930
  6792     11EB                     u4450:
  6793     11EB                     l630:
  6794     11EB  1FA8               	btfss	__tdiv_to_l_@exp1,7
  6795     11EC  29EE               	goto	u4461
  6796     11ED  29EF               	goto	u4460
  6797     11EE                     u4461:
  6798     11EE  2A09               	goto	l2950
  6799     11EF                     u4460:
  6800     11EF                     l2942:
  6801     11EF  0828               	movf	__tdiv_to_l_@exp1,w
  6802     11F0  3A80               	xorlw	128
  6803     11F1  3E97               	addlw	151
  6804     11F2  1803               	skipnc
  6805     11F3  29F5               	goto	u4471
  6806     11F4  29F6               	goto	u4470
  6807     11F5                     u4471:
  6808     11F5  29F7               	goto	l2948
  6809     11F6                     u4470:
  6810     11F6  2983               	goto	l2912
  6811     11F7                     l2948:
  6812     11F7  3001               	movlw	1
  6813     11F8                     u4485:
  6814     11F8  1003               	clrc
  6815     11F9  0CA6               	rrf	__tdiv_to_l_@quot+3,f
  6816     11FA  0CA5               	rrf	__tdiv_to_l_@quot+2,f
  6817     11FB  0CA4               	rrf	__tdiv_to_l_@quot+1,f
  6818     11FC  0CA3               	rrf	__tdiv_to_l_@quot,f
  6819     11FD  3EFF               	addlw	-1
  6820     11FE  1D03               	skipz
  6821     11FF  29F8               	goto	u4485
  6822     1200  3001               	movlw	1
  6823     1201  00A0               	movwf	??__tdiv_to_l_
  6824     1202  0820               	movf	??__tdiv_to_l_,w
  6825     1203  07A8               	addwf	__tdiv_to_l_@exp1,f
  6826     1204  1D03               	btfss	3,2
  6827     1205  2A07               	goto	u4491
  6828     1206  2A08               	goto	u4490
  6829     1207                     u4491:
  6830     1207  29F7               	goto	l2948
  6831     1208                     u4490:
  6832     1208  2A20               	goto	l2958
  6833     1209                     l2950:
  6834     1209  3018               	movlw	24
  6835     120A  0228               	subwf	__tdiv_to_l_@exp1,w
  6836     120B  1C03               	skipc
  6837     120C  2A0E               	goto	u4501
  6838     120D  2A0F               	goto	u4500
  6839     120E                     u4501:
  6840     120E  2A1B               	goto	l637
  6841     120F                     u4500:
  6842     120F  2983               	goto	l2912
  6843     1210                     l2956:
  6844     1210  3001               	movlw	1
  6845     1211  00A0               	movwf	??__tdiv_to_l_
  6846     1212                     u4515:
  6847     1212  1003               	clrc
  6848     1213  0DA3               	rlf	__tdiv_to_l_@quot,f
  6849     1214  0DA4               	rlf	__tdiv_to_l_@quot+1,f
  6850     1215  0DA5               	rlf	__tdiv_to_l_@quot+2,f
  6851     1216  0DA6               	rlf	__tdiv_to_l_@quot+3,f
  6852     1217  0BA0               	decfsz	??__tdiv_to_l_,f
  6853     1218  2A12               	goto	u4515
  6854     1219  3001               	movlw	1
  6855     121A  02A8               	subwf	__tdiv_to_l_@exp1,f
  6856     121B                     l637:
  6857     121B  0828               	movf	__tdiv_to_l_@exp1,w
  6858     121C  1D03               	btfss	3,2
  6859     121D  2A1F               	goto	u4521
  6860     121E  2A20               	goto	u4520
  6861     121F                     u4521:
  6862     121F  2A10               	goto	l2956
  6863     1220                     u4520:
  6864     1220                     l2958:
  6865     1220  0826               	movf	__tdiv_to_l_@quot+3,w
  6866     1221  00F5               	movwf	?__tdiv_to_l_+3
  6867     1222  0825               	movf	__tdiv_to_l_@quot+2,w
  6868     1223  00F4               	movwf	?__tdiv_to_l_+2
  6869     1224  0824               	movf	__tdiv_to_l_@quot+1,w
  6870     1225  00F3               	movwf	?__tdiv_to_l_+1
  6871     1226  0823               	movf	__tdiv_to_l_@quot,w
  6872     1227  00F2               	movwf	?__tdiv_to_l_
  6873     1228                     l626:
  6874     1228  0008               	return
  6875     1229                     __end_of__tdiv_to_l_:
  6876                           
  6877                           	psect	text12
  6878     1229                     __ptext12:	
  6879 ;; *************** function __div_to_l_ *****************
  6880 ;; Defined at:
  6881 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fldivl.c"
  6882 ;; Parameters:    Size  Location     Type
  6883 ;;  f1              4    2[COMMON] unsigned long 
  6884 ;;  f2              4    6[COMMON] unsigned long 
  6885 ;; Auto vars:     Size  Location     Type
  6886 ;;  quot            4    1[BANK0 ] unsigned long 
  6887 ;;  exp1            1    6[BANK0 ] unsigned char 
  6888 ;;  cntr            1    5[BANK0 ] unsigned char 
  6889 ;; Return value:  Size  Location     Type
  6890 ;;                  4    2[COMMON] unsigned long 
  6891 ;; Registers used:
  6892 ;;		wreg, status,2, status,0
  6893 ;; Tracked objects:
  6894 ;;		On entry : 0/0
  6895 ;;		On exit  : 0/0
  6896 ;;		Unchanged: 0/0
  6897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6898 ;;      Params:         8       0       0       0       0
  6899 ;;      Locals:         0       6       0       0       0
  6900 ;;      Temps:          0       1       0       0       0
  6901 ;;      Totals:         8       7       0       0       0
  6902 ;;Total ram usage:       15 bytes
  6903 ;; Hardware stack levels used: 1
  6904 ;; Hardware stack levels required when called: 1
  6905 ;; This function calls:
  6906 ;;		Nothing
  6907 ;; This function is called by:
  6908 ;;		_sprintf
  6909 ;; This function uses a non-reentrant model
  6910 ;;
  6911                           
  6912     1229                     __div_to_l_:	
  6913                           ;psect for function __div_to_l_
  6914                           
  6915     1229                     l3870:	
  6916                           ;incstack = 0
  6917                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6918                           
  6919     1229  1003               	clrc
  6920     122A  0D74               	rlf	__div_to_l_@f1+2,w
  6921     122B  0D75               	rlf	__div_to_l_@f1+3,w
  6922     122C  1283               	bcf	3,5	;RP0=0, select bank0
  6923     122D  1303               	bcf	3,6	;RP1=0, select bank0
  6924     122E  00A6               	movwf	__div_to_l_@exp1
  6925     122F  0826               	movf	__div_to_l_@exp1,w
  6926     1230  1D03               	btfss	3,2
  6927     1231  2A33               	goto	u6391
  6928     1232  2A34               	goto	u6390
  6929     1233                     u6391:
  6930     1233  2A3D               	goto	l3876
  6931     1234                     u6390:
  6932     1234                     l3872:
  6933     1234  3000               	movlw	0
  6934     1235  00F5               	movwf	?__div_to_l_+3
  6935     1236  3000               	movlw	0
  6936     1237  00F4               	movwf	?__div_to_l_+2
  6937     1238  3000               	movlw	0
  6938     1239  00F3               	movwf	?__div_to_l_+1
  6939     123A  3000               	movlw	0
  6940     123B  00F2               	movwf	?__div_to_l_
  6941     123C  2AE0               	goto	l579
  6942     123D                     l3876:
  6943     123D  1003               	clrc
  6944     123E  0D78               	rlf	__div_to_l_@f2+2,w
  6945     123F  0D79               	rlf	__div_to_l_@f2+3,w
  6946     1240  00A5               	movwf	__div_to_l_@cntr
  6947     1241  0825               	movf	__div_to_l_@cntr,w
  6948     1242  1D03               	btfss	3,2
  6949     1243  2A45               	goto	u6401
  6950     1244  2A46               	goto	u6400
  6951     1245                     u6401:
  6952     1245  2A47               	goto	l580
  6953     1246                     u6400:
  6954     1246  2A34               	goto	l3872
  6955     1247                     l580:
  6956     1247  17F4               	bsf	__div_to_l_@f1+2,7
  6957     1248                     l3882:
  6958     1248  30FF               	movlw	255
  6959     1249  05F2               	andwf	__div_to_l_@f1,f
  6960     124A  30FF               	movlw	255
  6961     124B  05F3               	andwf	__div_to_l_@f1+1,f
  6962     124C  30FF               	movlw	255
  6963     124D  05F4               	andwf	__div_to_l_@f1+2,f
  6964     124E  3000               	movlw	0
  6965     124F  05F5               	andwf	__div_to_l_@f1+3,f
  6966     1250                     l3884:
  6967     1250  17F8               	bsf	__div_to_l_@f2+2,7
  6968     1251  30FF               	movlw	255
  6969     1252  05F6               	andwf	__div_to_l_@f2,f
  6970     1253  30FF               	movlw	255
  6971     1254  05F7               	andwf	__div_to_l_@f2+1,f
  6972     1255  30FF               	movlw	255
  6973     1256  05F8               	andwf	__div_to_l_@f2+2,f
  6974     1257  3000               	movlw	0
  6975     1258  05F9               	andwf	__div_to_l_@f2+3,f
  6976     1259  3000               	movlw	0
  6977     125A  00A4               	movwf	__div_to_l_@quot+3
  6978     125B  3000               	movlw	0
  6979     125C  00A3               	movwf	__div_to_l_@quot+2
  6980     125D  3000               	movlw	0
  6981     125E  00A2               	movwf	__div_to_l_@quot+1
  6982     125F  3000               	movlw	0
  6983     1260  00A1               	movwf	__div_to_l_@quot
  6984     1261                     l3886:
  6985     1261  307F               	movlw	127
  6986     1262  02A6               	subwf	__div_to_l_@exp1,f
  6987     1263                     l3888:
  6988     1263  30A0               	movlw	160
  6989     1264  0725               	addwf	__div_to_l_@cntr,w
  6990     1265  00A0               	movwf	??__div_to_l_
  6991     1266  0820               	movf	??__div_to_l_,w
  6992     1267  02A6               	subwf	__div_to_l_@exp1,f
  6993     1268  3020               	movlw	32
  6994     1269  00A5               	movwf	__div_to_l_@cntr
  6995     126A                     l3890:
  6996     126A  3001               	movlw	1
  6997     126B  00A0               	movwf	??__div_to_l_
  6998     126C                     u6415:
  6999     126C  1003               	clrc
  7000     126D  0DA1               	rlf	__div_to_l_@quot,f
  7001     126E  0DA2               	rlf	__div_to_l_@quot+1,f
  7002     126F  0DA3               	rlf	__div_to_l_@quot+2,f
  7003     1270  0DA4               	rlf	__div_to_l_@quot+3,f
  7004     1271  0BA0               	decfsz	??__div_to_l_,f
  7005     1272  2A6C               	goto	u6415
  7006     1273                     l3892:
  7007     1273  0879               	movf	__div_to_l_@f2+3,w
  7008     1274  0275               	subwf	__div_to_l_@f1+3,w
  7009     1275  1D03               	skipz
  7010     1276  2A81               	goto	u6425
  7011     1277  0878               	movf	__div_to_l_@f2+2,w
  7012     1278  0274               	subwf	__div_to_l_@f1+2,w
  7013     1279  1D03               	skipz
  7014     127A  2A81               	goto	u6425
  7015     127B  0877               	movf	__div_to_l_@f2+1,w
  7016     127C  0273               	subwf	__div_to_l_@f1+1,w
  7017     127D  1D03               	skipz
  7018     127E  2A81               	goto	u6425
  7019     127F  0876               	movf	__div_to_l_@f2,w
  7020     1280  0272               	subwf	__div_to_l_@f1,w
  7021     1281                     u6425:
  7022     1281  1C03               	skipc
  7023     1282  2A84               	goto	u6421
  7024     1283  2A85               	goto	u6420
  7025     1284                     u6421:
  7026     1284  2A94               	goto	l3898
  7027     1285                     u6420:
  7028     1285                     l3894:
  7029     1285  0876               	movf	__div_to_l_@f2,w
  7030     1286  02F2               	subwf	__div_to_l_@f1,f
  7031     1287  0877               	movf	__div_to_l_@f2+1,w
  7032     1288  1C03               	skipc
  7033     1289  0F77               	incfsz	__div_to_l_@f2+1,w
  7034     128A  02F3               	subwf	__div_to_l_@f1+1,f
  7035     128B  0878               	movf	__div_to_l_@f2+2,w
  7036     128C  1C03               	skipc
  7037     128D  0F78               	incfsz	__div_to_l_@f2+2,w
  7038     128E  02F4               	subwf	__div_to_l_@f1+2,f
  7039     128F  0879               	movf	__div_to_l_@f2+3,w
  7040     1290  1C03               	skipc
  7041     1291  0F79               	incfsz	__div_to_l_@f2+3,w
  7042     1292  02F5               	subwf	__div_to_l_@f1+3,f
  7043     1293                     l3896:
  7044     1293  1421               	bsf	__div_to_l_@quot,0
  7045     1294                     l3898:
  7046     1294  3001               	movlw	1
  7047     1295  00A0               	movwf	??__div_to_l_
  7048     1296                     u6435:
  7049     1296  1003               	clrc
  7050     1297  0DF2               	rlf	__div_to_l_@f1,f
  7051     1298  0DF3               	rlf	__div_to_l_@f1+1,f
  7052     1299  0DF4               	rlf	__div_to_l_@f1+2,f
  7053     129A  0DF5               	rlf	__div_to_l_@f1+3,f
  7054     129B  0BA0               	decfsz	??__div_to_l_,f
  7055     129C  2A96               	goto	u6435
  7056     129D                     l3900:
  7057     129D  3001               	movlw	1
  7058     129E  02A5               	subwf	__div_to_l_@cntr,f
  7059     129F  1D03               	btfss	3,2
  7060     12A0  2AA2               	goto	u6441
  7061     12A1  2AA3               	goto	u6440
  7062     12A2                     u6441:
  7063     12A2  2A6A               	goto	l3890
  7064     12A3                     u6440:
  7065     12A3                     l583:
  7066     12A3  1FA6               	btfss	__div_to_l_@exp1,7
  7067     12A4  2AA6               	goto	u6451
  7068     12A5  2AA7               	goto	u6450
  7069     12A6                     u6451:
  7070     12A6  2AC1               	goto	l3910
  7071     12A7                     u6450:
  7072     12A7                     l3902:
  7073     12A7  0826               	movf	__div_to_l_@exp1,w
  7074     12A8  3A80               	xorlw	128
  7075     12A9  3E9F               	addlw	159
  7076     12AA  1803               	skipnc
  7077     12AB  2AAD               	goto	u6461
  7078     12AC  2AAE               	goto	u6460
  7079     12AD                     u6461:
  7080     12AD  2AAF               	goto	l3908
  7081     12AE                     u6460:
  7082     12AE  2A34               	goto	l3872
  7083     12AF                     l3908:
  7084     12AF  3001               	movlw	1
  7085     12B0                     u6475:
  7086     12B0  1003               	clrc
  7087     12B1  0CA4               	rrf	__div_to_l_@quot+3,f
  7088     12B2  0CA3               	rrf	__div_to_l_@quot+2,f
  7089     12B3  0CA2               	rrf	__div_to_l_@quot+1,f
  7090     12B4  0CA1               	rrf	__div_to_l_@quot,f
  7091     12B5  3EFF               	addlw	-1
  7092     12B6  1D03               	skipz
  7093     12B7  2AB0               	goto	u6475
  7094     12B8  3001               	movlw	1
  7095     12B9  00A0               	movwf	??__div_to_l_
  7096     12BA  0820               	movf	??__div_to_l_,w
  7097     12BB  07A6               	addwf	__div_to_l_@exp1,f
  7098     12BC  1D03               	btfss	3,2
  7099     12BD  2ABF               	goto	u6481
  7100     12BE  2AC0               	goto	u6480
  7101     12BF                     u6481:
  7102     12BF  2AAF               	goto	l3908
  7103     12C0                     u6480:
  7104     12C0  2AD8               	goto	l3918
  7105     12C1                     l3910:
  7106     12C1  3020               	movlw	32
  7107     12C2  0226               	subwf	__div_to_l_@exp1,w
  7108     12C3  1C03               	skipc
  7109     12C4  2AC6               	goto	u6491
  7110     12C5  2AC7               	goto	u6490
  7111     12C6                     u6491:
  7112     12C6  2AD3               	goto	l590
  7113     12C7                     u6490:
  7114     12C7  2A34               	goto	l3872
  7115     12C8                     l3916:
  7116     12C8  3001               	movlw	1
  7117     12C9  00A0               	movwf	??__div_to_l_
  7118     12CA                     u6505:
  7119     12CA  1003               	clrc
  7120     12CB  0DA1               	rlf	__div_to_l_@quot,f
  7121     12CC  0DA2               	rlf	__div_to_l_@quot+1,f
  7122     12CD  0DA3               	rlf	__div_to_l_@quot+2,f
  7123     12CE  0DA4               	rlf	__div_to_l_@quot+3,f
  7124     12CF  0BA0               	decfsz	??__div_to_l_,f
  7125     12D0  2ACA               	goto	u6505
  7126     12D1  3001               	movlw	1
  7127     12D2  02A6               	subwf	__div_to_l_@exp1,f
  7128     12D3                     l590:
  7129     12D3  0826               	movf	__div_to_l_@exp1,w
  7130     12D4  1D03               	btfss	3,2
  7131     12D5  2AD7               	goto	u6511
  7132     12D6  2AD8               	goto	u6510
  7133     12D7                     u6511:
  7134     12D7  2AC8               	goto	l3916
  7135     12D8                     u6510:
  7136     12D8                     l3918:
  7137     12D8  0824               	movf	__div_to_l_@quot+3,w
  7138     12D9  00F5               	movwf	?__div_to_l_+3
  7139     12DA  0823               	movf	__div_to_l_@quot+2,w
  7140     12DB  00F4               	movwf	?__div_to_l_+2
  7141     12DC  0822               	movf	__div_to_l_@quot+1,w
  7142     12DD  00F3               	movwf	?__div_to_l_+1
  7143     12DE  0821               	movf	__div_to_l_@quot,w
  7144     12DF  00F2               	movwf	?__div_to_l_
  7145     12E0                     l579:
  7146     12E0  0008               	return
  7147     12E1                     __end_of__div_to_l_:
  7148                           
  7149                           	psect	text13
  7150     12E1                     __ptext13:	
  7151 ;; *************** function ___xxtofl *****************
  7152 ;; Defined at:
  7153 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  7154 ;; Parameters:    Size  Location     Type
  7155 ;;  sign            1    wreg     unsigned char 
  7156 ;;  val             4    0[BANK0 ] long 
  7157 ;; Auto vars:     Size  Location     Type
  7158 ;;  sign            1    8[BANK0 ] unsigned char 
  7159 ;;  arg             4   10[BANK0 ] unsigned long 
  7160 ;;  exp             1    9[BANK0 ] unsigned char 
  7161 ;; Return value:  Size  Location     Type
  7162 ;;                  4    0[BANK0 ] unsigned char 
  7163 ;; Registers used:
  7164 ;;		wreg, status,2, status,0
  7165 ;; Tracked objects:
  7166 ;;		On entry : 0/0
  7167 ;;		On exit  : 0/0
  7168 ;;		Unchanged: 0/0
  7169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7170 ;;      Params:         0       4       0       0       0
  7171 ;;      Locals:         0       6       0       0       0
  7172 ;;      Temps:          0       4       0       0       0
  7173 ;;      Totals:         0      14       0       0       0
  7174 ;;Total ram usage:       14 bytes
  7175 ;; Hardware stack levels used: 1
  7176 ;; Hardware stack levels required when called: 1
  7177 ;; This function calls:
  7178 ;;		Nothing
  7179 ;; This function is called by:
  7180 ;;		_main
  7181 ;;		_sprintf
  7182 ;; This function uses a non-reentrant model
  7183 ;;
  7184                           
  7185     12E1                     ___xxtofl:	
  7186                           ;psect for function ___xxtofl
  7187                           
  7188                           
  7189                           ;incstack = 0
  7190                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7191                           ;___xxtofl@sign stored from wreg
  7192     12E1  1283               	bcf	3,5	;RP0=0, select bank0
  7193     12E2  1303               	bcf	3,6	;RP1=0, select bank0
  7194     12E3  00A8               	movwf	___xxtofl@sign
  7195     12E4                     l3942:
  7196     12E4  0828               	movf	___xxtofl@sign,w
  7197     12E5  1903               	btfsc	3,2
  7198     12E6  2AE8               	goto	u6581
  7199     12E7  2AE9               	goto	u6580
  7200     12E8                     u6581:
  7201     12E8  2AFD               	goto	l3948
  7202     12E9                     u6580:
  7203     12E9                     l3944:
  7204     12E9  1FA3               	btfss	___xxtofl@val+3,7
  7205     12EA  2AEC               	goto	u6591
  7206     12EB  2AED               	goto	u6590
  7207     12EC                     u6591:
  7208     12EC  2AFD               	goto	l3948
  7209     12ED                     u6590:
  7210     12ED                     l3946:
  7211     12ED  0920               	comf	___xxtofl@val,w
  7212     12EE  00AA               	movwf	___xxtofl@arg
  7213     12EF  0921               	comf	___xxtofl@val+1,w
  7214     12F0  00AB               	movwf	___xxtofl@arg+1
  7215     12F1  0922               	comf	___xxtofl@val+2,w
  7216     12F2  00AC               	movwf	___xxtofl@arg+2
  7217     12F3  0923               	comf	___xxtofl@val+3,w
  7218     12F4  00AD               	movwf	___xxtofl@arg+3
  7219     12F5  0AAA               	incf	___xxtofl@arg,f
  7220     12F6  1903               	skipnz
  7221     12F7  0AAB               	incf	___xxtofl@arg+1,f
  7222     12F8  1903               	skipnz
  7223     12F9  0AAC               	incf	___xxtofl@arg+2,f
  7224     12FA  1903               	skipnz
  7225     12FB  0AAD               	incf	___xxtofl@arg+3,f
  7226     12FC  2B05               	goto	l876
  7227     12FD                     l3948:
  7228     12FD  0823               	movf	___xxtofl@val+3,w
  7229     12FE  00AD               	movwf	___xxtofl@arg+3
  7230     12FF  0822               	movf	___xxtofl@val+2,w
  7231     1300  00AC               	movwf	___xxtofl@arg+2
  7232     1301  0821               	movf	___xxtofl@val+1,w
  7233     1302  00AB               	movwf	___xxtofl@arg+1
  7234     1303  0820               	movf	___xxtofl@val,w
  7235     1304  00AA               	movwf	___xxtofl@arg
  7236     1305                     l876:
  7237     1305  0823               	movf	___xxtofl@val+3,w
  7238     1306  0422               	iorwf	___xxtofl@val+2,w
  7239     1307  0421               	iorwf	___xxtofl@val+1,w
  7240     1308  0420               	iorwf	___xxtofl@val,w
  7241     1309  1D03               	skipz
  7242     130A  2B0C               	goto	u6601
  7243     130B  2B0D               	goto	u6600
  7244     130C                     u6601:
  7245     130C  2B16               	goto	l3954
  7246     130D                     u6600:
  7247     130D                     l3950:
  7248     130D  3000               	movlw	0
  7249     130E  00A3               	movwf	?___xxtofl+3
  7250     130F  3000               	movlw	0
  7251     1310  00A2               	movwf	?___xxtofl+2
  7252     1311  3000               	movlw	0
  7253     1312  00A1               	movwf	?___xxtofl+1
  7254     1313  3000               	movlw	0
  7255     1314  00A0               	movwf	?___xxtofl
  7256     1315  2B9A               	goto	l878
  7257     1316                     l3954:
  7258     1316  3096               	movlw	150
  7259     1317  00A9               	movwf	___xxtofl@exp
  7260     1318  2B26               	goto	l3958
  7261     1319                     l3956:
  7262     1319  3001               	movlw	1
  7263     131A  00A4               	movwf	??___xxtofl
  7264     131B  0824               	movf	??___xxtofl,w
  7265     131C  07A9               	addwf	___xxtofl@exp,f
  7266     131D  3001               	movlw	1
  7267     131E                     u6615:
  7268     131E  1003               	clrc
  7269     131F  0CAD               	rrf	___xxtofl@arg+3,f
  7270     1320  0CAC               	rrf	___xxtofl@arg+2,f
  7271     1321  0CAB               	rrf	___xxtofl@arg+1,f
  7272     1322  0CAA               	rrf	___xxtofl@arg,f
  7273     1323  3EFF               	addlw	-1
  7274     1324  1D03               	skipz
  7275     1325  2B1E               	goto	u6615
  7276     1326                     l3958:
  7277     1326  30FE               	movlw	254
  7278     1327  052D               	andwf	___xxtofl@arg+3,w
  7279     1328  1D03               	btfss	3,2
  7280     1329  2B2B               	goto	u6621
  7281     132A  2B2C               	goto	u6620
  7282     132B                     u6621:
  7283     132B  2B19               	goto	l3956
  7284     132C                     u6620:
  7285     132C  2B48               	goto	l882
  7286     132D                     l3960:
  7287     132D  3001               	movlw	1
  7288     132E  00A4               	movwf	??___xxtofl
  7289     132F  0824               	movf	??___xxtofl,w
  7290     1330  07A9               	addwf	___xxtofl@exp,f
  7291     1331                     l3962:
  7292     1331  3001               	movlw	1
  7293     1332  07AA               	addwf	___xxtofl@arg,f
  7294     1333  3000               	movlw	0
  7295     1334  1803               	skipnc
  7296     1335  3001               	movlw	1
  7297     1336  07AB               	addwf	___xxtofl@arg+1,f
  7298     1337  3000               	movlw	0
  7299     1338  1803               	skipnc
  7300     1339  3001               	movlw	1
  7301     133A  07AC               	addwf	___xxtofl@arg+2,f
  7302     133B  3000               	movlw	0
  7303     133C  1803               	skipnc
  7304     133D  3001               	movlw	1
  7305     133E  07AD               	addwf	___xxtofl@arg+3,f
  7306     133F                     l3964:
  7307     133F  3001               	movlw	1
  7308     1340                     u6635:
  7309     1340  1003               	clrc
  7310     1341  0CAD               	rrf	___xxtofl@arg+3,f
  7311     1342  0CAC               	rrf	___xxtofl@arg+2,f
  7312     1343  0CAB               	rrf	___xxtofl@arg+1,f
  7313     1344  0CAA               	rrf	___xxtofl@arg,f
  7314     1345  3EFF               	addlw	-1
  7315     1346  1D03               	skipz
  7316     1347  2B40               	goto	u6635
  7317     1348                     l882:
  7318     1348  30FF               	movlw	255
  7319     1349  052D               	andwf	___xxtofl@arg+3,w
  7320     134A  1D03               	btfss	3,2
  7321     134B  2B4D               	goto	u6641
  7322     134C  2B4E               	goto	u6640
  7323     134D                     u6641:
  7324     134D  2B2D               	goto	l3960
  7325     134E                     u6640:
  7326     134E  2B5A               	goto	l3968
  7327     134F                     l3966:
  7328     134F  3001               	movlw	1
  7329     1350  02A9               	subwf	___xxtofl@exp,f
  7330     1351  3001               	movlw	1
  7331     1352  00A4               	movwf	??___xxtofl
  7332     1353                     u6655:
  7333     1353  1003               	clrc
  7334     1354  0DAA               	rlf	___xxtofl@arg,f
  7335     1355  0DAB               	rlf	___xxtofl@arg+1,f
  7336     1356  0DAC               	rlf	___xxtofl@arg+2,f
  7337     1357  0DAD               	rlf	___xxtofl@arg+3,f
  7338     1358  0BA4               	decfsz	??___xxtofl,f
  7339     1359  2B53               	goto	u6655
  7340     135A                     l3968:
  7341     135A  1BAC               	btfsc	___xxtofl@arg+2,7
  7342     135B  2B5D               	goto	u6661
  7343     135C  2B5E               	goto	u6660
  7344     135D                     u6661:
  7345     135D  2B64               	goto	l889
  7346     135E                     u6660:
  7347     135E                     l3970:
  7348     135E  3002               	movlw	2
  7349     135F  0229               	subwf	___xxtofl@exp,w
  7350     1360  1803               	skipnc
  7351     1361  2B63               	goto	u6671
  7352     1362  2B64               	goto	u6670
  7353     1363                     u6671:
  7354     1363  2B4F               	goto	l3966
  7355     1364                     u6670:
  7356     1364                     l889:
  7357     1364  1829               	btfsc	___xxtofl@exp,0
  7358     1365  2B67               	goto	u6681
  7359     1366  2B68               	goto	u6680
  7360     1367                     u6681:
  7361     1367  2B70               	goto	l890
  7362     1368                     u6680:
  7363     1368                     l3972:
  7364     1368  30FF               	movlw	255
  7365     1369  05AA               	andwf	___xxtofl@arg,f
  7366     136A  30FF               	movlw	255
  7367     136B  05AB               	andwf	___xxtofl@arg+1,f
  7368     136C  307F               	movlw	127
  7369     136D  05AC               	andwf	___xxtofl@arg+2,f
  7370     136E  30FF               	movlw	255
  7371     136F  05AD               	andwf	___xxtofl@arg+3,f
  7372     1370                     l890:
  7373     1370  1003               	clrc
  7374     1371  0CA9               	rrf	___xxtofl@exp,f
  7375     1372                     l3974:
  7376     1372  0829               	movf	___xxtofl@exp,w
  7377     1373  00A4               	movwf	??___xxtofl
  7378     1374  01A5               	clrf	??___xxtofl+1
  7379     1375  01A6               	clrf	??___xxtofl+2
  7380     1376  01A7               	clrf	??___xxtofl+3
  7381     1377  3018               	movlw	24
  7382     1378                     u6695:
  7383     1378  1003               	clrc
  7384     1379  0DA4               	rlf	??___xxtofl,f
  7385     137A  0DA5               	rlf	??___xxtofl+1,f
  7386     137B  0DA6               	rlf	??___xxtofl+2,f
  7387     137C  0DA7               	rlf	??___xxtofl+3,f
  7388     137D                     u6690:
  7389     137D  3EFF               	addlw	-1
  7390     137E  1D03               	skipz
  7391     137F  2B78               	goto	u6695
  7392     1380  0824               	movf	??___xxtofl,w
  7393     1381  04AA               	iorwf	___xxtofl@arg,f
  7394     1382  0825               	movf	??___xxtofl+1,w
  7395     1383  04AB               	iorwf	___xxtofl@arg+1,f
  7396     1384  0826               	movf	??___xxtofl+2,w
  7397     1385  04AC               	iorwf	___xxtofl@arg+2,f
  7398     1386  0827               	movf	??___xxtofl+3,w
  7399     1387  04AD               	iorwf	___xxtofl@arg+3,f
  7400     1388                     l3976:
  7401     1388  0828               	movf	___xxtofl@sign,w
  7402     1389  1903               	btfsc	3,2
  7403     138A  2B8C               	goto	u6701
  7404     138B  2B8D               	goto	u6700
  7405     138C                     u6701:
  7406     138C  2B92               	goto	l3982
  7407     138D                     u6700:
  7408     138D                     l3978:
  7409     138D  1FA3               	btfss	___xxtofl@val+3,7
  7410     138E  2B90               	goto	u6711
  7411     138F  2B91               	goto	u6710
  7412     1390                     u6711:
  7413     1390  2B92               	goto	l3982
  7414     1391                     u6710:
  7415     1391                     l3980:
  7416     1391  17AD               	bsf	___xxtofl@arg+3,7
  7417     1392                     l3982:
  7418     1392  082D               	movf	___xxtofl@arg+3,w
  7419     1393  00A3               	movwf	?___xxtofl+3
  7420     1394  082C               	movf	___xxtofl@arg+2,w
  7421     1395  00A2               	movwf	?___xxtofl+2
  7422     1396  082B               	movf	___xxtofl@arg+1,w
  7423     1397  00A1               	movwf	?___xxtofl+1
  7424     1398  082A               	movf	___xxtofl@arg,w
  7425     1399  00A0               	movwf	?___xxtofl
  7426     139A                     l878:
  7427     139A  0008               	return
  7428     139B                     __end_of___xxtofl:
  7429                           
  7430                           	psect	text14
  7431     08BB                     __ptext14:	
  7432 ;; *************** function ___wmul *****************
  7433 ;; Defined at:
  7434 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  7435 ;; Parameters:    Size  Location     Type
  7436 ;;  multiplier      2    2[COMMON] unsigned int 
  7437 ;;  multiplicand    2    4[COMMON] unsigned int 
  7438 ;; Auto vars:     Size  Location     Type
  7439 ;;  product         2    6[COMMON] unsigned int 
  7440 ;; Return value:  Size  Location     Type
  7441 ;;                  2    2[COMMON] unsigned int 
  7442 ;; Registers used:
  7443 ;;		wreg, status,2, status,0
  7444 ;; Tracked objects:
  7445 ;;		On entry : 0/0
  7446 ;;		On exit  : 0/0
  7447 ;;		Unchanged: 0/0
  7448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7449 ;;      Params:         4       0       0       0       0
  7450 ;;      Locals:         2       0       0       0       0
  7451 ;;      Temps:          0       0       0       0       0
  7452 ;;      Totals:         6       0       0       0       0
  7453 ;;Total ram usage:        6 bytes
  7454 ;; Hardware stack levels used: 1
  7455 ;; Hardware stack levels required when called: 1
  7456 ;; This function calls:
  7457 ;;		Nothing
  7458 ;; This function is called by:
  7459 ;;		_sprintf
  7460 ;; This function uses a non-reentrant model
  7461 ;;
  7462                           
  7463     08BB                     ___wmul:	
  7464                           ;psect for function ___wmul
  7465                           
  7466     08BB                     l3014:	
  7467                           ;incstack = 0
  7468                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7469                           
  7470     08BB  01F6               	clrf	___wmul@product
  7471     08BC  01F7               	clrf	___wmul@product+1
  7472     08BD                     l3016:
  7473     08BD  1C72               	btfss	___wmul@multiplier,0
  7474     08BE  28C0               	goto	u4661
  7475     08BF  28C1               	goto	u4660
  7476     08C0                     u4661:
  7477     08C0  28C7               	goto	l409
  7478     08C1                     u4660:
  7479     08C1                     l3018:
  7480     08C1  0874               	movf	___wmul@multiplicand,w
  7481     08C2  07F6               	addwf	___wmul@product,f
  7482     08C3  1803               	skipnc
  7483     08C4  0AF7               	incf	___wmul@product+1,f
  7484     08C5  0875               	movf	___wmul@multiplicand+1,w
  7485     08C6  07F7               	addwf	___wmul@product+1,f
  7486     08C7                     l409:
  7487     08C7  3001               	movlw	1
  7488     08C8                     u4675:
  7489     08C8  1003               	clrc
  7490     08C9  0DF4               	rlf	___wmul@multiplicand,f
  7491     08CA  0DF5               	rlf	___wmul@multiplicand+1,f
  7492     08CB  3EFF               	addlw	-1
  7493     08CC  1D03               	skipz
  7494     08CD  28C8               	goto	u4675
  7495     08CE                     l3020:
  7496     08CE  3001               	movlw	1
  7497     08CF                     u4685:
  7498     08CF  1003               	clrc
  7499     08D0  0CF3               	rrf	___wmul@multiplier+1,f
  7500     08D1  0CF2               	rrf	___wmul@multiplier,f
  7501     08D2  3EFF               	addlw	-1
  7502     08D3  1D03               	skipz
  7503     08D4  28CF               	goto	u4685
  7504     08D5                     l3022:
  7505     08D5  0872               	movf	___wmul@multiplier,w
  7506     08D6  0473               	iorwf	___wmul@multiplier+1,w
  7507     08D7  1D03               	btfss	3,2
  7508     08D8  28DA               	goto	u4691
  7509     08D9  28DB               	goto	u4690
  7510     08DA                     u4691:
  7511     08DA  28BD               	goto	l3016
  7512     08DB                     u4690:
  7513     08DB                     l3024:
  7514     08DB  0877               	movf	___wmul@product+1,w
  7515     08DC  00F3               	movwf	?___wmul+1
  7516     08DD  0876               	movf	___wmul@product,w
  7517     08DE  00F2               	movwf	?___wmul
  7518     08DF                     l411:
  7519     08DF  0008               	return
  7520     08E0                     __end_of___wmul:
  7521                           
  7522                           	psect	text15
  7523     1EE9                     __ptext15:	
  7524 ;; *************** function ___llmod *****************
  7525 ;; Defined at:
  7526 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  7527 ;; Parameters:    Size  Location     Type
  7528 ;;  divisor         4    2[COMMON] unsigned long 
  7529 ;;  dividend        4    6[COMMON] unsigned long 
  7530 ;; Auto vars:     Size  Location     Type
  7531 ;;  counter         1    1[BANK0 ] unsigned char 
  7532 ;; Return value:  Size  Location     Type
  7533 ;;                  4    2[COMMON] unsigned long 
  7534 ;; Registers used:
  7535 ;;		wreg, status,2, status,0
  7536 ;; Tracked objects:
  7537 ;;		On entry : 0/0
  7538 ;;		On exit  : 0/0
  7539 ;;		Unchanged: 0/0
  7540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7541 ;;      Params:         8       0       0       0       0
  7542 ;;      Locals:         0       1       0       0       0
  7543 ;;      Temps:          0       1       0       0       0
  7544 ;;      Totals:         8       2       0       0       0
  7545 ;;Total ram usage:       10 bytes
  7546 ;; Hardware stack levels used: 1
  7547 ;; Hardware stack levels required when called: 1
  7548 ;; This function calls:
  7549 ;;		Nothing
  7550 ;; This function is called by:
  7551 ;;		_sprintf
  7552 ;; This function uses a non-reentrant model
  7553 ;;
  7554                           
  7555     1EE9                     ___llmod:	
  7556                           ;psect for function ___llmod
  7557                           
  7558     1EE9                     l3922:	
  7559                           ;incstack = 0
  7560                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7561                           
  7562     1EE9  0875               	movf	___llmod@divisor+3,w
  7563     1EEA  0474               	iorwf	___llmod@divisor+2,w
  7564     1EEB  0473               	iorwf	___llmod@divisor+1,w
  7565     1EEC  0472               	iorwf	___llmod@divisor,w
  7566     1EED  1903               	skipnz
  7567     1EEE  2EF0               	goto	u6521
  7568     1EEF  2EF1               	goto	u6520
  7569     1EF0                     u6521:
  7570     1EF0  2F36               	goto	l3938
  7571     1EF1                     u6520:
  7572     1EF1                     l3924:
  7573     1EF1  1283               	bcf	3,5	;RP0=0, select bank0
  7574     1EF2  1303               	bcf	3,6	;RP1=0, select bank0
  7575     1EF3  01A1               	clrf	___llmod@counter
  7576     1EF4  0AA1               	incf	___llmod@counter,f
  7577     1EF5  2F03               	goto	l3928
  7578     1EF6                     l3926:
  7579     1EF6  3001               	movlw	1
  7580     1EF7  00A0               	movwf	??___llmod
  7581     1EF8                     u6535:
  7582     1EF8  1003               	clrc
  7583     1EF9  0DF2               	rlf	___llmod@divisor,f
  7584     1EFA  0DF3               	rlf	___llmod@divisor+1,f
  7585     1EFB  0DF4               	rlf	___llmod@divisor+2,f
  7586     1EFC  0DF5               	rlf	___llmod@divisor+3,f
  7587     1EFD  0BA0               	decfsz	??___llmod,f
  7588     1EFE  2EF8               	goto	u6535
  7589     1EFF  3001               	movlw	1
  7590     1F00  00A0               	movwf	??___llmod
  7591     1F01  0820               	movf	??___llmod,w
  7592     1F02  07A1               	addwf	___llmod@counter,f
  7593     1F03                     l3928:
  7594     1F03  1FF5               	btfss	___llmod@divisor+3,7
  7595     1F04  2F06               	goto	u6541
  7596     1F05  2F07               	goto	u6540
  7597     1F06                     u6541:
  7598     1F06  2EF6               	goto	l3926
  7599     1F07                     u6540:
  7600     1F07                     l3930:
  7601     1F07  0875               	movf	___llmod@divisor+3,w
  7602     1F08  0279               	subwf	___llmod@dividend+3,w
  7603     1F09  1D03               	skipz
  7604     1F0A  2F15               	goto	u6555
  7605     1F0B  0874               	movf	___llmod@divisor+2,w
  7606     1F0C  0278               	subwf	___llmod@dividend+2,w
  7607     1F0D  1D03               	skipz
  7608     1F0E  2F15               	goto	u6555
  7609     1F0F  0873               	movf	___llmod@divisor+1,w
  7610     1F10  0277               	subwf	___llmod@dividend+1,w
  7611     1F11  1D03               	skipz
  7612     1F12  2F15               	goto	u6555
  7613     1F13  0872               	movf	___llmod@divisor,w
  7614     1F14  0276               	subwf	___llmod@dividend,w
  7615     1F15                     u6555:
  7616     1F15  1C03               	skipc
  7617     1F16  2F18               	goto	u6551
  7618     1F17  2F19               	goto	u6550
  7619     1F18                     u6551:
  7620     1F18  2F27               	goto	l3934
  7621     1F19                     u6550:
  7622     1F19                     l3932:
  7623     1F19  0872               	movf	___llmod@divisor,w
  7624     1F1A  02F6               	subwf	___llmod@dividend,f
  7625     1F1B  0873               	movf	___llmod@divisor+1,w
  7626     1F1C  1C03               	skipc
  7627     1F1D  0F73               	incfsz	___llmod@divisor+1,w
  7628     1F1E  02F7               	subwf	___llmod@dividend+1,f
  7629     1F1F  0874               	movf	___llmod@divisor+2,w
  7630     1F20  1C03               	skipc
  7631     1F21  0F74               	incfsz	___llmod@divisor+2,w
  7632     1F22  02F8               	subwf	___llmod@dividend+2,f
  7633     1F23  0875               	movf	___llmod@divisor+3,w
  7634     1F24  1C03               	skipc
  7635     1F25  0F75               	incfsz	___llmod@divisor+3,w
  7636     1F26  02F9               	subwf	___llmod@dividend+3,f
  7637     1F27                     l3934:
  7638     1F27  3001               	movlw	1
  7639     1F28                     u6565:
  7640     1F28  1003               	clrc
  7641     1F29  0CF5               	rrf	___llmod@divisor+3,f
  7642     1F2A  0CF4               	rrf	___llmod@divisor+2,f
  7643     1F2B  0CF3               	rrf	___llmod@divisor+1,f
  7644     1F2C  0CF2               	rrf	___llmod@divisor,f
  7645     1F2D  3EFF               	addlw	-1
  7646     1F2E  1D03               	skipz
  7647     1F2F  2F28               	goto	u6565
  7648     1F30                     l3936:
  7649     1F30  3001               	movlw	1
  7650     1F31  02A1               	subwf	___llmod@counter,f
  7651     1F32  1D03               	btfss	3,2
  7652     1F33  2F35               	goto	u6571
  7653     1F34  2F36               	goto	u6570
  7654     1F35                     u6571:
  7655     1F35  2F07               	goto	l3930
  7656     1F36                     u6570:
  7657     1F36                     l3938:
  7658     1F36  0879               	movf	___llmod@dividend+3,w
  7659     1F37  00F5               	movwf	?___llmod+3
  7660     1F38  0878               	movf	___llmod@dividend+2,w
  7661     1F39  00F4               	movwf	?___llmod+2
  7662     1F3A  0877               	movf	___llmod@dividend+1,w
  7663     1F3B  00F3               	movwf	?___llmod+1
  7664     1F3C  0876               	movf	___llmod@dividend,w
  7665     1F3D  00F2               	movwf	?___llmod
  7666     1F3E                     l665:
  7667     1F3E  0008               	return
  7668     1F3F                     __end_of___llmod:
  7669                           
  7670                           	psect	text16
  7671     08E0                     __ptext16:	
  7672 ;; *************** function ___fltol *****************
  7673 ;; Defined at:
  7674 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  7675 ;; Parameters:    Size  Location     Type
  7676 ;;  f1              4   53[BANK0 ] unsigned long 
  7677 ;; Auto vars:     Size  Location     Type
  7678 ;;  exp1            1   62[BANK0 ] unsigned char 
  7679 ;;  sign1           1   61[BANK0 ] unsigned char 
  7680 ;; Return value:  Size  Location     Type
  7681 ;;                  4   53[BANK0 ] long 
  7682 ;; Registers used:
  7683 ;;		wreg, status,2, status,0
  7684 ;; Tracked objects:
  7685 ;;		On entry : 0/0
  7686 ;;		On exit  : 0/0
  7687 ;;		Unchanged: 0/0
  7688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7689 ;;      Params:         0       4       0       0       0
  7690 ;;      Locals:         0       2       0       0       0
  7691 ;;      Temps:          0       4       0       0       0
  7692 ;;      Totals:         0      10       0       0       0
  7693 ;;Total ram usage:       10 bytes
  7694 ;; Hardware stack levels used: 1
  7695 ;; Hardware stack levels required when called: 1
  7696 ;; This function calls:
  7697 ;;		Nothing
  7698 ;; This function is called by:
  7699 ;;		_sprintf
  7700 ;; This function uses a non-reentrant model
  7701 ;;
  7702                           
  7703     08E0                     ___fltol:	
  7704                           ;psect for function ___fltol
  7705                           
  7706     08E0                     l3068:	
  7707                           ;incstack = 0
  7708                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7709                           
  7710     08E0  1003               	clrc
  7711     08E1  1283               	bcf	3,5	;RP0=0, select bank0
  7712     08E2  1303               	bcf	3,6	;RP1=0, select bank0
  7713     08E3  0D57               	rlf	___fltol@f1+2,w
  7714     08E4  0D58               	rlf	___fltol@f1+3,w
  7715     08E5  00DE               	movwf	___fltol@exp1
  7716     08E6  085E               	movf	___fltol@exp1,w
  7717     08E7  1D03               	btfss	3,2
  7718     08E8  28EA               	goto	u4811
  7719     08E9  28EB               	goto	u4810
  7720     08EA                     u4811:
  7721     08EA  28F4               	goto	l3074
  7722     08EB                     u4810:
  7723     08EB                     l3070:
  7724     08EB  3000               	movlw	0
  7725     08EC  00D8               	movwf	?___fltol+3
  7726     08ED  3000               	movlw	0
  7727     08EE  00D7               	movwf	?___fltol+2
  7728     08EF  3000               	movlw	0
  7729     08F0  00D6               	movwf	?___fltol+1
  7730     08F1  3000               	movlw	0
  7731     08F2  00D5               	movwf	?___fltol
  7732     08F3  2957               	goto	l612
  7733     08F4                     l3074:
  7734     08F4  0855               	movf	___fltol@f1,w
  7735     08F5  00D9               	movwf	??___fltol
  7736     08F6  0856               	movf	___fltol@f1+1,w
  7737     08F7  00DA               	movwf	??___fltol+1
  7738     08F8  0857               	movf	___fltol@f1+2,w
  7739     08F9  00DB               	movwf	??___fltol+2
  7740     08FA  0858               	movf	___fltol@f1+3,w
  7741     08FB  00DC               	movwf	??___fltol+3
  7742     08FC  301F               	movlw	31
  7743     08FD                     u4825:
  7744     08FD  1003               	clrc
  7745     08FE  0CDC               	rrf	??___fltol+3,f
  7746     08FF  0CDB               	rrf	??___fltol+2,f
  7747     0900  0CDA               	rrf	??___fltol+1,f
  7748     0901  0CD9               	rrf	??___fltol,f
  7749     0902                     u4820:
  7750     0902  3EFF               	addlw	-1
  7751     0903  1D03               	skipz
  7752     0904  28FD               	goto	u4825
  7753     0905  0859               	movf	??___fltol,w
  7754     0906  00DD               	movwf	___fltol@sign1
  7755     0907                     l3076:
  7756     0907  17D7               	bsf	___fltol@f1+2,7
  7757     0908                     l3078:
  7758     0908  30FF               	movlw	255
  7759     0909  05D5               	andwf	___fltol@f1,f
  7760     090A  30FF               	movlw	255
  7761     090B  05D6               	andwf	___fltol@f1+1,f
  7762     090C  30FF               	movlw	255
  7763     090D  05D7               	andwf	___fltol@f1+2,f
  7764     090E  3000               	movlw	0
  7765     090F  05D8               	andwf	___fltol@f1+3,f
  7766     0910                     l3080:
  7767     0910  3096               	movlw	150
  7768     0911  02DE               	subwf	___fltol@exp1,f
  7769     0912                     l3082:
  7770     0912  1FDE               	btfss	___fltol@exp1,7
  7771     0913  2915               	goto	u4831
  7772     0914  2916               	goto	u4830
  7773     0915                     u4831:
  7774     0915  2930               	goto	l3092
  7775     0916                     u4830:
  7776     0916                     l3084:
  7777     0916  085E               	movf	___fltol@exp1,w
  7778     0917  3A80               	xorlw	128
  7779     0918  3E97               	addlw	151
  7780     0919  1803               	skipnc
  7781     091A  291C               	goto	u4841
  7782     091B  291D               	goto	u4840
  7783     091C                     u4841:
  7784     091C  291E               	goto	l3090
  7785     091D                     u4840:
  7786     091D  28EB               	goto	l3070
  7787     091E                     l3090:
  7788     091E  3001               	movlw	1
  7789     091F                     u4855:
  7790     091F  1003               	clrc
  7791     0920  0CD8               	rrf	___fltol@f1+3,f
  7792     0921  0CD7               	rrf	___fltol@f1+2,f
  7793     0922  0CD6               	rrf	___fltol@f1+1,f
  7794     0923  0CD5               	rrf	___fltol@f1,f
  7795     0924  3EFF               	addlw	-1
  7796     0925  1D03               	skipz
  7797     0926  291F               	goto	u4855
  7798     0927  3001               	movlw	1
  7799     0928  00D9               	movwf	??___fltol
  7800     0929  0859               	movf	??___fltol,w
  7801     092A  07DE               	addwf	___fltol@exp1,f
  7802     092B  1D03               	btfss	3,2
  7803     092C  292E               	goto	u4861
  7804     092D  292F               	goto	u4860
  7805     092E                     u4861:
  7806     092E  291E               	goto	l3090
  7807     092F                     u4860:
  7808     092F  2947               	goto	l3100
  7809     0930                     l3092:
  7810     0930  3020               	movlw	32
  7811     0931  025E               	subwf	___fltol@exp1,w
  7812     0932  1C03               	skipc
  7813     0933  2935               	goto	u4871
  7814     0934  2936               	goto	u4870
  7815     0935                     u4871:
  7816     0935  2942               	goto	l619
  7817     0936                     u4870:
  7818     0936  28EB               	goto	l3070
  7819     0937                     l3098:
  7820     0937  3001               	movlw	1
  7821     0938  00D9               	movwf	??___fltol
  7822     0939                     u4885:
  7823     0939  1003               	clrc
  7824     093A  0DD5               	rlf	___fltol@f1,f
  7825     093B  0DD6               	rlf	___fltol@f1+1,f
  7826     093C  0DD7               	rlf	___fltol@f1+2,f
  7827     093D  0DD8               	rlf	___fltol@f1+3,f
  7828     093E  0BD9               	decfsz	??___fltol,f
  7829     093F  2939               	goto	u4885
  7830     0940  3001               	movlw	1
  7831     0941  02DE               	subwf	___fltol@exp1,f
  7832     0942                     l619:
  7833     0942  085E               	movf	___fltol@exp1,w
  7834     0943  1D03               	btfss	3,2
  7835     0944  2946               	goto	u4891
  7836     0945  2947               	goto	u4890
  7837     0946                     u4891:
  7838     0946  2937               	goto	l3098
  7839     0947                     u4890:
  7840     0947                     l3100:
  7841     0947  085D               	movf	___fltol@sign1,w
  7842     0948  1903               	btfsc	3,2
  7843     0949  294B               	goto	u4901
  7844     094A  294C               	goto	u4900
  7845     094B                     u4901:
  7846     094B  2957               	goto	l622
  7847     094C                     u4900:
  7848     094C                     l3102:
  7849     094C  09D5               	comf	___fltol@f1,f
  7850     094D  09D6               	comf	___fltol@f1+1,f
  7851     094E  09D7               	comf	___fltol@f1+2,f
  7852     094F  09D8               	comf	___fltol@f1+3,f
  7853     0950  0AD5               	incf	___fltol@f1,f
  7854     0951  1903               	skipnz
  7855     0952  0AD6               	incf	___fltol@f1+1,f
  7856     0953  1903               	skipnz
  7857     0954  0AD7               	incf	___fltol@f1+2,f
  7858     0955  1903               	skipnz
  7859     0956  0AD8               	incf	___fltol@f1+3,f
  7860     0957                     l622:
  7861     0957                     l612:
  7862     0957  0008               	return
  7863     0958                     __end_of___fltol:
  7864                           
  7865                           	psect	text17
  7866     1E99                     __ptext17:	
  7867 ;; *************** function ___flsub *****************
  7868 ;; Defined at:
  7869 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  7870 ;; Parameters:    Size  Location     Type
  7871 ;;  a               4    0[BANK1 ] long 
  7872 ;;  b               4    4[BANK1 ] long 
  7873 ;; Auto vars:     Size  Location     Type
  7874 ;;		None
  7875 ;; Return value:  Size  Location     Type
  7876 ;;                  4    0[BANK1 ] long 
  7877 ;; Registers used:
  7878 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7879 ;; Tracked objects:
  7880 ;;		On entry : 0/0
  7881 ;;		On exit  : 0/0
  7882 ;;		Unchanged: 0/0
  7883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7884 ;;      Params:         0       0       8       0       0
  7885 ;;      Locals:         0       0       0       0       0
  7886 ;;      Temps:          0       0       0       0       0
  7887 ;;      Totals:         0       0       8       0       0
  7888 ;;Total ram usage:        8 bytes
  7889 ;; Hardware stack levels used: 1
  7890 ;; Hardware stack levels required when called: 2
  7891 ;; This function calls:
  7892 ;;		___fladd
  7893 ;; This function is called by:
  7894 ;;		_sprintf
  7895 ;; This function uses a non-reentrant model
  7896 ;;
  7897                           
  7898     1E99                     ___flsub:	
  7899                           ;psect for function ___flsub
  7900                           
  7901     1E99                     l3124:	
  7902                           ;incstack = 0
  7903                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7904                           
  7905     1E99  3080               	movlw	128
  7906     1E9A  1683               	bsf	3,5	;RP0=1, select bank1
  7907     1E9B  1303               	bcf	3,6	;RP1=0, select bank1
  7908     1E9C  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  7909     1E9D                     l3126:
  7910     1E9D  0827               	movf	(___flsub@b+3)^(0+128),w
  7911     1E9E  1283               	bcf	3,5	;RP0=0, select bank0
  7912     1E9F  1303               	bcf	3,6	;RP1=0, select bank0
  7913     1EA0  00D9               	movwf	___fladd@b+3
  7914     1EA1  1683               	bsf	3,5	;RP0=1, select bank1
  7915     1EA2  1303               	bcf	3,6	;RP1=0, select bank1
  7916     1EA3  0826               	movf	(___flsub@b+2)^(0+128),w
  7917     1EA4  1283               	bcf	3,5	;RP0=0, select bank0
  7918     1EA5  1303               	bcf	3,6	;RP1=0, select bank0
  7919     1EA6  00D8               	movwf	___fladd@b+2
  7920     1EA7  1683               	bsf	3,5	;RP0=1, select bank1
  7921     1EA8  1303               	bcf	3,6	;RP1=0, select bank1
  7922     1EA9  0825               	movf	(___flsub@b+1)^(0+128),w
  7923     1EAA  1283               	bcf	3,5	;RP0=0, select bank0
  7924     1EAB  1303               	bcf	3,6	;RP1=0, select bank0
  7925     1EAC  00D7               	movwf	___fladd@b+1
  7926     1EAD  1683               	bsf	3,5	;RP0=1, select bank1
  7927     1EAE  1303               	bcf	3,6	;RP1=0, select bank1
  7928     1EAF  0824               	movf	___flsub@b^(0+128),w
  7929     1EB0  1283               	bcf	3,5	;RP0=0, select bank0
  7930     1EB1  1303               	bcf	3,6	;RP1=0, select bank0
  7931     1EB2  00D6               	movwf	___fladd@b
  7932     1EB3  1683               	bsf	3,5	;RP0=1, select bank1
  7933     1EB4  1303               	bcf	3,6	;RP1=0, select bank1
  7934     1EB5  0823               	movf	(___flsub@a+3)^(0+128),w
  7935     1EB6  1283               	bcf	3,5	;RP0=0, select bank0
  7936     1EB7  1303               	bcf	3,6	;RP1=0, select bank0
  7937     1EB8  00DD               	movwf	___fladd@a+3
  7938     1EB9  1683               	bsf	3,5	;RP0=1, select bank1
  7939     1EBA  1303               	bcf	3,6	;RP1=0, select bank1
  7940     1EBB  0822               	movf	(___flsub@a+2)^(0+128),w
  7941     1EBC  1283               	bcf	3,5	;RP0=0, select bank0
  7942     1EBD  1303               	bcf	3,6	;RP1=0, select bank0
  7943     1EBE  00DC               	movwf	___fladd@a+2
  7944     1EBF  1683               	bsf	3,5	;RP0=1, select bank1
  7945     1EC0  1303               	bcf	3,6	;RP1=0, select bank1
  7946     1EC1  0821               	movf	(___flsub@a+1)^(0+128),w
  7947     1EC2  1283               	bcf	3,5	;RP0=0, select bank0
  7948     1EC3  1303               	bcf	3,6	;RP1=0, select bank0
  7949     1EC4  00DB               	movwf	___fladd@a+1
  7950     1EC5  1683               	bsf	3,5	;RP0=1, select bank1
  7951     1EC6  1303               	bcf	3,6	;RP1=0, select bank1
  7952     1EC7  0820               	movf	___flsub@a^(0+128),w
  7953     1EC8  1283               	bcf	3,5	;RP0=0, select bank0
  7954     1EC9  1303               	bcf	3,6	;RP1=0, select bank0
  7955     1ECA  00DA               	movwf	___fladd@a
  7956     1ECB  160A  118A  25A8  160A  158A  	fcall	___fladd
  7957     1ED0  1283               	bcf	3,5	;RP0=0, select bank0
  7958     1ED1  1303               	bcf	3,6	;RP1=0, select bank0
  7959     1ED2  0859               	movf	?___fladd+3,w
  7960     1ED3  1683               	bsf	3,5	;RP0=1, select bank1
  7961     1ED4  1303               	bcf	3,6	;RP1=0, select bank1
  7962     1ED5  00A3               	movwf	(?___flsub+3)^(0+128)
  7963     1ED6  1283               	bcf	3,5	;RP0=0, select bank0
  7964     1ED7  1303               	bcf	3,6	;RP1=0, select bank0
  7965     1ED8  0858               	movf	?___fladd+2,w
  7966     1ED9  1683               	bsf	3,5	;RP0=1, select bank1
  7967     1EDA  1303               	bcf	3,6	;RP1=0, select bank1
  7968     1EDB  00A2               	movwf	(?___flsub+2)^(0+128)
  7969     1EDC  1283               	bcf	3,5	;RP0=0, select bank0
  7970     1EDD  1303               	bcf	3,6	;RP1=0, select bank0
  7971     1EDE  0857               	movf	?___fladd+1,w
  7972     1EDF  1683               	bsf	3,5	;RP0=1, select bank1
  7973     1EE0  1303               	bcf	3,6	;RP1=0, select bank1
  7974     1EE1  00A1               	movwf	(?___flsub+1)^(0+128)
  7975     1EE2  1283               	bcf	3,5	;RP0=0, select bank0
  7976     1EE3  1303               	bcf	3,6	;RP1=0, select bank0
  7977     1EE4  0856               	movf	?___fladd,w
  7978     1EE5  1683               	bsf	3,5	;RP0=1, select bank1
  7979     1EE6  1303               	bcf	3,6	;RP1=0, select bank1
  7980     1EE7  00A0               	movwf	?___flsub^(0+128)
  7981     1EE8                     l782:
  7982     1EE8  0008               	return
  7983     1EE9                     __end_of___flsub:
  7984                           
  7985                           	psect	text18
  7986     15A8                     __ptext18:	
  7987 ;; *************** function ___fladd *****************
  7988 ;; Defined at:
  7989 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  7990 ;; Parameters:    Size  Location     Type
  7991 ;;  b               4   54[BANK0 ] long 
  7992 ;;  a               4   58[BANK0 ] long 
  7993 ;; Auto vars:     Size  Location     Type
  7994 ;;  grs             1   73[BANK0 ] unsigned char 
  7995 ;;  bexp            1   72[BANK0 ] unsigned char 
  7996 ;;  aexp            1   71[BANK0 ] unsigned char 
  7997 ;;  signs           1   70[BANK0 ] unsigned char 
  7998 ;; Return value:  Size  Location     Type
  7999 ;;                  4   54[BANK0 ] unsigned char 
  8000 ;; Registers used:
  8001 ;;		wreg, status,2, status,0, btemp+1
  8002 ;; Tracked objects:
  8003 ;;		On entry : 0/0
  8004 ;;		On exit  : 0/0
  8005 ;;		Unchanged: 0/0
  8006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8007 ;;      Params:         0       8       0       0       0
  8008 ;;      Locals:         0       4       0       0       0
  8009 ;;      Temps:          0       8       0       0       0
  8010 ;;      Totals:         0      20       0       0       0
  8011 ;;Total ram usage:       20 bytes
  8012 ;; Hardware stack levels used: 1
  8013 ;; Hardware stack levels required when called: 1
  8014 ;; This function calls:
  8015 ;;		Nothing
  8016 ;; This function is called by:
  8017 ;;		_sprintf
  8018 ;;		___flsub
  8019 ;; This function uses a non-reentrant model
  8020 ;;
  8021                           
  8022     15A8                     ___fladd:	
  8023                           ;psect for function ___fladd
  8024                           
  8025     15A8                     l2460:	
  8026                           ;incstack = 0
  8027                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8028                           
  8029     15A8  1283               	bcf	3,5	;RP0=0, select bank0
  8030     15A9  1303               	bcf	3,6	;RP1=0, select bank0
  8031     15AA  0859               	movf	___fladd@b+3,w
  8032     15AB  3980               	andlw	128
  8033     15AC  00E6               	movwf	___fladd@signs
  8034     15AD                     l2462:
  8035     15AD  0859               	movf	___fladd@b+3,w
  8036     15AE  00DE               	movwf	??___fladd
  8037     15AF  075E               	addwf	??___fladd,w
  8038     15B0  00E8               	movwf	___fladd@bexp
  8039     15B1                     l2464:
  8040     15B1  1FD8               	btfss	___fladd@b+2,7
  8041     15B2  2DB4               	goto	u3261
  8042     15B3  2DB5               	goto	u3260
  8043     15B4                     u3261:
  8044     15B4  2DB6               	goto	l2468
  8045     15B5                     u3260:
  8046     15B5                     l2466:
  8047     15B5  1468               	bsf	___fladd@bexp,0
  8048     15B6                     l2468:
  8049     15B6  0868               	movf	___fladd@bexp,w
  8050     15B7  1903               	btfsc	3,2
  8051     15B8  2DBA               	goto	u3271
  8052     15B9  2DBB               	goto	u3270
  8053     15BA                     u3271:
  8054     15BA  2DCB               	goto	l2478
  8055     15BB                     u3270:
  8056     15BB                     l2470:
  8057     15BB  0A68               	incf	___fladd@bexp,w
  8058     15BC  1D03               	btfss	3,2
  8059     15BD  2DBF               	goto	u3281
  8060     15BE  2DC0               	goto	u3280
  8061     15BF                     u3281:
  8062     15BF  2DC8               	goto	l2474
  8063     15C0                     u3280:
  8064     15C0                     l2472:
  8065     15C0  3000               	movlw	0
  8066     15C1  00D9               	movwf	___fladd@b+3
  8067     15C2  3000               	movlw	0
  8068     15C3  00D8               	movwf	___fladd@b+2
  8069     15C4  3000               	movlw	0
  8070     15C5  00D7               	movwf	___fladd@b+1
  8071     15C6  3000               	movlw	0
  8072     15C7  00D6               	movwf	___fladd@b
  8073     15C8                     l2474:
  8074     15C8  17D8               	bsf	___fladd@b+2,7
  8075     15C9                     l2476:
  8076     15C9  01D9               	clrf	___fladd@b+3
  8077     15CA  2DD3               	goto	l2480
  8078     15CB                     l2478:
  8079     15CB  3000               	movlw	0
  8080     15CC  00D9               	movwf	___fladd@b+3
  8081     15CD  3000               	movlw	0
  8082     15CE  00D8               	movwf	___fladd@b+2
  8083     15CF  3000               	movlw	0
  8084     15D0  00D7               	movwf	___fladd@b+1
  8085     15D1  3000               	movlw	0
  8086     15D2  00D6               	movwf	___fladd@b
  8087     15D3                     l2480:
  8088     15D3  085D               	movf	___fladd@a+3,w
  8089     15D4  3980               	andlw	128
  8090     15D5  00E7               	movwf	___fladd@aexp
  8091     15D6                     l2482:
  8092     15D6  0867               	movf	___fladd@aexp,w
  8093     15D7  0666               	xorwf	___fladd@signs,w
  8094     15D8  1903               	skipnz
  8095     15D9  2DDB               	goto	u3291
  8096     15DA  2DDC               	goto	u3290
  8097     15DB                     u3291:
  8098     15DB  2DDD               	goto	l2486
  8099     15DC                     u3290:
  8100     15DC                     l2484:
  8101     15DC  1766               	bsf	___fladd@signs,6
  8102     15DD                     l2486:
  8103     15DD  085D               	movf	___fladd@a+3,w
  8104     15DE  00DE               	movwf	??___fladd
  8105     15DF  075E               	addwf	??___fladd,w
  8106     15E0  00E7               	movwf	___fladd@aexp
  8107     15E1                     l2488:
  8108     15E1  1FDC               	btfss	___fladd@a+2,7
  8109     15E2  2DE4               	goto	u3301
  8110     15E3  2DE5               	goto	u3300
  8111     15E4                     u3301:
  8112     15E4  2DE6               	goto	l2492
  8113     15E5                     u3300:
  8114     15E5                     l2490:
  8115     15E5  1467               	bsf	___fladd@aexp,0
  8116     15E6                     l2492:
  8117     15E6  0867               	movf	___fladd@aexp,w
  8118     15E7  1903               	btfsc	3,2
  8119     15E8  2DEA               	goto	u3311
  8120     15E9  2DEB               	goto	u3310
  8121     15EA                     u3311:
  8122     15EA  2DFB               	goto	l2502
  8123     15EB                     u3310:
  8124     15EB                     l2494:
  8125     15EB  0A67               	incf	___fladd@aexp,w
  8126     15EC  1D03               	btfss	3,2
  8127     15ED  2DEF               	goto	u3321
  8128     15EE  2DF0               	goto	u3320
  8129     15EF                     u3321:
  8130     15EF  2DF8               	goto	l2498
  8131     15F0                     u3320:
  8132     15F0                     l2496:
  8133     15F0  3000               	movlw	0
  8134     15F1  00DD               	movwf	___fladd@a+3
  8135     15F2  3000               	movlw	0
  8136     15F3  00DC               	movwf	___fladd@a+2
  8137     15F4  3000               	movlw	0
  8138     15F5  00DB               	movwf	___fladd@a+1
  8139     15F6  3000               	movlw	0
  8140     15F7  00DA               	movwf	___fladd@a
  8141     15F8                     l2498:
  8142     15F8  17DC               	bsf	___fladd@a+2,7
  8143     15F9                     l2500:
  8144     15F9  01DD               	clrf	___fladd@a+3
  8145     15FA  2E03               	goto	l736
  8146     15FB                     l2502:
  8147     15FB  3000               	movlw	0
  8148     15FC  00DD               	movwf	___fladd@a+3
  8149     15FD  3000               	movlw	0
  8150     15FE  00DC               	movwf	___fladd@a+2
  8151     15FF  3000               	movlw	0
  8152     1600  00DB               	movwf	___fladd@a+1
  8153     1601  3000               	movlw	0
  8154     1602  00DA               	movwf	___fladd@a
  8155     1603                     l736:
  8156     1603  0868               	movf	___fladd@bexp,w
  8157     1604  0267               	subwf	___fladd@aexp,w
  8158     1605  1803               	skipnc
  8159     1606  2E08               	goto	u3331
  8160     1607  2E09               	goto	u3330
  8161     1608                     u3331:
  8162     1608  2E2F               	goto	l2538
  8163     1609                     u3330:
  8164     1609                     l2504:
  8165     1609  1F66               	btfss	___fladd@signs,6
  8166     160A  2E0C               	goto	u3341
  8167     160B  2E0D               	goto	u3340
  8168     160C                     u3341:
  8169     160C  2E11               	goto	l2508
  8170     160D                     u3340:
  8171     160D                     l2506:
  8172     160D  3080               	movlw	128
  8173     160E  00DE               	movwf	??___fladd
  8174     160F  085E               	movf	??___fladd,w
  8175     1610  06E6               	xorwf	___fladd@signs,f
  8176     1611                     l2508:
  8177     1611  0868               	movf	___fladd@bexp,w
  8178     1612  00E9               	movwf	___fladd@grs
  8179     1613                     l2510:
  8180     1613  0867               	movf	___fladd@aexp,w
  8181     1614  00E8               	movwf	___fladd@bexp
  8182     1615                     l2512:
  8183     1615  0869               	movf	___fladd@grs,w
  8184     1616  00E7               	movwf	___fladd@aexp
  8185     1617                     l2514:
  8186     1617  0856               	movf	___fladd@b,w
  8187     1618  00E9               	movwf	___fladd@grs
  8188     1619                     l2516:
  8189     1619  085A               	movf	___fladd@a,w
  8190     161A  00D6               	movwf	___fladd@b
  8191     161B                     l2518:
  8192     161B  0869               	movf	___fladd@grs,w
  8193     161C  00DA               	movwf	___fladd@a
  8194     161D                     l2520:
  8195     161D  0857               	movf	___fladd@b+1,w
  8196     161E  00E9               	movwf	___fladd@grs
  8197     161F                     l2522:
  8198     161F  085B               	movf	___fladd@a+1,w
  8199     1620  00D7               	movwf	___fladd@b+1
  8200     1621                     l2524:
  8201     1621  0869               	movf	___fladd@grs,w
  8202     1622  00DB               	movwf	___fladd@a+1
  8203     1623                     l2526:
  8204     1623  0858               	movf	___fladd@b+2,w
  8205     1624  00E9               	movwf	___fladd@grs
  8206     1625                     l2528:
  8207     1625  085C               	movf	___fladd@a+2,w
  8208     1626  00D8               	movwf	___fladd@b+2
  8209     1627                     l2530:
  8210     1627  0869               	movf	___fladd@grs,w
  8211     1628  00DC               	movwf	___fladd@a+2
  8212     1629                     l2532:
  8213     1629  0859               	movf	___fladd@b+3,w
  8214     162A  00E9               	movwf	___fladd@grs
  8215     162B                     l2534:
  8216     162B  085D               	movf	___fladd@a+3,w
  8217     162C  00D9               	movwf	___fladd@b+3
  8218     162D                     l2536:
  8219     162D  0869               	movf	___fladd@grs,w
  8220     162E  00DD               	movwf	___fladd@a+3
  8221     162F                     l2538:
  8222     162F  01E9               	clrf	___fladd@grs
  8223     1630                     l2540:
  8224     1630  0867               	movf	___fladd@aexp,w
  8225     1631  00DE               	movwf	??___fladd
  8226     1632  01DF               	clrf	??___fladd+1
  8227     1633  085F               	movf	??___fladd+1,w
  8228     1634  00E1               	movwf	??___fladd+3
  8229     1635  0868               	movf	___fladd@bexp,w
  8230     1636  025E               	subwf	??___fladd,w
  8231     1637  00E0               	movwf	??___fladd+2
  8232     1638  1C03               	skipc
  8233     1639  03E1               	decf	??___fladd+3,f
  8234     163A  0861               	movf	??___fladd+3,w
  8235     163B  3A80               	xorlw	128
  8236     163C  00FF               	movwf	btemp+1
  8237     163D  3080               	movlw	128
  8238     163E  027F               	subwf	btemp+1,w
  8239     163F  1D03               	skipz
  8240     1640  2E43               	goto	u3355
  8241     1641  301A               	movlw	26
  8242     1642  0260               	subwf	??___fladd+2,w
  8243     1643                     u3355:
  8244     1643  1C03               	skipc
  8245     1644  2E46               	goto	u3351
  8246     1645  2E47               	goto	u3350
  8247     1646                     u3351:
  8248     1646  2E7E               	goto	l2556
  8249     1647                     u3350:
  8250     1647                     l2542:
  8251     1647  1283               	bcf	3,5	;RP0=0, select bank0
  8252     1648  1303               	bcf	3,6	;RP1=0, select bank0
  8253     1649  0859               	movf	___fladd@b+3,w
  8254     164A  0458               	iorwf	___fladd@b+2,w
  8255     164B  0457               	iorwf	___fladd@b+1,w
  8256     164C  0456               	iorwf	___fladd@b,w
  8257     164D  1D03               	skipz
  8258     164E  2E50               	goto	u3361
  8259     164F  2E52               	goto	u3360
  8260     1650                     u3361:
  8261     1650  3001               	movlw	1
  8262     1651  2E53               	goto	u3370
  8263     1652                     u3360:
  8264     1652  3000               	movlw	0
  8265     1653                     u3370:
  8266     1653  00E9               	movwf	___fladd@grs
  8267     1654  3000               	movlw	0
  8268     1655  00D9               	movwf	___fladd@b+3
  8269     1656  3000               	movlw	0
  8270     1657  00D8               	movwf	___fladd@b+2
  8271     1658  3000               	movlw	0
  8272     1659  00D7               	movwf	___fladd@b+1
  8273     165A  3000               	movlw	0
  8274     165B  00D6               	movwf	___fladd@b
  8275     165C  0867               	movf	___fladd@aexp,w
  8276     165D  00E8               	movwf	___fladd@bexp
  8277     165E  2E86               	goto	l740
  8278     165F                     l742:
  8279     165F  1C69               	btfss	___fladd@grs,0
  8280     1660  2E62               	goto	u3381
  8281     1661  2E63               	goto	u3380
  8282     1662                     u3381:
  8283     1662  2E6A               	goto	l2546
  8284     1663                     u3380:
  8285     1663                     l2544:
  8286     1663  0869               	movf	___fladd@grs,w
  8287     1664  00DE               	movwf	??___fladd
  8288     1665  1003               	clrc
  8289     1666  0C5E               	rrf	??___fladd,w
  8290     1667  3801               	iorlw	1
  8291     1668  00E9               	movwf	___fladd@grs
  8292     1669  2E6C               	goto	l2548
  8293     166A                     l2546:
  8294     166A  1003               	clrc
  8295     166B  0CE9               	rrf	___fladd@grs,f
  8296     166C                     l2548:
  8297     166C  1C56               	btfss	___fladd@b,0
  8298     166D  2E6F               	goto	u3391
  8299     166E  2E70               	goto	u3390
  8300     166F                     u3391:
  8301     166F  2E71               	goto	l2552
  8302     1670                     u3390:
  8303     1670                     l2550:
  8304     1670  17E9               	bsf	___fladd@grs,7
  8305     1671                     l2552:
  8306     1671  3001               	movlw	1
  8307     1672  00DE               	movwf	??___fladd
  8308     1673                     u3405:
  8309     1673  0D59               	rlf	___fladd@b+3,w
  8310     1674  0CD9               	rrf	___fladd@b+3,f
  8311     1675  0CD8               	rrf	___fladd@b+2,f
  8312     1676  0CD7               	rrf	___fladd@b+1,f
  8313     1677  0CD6               	rrf	___fladd@b,f
  8314     1678  0BDE               	decfsz	??___fladd& (0+127),f
  8315     1679  2E73               	goto	u3405
  8316     167A                     l2554:
  8317     167A  3001               	movlw	1
  8318     167B  00DE               	movwf	??___fladd
  8319     167C  085E               	movf	??___fladd,w
  8320     167D  07E8               	addwf	___fladd@bexp,f
  8321     167E                     l2556:
  8322     167E  1283               	bcf	3,5	;RP0=0, select bank0
  8323     167F  1303               	bcf	3,6	;RP1=0, select bank0
  8324     1680  0867               	movf	___fladd@aexp,w
  8325     1681  0268               	subwf	___fladd@bexp,w
  8326     1682  1C03               	skipc
  8327     1683  2E85               	goto	u3411
  8328     1684  2E86               	goto	u3410
  8329     1685                     u3411:
  8330     1685  2E5F               	goto	l742
  8331     1686                     u3410:
  8332     1686                     l740:
  8333     1686  1B66               	btfsc	___fladd@signs,6
  8334     1687  2E89               	goto	u3421
  8335     1688  2E8A               	goto	u3420
  8336     1689                     u3421:
  8337     1689  2ED3               	goto	l2582
  8338     168A                     u3420:
  8339     168A                     l2558:
  8340     168A  0868               	movf	___fladd@bexp,w
  8341     168B  1D03               	btfss	3,2
  8342     168C  2E8E               	goto	u3431
  8343     168D  2E8F               	goto	u3430
  8344     168E                     u3431:
  8345     168E  2E98               	goto	l2564
  8346     168F                     u3430:
  8347     168F                     l2560:
  8348     168F  3000               	movlw	0
  8349     1690  00D9               	movwf	?___fladd+3
  8350     1691  3000               	movlw	0
  8351     1692  00D8               	movwf	?___fladd+2
  8352     1693  3000               	movlw	0
  8353     1694  00D7               	movwf	?___fladd+1
  8354     1695  3000               	movlw	0
  8355     1696  00D6               	movwf	?___fladd
  8356     1697  2FFF               	goto	l749
  8357     1698                     l2564:
  8358     1698  085A               	movf	___fladd@a,w
  8359     1699  07D6               	addwf	___fladd@b,f
  8360     169A  085B               	movf	___fladd@a+1,w
  8361     169B  1103               	clrz
  8362     169C  1803               	skipnc
  8363     169D  3E01               	addlw	1
  8364     169E  1903               	skipnz
  8365     169F  2EA1               	goto	u3441
  8366     16A0  07D7               	addwf	___fladd@b+1,f
  8367     16A1                     u3441:
  8368     16A1  085C               	movf	___fladd@a+2,w
  8369     16A2  1103               	clrz
  8370     16A3  1803               	skipnc
  8371     16A4  3E01               	addlw	1
  8372     16A5  1903               	skipnz
  8373     16A6  2EA8               	goto	u3442
  8374     16A7  07D8               	addwf	___fladd@b+2,f
  8375     16A8                     u3442:
  8376     16A8  085D               	movf	___fladd@a+3,w
  8377     16A9  1103               	clrz
  8378     16AA  1803               	skipnc
  8379     16AB  3E01               	addlw	1
  8380     16AC  1903               	skipnz
  8381     16AD  2EAF               	goto	u3443
  8382     16AE  07D9               	addwf	___fladd@b+3,f
  8383     16AF                     u3443:
  8384     16AF                     l2566:
  8385     16AF  1C59               	btfss	___fladd@b+3,0
  8386     16B0  2EB2               	goto	u3451
  8387     16B1  2EB3               	goto	u3450
  8388     16B2                     u3451:
  8389     16B2  2F87               	goto	l2616
  8390     16B3                     u3450:
  8391     16B3                     l2568:
  8392     16B3  1C69               	btfss	___fladd@grs,0
  8393     16B4  2EB6               	goto	u3461
  8394     16B5  2EB7               	goto	u3460
  8395     16B6                     u3461:
  8396     16B6  2EBE               	goto	l2572
  8397     16B7                     u3460:
  8398     16B7                     l2570:
  8399     16B7  0869               	movf	___fladd@grs,w
  8400     16B8  00DE               	movwf	??___fladd
  8401     16B9  1003               	clrc
  8402     16BA  0C5E               	rrf	??___fladd,w
  8403     16BB  3801               	iorlw	1
  8404     16BC  00E9               	movwf	___fladd@grs
  8405     16BD  2EC0               	goto	l2574
  8406     16BE                     l2572:
  8407     16BE  1003               	clrc
  8408     16BF  0CE9               	rrf	___fladd@grs,f
  8409     16C0                     l2574:
  8410     16C0  1C56               	btfss	___fladd@b,0
  8411     16C1  2EC3               	goto	u3471
  8412     16C2  2EC4               	goto	u3470
  8413     16C3                     u3471:
  8414     16C3  2EC5               	goto	l2578
  8415     16C4                     u3470:
  8416     16C4                     l2576:
  8417     16C4  17E9               	bsf	___fladd@grs,7
  8418     16C5                     l2578:
  8419     16C5  3001               	movlw	1
  8420     16C6  00DE               	movwf	??___fladd
  8421     16C7                     u3485:
  8422     16C7  0D59               	rlf	___fladd@b+3,w
  8423     16C8  0CD9               	rrf	___fladd@b+3,f
  8424     16C9  0CD8               	rrf	___fladd@b+2,f
  8425     16CA  0CD7               	rrf	___fladd@b+1,f
  8426     16CB  0CD6               	rrf	___fladd@b,f
  8427     16CC  0BDE               	decfsz	??___fladd& (0+127),f
  8428     16CD  2EC7               	goto	u3485
  8429     16CE                     l2580:
  8430     16CE  3001               	movlw	1
  8431     16CF  00DE               	movwf	??___fladd
  8432     16D0  085E               	movf	??___fladd,w
  8433     16D1  07E8               	addwf	___fladd@bexp,f
  8434     16D2  2F87               	goto	l2616
  8435     16D3                     l2582:
  8436     16D3  0859               	movf	___fladd@b+3,w
  8437     16D4  3A80               	xorlw	128
  8438     16D5  00FF               	movwf	btemp+1
  8439     16D6  085D               	movf	___fladd@a+3,w
  8440     16D7  3A80               	xorlw	128
  8441     16D8  027F               	subwf	btemp+1,w
  8442     16D9  1D03               	skipz
  8443     16DA  2EE5               	goto	u3493
  8444     16DB  085C               	movf	___fladd@a+2,w
  8445     16DC  0258               	subwf	___fladd@b+2,w
  8446     16DD  1D03               	skipz
  8447     16DE  2EE5               	goto	u3493
  8448     16DF  085B               	movf	___fladd@a+1,w
  8449     16E0  0257               	subwf	___fladd@b+1,w
  8450     16E1  1D03               	skipz
  8451     16E2  2EE5               	goto	u3493
  8452     16E3  085A               	movf	___fladd@a,w
  8453     16E4  0256               	subwf	___fladd@b,w
  8454     16E5                     u3493:
  8455     16E5  1803               	skipnc
  8456     16E6  2EE8               	goto	u3491
  8457     16E7  2EE9               	goto	u3490
  8458     16E8                     u3491:
  8459     16E8  2F41               	goto	l2592
  8460     16E9                     u3490:
  8461     16E9                     l2584:
  8462     16E9  30FF               	movlw	255
  8463     16EA  00DE               	movwf	??___fladd
  8464     16EB  30FF               	movlw	255
  8465     16EC  00DF               	movwf	??___fladd+1
  8466     16ED  30FF               	movlw	255
  8467     16EE  00E0               	movwf	??___fladd+2
  8468     16EF  30FF               	movlw	255
  8469     16F0  00E1               	movwf	??___fladd+3
  8470     16F1  085A               	movf	___fladd@a,w
  8471     16F2  00E2               	movwf	??___fladd+4
  8472     16F3  085B               	movf	___fladd@a+1,w
  8473     16F4  00E3               	movwf	??___fladd+5
  8474     16F5  085C               	movf	___fladd@a+2,w
  8475     16F6  00E4               	movwf	??___fladd+6
  8476     16F7  085D               	movf	___fladd@a+3,w
  8477     16F8  00E5               	movwf	??___fladd+7
  8478     16F9  0856               	movf	___fladd@b,w
  8479     16FA  02E2               	subwf	??___fladd+4,f
  8480     16FB  0857               	movf	___fladd@b+1,w
  8481     16FC  1C03               	skipc
  8482     16FD  0F57               	incfsz	___fladd@b+1,w
  8483     16FE  2F00               	goto	u3501
  8484     16FF  2F01               	goto	u3502
  8485     1700                     u3501:
  8486     1700  02E3               	subwf	??___fladd+5,f
  8487     1701                     u3502:
  8488     1701  0858               	movf	___fladd@b+2,w
  8489     1702  1C03               	skipc
  8490     1703  0F58               	incfsz	___fladd@b+2,w
  8491     1704  2F06               	goto	u3503
  8492     1705  2F07               	goto	u3504
  8493     1706                     u3503:
  8494     1706  02E4               	subwf	??___fladd+6,f
  8495     1707                     u3504:
  8496     1707  0859               	movf	___fladd@b+3,w
  8497     1708  1C03               	skipc
  8498     1709  0F59               	incfsz	___fladd@b+3,w
  8499     170A  2F0C               	goto	u3505
  8500     170B  2F0D               	goto	u3506
  8501     170C                     u3505:
  8502     170C  02E5               	subwf	??___fladd+7,f
  8503     170D                     u3506:
  8504     170D  0862               	movf	??___fladd+4,w
  8505     170E  07DE               	addwf	??___fladd,f
  8506     170F  0863               	movf	??___fladd+5,w
  8507     1710  1803               	skipnc
  8508     1711  0F63               	incfsz	??___fladd+5,w
  8509     1712  2F14               	goto	u3510
  8510     1713  2F15               	goto	u3511
  8511     1714                     u3510:
  8512     1714  07DF               	addwf	??___fladd+1,f
  8513     1715                     u3511:
  8514     1715  0864               	movf	??___fladd+6,w
  8515     1716  1803               	skipnc
  8516     1717  0F64               	incfsz	??___fladd+6,w
  8517     1718  2F1A               	goto	u3512
  8518     1719  2F1B               	goto	u3513
  8519     171A                     u3512:
  8520     171A  07E0               	addwf	??___fladd+2,f
  8521     171B                     u3513:
  8522     171B  0865               	movf	??___fladd+7,w
  8523     171C  1803               	skipnc
  8524     171D  0A65               	incf	??___fladd+7,w
  8525     171E  07E1               	addwf	??___fladd+3,f
  8526     171F  0861               	movf	??___fladd+3,w
  8527     1720  00D9               	movwf	___fladd@b+3
  8528     1721  0860               	movf	??___fladd+2,w
  8529     1722  00D8               	movwf	___fladd@b+2
  8530     1723  085F               	movf	??___fladd+1,w
  8531     1724  00D7               	movwf	___fladd@b+1
  8532     1725  085E               	movf	??___fladd,w
  8533     1726  00D6               	movwf	___fladd@b
  8534     1727                     l2586:
  8535     1727  3080               	movlw	128
  8536     1728  00DE               	movwf	??___fladd
  8537     1729  085E               	movf	??___fladd,w
  8538     172A  06E6               	xorwf	___fladd@signs,f
  8539     172B  09E9               	comf	___fladd@grs,f
  8540     172C  0AE9               	incf	___fladd@grs,f
  8541     172D                     l2588:
  8542     172D  0869               	movf	___fladd@grs,w
  8543     172E  1D03               	btfss	3,2
  8544     172F  2F31               	goto	u3521
  8545     1730  2F32               	goto	u3520
  8546     1731                     u3521:
  8547     1731  2F4F               	goto	l757
  8548     1732                     u3520:
  8549     1732                     l2590:
  8550     1732  3001               	movlw	1
  8551     1733  07D6               	addwf	___fladd@b,f
  8552     1734  3000               	movlw	0
  8553     1735  1803               	skipnc
  8554     1736  3001               	movlw	1
  8555     1737  07D7               	addwf	___fladd@b+1,f
  8556     1738  3000               	movlw	0
  8557     1739  1803               	skipnc
  8558     173A  3001               	movlw	1
  8559     173B  07D8               	addwf	___fladd@b+2,f
  8560     173C  3000               	movlw	0
  8561     173D  1803               	skipnc
  8562     173E  3001               	movlw	1
  8563     173F  07D9               	addwf	___fladd@b+3,f
  8564     1740  2F4F               	goto	l757
  8565     1741                     l2592:
  8566     1741  085A               	movf	___fladd@a,w
  8567     1742  02D6               	subwf	___fladd@b,f
  8568     1743  085B               	movf	___fladd@a+1,w
  8569     1744  1C03               	skipc
  8570     1745  0F5B               	incfsz	___fladd@a+1,w
  8571     1746  02D7               	subwf	___fladd@b+1,f
  8572     1747  085C               	movf	___fladd@a+2,w
  8573     1748  1C03               	skipc
  8574     1749  0F5C               	incfsz	___fladd@a+2,w
  8575     174A  02D8               	subwf	___fladd@b+2,f
  8576     174B  085D               	movf	___fladd@a+3,w
  8577     174C  1C03               	skipc
  8578     174D  0F5D               	incfsz	___fladd@a+3,w
  8579     174E  02D9               	subwf	___fladd@b+3,f
  8580     174F                     l757:
  8581     174F  0859               	movf	___fladd@b+3,w
  8582     1750  0458               	iorwf	___fladd@b+2,w
  8583     1751  0457               	iorwf	___fladd@b+1,w
  8584     1752  0456               	iorwf	___fladd@b,w
  8585     1753  1D03               	skipz
  8586     1754  2F56               	goto	u3531
  8587     1755  2F57               	goto	u3530
  8588     1756                     u3531:
  8589     1756  2F83               	goto	l2614
  8590     1757                     u3530:
  8591     1757                     l2594:
  8592     1757  0869               	movf	___fladd@grs,w
  8593     1758  1D03               	btfss	3,2
  8594     1759  2F5B               	goto	u3541
  8595     175A  2F5C               	goto	u3540
  8596     175B                     u3541:
  8597     175B  2F83               	goto	l2614
  8598     175C                     u3540:
  8599     175C                     l2596:
  8600     175C  3000               	movlw	0
  8601     175D  00D9               	movwf	?___fladd+3
  8602     175E  3000               	movlw	0
  8603     175F  00D8               	movwf	?___fladd+2
  8604     1760  3000               	movlw	0
  8605     1761  00D7               	movwf	?___fladd+1
  8606     1762  3000               	movlw	0
  8607     1763  00D6               	movwf	?___fladd
  8608     1764  2FFF               	goto	l749
  8609     1765                     l2600:
  8610     1765  3001               	movlw	1
  8611     1766  00DE               	movwf	??___fladd
  8612     1767                     u3555:
  8613     1767  1003               	clrc
  8614     1768  0DD6               	rlf	___fladd@b,f
  8615     1769  0DD7               	rlf	___fladd@b+1,f
  8616     176A  0DD8               	rlf	___fladd@b+2,f
  8617     176B  0DD9               	rlf	___fladd@b+3,f
  8618     176C  0BDE               	decfsz	??___fladd,f
  8619     176D  2F67               	goto	u3555
  8620     176E                     l2602:
  8621     176E  1FE9               	btfss	___fladd@grs,7
  8622     176F  2F71               	goto	u3561
  8623     1770  2F72               	goto	u3560
  8624     1771                     u3561:
  8625     1771  2F73               	goto	l761
  8626     1772                     u3560:
  8627     1772                     l2604:
  8628     1772  1456               	bsf	___fladd@b,0
  8629     1773                     l761:
  8630     1773  1C69               	btfss	___fladd@grs,0
  8631     1774  2F76               	goto	u3571
  8632     1775  2F77               	goto	u3570
  8633     1776                     u3571:
  8634     1776  2F7A               	goto	l2608
  8635     1777                     u3570:
  8636     1777                     l2606:
  8637     1777  1403               	setc
  8638     1778  0DE9               	rlf	___fladd@grs,f
  8639     1779  2F7C               	goto	l2610
  8640     177A                     l2608:
  8641     177A  1003               	clrc
  8642     177B  0DE9               	rlf	___fladd@grs,f
  8643     177C                     l2610:
  8644     177C  0868               	movf	___fladd@bexp,w
  8645     177D  1903               	btfsc	3,2
  8646     177E  2F80               	goto	u3581
  8647     177F  2F81               	goto	u3580
  8648     1780                     u3581:
  8649     1780  2F83               	goto	l2614
  8650     1781                     u3580:
  8651     1781                     l2612:
  8652     1781  3001               	movlw	1
  8653     1782  02E8               	subwf	___fladd@bexp,f
  8654     1783                     l2614:
  8655     1783  1FD8               	btfss	___fladd@b+2,7
  8656     1784  2F86               	goto	u3591
  8657     1785  2F87               	goto	u3590
  8658     1786                     u3591:
  8659     1786  2F65               	goto	l2600
  8660     1787                     u3590:
  8661     1787                     l2616:
  8662     1787  01E7               	clrf	___fladd@aexp
  8663     1788                     l2618:
  8664     1788  1FE9               	btfss	___fladd@grs,7
  8665     1789  2F8B               	goto	u3601
  8666     178A  2F8C               	goto	u3600
  8667     178B                     u3601:
  8668     178B  2F9A               	goto	l2626
  8669     178C                     u3600:
  8670     178C                     l2620:
  8671     178C  0869               	movf	___fladd@grs,w
  8672     178D  397F               	andlw	127
  8673     178E  1903               	btfsc	3,2
  8674     178F  2F91               	goto	u3611
  8675     1790  2F92               	goto	u3610
  8676     1791                     u3611:
  8677     1791  2F95               	goto	l767
  8678     1792                     u3610:
  8679     1792                     l2622:
  8680     1792  01E7               	clrf	___fladd@aexp
  8681     1793  0AE7               	incf	___fladd@aexp,f
  8682     1794  2F9A               	goto	l2626
  8683     1795                     l767:
  8684     1795  1C56               	btfss	___fladd@b,0
  8685     1796  2F98               	goto	u3621
  8686     1797  2F99               	goto	u3620
  8687     1798                     u3621:
  8688     1798  2F9A               	goto	l2626
  8689     1799                     u3620:
  8690     1799  2F92               	goto	l2622
  8691     179A                     l2626:
  8692     179A  0867               	movf	___fladd@aexp,w
  8693     179B  1903               	btfsc	3,2
  8694     179C  2F9E               	goto	u3631
  8695     179D  2F9F               	goto	u3630
  8696     179E                     u3631:
  8697     179E  2FD3               	goto	l770
  8698     179F                     u3630:
  8699     179F                     l2628:
  8700     179F  3001               	movlw	1
  8701     17A0  07D6               	addwf	___fladd@b,f
  8702     17A1  3000               	movlw	0
  8703     17A2  1803               	skipnc
  8704     17A3  3001               	movlw	1
  8705     17A4  07D7               	addwf	___fladd@b+1,f
  8706     17A5  3000               	movlw	0
  8707     17A6  1803               	skipnc
  8708     17A7  3001               	movlw	1
  8709     17A8  07D8               	addwf	___fladd@b+2,f
  8710     17A9  3000               	movlw	0
  8711     17AA  1803               	skipnc
  8712     17AB  3001               	movlw	1
  8713     17AC  07D9               	addwf	___fladd@b+3,f
  8714     17AD                     l2630:
  8715     17AD  1C59               	btfss	___fladd@b+3,0
  8716     17AE  2FB0               	goto	u3641
  8717     17AF  2FB1               	goto	u3640
  8718     17B0                     u3641:
  8719     17B0  2FD3               	goto	l770
  8720     17B1                     u3640:
  8721     17B1                     l2632:
  8722     17B1  0856               	movf	___fladd@b,w
  8723     17B2  00DE               	movwf	??___fladd
  8724     17B3  0857               	movf	___fladd@b+1,w
  8725     17B4  00DF               	movwf	??___fladd+1
  8726     17B5  0858               	movf	___fladd@b+2,w
  8727     17B6  00E0               	movwf	??___fladd+2
  8728     17B7  0859               	movf	___fladd@b+3,w
  8729     17B8  00E1               	movwf	??___fladd+3
  8730     17B9  3001               	movlw	1
  8731     17BA  00E2               	movwf	??___fladd+4
  8732     17BB                     u3655:
  8733     17BB  0D61               	rlf	??___fladd+3,w
  8734     17BC  0CE1               	rrf	??___fladd+3,f
  8735     17BD  0CE0               	rrf	??___fladd+2,f
  8736     17BE  0CDF               	rrf	??___fladd+1,f
  8737     17BF  0CDE               	rrf	??___fladd,f
  8738     17C0                     u3650:
  8739     17C0  0BE2               	decfsz	??___fladd+4,f
  8740     17C1  2FBB               	goto	u3655
  8741     17C2  0861               	movf	??___fladd+3,w
  8742     17C3  00D9               	movwf	___fladd@b+3
  8743     17C4  0860               	movf	??___fladd+2,w
  8744     17C5  00D8               	movwf	___fladd@b+2
  8745     17C6  085F               	movf	??___fladd+1,w
  8746     17C7  00D7               	movwf	___fladd@b+1
  8747     17C8  085E               	movf	??___fladd,w
  8748     17C9  00D6               	movwf	___fladd@b
  8749     17CA  0A68               	incf	___fladd@bexp,w
  8750     17CB  1903               	btfsc	3,2
  8751     17CC  2FCE               	goto	u3661
  8752     17CD  2FCF               	goto	u3660
  8753     17CE                     u3661:
  8754     17CE  2FD3               	goto	l770
  8755     17CF                     u3660:
  8756     17CF                     l2634:
  8757     17CF  3001               	movlw	1
  8758     17D0  00DE               	movwf	??___fladd
  8759     17D1  085E               	movf	??___fladd,w
  8760     17D2  07E8               	addwf	___fladd@bexp,f
  8761     17D3                     l770:
  8762     17D3  0A68               	incf	___fladd@bexp,w
  8763     17D4  1903               	btfsc	3,2
  8764     17D5  2FD7               	goto	u3671
  8765     17D6  2FD8               	goto	u3670
  8766     17D7                     u3671:
  8767     17D7  2FDD               	goto	l2638
  8768     17D8                     u3670:
  8769     17D8                     l2636:
  8770     17D8  0868               	movf	___fladd@bexp,w
  8771     17D9  1D03               	btfss	3,2
  8772     17DA  2FDC               	goto	u3681
  8773     17DB  2FDD               	goto	u3680
  8774     17DC                     u3681:
  8775     17DC  2FEB               	goto	l2644
  8776     17DD                     u3680:
  8777     17DD                     l2638:
  8778     17DD  3000               	movlw	0
  8779     17DE  00D9               	movwf	___fladd@b+3
  8780     17DF  3000               	movlw	0
  8781     17E0  00D8               	movwf	___fladd@b+2
  8782     17E1  3000               	movlw	0
  8783     17E2  00D7               	movwf	___fladd@b+1
  8784     17E3  3000               	movlw	0
  8785     17E4  00D6               	movwf	___fladd@b
  8786     17E5                     l2640:
  8787     17E5  0868               	movf	___fladd@bexp,w
  8788     17E6  1D03               	btfss	3,2
  8789     17E7  2FE9               	goto	u3691
  8790     17E8  2FEA               	goto	u3690
  8791     17E9                     u3691:
  8792     17E9  2FEB               	goto	l2644
  8793     17EA                     u3690:
  8794     17EA                     l2642:
  8795     17EA  01E6               	clrf	___fladd@signs
  8796     17EB                     l2644:
  8797     17EB  1C68               	btfss	___fladd@bexp,0
  8798     17EC  2FEE               	goto	u3701
  8799     17ED  2FEF               	goto	u3700
  8800     17EE                     u3701:
  8801     17EE  2FF1               	goto	l2648
  8802     17EF                     u3700:
  8803     17EF                     l2646:
  8804     17EF  17D8               	bsf	___fladd@b+2,7
  8805     17F0  2FF5               	goto	l778
  8806     17F1                     l2648:
  8807     17F1  307F               	movlw	127
  8808     17F2  00DE               	movwf	??___fladd
  8809     17F3  085E               	movf	??___fladd,w
  8810     17F4  05D8               	andwf	___fladd@b+2,f
  8811     17F5                     l778:
  8812     17F5  0868               	movf	___fladd@bexp,w
  8813     17F6  00DE               	movwf	??___fladd
  8814     17F7  1003               	clrc
  8815     17F8  0C5E               	rrf	??___fladd,w
  8816     17F9  00D9               	movwf	___fladd@b+3
  8817     17FA                     l2650:
  8818     17FA  1FE6               	btfss	___fladd@signs,7
  8819     17FB  2FFD               	goto	u3711
  8820     17FC  2FFE               	goto	u3710
  8821     17FD                     u3711:
  8822     17FD  2FFF               	goto	l779
  8823     17FE                     u3710:
  8824     17FE                     l2652:
  8825     17FE  17D9               	bsf	___fladd@b+3,7
  8826     17FF                     l779:
  8827     17FF                     l749:
  8828     17FF  0008               	return
  8829     1800                     __end_of___fladd:
  8830                           
  8831                           	psect	text19
  8832     1B86                     __ptext19:	
  8833 ;; *************** function ___flneg *****************
  8834 ;; Defined at:
  8835 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flneg.c"
  8836 ;; Parameters:    Size  Location     Type
  8837 ;;  f1              4    2[COMMON] unsigned char 
  8838 ;; Auto vars:     Size  Location     Type
  8839 ;;		None
  8840 ;; Return value:  Size  Location     Type
  8841 ;;                  4    2[COMMON] unsigned char 
  8842 ;; Registers used:
  8843 ;;		wreg
  8844 ;; Tracked objects:
  8845 ;;		On entry : 0/0
  8846 ;;		On exit  : 0/0
  8847 ;;		Unchanged: 0/0
  8848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8849 ;;      Params:         4       0       0       0       0
  8850 ;;      Locals:         0       0       0       0       0
  8851 ;;      Temps:          0       0       0       0       0
  8852 ;;      Totals:         4       0       0       0       0
  8853 ;;Total ram usage:        4 bytes
  8854 ;; Hardware stack levels used: 1
  8855 ;; Hardware stack levels required when called: 1
  8856 ;; This function calls:
  8857 ;;		Nothing
  8858 ;; This function is called by:
  8859 ;;		_sprintf
  8860 ;; This function uses a non-reentrant model
  8861 ;;
  8862                           
  8863     1B86                     ___flneg:	
  8864                           ;psect for function ___flneg
  8865                           
  8866     1B86                     l3060:	
  8867                           ;incstack = 0
  8868                           ; Regs used in ___flneg: [wreg]
  8869                           
  8870     1B86  0875               	movf	___flneg@f1+3,w
  8871     1B87  0474               	iorwf	___flneg@f1+2,w
  8872     1B88  0473               	iorwf	___flneg@f1+1,w
  8873     1B89  0472               	iorwf	___flneg@f1,w
  8874     1B8A  1903               	skipnz
  8875     1B8B  2B8D               	goto	u4801
  8876     1B8C  2B8E               	goto	u4800
  8877     1B8D                     u4801:
  8878     1B8D  2B90               	goto	l3064
  8879     1B8E                     u4800:
  8880     1B8E                     l3062:
  8881     1B8E  3080               	movlw	128
  8882     1B8F  06F5               	xorwf	___flneg@f1+3,f
  8883     1B90                     l3064:
  8884     1B90                     l608:
  8885     1B90  0008               	return
  8886     1B91                     __end_of___flneg:
  8887                           
  8888                           	psect	text20
  8889     10CE                     __ptext20:	
  8890 ;; *************** function ___flge *****************
  8891 ;; Defined at:
  8892 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flge.c"
  8893 ;; Parameters:    Size  Location     Type
  8894 ;;  ff1             4    2[COMMON] unsigned char 
  8895 ;;  ff2             4    6[COMMON] unsigned char 
  8896 ;; Auto vars:     Size  Location     Type
  8897 ;;		None
  8898 ;; Return value:  Size  Location     Type
  8899 ;;		None               void
  8900 ;; Registers used:
  8901 ;;		wreg, status,2, status,0
  8902 ;; Tracked objects:
  8903 ;;		On entry : 0/0
  8904 ;;		On exit  : 0/0
  8905 ;;		Unchanged: 0/0
  8906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8907 ;;      Params:         8       0       0       0       0
  8908 ;;      Locals:         0       0       0       0       0
  8909 ;;      Temps:          0       4       0       0       0
  8910 ;;      Totals:         8       4       0       0       0
  8911 ;;Total ram usage:       12 bytes
  8912 ;; Hardware stack levels used: 1
  8913 ;; Hardware stack levels required when called: 1
  8914 ;; This function calls:
  8915 ;;		Nothing
  8916 ;; This function is called by:
  8917 ;;		_sprintf
  8918 ;; This function uses a non-reentrant model
  8919 ;;
  8920                           
  8921     10CE                     ___flge:	
  8922                           ;psect for function ___flge
  8923                           
  8924     10CE                     l3040:	
  8925                           ;incstack = 0
  8926                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8927                           
  8928     10CE  3000               	movlw	0
  8929     10CF  0572               	andwf	___flge@ff1,w
  8930     10D0  1283               	bcf	3,5	;RP0=0, select bank0
  8931     10D1  1303               	bcf	3,6	;RP1=0, select bank0
  8932     10D2  00A0               	movwf	??___flge
  8933     10D3  3000               	movlw	0
  8934     10D4  0573               	andwf	___flge@ff1+1,w
  8935     10D5  00A1               	movwf	??___flge+1
  8936     10D6  3080               	movlw	128
  8937     10D7  0574               	andwf	___flge@ff1+2,w
  8938     10D8  00A2               	movwf	??___flge+2
  8939     10D9  307F               	movlw	127
  8940     10DA  0575               	andwf	___flge@ff1+3,w
  8941     10DB  00A3               	movwf	??___flge+3
  8942     10DC  0823               	movf	??___flge+3,w
  8943     10DD  0422               	iorwf	??___flge+2,w
  8944     10DE  0421               	iorwf	??___flge+1,w
  8945     10DF  0420               	iorwf	??___flge,w
  8946     10E0  1D03               	skipz
  8947     10E1  28E3               	goto	u4731
  8948     10E2  28E4               	goto	u4730
  8949     10E3                     u4731:
  8950     10E3  28EC               	goto	l600
  8951     10E4                     u4730:
  8952     10E4                     l3042:
  8953     10E4  3000               	movlw	0
  8954     10E5  00F5               	movwf	___flge@ff1+3
  8955     10E6  3000               	movlw	0
  8956     10E7  00F4               	movwf	___flge@ff1+2
  8957     10E8  3000               	movlw	0
  8958     10E9  00F3               	movwf	___flge@ff1+1
  8959     10EA  3000               	movlw	0
  8960     10EB  00F2               	movwf	___flge@ff1
  8961     10EC                     l600:
  8962     10EC  3000               	movlw	0
  8963     10ED  0576               	andwf	___flge@ff2,w
  8964     10EE  00A0               	movwf	??___flge
  8965     10EF  3000               	movlw	0
  8966     10F0  0577               	andwf	___flge@ff2+1,w
  8967     10F1  00A1               	movwf	??___flge+1
  8968     10F2  3080               	movlw	128
  8969     10F3  0578               	andwf	___flge@ff2+2,w
  8970     10F4  00A2               	movwf	??___flge+2
  8971     10F5  307F               	movlw	127
  8972     10F6  0579               	andwf	___flge@ff2+3,w
  8973     10F7  00A3               	movwf	??___flge+3
  8974     10F8  0823               	movf	??___flge+3,w
  8975     10F9  0422               	iorwf	??___flge+2,w
  8976     10FA  0421               	iorwf	??___flge+1,w
  8977     10FB  0420               	iorwf	??___flge,w
  8978     10FC  1D03               	skipz
  8979     10FD  28FF               	goto	u4741
  8980     10FE  2900               	goto	u4740
  8981     10FF                     u4741:
  8982     10FF  2908               	goto	l3046
  8983     1100                     u4740:
  8984     1100                     l3044:
  8985     1100  3000               	movlw	0
  8986     1101  00F9               	movwf	___flge@ff2+3
  8987     1102  3000               	movlw	0
  8988     1103  00F8               	movwf	___flge@ff2+2
  8989     1104  3000               	movlw	0
  8990     1105  00F7               	movwf	___flge@ff2+1
  8991     1106  3000               	movlw	0
  8992     1107  00F6               	movwf	___flge@ff2
  8993     1108                     l3046:
  8994     1108  1FF5               	btfss	___flge@ff1+3,7
  8995     1109  290B               	goto	u4751
  8996     110A  290C               	goto	u4750
  8997     110B                     u4751:
  8998     110B  2930               	goto	l3050
  8999     110C                     u4750:
  9000     110C                     l3048:
  9001     110C  3000               	movlw	0
  9002     110D  00A0               	movwf	??___flge
  9003     110E  3000               	movlw	0
  9004     110F  00A1               	movwf	??___flge+1
  9005     1110  3000               	movlw	0
  9006     1111  00A2               	movwf	??___flge+2
  9007     1112  3080               	movlw	128
  9008     1113  00A3               	movwf	??___flge+3
  9009     1114  0872               	movf	___flge@ff1,w
  9010     1115  02A0               	subwf	??___flge,f
  9011     1116  0873               	movf	___flge@ff1+1,w
  9012     1117  1C03               	skipc
  9013     1118  0F73               	incfsz	___flge@ff1+1,w
  9014     1119  291B               	goto	u4761
  9015     111A  291C               	goto	u4762
  9016     111B                     u4761:
  9017     111B  02A1               	subwf	??___flge+1,f
  9018     111C                     u4762:
  9019     111C  0874               	movf	___flge@ff1+2,w
  9020     111D  1C03               	skipc
  9021     111E  0F74               	incfsz	___flge@ff1+2,w
  9022     111F  2921               	goto	u4763
  9023     1120  2922               	goto	u4764
  9024     1121                     u4763:
  9025     1121  02A2               	subwf	??___flge+2,f
  9026     1122                     u4764:
  9027     1122  0875               	movf	___flge@ff1+3,w
  9028     1123  1C03               	skipc
  9029     1124  0F75               	incfsz	___flge@ff1+3,w
  9030     1125  2927               	goto	u4765
  9031     1126  2928               	goto	u4766
  9032     1127                     u4765:
  9033     1127  02A3               	subwf	??___flge+3,f
  9034     1128                     u4766:
  9035     1128  0823               	movf	??___flge+3,w
  9036     1129  00F5               	movwf	___flge@ff1+3
  9037     112A  0822               	movf	??___flge+2,w
  9038     112B  00F4               	movwf	___flge@ff1+2
  9039     112C  0821               	movf	??___flge+1,w
  9040     112D  00F3               	movwf	___flge@ff1+1
  9041     112E  0820               	movf	??___flge,w
  9042     112F  00F2               	movwf	___flge@ff1
  9043     1130                     l3050:
  9044     1130  1FF9               	btfss	___flge@ff2+3,7
  9045     1131  2933               	goto	u4771
  9046     1132  2934               	goto	u4770
  9047     1133                     u4771:
  9048     1133  2958               	goto	l603
  9049     1134                     u4770:
  9050     1134                     l3052:
  9051     1134  3000               	movlw	0
  9052     1135  00A0               	movwf	??___flge
  9053     1136  3000               	movlw	0
  9054     1137  00A1               	movwf	??___flge+1
  9055     1138  3000               	movlw	0
  9056     1139  00A2               	movwf	??___flge+2
  9057     113A  3080               	movlw	128
  9058     113B  00A3               	movwf	??___flge+3
  9059     113C  0876               	movf	___flge@ff2,w
  9060     113D  02A0               	subwf	??___flge,f
  9061     113E  0877               	movf	___flge@ff2+1,w
  9062     113F  1C03               	skipc
  9063     1140  0F77               	incfsz	___flge@ff2+1,w
  9064     1141  2943               	goto	u4781
  9065     1142  2944               	goto	u4782
  9066     1143                     u4781:
  9067     1143  02A1               	subwf	??___flge+1,f
  9068     1144                     u4782:
  9069     1144  0878               	movf	___flge@ff2+2,w
  9070     1145  1C03               	skipc
  9071     1146  0F78               	incfsz	___flge@ff2+2,w
  9072     1147  2949               	goto	u4783
  9073     1148  294A               	goto	u4784
  9074     1149                     u4783:
  9075     1149  02A2               	subwf	??___flge+2,f
  9076     114A                     u4784:
  9077     114A  0879               	movf	___flge@ff2+3,w
  9078     114B  1C03               	skipc
  9079     114C  0F79               	incfsz	___flge@ff2+3,w
  9080     114D  294F               	goto	u4785
  9081     114E  2950               	goto	u4786
  9082     114F                     u4785:
  9083     114F  02A3               	subwf	??___flge+3,f
  9084     1150                     u4786:
  9085     1150  0823               	movf	??___flge+3,w
  9086     1151  00F9               	movwf	___flge@ff2+3
  9087     1152  0822               	movf	??___flge+2,w
  9088     1153  00F8               	movwf	___flge@ff2+2
  9089     1154  0821               	movf	??___flge+1,w
  9090     1155  00F7               	movwf	___flge@ff2+1
  9091     1156  0820               	movf	??___flge,w
  9092     1157  00F6               	movwf	___flge@ff2
  9093     1158                     l603:
  9094     1158  3080               	movlw	128
  9095     1159  06F5               	xorwf	___flge@ff1+3,f
  9096     115A  3080               	movlw	128
  9097     115B  06F9               	xorwf	___flge@ff2+3,f
  9098     115C  0879               	movf	___flge@ff2+3,w
  9099     115D  0275               	subwf	___flge@ff1+3,w
  9100     115E  1D03               	skipz
  9101     115F  296A               	goto	u4795
  9102     1160  0878               	movf	___flge@ff2+2,w
  9103     1161  0274               	subwf	___flge@ff1+2,w
  9104     1162  1D03               	skipz
  9105     1163  296A               	goto	u4795
  9106     1164  0877               	movf	___flge@ff2+1,w
  9107     1165  0273               	subwf	___flge@ff1+1,w
  9108     1166  1D03               	skipz
  9109     1167  296A               	goto	u4795
  9110     1168  0876               	movf	___flge@ff2,w
  9111     1169  0272               	subwf	___flge@ff1,w
  9112     116A                     u4795:
  9113     116A  1803               	skipnc
  9114     116B  296D               	goto	u4791
  9115     116C  296E               	goto	u4790
  9116     116D                     u4791:
  9117     116D  2970               	goto	l3056
  9118     116E                     u4790:
  9119     116E                     l3054:
  9120     116E  1003               	clrc
  9121     116F  2971               	goto	l604
  9122     1170                     l3056:
  9123     1170  1403               	setc
  9124     1171                     l604:
  9125     1171  0008               	return
  9126     1172                     __end_of___flge:
  9127                           
  9128                           	psect	text21
  9129     1E49                     __ptext21:	
  9130 ;; *************** function ___fleq *****************
  9131 ;; Defined at:
  9132 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fleq.c"
  9133 ;; Parameters:    Size  Location     Type
  9134 ;;  ff1             4    2[COMMON] unsigned char 
  9135 ;;  ff2             4    6[COMMON] unsigned char 
  9136 ;; Auto vars:     Size  Location     Type
  9137 ;;		None
  9138 ;; Return value:  Size  Location     Type
  9139 ;;		None               void
  9140 ;; Registers used:
  9141 ;;		wreg, status,2, status,0
  9142 ;; Tracked objects:
  9143 ;;		On entry : 0/0
  9144 ;;		On exit  : 0/0
  9145 ;;		Unchanged: 0/0
  9146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9147 ;;      Params:         8       0       0       0       0
  9148 ;;      Locals:         0       0       0       0       0
  9149 ;;      Temps:          0       4       0       0       0
  9150 ;;      Totals:         8       4       0       0       0
  9151 ;;Total ram usage:       12 bytes
  9152 ;; Hardware stack levels used: 1
  9153 ;; Hardware stack levels required when called: 1
  9154 ;; This function calls:
  9155 ;;		Nothing
  9156 ;; This function is called by:
  9157 ;;		_sprintf
  9158 ;; This function uses a non-reentrant model
  9159 ;;
  9160                           
  9161     1E49                     ___fleq:	
  9162                           ;psect for function ___fleq
  9163                           
  9164     1E49                     l3028:	
  9165                           ;incstack = 0
  9166                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9167                           
  9168     1E49  3000               	movlw	0
  9169     1E4A  0572               	andwf	___fleq@ff1,w
  9170     1E4B  1283               	bcf	3,5	;RP0=0, select bank0
  9171     1E4C  1303               	bcf	3,6	;RP1=0, select bank0
  9172     1E4D  00A0               	movwf	??___fleq
  9173     1E4E  3000               	movlw	0
  9174     1E4F  0573               	andwf	___fleq@ff1+1,w
  9175     1E50  00A1               	movwf	??___fleq+1
  9176     1E51  3080               	movlw	128
  9177     1E52  0574               	andwf	___fleq@ff1+2,w
  9178     1E53  00A2               	movwf	??___fleq+2
  9179     1E54  307F               	movlw	127
  9180     1E55  0575               	andwf	___fleq@ff1+3,w
  9181     1E56  00A3               	movwf	??___fleq+3
  9182     1E57  0823               	movf	??___fleq+3,w
  9183     1E58  0422               	iorwf	??___fleq+2,w
  9184     1E59  0421               	iorwf	??___fleq+1,w
  9185     1E5A  0420               	iorwf	??___fleq,w
  9186     1E5B  1D03               	skipz
  9187     1E5C  2E5E               	goto	u4701
  9188     1E5D  2E5F               	goto	u4700
  9189     1E5E                     u4701:
  9190     1E5E  2E67               	goto	l595
  9191     1E5F                     u4700:
  9192     1E5F                     l3030:
  9193     1E5F  3000               	movlw	0
  9194     1E60  00F5               	movwf	___fleq@ff1+3
  9195     1E61  3000               	movlw	0
  9196     1E62  00F4               	movwf	___fleq@ff1+2
  9197     1E63  3000               	movlw	0
  9198     1E64  00F3               	movwf	___fleq@ff1+1
  9199     1E65  3000               	movlw	0
  9200     1E66  00F2               	movwf	___fleq@ff1
  9201     1E67                     l595:
  9202     1E67  3000               	movlw	0
  9203     1E68  0576               	andwf	___fleq@ff2,w
  9204     1E69  00A0               	movwf	??___fleq
  9205     1E6A  3000               	movlw	0
  9206     1E6B  0577               	andwf	___fleq@ff2+1,w
  9207     1E6C  00A1               	movwf	??___fleq+1
  9208     1E6D  3080               	movlw	128
  9209     1E6E  0578               	andwf	___fleq@ff2+2,w
  9210     1E6F  00A2               	movwf	??___fleq+2
  9211     1E70  307F               	movlw	127
  9212     1E71  0579               	andwf	___fleq@ff2+3,w
  9213     1E72  00A3               	movwf	??___fleq+3
  9214     1E73  0823               	movf	??___fleq+3,w
  9215     1E74  0422               	iorwf	??___fleq+2,w
  9216     1E75  0421               	iorwf	??___fleq+1,w
  9217     1E76  0420               	iorwf	??___fleq,w
  9218     1E77  1D03               	skipz
  9219     1E78  2E7A               	goto	u4711
  9220     1E79  2E7B               	goto	u4710
  9221     1E7A                     u4711:
  9222     1E7A  2E83               	goto	l596
  9223     1E7B                     u4710:
  9224     1E7B                     l3032:
  9225     1E7B  3000               	movlw	0
  9226     1E7C  00F9               	movwf	___fleq@ff2+3
  9227     1E7D  3000               	movlw	0
  9228     1E7E  00F8               	movwf	___fleq@ff2+2
  9229     1E7F  3000               	movlw	0
  9230     1E80  00F7               	movwf	___fleq@ff2+1
  9231     1E81  3000               	movlw	0
  9232     1E82  00F6               	movwf	___fleq@ff2
  9233     1E83                     l596:
  9234     1E83  0879               	movf	___fleq@ff2+3,w
  9235     1E84  0675               	xorwf	___fleq@ff1+3,w
  9236     1E85  1D03               	skipz
  9237     1E86  2E91               	goto	u4725
  9238     1E87  0878               	movf	___fleq@ff2+2,w
  9239     1E88  0674               	xorwf	___fleq@ff1+2,w
  9240     1E89  1D03               	skipz
  9241     1E8A  2E91               	goto	u4725
  9242     1E8B  0877               	movf	___fleq@ff2+1,w
  9243     1E8C  0673               	xorwf	___fleq@ff1+1,w
  9244     1E8D  1D03               	skipz
  9245     1E8E  2E91               	goto	u4725
  9246     1E8F  0876               	movf	___fleq@ff2,w
  9247     1E90  0672               	xorwf	___fleq@ff1,w
  9248     1E91                     u4725:
  9249     1E91  1903               	skipnz
  9250     1E92  2E94               	goto	u4721
  9251     1E93  2E95               	goto	u4720
  9252     1E94                     u4721:
  9253     1E94  2E97               	goto	l3036
  9254     1E95                     u4720:
  9255     1E95                     l3034:
  9256     1E95  1003               	clrc
  9257     1E96  2E98               	goto	l597
  9258     1E97                     l3036:
  9259     1E97  1403               	setc
  9260     1E98                     l597:
  9261     1E98  0008               	return
  9262     1E99                     __end_of___fleq:
  9263                           
  9264                           	psect	text22
  9265     1C96                     __ptext22:	
  9266 ;; *************** function _setup *****************
  9267 ;; Defined at:
  9268 ;;		line 178 in file "main.c"
  9269 ;; Parameters:    Size  Location     Type
  9270 ;;		None
  9271 ;; Auto vars:     Size  Location     Type
  9272 ;;		None
  9273 ;; Return value:  Size  Location     Type
  9274 ;;                  1    wreg      void 
  9275 ;; Registers used:
  9276 ;;		wreg, status,2, status,0, pclath, cstack
  9277 ;; Tracked objects:
  9278 ;;		On entry : 0/0
  9279 ;;		On exit  : 0/0
  9280 ;;		Unchanged: 0/0
  9281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9282 ;;      Params:         0       0       0       0       0
  9283 ;;      Locals:         0       0       0       0       0
  9284 ;;      Temps:          0       0       0       0       0
  9285 ;;      Totals:         0       0       0       0       0
  9286 ;;Total ram usage:        0 bytes
  9287 ;; Hardware stack levels used: 1
  9288 ;; Hardware stack levels required when called: 3
  9289 ;; This function calls:
  9290 ;;		_I2C_Master_Init
  9291 ;; This function is called by:
  9292 ;;		_main
  9293 ;; This function uses a non-reentrant model
  9294 ;;
  9295                           
  9296     1C96                     _setup:	
  9297                           ;psect for function _setup
  9298                           
  9299     1C96                     l3986:	
  9300                           ;incstack = 0
  9301                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  9302                           
  9303                           
  9304                           ;main.c: 181:     ANSEL = 0b00000000;
  9305     1C96  1683               	bsf	3,5	;RP0=1, select bank3
  9306     1C97  1703               	bsf	3,6	;RP1=1, select bank3
  9307     1C98  0188               	clrf	8	;volatile
  9308                           
  9309                           ;main.c: 182:     ANSELH = 0;
  9310     1C99  0189               	clrf	9	;volatile
  9311                           
  9312                           ;main.c: 185:     TRISA = 0b00000000;
  9313     1C9A  1683               	bsf	3,5	;RP0=1, select bank1
  9314     1C9B  1303               	bcf	3,6	;RP1=0, select bank1
  9315     1C9C  0185               	clrf	5	;volatile
  9316                           
  9317                           ;main.c: 186:     TRISB = 0b00000000;
  9318     1C9D  0186               	clrf	6	;volatile
  9319                           
  9320                           ;main.c: 188:     TRISD = 0b00000000;
  9321     1C9E  0188               	clrf	8	;volatile
  9322                           
  9323                           ;main.c: 189:     TRISE = 0b00000000;
  9324     1C9F  0189               	clrf	9	;volatile
  9325                           
  9326                           ;main.c: 191:     PORTA = 0b00000000;
  9327     1CA0  1283               	bcf	3,5	;RP0=0, select bank0
  9328     1CA1  1303               	bcf	3,6	;RP1=0, select bank0
  9329     1CA2  0185               	clrf	5	;volatile
  9330                           
  9331                           ;main.c: 192:     PORTB = 0b00000000;
  9332     1CA3  0186               	clrf	6	;volatile
  9333                           
  9334                           ;main.c: 194:     PORTD = 0b00000000;
  9335     1CA4  0188               	clrf	8	;volatile
  9336                           
  9337                           ;main.c: 195:     PORTE = 0b00000000;
  9338     1CA5  0189               	clrf	9	;volatile
  9339     1CA6                     l3988:
  9340                           
  9341                           ;main.c: 206:     INTCONbits.GIE = 1;
  9342     1CA6  178B               	bsf	11,7	;volatile
  9343     1CA7                     l3990:
  9344                           
  9345                           ;main.c: 207:     INTCONbits.PEIE = 0;
  9346     1CA7  130B               	bcf	11,6	;volatile
  9347     1CA8                     l3992:
  9348                           
  9349                           ;main.c: 208:     PIE1bits.SSPIE = 0;
  9350     1CA8  1683               	bsf	3,5	;RP0=1, select bank1
  9351     1CA9  1303               	bcf	3,6	;RP1=0, select bank1
  9352     1CAA  118C               	bcf	12,3	;volatile
  9353     1CAB                     l3994:
  9354                           
  9355                           ;main.c: 209:     PIE1bits.ADIE = 0;
  9356     1CAB  130C               	bcf	12,6	;volatile
  9357     1CAC                     l3996:
  9358                           
  9359                           ;main.c: 210:     INTCONbits.TMR0IE = 0;
  9360     1CAC  128B               	bcf	11,5	;volatile
  9361     1CAD                     l3998:
  9362                           
  9363                           ;main.c: 212:     PIR1bits.SSPIF = 0;
  9364     1CAD  1283               	bcf	3,5	;RP0=0, select bank0
  9365     1CAE  1303               	bcf	3,6	;RP1=0, select bank0
  9366     1CAF  118C               	bcf	12,3	;volatile
  9367     1CB0                     l4000:
  9368                           
  9369                           ;main.c: 213:     PIR1bits.ADIF = 0;
  9370     1CB0  130C               	bcf	12,6	;volatile
  9371     1CB1                     l4002:
  9372                           
  9373                           ;main.c: 214:     INTCONbits.RBIF = 0;
  9374     1CB1  100B               	bcf	11,0	;volatile
  9375     1CB2                     l4004:
  9376                           
  9377                           ;main.c: 215:     INTCONbits.T0IF = 0;
  9378     1CB2  110B               	bcf	11,2	;volatile
  9379     1CB3                     l4006:
  9380                           
  9381                           ;main.c: 218:     OSCCONbits.IRCF = 0b110;
  9382     1CB3  1683               	bsf	3,5	;RP0=1, select bank1
  9383     1CB4  1303               	bcf	3,6	;RP1=0, select bank1
  9384     1CB5  080F               	movf	15,w	;volatile
  9385     1CB6  398F               	andlw	-113
  9386     1CB7  3860               	iorlw	96
  9387     1CB8  008F               	movwf	15	;volatile
  9388     1CB9                     l4008:
  9389                           
  9390                           ;main.c: 219:     OSCCONbits.SCS = 1;
  9391     1CB9  140F               	bsf	15,0	;volatile
  9392     1CBA                     l4010:
  9393                           
  9394                           ;main.c: 220:     I2C_Master_Init(100000);
  9395     1CBA  3000               	movlw	0
  9396     1CBB  1283               	bcf	3,5	;RP0=0, select bank0
  9397     1CBC  1303               	bcf	3,6	;RP1=0, select bank0
  9398     1CBD  00A9               	movwf	I2C_Master_Init@c+3
  9399     1CBE  3001               	movlw	1
  9400     1CBF  00A8               	movwf	I2C_Master_Init@c+2
  9401     1CC0  3086               	movlw	134
  9402     1CC1  00A7               	movwf	I2C_Master_Init@c+1
  9403     1CC2  30A0               	movlw	160
  9404     1CC3  00A6               	movwf	I2C_Master_Init@c
  9405     1CC4  160A  158A  24FF  160A  158A  	fcall	_I2C_Master_Init
  9406     1CC9                     l120:
  9407     1CC9  0008               	return
  9408     1CCA                     __end_of_setup:
  9409                           
  9410                           	psect	text23
  9411     1CFF                     __ptext23:	
  9412 ;; *************** function _I2C_Master_Init *****************
  9413 ;; Defined at:
  9414 ;;		line 13 in file "IIC.c"
  9415 ;; Parameters:    Size  Location     Type
  9416 ;;  c               4    6[BANK0 ] const unsigned long 
  9417 ;; Auto vars:     Size  Location     Type
  9418 ;;		None
  9419 ;; Return value:  Size  Location     Type
  9420 ;;                  1    wreg      void 
  9421 ;; Registers used:
  9422 ;;		wreg, status,2, status,0, pclath, cstack
  9423 ;; Tracked objects:
  9424 ;;		On entry : 0/0
  9425 ;;		On exit  : 0/0
  9426 ;;		Unchanged: 0/0
  9427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9428 ;;      Params:         0       4       0       0       0
  9429 ;;      Locals:         0       0       0       0       0
  9430 ;;      Temps:          0       4       0       0       0
  9431 ;;      Totals:         0       8       0       0       0
  9432 ;;Total ram usage:        8 bytes
  9433 ;; Hardware stack levels used: 1
  9434 ;; Hardware stack levels required when called: 2
  9435 ;; This function calls:
  9436 ;;		___lldiv
  9437 ;; This function is called by:
  9438 ;;		_setup
  9439 ;; This function uses a non-reentrant model
  9440 ;;
  9441                           
  9442     1CFF                     _I2C_Master_Init:	
  9443                           ;psect for function _I2C_Master_Init
  9444                           
  9445     1CFF                     l3790:	
  9446                           ;incstack = 0
  9447                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  9448                           
  9449                           
  9450                           ;IIC.c: 13: void I2C_Master_Init(const unsigned long c);IIC.c: 14: {;IIC.c: 15:     SSPC
      +                          ON = 0b00101000;
  9451     1CFF  3028               	movlw	40
  9452     1D00  1283               	bcf	3,5	;RP0=0, select bank0
  9453     1D01  1303               	bcf	3,6	;RP1=0, select bank0
  9454     1D02  0094               	movwf	20	;volatile
  9455     1D03                     l3792:
  9456                           
  9457                           ;IIC.c: 16:     SSPCON2 = 0;
  9458     1D03  1683               	bsf	3,5	;RP0=1, select bank1
  9459     1D04  1303               	bcf	3,6	;RP1=0, select bank1
  9460     1D05  0191               	clrf	17	;volatile
  9461     1D06                     l3794:
  9462                           
  9463                           ;IIC.c: 17:     SSPADD = (2000000/(4*c))-1;
  9464     1D06  1283               	bcf	3,5	;RP0=0, select bank0
  9465     1D07  1303               	bcf	3,6	;RP1=0, select bank0
  9466     1D08  0826               	movf	I2C_Master_Init@c,w
  9467     1D09  00AA               	movwf	??_I2C_Master_Init
  9468     1D0A  0827               	movf	I2C_Master_Init@c+1,w
  9469     1D0B  00AB               	movwf	??_I2C_Master_Init+1
  9470     1D0C  0828               	movf	I2C_Master_Init@c+2,w
  9471     1D0D  00AC               	movwf	??_I2C_Master_Init+2
  9472     1D0E  0829               	movf	I2C_Master_Init@c+3,w
  9473     1D0F  00AD               	movwf	??_I2C_Master_Init+3
  9474     1D10  3002               	movlw	2
  9475     1D11                     u6135:
  9476     1D11  1003               	clrc
  9477     1D12  0DAA               	rlf	??_I2C_Master_Init,f
  9478     1D13  0DAB               	rlf	??_I2C_Master_Init+1,f
  9479     1D14  0DAC               	rlf	??_I2C_Master_Init+2,f
  9480     1D15  0DAD               	rlf	??_I2C_Master_Init+3,f
  9481     1D16                     u6130:
  9482     1D16  3EFF               	addlw	-1
  9483     1D17  1D03               	skipz
  9484     1D18  2D11               	goto	u6135
  9485     1D19  082D               	movf	??_I2C_Master_Init+3,w
  9486     1D1A  00F5               	movwf	___lldiv@divisor+3
  9487     1D1B  082C               	movf	??_I2C_Master_Init+2,w
  9488     1D1C  00F4               	movwf	___lldiv@divisor+2
  9489     1D1D  082B               	movf	??_I2C_Master_Init+1,w
  9490     1D1E  00F3               	movwf	___lldiv@divisor+1
  9491     1D1F  082A               	movf	??_I2C_Master_Init,w
  9492     1D20  00F2               	movwf	___lldiv@divisor
  9493     1D21  3000               	movlw	0
  9494     1D22  00F9               	movwf	___lldiv@dividend+3
  9495     1D23  301E               	movlw	30
  9496     1D24  00F8               	movwf	___lldiv@dividend+2
  9497     1D25  3084               	movlw	132
  9498     1D26  00F7               	movwf	___lldiv@dividend+1
  9499     1D27  3080               	movlw	128
  9500     1D28  00F6               	movwf	___lldiv@dividend
  9501     1D29  160A  158A  2798  160A  158A  	fcall	___lldiv
  9502     1D2E  0872               	movf	?___lldiv,w
  9503     1D2F  3EFF               	addlw	255
  9504     1D30  1683               	bsf	3,5	;RP0=1, select bank1
  9505     1D31  1303               	bcf	3,6	;RP1=0, select bank1
  9506     1D32  0093               	movwf	19	;volatile
  9507     1D33                     l3796:
  9508                           
  9509                           ;IIC.c: 18:     SSPSTAT = 0;
  9510     1D33  0194               	clrf	20	;volatile
  9511     1D34                     l3798:
  9512                           
  9513                           ;IIC.c: 19:     TRISCbits.TRISC3 = 1;
  9514     1D34  1587               	bsf	7,3	;volatile
  9515     1D35                     l3800:
  9516                           
  9517                           ;IIC.c: 20:     TRISCbits.TRISC4 = 1;
  9518     1D35  1607               	bsf	7,4	;volatile
  9519     1D36                     l204:
  9520     1D36  0008               	return
  9521     1D37                     __end_of_I2C_Master_Init:
  9522                           
  9523                           	psect	text24
  9524     1F98                     __ptext24:	
  9525 ;; *************** function ___lldiv *****************
  9526 ;; Defined at:
  9527 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  9528 ;; Parameters:    Size  Location     Type
  9529 ;;  divisor         4    2[COMMON] unsigned long 
  9530 ;;  dividend        4    6[COMMON] unsigned long 
  9531 ;; Auto vars:     Size  Location     Type
  9532 ;;  quotient        4    1[BANK0 ] unsigned long 
  9533 ;;  counter         1    5[BANK0 ] unsigned char 
  9534 ;; Return value:  Size  Location     Type
  9535 ;;                  4    2[COMMON] unsigned long 
  9536 ;; Registers used:
  9537 ;;		wreg, status,2, status,0
  9538 ;; Tracked objects:
  9539 ;;		On entry : 0/0
  9540 ;;		On exit  : 0/0
  9541 ;;		Unchanged: 0/0
  9542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9543 ;;      Params:         8       0       0       0       0
  9544 ;;      Locals:         0       5       0       0       0
  9545 ;;      Temps:          0       1       0       0       0
  9546 ;;      Totals:         8       6       0       0       0
  9547 ;;Total ram usage:       14 bytes
  9548 ;; Hardware stack levels used: 1
  9549 ;; Hardware stack levels required when called: 1
  9550 ;; This function calls:
  9551 ;;		Nothing
  9552 ;; This function is called by:
  9553 ;;		_I2C_Master_Init
  9554 ;;		_sprintf
  9555 ;; This function uses a non-reentrant model
  9556 ;;
  9557                           
  9558     1F98                     ___lldiv:	
  9559                           ;psect for function ___lldiv
  9560                           
  9561     1F98                     l3580:	
  9562                           ;incstack = 0
  9563                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  9564                           
  9565     1F98  3000               	movlw	0
  9566     1F99  1283               	bcf	3,5	;RP0=0, select bank0
  9567     1F9A  1303               	bcf	3,6	;RP1=0, select bank0
  9568     1F9B  00A4               	movwf	___lldiv@quotient+3
  9569     1F9C  3000               	movlw	0
  9570     1F9D  00A3               	movwf	___lldiv@quotient+2
  9571     1F9E  3000               	movlw	0
  9572     1F9F  00A2               	movwf	___lldiv@quotient+1
  9573     1FA0  3000               	movlw	0
  9574     1FA1  00A1               	movwf	___lldiv@quotient
  9575     1FA2  0875               	movf	___lldiv@divisor+3,w
  9576     1FA3  0474               	iorwf	___lldiv@divisor+2,w
  9577     1FA4  0473               	iorwf	___lldiv@divisor+1,w
  9578     1FA5  0472               	iorwf	___lldiv@divisor,w
  9579     1FA6  1903               	skipnz
  9580     1FA7  2FA9               	goto	u5611
  9581     1FA8  2FAA               	goto	u5610
  9582     1FA9                     u5611:
  9583     1FA9  2FF7               	goto	l3600
  9584     1FAA                     u5610:
  9585     1FAA                     l3582:
  9586     1FAA  01A5               	clrf	___lldiv@counter
  9587     1FAB  0AA5               	incf	___lldiv@counter,f
  9588     1FAC  2FBA               	goto	l3586
  9589     1FAD                     l3584:
  9590     1FAD  3001               	movlw	1
  9591     1FAE  00A0               	movwf	??___lldiv
  9592     1FAF                     u5625:
  9593     1FAF  1003               	clrc
  9594     1FB0  0DF2               	rlf	___lldiv@divisor,f
  9595     1FB1  0DF3               	rlf	___lldiv@divisor+1,f
  9596     1FB2  0DF4               	rlf	___lldiv@divisor+2,f
  9597     1FB3  0DF5               	rlf	___lldiv@divisor+3,f
  9598     1FB4  0BA0               	decfsz	??___lldiv,f
  9599     1FB5  2FAF               	goto	u5625
  9600     1FB6  3001               	movlw	1
  9601     1FB7  00A0               	movwf	??___lldiv
  9602     1FB8  0820               	movf	??___lldiv,w
  9603     1FB9  07A5               	addwf	___lldiv@counter,f
  9604     1FBA                     l3586:
  9605     1FBA  1FF5               	btfss	___lldiv@divisor+3,7
  9606     1FBB  2FBD               	goto	u5631
  9607     1FBC  2FBE               	goto	u5630
  9608     1FBD                     u5631:
  9609     1FBD  2FAD               	goto	l3584
  9610     1FBE                     u5630:
  9611     1FBE                     l3588:
  9612     1FBE  3001               	movlw	1
  9613     1FBF  00A0               	movwf	??___lldiv
  9614     1FC0                     u5645:
  9615     1FC0  1003               	clrc
  9616     1FC1  0DA1               	rlf	___lldiv@quotient,f
  9617     1FC2  0DA2               	rlf	___lldiv@quotient+1,f
  9618     1FC3  0DA3               	rlf	___lldiv@quotient+2,f
  9619     1FC4  0DA4               	rlf	___lldiv@quotient+3,f
  9620     1FC5  0BA0               	decfsz	??___lldiv,f
  9621     1FC6  2FC0               	goto	u5645
  9622     1FC7                     l3590:
  9623     1FC7  0875               	movf	___lldiv@divisor+3,w
  9624     1FC8  0279               	subwf	___lldiv@dividend+3,w
  9625     1FC9  1D03               	skipz
  9626     1FCA  2FD5               	goto	u5655
  9627     1FCB  0874               	movf	___lldiv@divisor+2,w
  9628     1FCC  0278               	subwf	___lldiv@dividend+2,w
  9629     1FCD  1D03               	skipz
  9630     1FCE  2FD5               	goto	u5655
  9631     1FCF  0873               	movf	___lldiv@divisor+1,w
  9632     1FD0  0277               	subwf	___lldiv@dividend+1,w
  9633     1FD1  1D03               	skipz
  9634     1FD2  2FD5               	goto	u5655
  9635     1FD3  0872               	movf	___lldiv@divisor,w
  9636     1FD4  0276               	subwf	___lldiv@dividend,w
  9637     1FD5                     u5655:
  9638     1FD5  1C03               	skipc
  9639     1FD6  2FD8               	goto	u5651
  9640     1FD7  2FD9               	goto	u5650
  9641     1FD8                     u5651:
  9642     1FD8  2FE8               	goto	l3596
  9643     1FD9                     u5650:
  9644     1FD9                     l3592:
  9645     1FD9  0872               	movf	___lldiv@divisor,w
  9646     1FDA  02F6               	subwf	___lldiv@dividend,f
  9647     1FDB  0873               	movf	___lldiv@divisor+1,w
  9648     1FDC  1C03               	skipc
  9649     1FDD  0F73               	incfsz	___lldiv@divisor+1,w
  9650     1FDE  02F7               	subwf	___lldiv@dividend+1,f
  9651     1FDF  0874               	movf	___lldiv@divisor+2,w
  9652     1FE0  1C03               	skipc
  9653     1FE1  0F74               	incfsz	___lldiv@divisor+2,w
  9654     1FE2  02F8               	subwf	___lldiv@dividend+2,f
  9655     1FE3  0875               	movf	___lldiv@divisor+3,w
  9656     1FE4  1C03               	skipc
  9657     1FE5  0F75               	incfsz	___lldiv@divisor+3,w
  9658     1FE6  02F9               	subwf	___lldiv@dividend+3,f
  9659     1FE7                     l3594:
  9660     1FE7  1421               	bsf	___lldiv@quotient,0
  9661     1FE8                     l3596:
  9662     1FE8  3001               	movlw	1
  9663     1FE9                     u5665:
  9664     1FE9  1003               	clrc
  9665     1FEA  0CF5               	rrf	___lldiv@divisor+3,f
  9666     1FEB  0CF4               	rrf	___lldiv@divisor+2,f
  9667     1FEC  0CF3               	rrf	___lldiv@divisor+1,f
  9668     1FED  0CF2               	rrf	___lldiv@divisor,f
  9669     1FEE  3EFF               	addlw	-1
  9670     1FEF  1D03               	skipz
  9671     1FF0  2FE9               	goto	u5665
  9672     1FF1                     l3598:
  9673     1FF1  3001               	movlw	1
  9674     1FF2  02A5               	subwf	___lldiv@counter,f
  9675     1FF3  1D03               	btfss	3,2
  9676     1FF4  2FF6               	goto	u5671
  9677     1FF5  2FF7               	goto	u5670
  9678     1FF6                     u5671:
  9679     1FF6  2FBE               	goto	l3588
  9680     1FF7                     u5670:
  9681     1FF7                     l3600:
  9682     1FF7  0824               	movf	___lldiv@quotient+3,w
  9683     1FF8  00F5               	movwf	?___lldiv+3
  9684     1FF9  0823               	movf	___lldiv@quotient+2,w
  9685     1FFA  00F4               	movwf	?___lldiv+2
  9686     1FFB  0822               	movf	___lldiv@quotient+1,w
  9687     1FFC  00F3               	movwf	?___lldiv+1
  9688     1FFD  0821               	movf	___lldiv@quotient,w
  9689     1FFE  00F2               	movwf	?___lldiv
  9690     1FFF                     l445:
  9691     1FFF  0008               	return
  9692     2000                     __end_of___lldiv:
  9693                           
  9694                           	psect	text25
  9695     1D71                     __ptext25:	
  9696 ;; *************** function _Lcd_Write_String *****************
  9697 ;; Defined at:
  9698 ;;		line 98 in file "LCD.c"
  9699 ;; Parameters:    Size  Location     Type
  9700 ;;  a               2    7[COMMON] PTR unsigned char 
  9701 ;;		 -> STR_5(2), TEMP1(4), STR_3(4), STR_2(7), 
  9702 ;;		 -> STR_1(9), 
  9703 ;; Auto vars:     Size  Location     Type
  9704 ;;  i               2    3[BANK0 ] int 
  9705 ;; Return value:  Size  Location     Type
  9706 ;;                  1    wreg      void 
  9707 ;; Registers used:
  9708 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9709 ;; Tracked objects:
  9710 ;;		On entry : 0/0
  9711 ;;		On exit  : 0/0
  9712 ;;		Unchanged: 0/0
  9713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9714 ;;      Params:         2       0       0       0       0
  9715 ;;      Locals:         0       2       0       0       0
  9716 ;;      Temps:          0       3       0       0       0
  9717 ;;      Totals:         2       5       0       0       0
  9718 ;;Total ram usage:        7 bytes
  9719 ;; Hardware stack levels used: 1
  9720 ;; Hardware stack levels required when called: 3
  9721 ;; This function calls:
  9722 ;;		_Lcd_Write_Char
  9723 ;; This function is called by:
  9724 ;;		_main
  9725 ;; This function uses a non-reentrant model
  9726 ;;
  9727                           
  9728     1D71                     _Lcd_Write_String:	
  9729                           ;psect for function _Lcd_Write_String
  9730                           
  9731     1D71                     l4044:	
  9732                           ;incstack = 0
  9733                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9734                           
  9735                           
  9736                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  9737     1D71  1283               	bcf	3,5	;RP0=0, select bank0
  9738     1D72  1303               	bcf	3,6	;RP1=0, select bank0
  9739     1D73  01A3               	clrf	Lcd_Write_String@i
  9740     1D74  01A4               	clrf	Lcd_Write_String@i+1
  9741     1D75  2D9A               	goto	l4050
  9742     1D76                     l4046:
  9743                           
  9744                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  9745     1D76  0823               	movf	Lcd_Write_String@i,w
  9746     1D77  0777               	addwf	Lcd_Write_String@a,w
  9747     1D78  00A1               	movwf	??_Lcd_Write_String+1
  9748     1D79  0878               	movf	Lcd_Write_String@a+1,w
  9749     1D7A  00A0               	movwf	??_Lcd_Write_String
  9750     1D7B  1803               	skipnc
  9751     1D7C  0AA0               	incf	??_Lcd_Write_String,f
  9752     1D7D  1FA3               	btfss	Lcd_Write_String@i,7
  9753     1D7E  2D80               	goto	u6760
  9754     1D7F  03A0               	decf	??_Lcd_Write_String,f
  9755     1D80                     u6760:
  9756     1D80  1283               	bcf	3,5	;RP0=0, select bank0
  9757     1D81  1303               	bcf	3,6	;RP1=0, select bank0
  9758     1D82  0820               	movf	??_Lcd_Write_String,w
  9759     1D83  00A2               	movwf	??_Lcd_Write_String+2
  9760     1D84  0822               	movf	??_Lcd_Write_String+2,w
  9761     1D85  00FF               	movwf	btemp+1
  9762     1D86  0821               	movf	??_Lcd_Write_String+1,w
  9763     1D87  0084               	movwf	4
  9764     1D88  120A  158A  2000  160A  158A  	fcall	stringtab
  9765     1D8D  160A  158A  24CA  160A  158A  	fcall	_Lcd_Write_Char
  9766     1D92                     l4048:
  9767     1D92  3001               	movlw	1
  9768     1D93  1283               	bcf	3,5	;RP0=0, select bank0
  9769     1D94  1303               	bcf	3,6	;RP1=0, select bank0
  9770     1D95  07A3               	addwf	Lcd_Write_String@i,f
  9771     1D96  1803               	skipnc
  9772     1D97  0AA4               	incf	Lcd_Write_String@i+1,f
  9773     1D98  3000               	movlw	0
  9774     1D99  07A4               	addwf	Lcd_Write_String@i+1,f
  9775     1D9A                     l4050:
  9776     1D9A  0823               	movf	Lcd_Write_String@i,w
  9777     1D9B  0777               	addwf	Lcd_Write_String@a,w
  9778     1D9C  00A1               	movwf	??_Lcd_Write_String+1
  9779     1D9D  0878               	movf	Lcd_Write_String@a+1,w
  9780     1D9E  00A0               	movwf	??_Lcd_Write_String
  9781     1D9F  1803               	skipnc
  9782     1DA0  0AA0               	incf	??_Lcd_Write_String,f
  9783     1DA1  1FA3               	btfss	Lcd_Write_String@i,7
  9784     1DA2  2DA4               	goto	u6770
  9785     1DA3  03A0               	decf	??_Lcd_Write_String,f
  9786     1DA4                     u6770:
  9787     1DA4  1283               	bcf	3,5	;RP0=0, select bank0
  9788     1DA5  1303               	bcf	3,6	;RP1=0, select bank0
  9789     1DA6  0820               	movf	??_Lcd_Write_String,w
  9790     1DA7  00A2               	movwf	??_Lcd_Write_String+2
  9791     1DA8  0822               	movf	??_Lcd_Write_String+2,w
  9792     1DA9  00FF               	movwf	btemp+1
  9793     1DAA  0821               	movf	??_Lcd_Write_String+1,w
  9794     1DAB  0084               	movwf	4
  9795     1DAC  120A  158A  2000  160A  158A  	fcall	stringtab
  9796     1DB1  3A00               	xorlw	0
  9797     1DB2  1D03               	skipz
  9798     1DB3  2DB5               	goto	u6781
  9799     1DB4  2DB6               	goto	u6780
  9800     1DB5                     u6781:
  9801     1DB5  2D76               	goto	l4046
  9802     1DB6                     u6780:
  9803     1DB6                     l169:
  9804     1DB6  0008               	return
  9805     1DB7                     __end_of_Lcd_Write_String:
  9806                           
  9807                           	psect	text26
  9808     1CCA                     __ptext26:	
  9809 ;; *************** function _Lcd_Write_Char *****************
  9810 ;; Defined at:
  9811 ;;		line 83 in file "LCD.c"
  9812 ;; Parameters:    Size  Location     Type
  9813 ;;  a               1    wreg     unsigned char 
  9814 ;; Auto vars:     Size  Location     Type
  9815 ;;  a               1    6[COMMON] unsigned char 
  9816 ;;  y               1    5[COMMON] unsigned char 
  9817 ;;  temp            1    4[COMMON] unsigned char 
  9818 ;; Return value:  Size  Location     Type
  9819 ;;                  1    wreg      void 
  9820 ;; Registers used:
  9821 ;;		wreg, status,2, status,0, pclath, cstack
  9822 ;; Tracked objects:
  9823 ;;		On entry : 0/0
  9824 ;;		On exit  : 0/0
  9825 ;;		Unchanged: 0/0
  9826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9827 ;;      Params:         0       0       0       0       0
  9828 ;;      Locals:         3       0       0       0       0
  9829 ;;      Temps:          1       0       0       0       0
  9830 ;;      Totals:         4       0       0       0       0
  9831 ;;Total ram usage:        4 bytes
  9832 ;; Hardware stack levels used: 1
  9833 ;; Hardware stack levels required when called: 2
  9834 ;; This function calls:
  9835 ;;		_Lcd_Port
  9836 ;; This function is called by:
  9837 ;;		_main
  9838 ;;		_Lcd_Write_String
  9839 ;; This function uses a non-reentrant model
  9840 ;;
  9841                           
  9842     1CCA                     _Lcd_Write_Char:	
  9843                           ;psect for function _Lcd_Write_Char
  9844                           
  9845                           
  9846                           ;incstack = 0
  9847                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9848                           ;Lcd_Write_Char@a stored from wreg
  9849     1CCA  00F6               	movwf	Lcd_Write_Char@a
  9850     1CCB                     l3770:
  9851                           
  9852                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  9853     1CCB  0876               	movf	Lcd_Write_Char@a,w
  9854     1CCC  390F               	andlw	15
  9855     1CCD  00F4               	movwf	Lcd_Write_Char@temp
  9856                           
  9857                           ;LCD.c: 86:     y = a & 0xF0;
  9858     1CCE  0876               	movf	Lcd_Write_Char@a,w
  9859     1CCF  39F0               	andlw	240
  9860     1CD0  00F5               	movwf	Lcd_Write_Char@y
  9861     1CD1                     l3772:
  9862                           
  9863                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  9864     1CD1  1283               	bcf	3,5	;RP0=0, select bank0
  9865     1CD2  1303               	bcf	3,6	;RP1=0, select bank0
  9866     1CD3  1508               	bsf	8,2	;volatile
  9867     1CD4                     l3774:
  9868                           
  9869                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  9870     1CD4  0875               	movf	Lcd_Write_Char@y,w
  9871     1CD5  00F3               	movwf	??_Lcd_Write_Char
  9872     1CD6  3004               	movlw	4
  9873     1CD7                     u6125:
  9874     1CD7  1003               	clrc
  9875     1CD8  0CF3               	rrf	??_Lcd_Write_Char,f
  9876     1CD9  3EFF               	addlw	-1
  9877     1CDA  1D03               	skipz
  9878     1CDB  2CD7               	goto	u6125
  9879     1CDC  0873               	movf	??_Lcd_Write_Char,w
  9880     1CDD  160A  158A  23F8  160A  158A  	fcall	_Lcd_Port
  9881     1CE2                     l3776:
  9882                           
  9883                           ;LCD.c: 89:     RD3 = 1;
  9884     1CE2  1283               	bcf	3,5	;RP0=0, select bank0
  9885     1CE3  1303               	bcf	3,6	;RP1=0, select bank0
  9886     1CE4  1588               	bsf	8,3	;volatile
  9887     1CE5                     l3778:
  9888                           
  9889                           ;LCD.c: 90:     _delay((unsigned long)((40)*(2000000/4000000.0)));
  9890     1CE5  3006               	movlw	6
  9891     1CE6  00F3               	movwf	??_Lcd_Write_Char
  9892     1CE7                     u7187:
  9893     1CE7  0BF3               	decfsz	??_Lcd_Write_Char,f
  9894     1CE8  2CE7               	goto	u7187
  9895     1CE9  0000               	nop
  9896     1CEA                     l3780:
  9897                           
  9898                           ;LCD.c: 91:     RD3 = 0;
  9899     1CEA  1283               	bcf	3,5	;RP0=0, select bank0
  9900     1CEB  1303               	bcf	3,6	;RP1=0, select bank0
  9901     1CEC  1188               	bcf	8,3	;volatile
  9902     1CED                     l3782:
  9903                           
  9904                           ;LCD.c: 92:     Lcd_Port(temp);
  9905     1CED  0874               	movf	Lcd_Write_Char@temp,w
  9906     1CEE  160A  158A  23F8  160A  158A  	fcall	_Lcd_Port
  9907     1CF3                     l3784:
  9908                           
  9909                           ;LCD.c: 93:     RD3 = 1;
  9910     1CF3  1283               	bcf	3,5	;RP0=0, select bank0
  9911     1CF4  1303               	bcf	3,6	;RP1=0, select bank0
  9912     1CF5  1588               	bsf	8,3	;volatile
  9913     1CF6                     l3786:
  9914                           
  9915                           ;LCD.c: 94:     _delay((unsigned long)((40)*(2000000/4000000.0)));
  9916     1CF6  3006               	movlw	6
  9917     1CF7  00F3               	movwf	??_Lcd_Write_Char
  9918     1CF8                     u7197:
  9919     1CF8  0BF3               	decfsz	??_Lcd_Write_Char,f
  9920     1CF9  2CF8               	goto	u7197
  9921     1CFA  0000               	nop
  9922     1CFB                     l3788:
  9923                           
  9924                           ;LCD.c: 95:     RD3 = 0;
  9925     1CFB  1283               	bcf	3,5	;RP0=0, select bank0
  9926     1CFC  1303               	bcf	3,6	;RP1=0, select bank0
  9927     1CFD  1188               	bcf	8,3	;volatile
  9928     1CFE                     l163:
  9929     1CFE  0008               	return
  9930     1CFF                     __end_of_Lcd_Write_Char:
  9931                           
  9932                           	psect	text27
  9933     1DFD                     __ptext27:	
  9934 ;; *************** function _Lcd_Set_Cursor *****************
  9935 ;; Defined at:
  9936 ;;		line 48 in file "LCD.c"
  9937 ;; Parameters:    Size  Location     Type
  9938 ;;  a               1    wreg     unsigned char 
  9939 ;;  b               1    6[COMMON] unsigned char 
  9940 ;; Auto vars:     Size  Location     Type
  9941 ;;  a               1    0[BANK0 ] unsigned char 
  9942 ;;  temp            1    3[BANK0 ] unsigned char 
  9943 ;;  y               1    2[BANK0 ] unsigned char 
  9944 ;;  z               1    1[BANK0 ] unsigned char 
  9945 ;; Return value:  Size  Location     Type
  9946 ;;                  1    wreg      void 
  9947 ;; Registers used:
  9948 ;;		wreg, status,2, status,0, pclath, cstack
  9949 ;; Tracked objects:
  9950 ;;		On entry : 0/0
  9951 ;;		On exit  : 0/0
  9952 ;;		Unchanged: 0/0
  9953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9954 ;;      Params:         1       0       0       0       0
  9955 ;;      Locals:         0       4       0       0       0
  9956 ;;      Temps:          1       0       0       0       0
  9957 ;;      Totals:         2       4       0       0       0
  9958 ;;Total ram usage:        6 bytes
  9959 ;; Hardware stack levels used: 1
  9960 ;; Hardware stack levels required when called: 3
  9961 ;; This function calls:
  9962 ;;		_Lcd_Cmd
  9963 ;; This function is called by:
  9964 ;;		_main
  9965 ;; This function uses a non-reentrant model
  9966 ;;
  9967                           
  9968     1DFD                     _Lcd_Set_Cursor:	
  9969                           ;psect for function _Lcd_Set_Cursor
  9970                           
  9971                           
  9972                           ;incstack = 0
  9973                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9974                           ;Lcd_Set_Cursor@a stored from wreg
  9975     1DFD  1283               	bcf	3,5	;RP0=0, select bank0
  9976     1DFE  1303               	bcf	3,6	;RP1=0, select bank0
  9977     1DFF  00A0               	movwf	Lcd_Set_Cursor@a
  9978     1E00                     l4024:
  9979                           
  9980                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  9981     1E00  0320               	decf	Lcd_Set_Cursor@a,w
  9982     1E01  1D03               	btfss	3,2
  9983     1E02  2E04               	goto	u6721
  9984     1E03  2E05               	goto	u6720
  9985     1E04                     u6721:
  9986     1E04  2E24               	goto	l4034
  9987     1E05                     u6720:
  9988     1E05                     l4026:
  9989                           
  9990                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  9991     1E05  0876               	movf	Lcd_Set_Cursor@b,w
  9992     1E06  3E7F               	addlw	127
  9993     1E07  00A3               	movwf	Lcd_Set_Cursor@temp
  9994                           
  9995                           ;LCD.c: 52:         z = temp >> 4;
  9996     1E08  0823               	movf	Lcd_Set_Cursor@temp,w
  9997     1E09  00F7               	movwf	??_Lcd_Set_Cursor
  9998     1E0A  3004               	movlw	4
  9999     1E0B                     u6735:
 10000     1E0B  1003               	clrc
 10001     1E0C  0CF7               	rrf	??_Lcd_Set_Cursor,f
 10002     1E0D  3EFF               	addlw	-1
 10003     1E0E  1D03               	skipz
 10004     1E0F  2E0B               	goto	u6735
 10005     1E10  0877               	movf	??_Lcd_Set_Cursor,w
 10006     1E11  00A1               	movwf	Lcd_Set_Cursor@z
 10007     1E12                     l4028:
 10008                           
 10009                           ;LCD.c: 53:         y = temp & 0x0F;
 10010     1E12  0823               	movf	Lcd_Set_Cursor@temp,w
 10011     1E13  390F               	andlw	15
 10012     1E14  00A2               	movwf	Lcd_Set_Cursor@y
 10013     1E15                     l4030:
 10014                           
 10015                           ;LCD.c: 54:         Lcd_Cmd(z);
 10016     1E15  0821               	movf	Lcd_Set_Cursor@z,w
 10017     1E16  160A  158A  23DE  160A  158A  	fcall	_Lcd_Cmd
 10018     1E1B                     l4032:
 10019                           
 10020                           ;LCD.c: 55:         Lcd_Cmd(y);
 10021     1E1B  1283               	bcf	3,5	;RP0=0, select bank0
 10022     1E1C  1303               	bcf	3,6	;RP1=0, select bank0
 10023     1E1D  0822               	movf	Lcd_Set_Cursor@y,w
 10024     1E1E  160A  158A  23DE  160A  158A  	fcall	_Lcd_Cmd
 10025                           
 10026                           ;LCD.c: 56:     } else if (a == 2) {
 10027     1E23  2E48               	goto	l157
 10028     1E24                     l4034:
 10029     1E24  3002               	movlw	2
 10030     1E25  0620               	xorwf	Lcd_Set_Cursor@a,w
 10031     1E26  1D03               	btfss	3,2
 10032     1E27  2E29               	goto	u6741
 10033     1E28  2E2A               	goto	u6740
 10034     1E29                     u6741:
 10035     1E29  2E48               	goto	l157
 10036     1E2A                     u6740:
 10037     1E2A                     l4036:
 10038                           
 10039                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
 10040     1E2A  0876               	movf	Lcd_Set_Cursor@b,w
 10041     1E2B  3EBF               	addlw	191
 10042     1E2C  00A3               	movwf	Lcd_Set_Cursor@temp
 10043                           
 10044                           ;LCD.c: 58:         z = temp >> 4;
 10045     1E2D  0823               	movf	Lcd_Set_Cursor@temp,w
 10046     1E2E  00F7               	movwf	??_Lcd_Set_Cursor
 10047     1E2F  3004               	movlw	4
 10048     1E30                     u6755:
 10049     1E30  1003               	clrc
 10050     1E31  0CF7               	rrf	??_Lcd_Set_Cursor,f
 10051     1E32  3EFF               	addlw	-1
 10052     1E33  1D03               	skipz
 10053     1E34  2E30               	goto	u6755
 10054     1E35  0877               	movf	??_Lcd_Set_Cursor,w
 10055     1E36  00A1               	movwf	Lcd_Set_Cursor@z
 10056     1E37                     l4038:
 10057                           
 10058                           ;LCD.c: 59:         y = temp & 0x0F;
 10059     1E37  0823               	movf	Lcd_Set_Cursor@temp,w
 10060     1E38  390F               	andlw	15
 10061     1E39  00A2               	movwf	Lcd_Set_Cursor@y
 10062     1E3A                     l4040:
 10063                           
 10064                           ;LCD.c: 60:         Lcd_Cmd(z);
 10065     1E3A  0821               	movf	Lcd_Set_Cursor@z,w
 10066     1E3B  160A  158A  23DE  160A  158A  	fcall	_Lcd_Cmd
 10067     1E40                     l4042:
 10068                           
 10069                           ;LCD.c: 61:         Lcd_Cmd(y);
 10070     1E40  1283               	bcf	3,5	;RP0=0, select bank0
 10071     1E41  1303               	bcf	3,6	;RP1=0, select bank0
 10072     1E42  0822               	movf	Lcd_Set_Cursor@y,w
 10073     1E43  160A  158A  23DE  160A  158A  	fcall	_Lcd_Cmd
 10074     1E48                     l157:
 10075     1E48  0008               	return
 10076     1E49                     __end_of_Lcd_Set_Cursor:
 10077                           
 10078                           	psect	text28
 10079     1008                     __ptext28:	
 10080 ;; *************** function _Lcd_Init *****************
 10081 ;; Defined at:
 10082 ;;		line 65 in file "LCD.c"
 10083 ;; Parameters:    Size  Location     Type
 10084 ;;		None
 10085 ;; Auto vars:     Size  Location     Type
 10086 ;;		None
 10087 ;; Return value:  Size  Location     Type
 10088 ;;                  1    wreg      void 
 10089 ;; Registers used:
 10090 ;;		wreg, status,2, status,0, pclath, cstack
 10091 ;; Tracked objects:
 10092 ;;		On entry : 0/0
 10093 ;;		On exit  : 0/0
 10094 ;;		Unchanged: 0/0
 10095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10096 ;;      Params:         0       0       0       0       0
 10097 ;;      Locals:         0       0       0       0       0
 10098 ;;      Temps:          2       0       0       0       0
 10099 ;;      Totals:         2       0       0       0       0
 10100 ;;Total ram usage:        2 bytes
 10101 ;; Hardware stack levels used: 1
 10102 ;; Hardware stack levels required when called: 3
 10103 ;; This function calls:
 10104 ;;		_Lcd_Cmd
 10105 ;;		_Lcd_Port
 10106 ;; This function is called by:
 10107 ;;		_main
 10108 ;; This function uses a non-reentrant model
 10109 ;;
 10110                           
 10111     1008                     _Lcd_Init:	
 10112                           ;psect for function _Lcd_Init
 10113                           
 10114     1008                     l4012:	
 10115                           ;incstack = 0
 10116                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 10117                           
 10118                           
 10119                           ;LCD.c: 66:     Lcd_Port(0x00);
 10120     1008  3000               	movlw	0
 10121     1009  160A  158A  23F8  160A  118A  	fcall	_Lcd_Port
 10122     100E                     l4014:
 10123                           
 10124                           ;LCD.c: 67:     _delay((unsigned long)((20)*(2000000/4000.0)));
 10125     100E  300D               	movlw	13
 10126     100F  00F7               	movwf	??_Lcd_Init+1
 10127     1010  30FB               	movlw	251
 10128     1011  00F6               	movwf	??_Lcd_Init
 10129     1012                     u7207:
 10130     1012  0BF6               	decfsz	??_Lcd_Init,f
 10131     1013  2812               	goto	u7207
 10132     1014  0BF7               	decfsz	??_Lcd_Init+1,f
 10133     1015  2812               	goto	u7207
 10134     1016  2817               	nop2
 10135     1017                     l4016:
 10136                           
 10137                           ;LCD.c: 68:     Lcd_Cmd(0x03);
 10138     1017  3003               	movlw	3
 10139     1018  160A  158A  23DE  160A  118A  	fcall	_Lcd_Cmd
 10140                           
 10141                           ;LCD.c: 69:     _delay((unsigned long)((5)*(2000000/4000.0)));
 10142     101D  3004               	movlw	4
 10143     101E  00F7               	movwf	??_Lcd_Init+1
 10144     101F  303D               	movlw	61
 10145     1020  00F6               	movwf	??_Lcd_Init
 10146     1021                     u7217:
 10147     1021  0BF6               	decfsz	??_Lcd_Init,f
 10148     1022  2821               	goto	u7217
 10149     1023  0BF7               	decfsz	??_Lcd_Init+1,f
 10150     1024  2821               	goto	u7217
 10151     1025  2826               	nop2
 10152     1026                     l4018:
 10153                           
 10154                           ;LCD.c: 70:     Lcd_Cmd(0x03);
 10155     1026  3003               	movlw	3
 10156     1027  160A  158A  23DE  160A  118A  	fcall	_Lcd_Cmd
 10157     102C                     l4020:
 10158                           
 10159                           ;LCD.c: 71:     _delay((unsigned long)((11)*(2000000/4000.0)));
 10160     102C  3008               	movlw	8
 10161     102D  00F7               	movwf	??_Lcd_Init+1
 10162     102E  3023               	movlw	35
 10163     102F  00F6               	movwf	??_Lcd_Init
 10164     1030                     u7227:
 10165     1030  0BF6               	decfsz	??_Lcd_Init,f
 10166     1031  2830               	goto	u7227
 10167     1032  0BF7               	decfsz	??_Lcd_Init+1,f
 10168     1033  2830               	goto	u7227
 10169                           
 10170                           ;LCD.c: 72:     Lcd_Cmd(0x03);
 10171     1034  3003               	movlw	3
 10172     1035  160A  158A  23DE  160A  118A  	fcall	_Lcd_Cmd
 10173                           
 10174                           ;LCD.c: 74:     Lcd_Cmd(0x02);
 10175     103A  3002               	movlw	2
 10176     103B  160A  158A  23DE  160A  118A  	fcall	_Lcd_Cmd
 10177                           
 10178                           ;LCD.c: 75:     Lcd_Cmd(0x02);
 10179     1040  3002               	movlw	2
 10180     1041  160A  158A  23DE  160A  118A  	fcall	_Lcd_Cmd
 10181                           
 10182                           ;LCD.c: 76:     Lcd_Cmd(0x08);
 10183     1046  3008               	movlw	8
 10184     1047  160A  158A  23DE  160A  118A  	fcall	_Lcd_Cmd
 10185                           
 10186                           ;LCD.c: 77:     Lcd_Cmd(0x00);
 10187     104C  3000               	movlw	0
 10188     104D  160A  158A  23DE  160A  118A  	fcall	_Lcd_Cmd
 10189                           
 10190                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
 10191     1052  300C               	movlw	12
 10192     1053  160A  158A  23DE  160A  118A  	fcall	_Lcd_Cmd
 10193                           
 10194                           ;LCD.c: 79:     Lcd_Cmd(0x00);
 10195     1058  3000               	movlw	0
 10196     1059  160A  158A  23DE  160A  118A  	fcall	_Lcd_Cmd
 10197                           
 10198                           ;LCD.c: 80:     Lcd_Cmd(0x06);
 10199     105E  3006               	movlw	6
 10200     105F  160A  158A  23DE  160A  118A  	fcall	_Lcd_Cmd
 10201     1064                     l160:
 10202     1064  0008               	return
 10203     1065                     __end_of_Lcd_Init:
 10204                           
 10205                           	psect	text29
 10206     1B9E                     __ptext29:	
 10207 ;; *************** function _Lcd_Clear *****************
 10208 ;; Defined at:
 10209 ;;		line 43 in file "LCD.c"
 10210 ;; Parameters:    Size  Location     Type
 10211 ;;		None
 10212 ;; Auto vars:     Size  Location     Type
 10213 ;;		None
 10214 ;; Return value:  Size  Location     Type
 10215 ;;                  1    wreg      void 
 10216 ;; Registers used:
 10217 ;;		wreg, status,2, status,0, pclath, cstack
 10218 ;; Tracked objects:
 10219 ;;		On entry : 0/0
 10220 ;;		On exit  : 0/0
 10221 ;;		Unchanged: 0/0
 10222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10223 ;;      Params:         0       0       0       0       0
 10224 ;;      Locals:         0       0       0       0       0
 10225 ;;      Temps:          0       0       0       0       0
 10226 ;;      Totals:         0       0       0       0       0
 10227 ;;Total ram usage:        0 bytes
 10228 ;; Hardware stack levels used: 1
 10229 ;; Hardware stack levels required when called: 3
 10230 ;; This function calls:
 10231 ;;		_Lcd_Cmd
 10232 ;; This function is called by:
 10233 ;;		_main
 10234 ;; This function uses a non-reentrant model
 10235 ;;
 10236                           
 10237     1B9E                     _Lcd_Clear:	
 10238                           ;psect for function _Lcd_Clear
 10239                           
 10240     1B9E                     l4022:	
 10241                           ;incstack = 0
 10242                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 10243                           
 10244                           
 10245                           ;LCD.c: 44:     Lcd_Cmd(0);
 10246     1B9E  3000               	movlw	0
 10247     1B9F  160A  158A  23DE  160A  158A  	fcall	_Lcd_Cmd
 10248                           
 10249                           ;LCD.c: 45:     Lcd_Cmd(1);
 10250     1BA4  3001               	movlw	1
 10251     1BA5  160A  158A  23DE  160A  158A  	fcall	_Lcd_Cmd
 10252     1BAA                     l151:
 10253     1BAA  0008               	return
 10254     1BAB                     __end_of_Lcd_Clear:
 10255                           
 10256                           	psect	text30
 10257     1BDE                     __ptext30:	
 10258 ;; *************** function _Lcd_Cmd *****************
 10259 ;; Defined at:
 10260 ;;		line 35 in file "LCD.c"
 10261 ;; Parameters:    Size  Location     Type
 10262 ;;  a               1    wreg     unsigned char 
 10263 ;; Auto vars:     Size  Location     Type
 10264 ;;  a               1    5[COMMON] unsigned char 
 10265 ;; Return value:  Size  Location     Type
 10266 ;;                  1    wreg      void 
 10267 ;; Registers used:
 10268 ;;		wreg, status,2, status,0, pclath, cstack
 10269 ;; Tracked objects:
 10270 ;;		On entry : 0/0
 10271 ;;		On exit  : 0/0
 10272 ;;		Unchanged: 0/0
 10273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10274 ;;      Params:         0       0       0       0       0
 10275 ;;      Locals:         1       0       0       0       0
 10276 ;;      Temps:          2       0       0       0       0
 10277 ;;      Totals:         3       0       0       0       0
 10278 ;;Total ram usage:        3 bytes
 10279 ;; Hardware stack levels used: 1
 10280 ;; Hardware stack levels required when called: 2
 10281 ;; This function calls:
 10282 ;;		_Lcd_Port
 10283 ;; This function is called by:
 10284 ;;		_Lcd_Clear
 10285 ;;		_Lcd_Set_Cursor
 10286 ;;		_Lcd_Init
 10287 ;;		_Lcd_Shift_Right
 10288 ;;		_Lcd_Shift_Left
 10289 ;; This function uses a non-reentrant model
 10290 ;;
 10291                           
 10292     1BDE                     _Lcd_Cmd:	
 10293                           ;psect for function _Lcd_Cmd
 10294                           
 10295                           
 10296                           ;incstack = 0
 10297                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10298                           ;Lcd_Cmd@a stored from wreg
 10299     1BDE  00F5               	movwf	Lcd_Cmd@a
 10300     1BDF                     l3802:
 10301                           
 10302                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
 10303     1BDF  1283               	bcf	3,5	;RP0=0, select bank0
 10304     1BE0  1303               	bcf	3,6	;RP1=0, select bank0
 10305     1BE1  1108               	bcf	8,2	;volatile
 10306     1BE2                     l3804:
 10307                           
 10308                           ;LCD.c: 37:     Lcd_Port(a);
 10309     1BE2  0875               	movf	Lcd_Cmd@a,w
 10310     1BE3  160A  158A  23F8  160A  158A  	fcall	_Lcd_Port
 10311     1BE8                     l3806:
 10312                           
 10313                           ;LCD.c: 38:     RD3 = 1;
 10314     1BE8  1283               	bcf	3,5	;RP0=0, select bank0
 10315     1BE9  1303               	bcf	3,6	;RP1=0, select bank0
 10316     1BEA  1588               	bsf	8,3	;volatile
 10317     1BEB                     l3808:
 10318                           
 10319                           ;LCD.c: 39:     _delay((unsigned long)((4)*(2000000/4000.0)));
 10320     1BEB  3003               	movlw	3
 10321     1BEC  00F4               	movwf	??_Lcd_Cmd+1
 10322     1BED  3097               	movlw	151
 10323     1BEE  00F3               	movwf	??_Lcd_Cmd
 10324     1BEF                     u7237:
 10325     1BEF  0BF3               	decfsz	??_Lcd_Cmd,f
 10326     1BF0  2BEF               	goto	u7237
 10327     1BF1  0BF4               	decfsz	??_Lcd_Cmd+1,f
 10328     1BF2  2BEF               	goto	u7237
 10329     1BF3  2BF4               	nop2
 10330     1BF4                     l3810:
 10331                           
 10332                           ;LCD.c: 40:     RD3 = 0;
 10333     1BF4  1283               	bcf	3,5	;RP0=0, select bank0
 10334     1BF5  1303               	bcf	3,6	;RP1=0, select bank0
 10335     1BF6  1188               	bcf	8,3	;volatile
 10336     1BF7                     l148:
 10337     1BF7  0008               	return
 10338     1BF8                     __end_of_Lcd_Cmd:
 10339                           
 10340                           	psect	text31
 10341     1BF8                     __ptext31:	
 10342 ;; *************** function _Lcd_Port *****************
 10343 ;; Defined at:
 10344 ;;		line 13 in file "LCD.c"
 10345 ;; Parameters:    Size  Location     Type
 10346 ;;  a               1    wreg     unsigned char 
 10347 ;; Auto vars:     Size  Location     Type
 10348 ;;  a               1    2[COMMON] unsigned char 
 10349 ;; Return value:  Size  Location     Type
 10350 ;;                  1    wreg      void 
 10351 ;; Registers used:
 10352 ;;		wreg
 10353 ;; Tracked objects:
 10354 ;;		On entry : 0/0
 10355 ;;		On exit  : 0/0
 10356 ;;		Unchanged: 0/0
 10357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10358 ;;      Params:         0       0       0       0       0
 10359 ;;      Locals:         1       0       0       0       0
 10360 ;;      Temps:          0       0       0       0       0
 10361 ;;      Totals:         1       0       0       0       0
 10362 ;;Total ram usage:        1 bytes
 10363 ;; Hardware stack levels used: 1
 10364 ;; Hardware stack levels required when called: 1
 10365 ;; This function calls:
 10366 ;;		Nothing
 10367 ;; This function is called by:
 10368 ;;		_Lcd_Cmd
 10369 ;;		_Lcd_Init
 10370 ;;		_Lcd_Write_Char
 10371 ;; This function uses a non-reentrant model
 10372 ;;
 10373                           
 10374     1BF8                     _Lcd_Port:	
 10375                           ;psect for function _Lcd_Port
 10376                           
 10377                           
 10378                           ;incstack = 0
 10379                           ; Regs used in _Lcd_Port: [wreg]
 10380                           ;Lcd_Port@a stored from wreg
 10381     1BF8  00F2               	movwf	Lcd_Port@a
 10382     1BF9                     l3570:
 10383                           
 10384                           ;LCD.c: 14:     if (a & 1)
 10385     1BF9  1C72               	btfss	Lcd_Port@a,0
 10386     1BFA  2BFC               	goto	u5571
 10387     1BFB  2BFD               	goto	u5570
 10388     1BFC                     u5571:
 10389     1BFC  2C01               	goto	l137
 10390     1BFD                     u5570:
 10391     1BFD                     l3572:
 10392                           
 10393                           ;LCD.c: 15:         RD4 = 1;
 10394     1BFD  1283               	bcf	3,5	;RP0=0, select bank0
 10395     1BFE  1303               	bcf	3,6	;RP1=0, select bank0
 10396     1BFF  1608               	bsf	8,4	;volatile
 10397     1C00  2C04               	goto	l138
 10398     1C01                     l137:	
 10399                           ;LCD.c: 16:     else
 10400                           
 10401                           
 10402                           ;LCD.c: 17:         RD4 = 0;
 10403     1C01  1283               	bcf	3,5	;RP0=0, select bank0
 10404     1C02  1303               	bcf	3,6	;RP1=0, select bank0
 10405     1C03  1208               	bcf	8,4	;volatile
 10406     1C04                     l138:
 10407                           
 10408                           ;LCD.c: 19:     if (a & 2)
 10409     1C04  1CF2               	btfss	Lcd_Port@a,1
 10410     1C05  2C07               	goto	u5581
 10411     1C06  2C08               	goto	u5580
 10412     1C07                     u5581:
 10413     1C07  2C0A               	goto	l139
 10414     1C08                     u5580:
 10415     1C08                     l3574:
 10416                           
 10417                           ;LCD.c: 20:         RD5 = 1;
 10418     1C08  1688               	bsf	8,5	;volatile
 10419     1C09  2C0B               	goto	l140
 10420     1C0A                     l139:	
 10421                           ;LCD.c: 21:     else
 10422                           
 10423                           
 10424                           ;LCD.c: 22:         RD5 = 0;
 10425     1C0A  1288               	bcf	8,5	;volatile
 10426     1C0B                     l140:
 10427                           
 10428                           ;LCD.c: 24:     if (a & 4)
 10429     1C0B  1D72               	btfss	Lcd_Port@a,2
 10430     1C0C  2C0E               	goto	u5591
 10431     1C0D  2C0F               	goto	u5590
 10432     1C0E                     u5591:
 10433     1C0E  2C11               	goto	l141
 10434     1C0F                     u5590:
 10435     1C0F                     l3576:
 10436                           
 10437                           ;LCD.c: 25:         RD6 = 1;
 10438     1C0F  1708               	bsf	8,6	;volatile
 10439     1C10  2C12               	goto	l142
 10440     1C11                     l141:	
 10441                           ;LCD.c: 26:     else
 10442                           
 10443                           
 10444                           ;LCD.c: 27:         RD6 = 0;
 10445     1C11  1308               	bcf	8,6	;volatile
 10446     1C12                     l142:
 10447                           
 10448                           ;LCD.c: 29:     if (a & 8)
 10449     1C12  1DF2               	btfss	Lcd_Port@a,3
 10450     1C13  2C15               	goto	u5601
 10451     1C14  2C16               	goto	u5600
 10452     1C15                     u5601:
 10453     1C15  2C18               	goto	l143
 10454     1C16                     u5600:
 10455     1C16                     l3578:
 10456                           
 10457                           ;LCD.c: 30:         RD7 = 1;
 10458     1C16  1788               	bsf	8,7	;volatile
 10459     1C17  2C19               	goto	l145
 10460     1C18                     l143:	
 10461                           ;LCD.c: 31:     else
 10462                           
 10463                           
 10464                           ;LCD.c: 32:         RD7 = 0;
 10465     1C18  1388               	bcf	8,7	;volatile
 10466     1C19                     l145:
 10467     1C19  0008               	return
 10468     1C1A                     __end_of_Lcd_Port:
 10469                           
 10470                           	psect	text32
 10471     1B7C                     __ptext32:	
 10472 ;; *************** function _I2C_Master_Write *****************
 10473 ;; Defined at:
 10474 ;;		line 62 in file "IIC.c"
 10475 ;; Parameters:    Size  Location     Type
 10476 ;;  d               2    2[COMMON] unsigned int 
 10477 ;; Auto vars:     Size  Location     Type
 10478 ;;		None
 10479 ;; Return value:  Size  Location     Type
 10480 ;;                  1    wreg      void 
 10481 ;; Registers used:
 10482 ;;		wreg, status,2, status,0, pclath, cstack
 10483 ;; Tracked objects:
 10484 ;;		On entry : 0/0
 10485 ;;		On exit  : 0/0
 10486 ;;		Unchanged: 0/0
 10487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10488 ;;      Params:         2       0       0       0       0
 10489 ;;      Locals:         0       0       0       0       0
 10490 ;;      Temps:          0       0       0       0       0
 10491 ;;      Totals:         2       0       0       0       0
 10492 ;;Total ram usage:        2 bytes
 10493 ;; Hardware stack levels used: 1
 10494 ;; Hardware stack levels required when called: 2
 10495 ;; This function calls:
 10496 ;;		_I2C_Master_Wait
 10497 ;; This function is called by:
 10498 ;;		_main
 10499 ;; This function uses a non-reentrant model
 10500 ;;
 10501                           
 10502     1B7C                     _I2C_Master_Write:	
 10503                           ;psect for function _I2C_Master_Write
 10504                           
 10505     1B7C                     l3216:	
 10506                           ;incstack = 0
 10507                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 10508                           
 10509                           
 10510                           ;IIC.c: 62: void I2C_Master_Write(unsigned d);IIC.c: 63: {;IIC.c: 64:     I2C_Master_Wai
      +                          t();
 10511     1B7C  160A  158A  2391  160A  158A  	fcall	_I2C_Master_Wait
 10512     1B81                     l3218:
 10513                           
 10514                           ;IIC.c: 65:     SSPBUF = d;
 10515     1B81  0872               	movf	I2C_Master_Write@d,w
 10516     1B82  1283               	bcf	3,5	;RP0=0, select bank0
 10517     1B83  1303               	bcf	3,6	;RP1=0, select bank0
 10518     1B84  0093               	movwf	19	;volatile
 10519     1B85                     l222:
 10520     1B85  0008               	return
 10521     1B86                     __end_of_I2C_Master_Write:
 10522                           
 10523                           	psect	text33
 10524     07F7                     __ptext33:	
 10525 ;; *************** function _I2C_Master_Stop *****************
 10526 ;; Defined at:
 10527 ;;		line 52 in file "IIC.c"
 10528 ;; Parameters:    Size  Location     Type
 10529 ;;		None
 10530 ;; Auto vars:     Size  Location     Type
 10531 ;;		None
 10532 ;; Return value:  Size  Location     Type
 10533 ;;                  1    wreg      void 
 10534 ;; Registers used:
 10535 ;;		wreg, status,2, status,0, pclath, cstack
 10536 ;; Tracked objects:
 10537 ;;		On entry : 0/0
 10538 ;;		On exit  : 0/0
 10539 ;;		Unchanged: 0/0
 10540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10541 ;;      Params:         0       0       0       0       0
 10542 ;;      Locals:         0       0       0       0       0
 10543 ;;      Temps:          0       0       0       0       0
 10544 ;;      Totals:         0       0       0       0       0
 10545 ;;Total ram usage:        0 bytes
 10546 ;; Hardware stack levels used: 1
 10547 ;; Hardware stack levels required when called: 2
 10548 ;; This function calls:
 10549 ;;		_I2C_Master_Wait
 10550 ;; This function is called by:
 10551 ;;		_main
 10552 ;; This function uses a non-reentrant model
 10553 ;;
 10554                           
 10555     07F7                     _I2C_Master_Stop:	
 10556                           ;psect for function _I2C_Master_Stop
 10557                           
 10558     07F7                     l3236:	
 10559                           ;incstack = 0
 10560                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 10561                           
 10562                           
 10563                           ;IIC.c: 54:     I2C_Master_Wait();
 10564     07F7  160A  158A  2391  120A  118A  	fcall	_I2C_Master_Wait
 10565     07FC                     l3238:
 10566                           
 10567                           ;IIC.c: 55:     SSPCON2bits.PEN = 1;
 10568     07FC  1683               	bsf	3,5	;RP0=1, select bank1
 10569     07FD  1303               	bcf	3,6	;RP1=0, select bank1
 10570     07FE  1511               	bsf	17,2	;volatile
 10571     07FF                     l219:
 10572     07FF  0008               	return
 10573     0800                     __end_of_I2C_Master_Stop:
 10574                           
 10575                           	psect	text34
 10576     1B73                     __ptext34:	
 10577 ;; *************** function _I2C_Master_Start *****************
 10578 ;; Defined at:
 10579 ;;		line 36 in file "IIC.c"
 10580 ;; Parameters:    Size  Location     Type
 10581 ;;		None
 10582 ;; Auto vars:     Size  Location     Type
 10583 ;;		None
 10584 ;; Return value:  Size  Location     Type
 10585 ;;                  1    wreg      void 
 10586 ;; Registers used:
 10587 ;;		wreg, status,2, status,0, pclath, cstack
 10588 ;; Tracked objects:
 10589 ;;		On entry : 0/0
 10590 ;;		On exit  : 0/0
 10591 ;;		Unchanged: 0/0
 10592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10593 ;;      Params:         0       0       0       0       0
 10594 ;;      Locals:         0       0       0       0       0
 10595 ;;      Temps:          0       0       0       0       0
 10596 ;;      Totals:         0       0       0       0       0
 10597 ;;Total ram usage:        0 bytes
 10598 ;; Hardware stack levels used: 1
 10599 ;; Hardware stack levels required when called: 2
 10600 ;; This function calls:
 10601 ;;		_I2C_Master_Wait
 10602 ;; This function is called by:
 10603 ;;		_main
 10604 ;; This function uses a non-reentrant model
 10605 ;;
 10606                           
 10607     1B73                     _I2C_Master_Start:	
 10608                           ;psect for function _I2C_Master_Start
 10609                           
 10610     1B73                     l3212:	
 10611                           ;incstack = 0
 10612                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 10613                           
 10614                           
 10615                           ;IIC.c: 38:     I2C_Master_Wait();
 10616     1B73  160A  158A  2391  160A  158A  	fcall	_I2C_Master_Wait
 10617     1B78                     l3214:
 10618                           
 10619                           ;IIC.c: 39:     SSPCON2bits.SEN = 1;
 10620     1B78  1683               	bsf	3,5	;RP0=1, select bank1
 10621     1B79  1303               	bcf	3,6	;RP1=0, select bank1
 10622     1B7A  1411               	bsf	17,0	;volatile
 10623     1B7B                     l213:
 10624     1B7B  0008               	return
 10625     1B7C                     __end_of_I2C_Master_Start:
 10626                           
 10627                           	psect	text35
 10628     1C68                     __ptext35:	
 10629 ;; *************** function _I2C_Master_Read *****************
 10630 ;; Defined at:
 10631 ;;		line 71 in file "IIC.c"
 10632 ;; Parameters:    Size  Location     Type
 10633 ;;  a               2    2[COMMON] unsigned short 
 10634 ;; Auto vars:     Size  Location     Type
 10635 ;;  temp            2    6[COMMON] int 
 10636 ;; Return value:  Size  Location     Type
 10637 ;;                  2    2[COMMON] int 
 10638 ;; Registers used:
 10639 ;;		wreg, status,2, status,0, pclath, cstack
 10640 ;; Tracked objects:
 10641 ;;		On entry : 0/0
 10642 ;;		On exit  : 0/0
 10643 ;;		Unchanged: 0/0
 10644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10645 ;;      Params:         2       0       0       0       0
 10646 ;;      Locals:         2       0       0       0       0
 10647 ;;      Temps:          2       0       0       0       0
 10648 ;;      Totals:         6       0       0       0       0
 10649 ;;Total ram usage:        6 bytes
 10650 ;; Hardware stack levels used: 1
 10651 ;; Hardware stack levels required when called: 2
 10652 ;; This function calls:
 10653 ;;		_I2C_Master_Wait
 10654 ;; This function is called by:
 10655 ;;		_main
 10656 ;; This function uses a non-reentrant model
 10657 ;;
 10658                           
 10659     1C68                     _I2C_Master_Read:	
 10660                           ;psect for function _I2C_Master_Read
 10661                           
 10662     1C68                     l3220:	
 10663                           ;incstack = 0
 10664                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 10665                           
 10666                           
 10667                           ;IIC.c: 71: int I2C_Master_Read(unsigned short a);IIC.c: 72: {;IIC.c: 73:     int temp;;
      +                          IIC.c: 74:     I2C_Master_Wait();
 10668     1C68  160A  158A  2391  160A  158A  	fcall	_I2C_Master_Wait
 10669     1C6D                     l3222:
 10670                           
 10671                           ;IIC.c: 75:     SSPCON2bits.RCEN = 1;
 10672     1C6D  1683               	bsf	3,5	;RP0=1, select bank1
 10673     1C6E  1303               	bcf	3,6	;RP1=0, select bank1
 10674     1C6F  1591               	bsf	17,3	;volatile
 10675                           
 10676                           ;IIC.c: 76:     I2C_Master_Wait();
 10677     1C70  160A  158A  2391  160A  158A  	fcall	_I2C_Master_Wait
 10678     1C75                     l3224:
 10679                           
 10680                           ;IIC.c: 77:     temp = SSPBUF;
 10681     1C75  1283               	bcf	3,5	;RP0=0, select bank0
 10682     1C76  1303               	bcf	3,6	;RP1=0, select bank0
 10683     1C77  0813               	movf	19,w	;volatile
 10684     1C78  00F4               	movwf	??_I2C_Master_Read
 10685     1C79  01F5               	clrf	??_I2C_Master_Read+1
 10686     1C7A  0874               	movf	??_I2C_Master_Read,w
 10687     1C7B  00F6               	movwf	I2C_Master_Read@temp
 10688     1C7C  0875               	movf	??_I2C_Master_Read+1,w
 10689     1C7D  00F7               	movwf	I2C_Master_Read@temp+1
 10690     1C7E                     l3226:
 10691                           
 10692                           ;IIC.c: 78:     I2C_Master_Wait();
 10693     1C7E  160A  158A  2391  160A  158A  	fcall	_I2C_Master_Wait
 10694     1C83                     l3228:
 10695                           
 10696                           ;IIC.c: 79:     if(a == 1){
 10697     1C83  0372               	decf	I2C_Master_Read@a,w
 10698     1C84  0473               	iorwf	I2C_Master_Read@a+1,w
 10699     1C85  1D03               	btfss	3,2
 10700     1C86  2C88               	goto	u5111
 10701     1C87  2C89               	goto	u5110
 10702     1C88                     u5111:
 10703     1C88  2C8D               	goto	l225
 10704     1C89                     u5110:
 10705     1C89                     l3230:
 10706                           
 10707                           ;IIC.c: 80:         SSPCON2bits.ACKDT = 0;
 10708     1C89  1683               	bsf	3,5	;RP0=1, select bank1
 10709     1C8A  1303               	bcf	3,6	;RP1=0, select bank1
 10710     1C8B  1291               	bcf	17,5	;volatile
 10711                           
 10712                           ;IIC.c: 81:     }else{
 10713     1C8C  2C90               	goto	l226
 10714     1C8D                     l225:
 10715                           
 10716                           ;IIC.c: 82:         SSPCON2bits.ACKDT = 1;
 10717     1C8D  1683               	bsf	3,5	;RP0=1, select bank1
 10718     1C8E  1303               	bcf	3,6	;RP1=0, select bank1
 10719     1C8F  1691               	bsf	17,5	;volatile
 10720     1C90                     l226:	
 10721                           ;IIC.c: 83:     }
 10722                           
 10723                           
 10724                           ;IIC.c: 84:     SSPCON2bits.ACKEN = 1;
 10725     1C90  1611               	bsf	17,4	;volatile
 10726     1C91                     l3232:
 10727                           
 10728                           ;IIC.c: 85:     return temp;
 10729     1C91  0877               	movf	I2C_Master_Read@temp+1,w
 10730     1C92  00F3               	movwf	?_I2C_Master_Read+1
 10731     1C93  0876               	movf	I2C_Master_Read@temp,w
 10732     1C94  00F2               	movwf	?_I2C_Master_Read
 10733     1C95                     l227:
 10734     1C95  0008               	return
 10735     1C96                     __end_of_I2C_Master_Read:
 10736                           
 10737                           	psect	text36
 10738     1B91                     __ptext36:	
 10739 ;; *************** function _I2C_Master_Wait *****************
 10740 ;; Defined at:
 10741 ;;		line 29 in file "IIC.c"
 10742 ;; Parameters:    Size  Location     Type
 10743 ;;		None
 10744 ;; Auto vars:     Size  Location     Type
 10745 ;;		None
 10746 ;; Return value:  Size  Location     Type
 10747 ;;                  1    wreg      void 
 10748 ;; Registers used:
 10749 ;;		wreg, status,2
 10750 ;; Tracked objects:
 10751 ;;		On entry : 0/0
 10752 ;;		On exit  : 0/0
 10753 ;;		Unchanged: 0/0
 10754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10755 ;;      Params:         0       0       0       0       0
 10756 ;;      Locals:         0       0       0       0       0
 10757 ;;      Temps:          0       0       0       0       0
 10758 ;;      Totals:         0       0       0       0       0
 10759 ;;Total ram usage:        0 bytes
 10760 ;; Hardware stack levels used: 1
 10761 ;; Hardware stack levels required when called: 1
 10762 ;; This function calls:
 10763 ;;		Nothing
 10764 ;; This function is called by:
 10765 ;;		_I2C_Master_Start
 10766 ;;		_I2C_Master_Stop
 10767 ;;		_I2C_Master_Write
 10768 ;;		_I2C_Master_Read
 10769 ;;		_I2C_Master_RepeatedStart
 10770 ;; This function uses a non-reentrant model
 10771 ;;
 10772                           
 10773     1B91                     _I2C_Master_Wait:	
 10774                           ;psect for function _I2C_Master_Wait
 10775                           
 10776     1B91                     l2836:	
 10777                           ;incstack = 0
 10778                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 10779                           
 10780     1B91                     l207:	
 10781                           ;IIC.c: 31:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 10782                           
 10783     1B91  1683               	bsf	3,5	;RP0=1, select bank1
 10784     1B92  1303               	bcf	3,6	;RP1=0, select bank1
 10785     1B93  1914               	btfsc	20,2	;volatile
 10786     1B94  2B96               	goto	u4111
 10787     1B95  2B97               	goto	u4110
 10788     1B96                     u4111:
 10789     1B96  2B91               	goto	l207
 10790     1B97                     u4110:
 10791     1B97                     l2838:
 10792     1B97  0811               	movf	17,w	;volatile
 10793     1B98  391F               	andlw	31
 10794     1B99  1D03               	btfss	3,2
 10795     1B9A  2B9C               	goto	u4121
 10796     1B9B  2B9D               	goto	u4120
 10797     1B9C                     u4121:
 10798     1B9C  2B91               	goto	l207
 10799     1B9D                     u4120:
 10800     1B9D                     l210:
 10801     1B9D  0008               	return
 10802     1B9E                     __end_of_I2C_Master_Wait:
 10803                           
 10804                           	psect	text37
 10805     1C1A                     __ptext37:	
 10806 ;; *************** function _isr *****************
 10807 ;; Defined at:
 10808 ;;		line 84 in file "main.c"
 10809 ;; Parameters:    Size  Location     Type
 10810 ;;		None
 10811 ;; Auto vars:     Size  Location     Type
 10812 ;;		None
 10813 ;; Return value:  Size  Location     Type
 10814 ;;                  1    wreg      void 
 10815 ;; Registers used:
 10816 ;;		wreg
 10817 ;; Tracked objects:
 10818 ;;		On entry : 0/0
 10819 ;;		On exit  : 0/0
 10820 ;;		Unchanged: 0/0
 10821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10822 ;;      Params:         0       0       0       0       0
 10823 ;;      Locals:         0       0       0       0       0
 10824 ;;      Temps:          2       0       0       0       0
 10825 ;;      Totals:         2       0       0       0       0
 10826 ;;Total ram usage:        2 bytes
 10827 ;; Hardware stack levels used: 1
 10828 ;; This function calls:
 10829 ;;		Nothing
 10830 ;; This function is called by:
 10831 ;;		Interrupt level 1
 10832 ;; This function uses a non-reentrant model
 10833 ;;
 10834                           
 10835     1C1A                     _isr:	
 10836                           ;psect for function _isr
 10837                           
 10838     1C1A                     i1l2172:
 10839                           
 10840                           ;main.c: 87:     if (PIR1bits.SSPIF){
 10841     1C1A  1283               	bcf	3,5	;RP0=0, select bank0
 10842     1C1B  1303               	bcf	3,6	;RP1=0, select bank0
 10843     1C1C  1D8C               	btfss	12,3	;volatile
 10844     1C1D  2C1F               	goto	u275_21
 10845     1C1E  2C20               	goto	u275_20
 10846     1C1F                     u275_21:
 10847     1C1F  2C21               	goto	i1l103
 10848     1C20                     u275_20:
 10849     1C20                     i1l2174:
 10850                           
 10851                           ;main.c: 88:         PIR1bits.SSPIF = 0;
 10852     1C20  118C               	bcf	12,3	;volatile
 10853     1C21                     i1l103:	
 10854                           ;main.c: 89:     }
 10855                           
 10856                           
 10857                           ;main.c: 92:     if (PIR1bits.TXIF){
 10858     1C21  1E0C               	btfss	12,4	;volatile
 10859     1C22  2C24               	goto	u276_21
 10860     1C23  2C25               	goto	u276_20
 10861     1C24                     u276_21:
 10862     1C24  2C26               	goto	i1l104
 10863     1C25                     u276_20:
 10864     1C25                     i1l2176:
 10865                           
 10866                           ;main.c: 93:         PIR1bits.TXIF = 0;
 10867     1C25  120C               	bcf	12,4	;volatile
 10868     1C26                     i1l104:	
 10869                           ;main.c: 94:     }
 10870                           
 10871                           
 10872                           ;main.c: 97:     if (PIR1bits.RCIF){
 10873     1C26  1E8C               	btfss	12,5	;volatile
 10874     1C27  2C29               	goto	u277_21
 10875     1C28  2C2A               	goto	u277_20
 10876     1C29                     u277_21:
 10877     1C29  2C2B               	goto	i1l105
 10878     1C2A                     u277_20:
 10879     1C2A                     i1l2178:
 10880                           
 10881                           ;main.c: 98:         PIR1bits.RCIF = 0;
 10882     1C2A  128C               	bcf	12,5	;volatile
 10883     1C2B                     i1l105:	
 10884                           ;main.c: 99:     }
 10885                           
 10886                           
 10887                           ;main.c: 102:     if (PIR1bits.ADIF){
 10888     1C2B  1F0C               	btfss	12,6	;volatile
 10889     1C2C  2C2E               	goto	u278_21
 10890     1C2D  2C2F               	goto	u278_20
 10891     1C2E                     u278_21:
 10892     1C2E  2C30               	goto	i1l106
 10893     1C2F                     u278_20:
 10894     1C2F                     i1l2180:
 10895                           
 10896                           ;main.c: 103:         PIR1bits.ADIF = 0;
 10897     1C2F  130C               	bcf	12,6	;volatile
 10898     1C30                     i1l106:	
 10899                           ;main.c: 104:     }
 10900                           
 10901                           
 10902                           ;main.c: 107:     if (INTCONbits.T0IF){
 10903     1C30  1D0B               	btfss	11,2	;volatile
 10904     1C31  2C33               	goto	u279_21
 10905     1C32  2C34               	goto	u279_20
 10906     1C33                     u279_21:
 10907     1C33  2C37               	goto	i1l2186
 10908     1C34                     u279_20:
 10909     1C34                     i1l2182:
 10910                           
 10911                           ;main.c: 108:         TMR0 = 179;
 10912     1C34  30B3               	movlw	179
 10913     1C35  0081               	movwf	1	;volatile
 10914     1C36                     i1l2184:
 10915                           
 10916                           ;main.c: 109:         INTCONbits.T0IF = 0;
 10917     1C36  110B               	bcf	11,2	;volatile
 10918     1C37                     i1l2186:
 10919                           
 10920                           ;main.c: 113:     if (INTCONbits.RBIF){
 10921     1C37  080B               	movf	11,w	;volatile
 10922     1C38                     i1l109:
 10923     1C38  0871               	movf	??_isr+1,w
 10924     1C39  008A               	movwf	10
 10925     1C3A  0E70               	swapf	??_isr,w
 10926     1C3B  0083               	movwf	3
 10927     1C3C  0EFE               	swapf	btemp,f
 10928     1C3D  0E7E               	swapf	btemp,w
 10929     1C3E  0009               	retfie
 10930     1C3F                     __end_of_isr:
 10931     007E                     btemp	set	126	;btemp
 10932     007E                     wtemp0	set	126
 10933                           
 10934                           	psect	intentry
 10935     0004                     __pintentry:	
 10936                           ;incstack = 0
 10937                           ; Regs used in _isr: [wreg]
 10938                           
 10939     0004                     interrupt_function:
 10940     007E                     saved_w	set	btemp
 10941     0004  00FE               	movwf	btemp
 10942     0005  0E03               	swapf	3,w
 10943     0006  00F0               	movwf	??_isr
 10944     0007  080A               	movf	10,w
 10945     0008  00F1               	movwf	??_isr+1
 10946     0009  160A  158A  2C1A   	ljmp	_isr
 10947                           
 10948                           	psect	idloc
 10949                           
 10950                           ;Config register IDLOC0 @ 0x2000
 10951                           ;	unspecified, using default values
 10952     2000                     	org	8192
 10953     2000  3FFF               	dw	16383
 10954                           
 10955                           ;Config register IDLOC1 @ 0x2001
 10956                           ;	unspecified, using default values
 10957     2001                     	org	8193
 10958     2001  3FFF               	dw	16383
 10959                           
 10960                           ;Config register IDLOC2 @ 0x2002
 10961                           ;	unspecified, using default values
 10962     2002                     	org	8194
 10963     2002  3FFF               	dw	16383
 10964                           
 10965                           ;Config register IDLOC3 @ 0x2003
 10966                           ;	unspecified, using default values
 10967     2003                     	org	8195
 10968     2003  3FFF               	dw	16383
 10969                           
 10970                           	psect	config
 10971                           
 10972                           ;Config register CONFIG1 @ 0x2007
 10973                           ;	Oscillator Selection bits
 10974                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 10975                           ;	Watchdog Timer Enable bit
 10976                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10977                           ;	Power-up Timer Enable bit
 10978                           ;	PWRTE = OFF, PWRT disabled
 10979                           ;	RE3/MCLR pin function select bit
 10980                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10981                           ;	Code Protection bit
 10982                           ;	CP = OFF, Program memory code protection is disabled
 10983                           ;	Data Code Protection bit
 10984                           ;	CPD = OFF, Data memory code protection is disabled
 10985                           ;	Brown Out Reset Selection bits
 10986                           ;	BOREN = OFF, BOR disabled
 10987                           ;	Internal External Switchover bit
 10988                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10989                           ;	Fail-Safe Clock Monitor Enabled bit
 10990                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10991                           ;	Low Voltage Programming Enable bit
 10992                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10993                           ;	In-Circuit Debugger Mode bit
 10994                           ;	DEBUG = 0x1, unprogramme 10995     2007                     	org	8199
 10996     2007  20D4               	dw	8404
 10997                           
 10998                           ;Config register CONFIG2 @ 0x2008
 10999                           ;	Brown-out Reset Selection bit
 11000                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11001                           ;	Flash Program Memory Self Write Enable bits
 11002                           ;	WRT = OFF, Write protection off
 11003     2008                     	org	8200
 11004     2008  3FFF               	dw	16383

Data Sizes:
    Strings     27
    Constant    144
    Data        14
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     79      80
    BANK1            80     41      74
    BANK3            96      0      14
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_4(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> TEMP1(BANK1[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 9
		 -> STR_5(CODE[2]), TEMP1(BANK1[4]), STR_3(CODE[4]), STR_2(CODE[7]), 
		 -> STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _sprintf->___awdiv
    _sprintf->___fleq
    _sprintf->___flge
    _sprintf->___lldiv
    _sprintf->___llmod
    _sprintf->__div_to_l_
    _sprintf->__tdiv_to_l_
    _scale->___awdiv
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___xxtofl->_I2C_Master_Read
    _I2C_Master_Init->___lldiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   41263
                                             38 BANK1      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                           ___xxtofl
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   36575
                                             74 BANK0      5     0      5
                                              8 BANK1     30    30      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    8894
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    7439
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                              8 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    5693
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              2 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              2 COMMON     8     0      8
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              2 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     656
                                              0 BANK0     14    10      4
                    _I2C_Master_Read (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     772
                                              2 COMMON     8     0      8
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             53 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     902
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     902
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     781
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     834
                                              7 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1    1085
                                              6 COMMON     2     1      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     250
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   ___xxtofl
     _I2C_Master_Read (ARG)
   _setup
     _I2C_Master_Init
       ___lldiv
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       E       9       14.6%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     29      4A       7       92.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      B4      12        0.0%
ABS                  0      0      B4       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Mar 05 02:11:56 2023

                       pc 0002              ___awdiv@sign 0025                        fsr 0004  
     ___wmul@multiplicand 0074       __Umul8_16@word_mpld 0022                       l120 1CC9  
                     l210 1B9D                       l140 1C0B                       l204 1D36  
                     l213 1B7B                       l141 1C11                       l222 1B85  
                     l142 1C12                       l207 1B91                       l143 1C18  
                     l151 1BAA                       l160 1064                       l225 1C8D  
                     l145 1C19                       l137 1C01                       l226 1C90  
                     l138 1C04                       l227 1C95                       l219 07FF  
                     l139 1C0A                       l163 1CFE                       l411 08DF  
                     l148 1BF7                       l332 15A7                       l157 1E48  
                     l405 0691                       l600 10EC                       l169 1DB6  
                     l409 08C7                       l603 1158                       l339 0FFF  
                     l604 1171                       l612 0957                       l445 1FFF  
                     l622 0957                       l630 11EB                       l358 00AB  
                     l391 04E9                       l608 1B90                       l384 04AB  
                     l626 1228                       l562 10CD                       l619 0942  
                     l627 119C                       l715 1DFC                       l740 1686  
                     l580 1247                       l637 121B                       l725 1D70  
                     l742 165F                       l590 12D3                       l583 12A3  
                     l575 1F97                       l399 064A                       l736 1603  
                     l832 0C9C                       l761 1773                       l665 1F3E  
                     l770 17D3                       l595 1E67                       l579 12E0  
                     l851 1C55                       l596 1E83                       l844 0C90  
                     l597 1E98                       l757 174F                       l749 17FF  
                     l853 1C67                       l782 1EE8                       l838 0C0C  
                     l767 1795                       l778 17F5                       l890 1370  
                     l882 1348                       l779 17FF                       l876 1305  
                     l878 139A                       l896 1BCA                       l889 1364  
                     _GIE 005F                       _RD3 0043                       _RD4 0044  
                     _RD5 0045                       _RD6 0046                       _RD7 0047  
                     _day 00E1                       _min 00E3                       _sec 00E4  
                     _isr 1C1A                       fsr0 0004                       indf 0000  
            ___awmod@sign 0078              ___flmul@aexp 0036              ___flmul@bexp 003B  
            ___flmul@sign 0035              ___flmul@temp 0040              ___flmul@prod 003C  
            ___fltol@exp1 005E                      l3100 0947                      l3020 08CE  
                    l3030 1E5F                      l3102 094C                      l3022 08D5  
                    l3014 08BB                      l4000 1CB0                      l3032 1E7B  
                    l3040 10CE                      l3024 08DB                      l3016 08BD  
                    l2400 1F7C                      l4010 1CBA                      l4002 1CB1  
                    l3034 1E95                      l3050 1130                      l3042 10E4  
                    l3018 08C1                      l2330 1065                      l2402 1F83  
                    l3220 1C68                      l3212 1B73                      l4020 102C  
                    l4012 1008                      l4004 1CB2                      l3036 1E97  
                    l3028 1E49                      l3052 1134                      l3044 1100  
                    l3060 1B86                      l2500 15F9                      l3124 1E99  
                    l2340 1077                      l2332 1068                      l2404 1F89  
                    l4100 0123                      l3230 1C89                      l3222 1C6D  
                    l3214 1B78                      l4022 1B9E                      l4014 100E  
                    l4030 1E15                      l4006 1CB3                      l3054 116E  
                    l3046 1108                      l3062 1B8E                      l2510 1613  
                    l2502 15FB                      l3126 1E9D                      l3070 08EB  
                    l2350 108B                      l2342 107C                      l2334 106C  
                    l2406 1F8E                      l4110 0155                      l4102 0127  
                    l3232 1C91                      l3224 1C75                      l3216 1B7C  
                    l4016 1017                      l4040 1E3A                      l4032 1E1B  
                    l4024 1E00                      l4008 1CB9                      l3056 1170  
                    l3048 110C                      l3064 1B90                      l2600 1765  
                    l2520 161D                      l2512 1615                      l2504 1609  
                    l3080 0910                      l2440 1D3D                      l2360 10B1  
                    l2352 1092                      l2344 1080                      l2336 1071  
                    l2408 1F93                      l4200 04F2                      l4120 01B4  
                    l4112 0168                      l4104 012B                      l3226 1C7E  
                    l3218 1B81                      l4018 1026                      l4042 1E40  
                    l4026 1E05                      l4034 1E24                      l4050 1D9A  
                    l2610 177C                      l2602 176E                      l2530 1627  
                    l2522 161F                      l2514 1617                      l2506 160D  
                    l3090 091E                      l3082 0912                      l3074 08F4  
                    l2450 1D59                      l2442 1D40                      l2370 10C9  
                    l2362 10B2                      l2354 1096                      l2346 1082  
                    l2338 1073                      l4210 0579                      l4202 04F7  
                    l4122 01FF                      l4114 018B                      l4106 0144  
                    l4130 0244                      l3228 1C83                      l3236 07F7  
                    l4036 1E2A                      l4028 1E12                      l4044 1D71  
                    l2620 178C                      l2612 1781                      l2604 1772  
                    l2540 1630                      l2532 1629                      l2524 1621  
                    l2516 1619                      l2508 1611                      l2460 15A8  
                    l3084 0916                      l3092 0930                      l3076 0907  
                    l3068 08E0                      l2452 1D5F                      l2444 1D47  
                    l2364 10B9                      l2356 109A                      l2348 1088  
                    l2380 1F49                      l4220 0620                      l4212 05B4  
                    l4204 04FC                      l4140 02EB                      l4132 0253  
                    l4124 0218                      l4116 018F                      l4108 014F  
                    l4060 0043                      l4052 0030                      l4300 07EA  
                    l3238 07FC                      l4038 1E37                      l4046 1D76  
                    l2630 17AD                      l2622 1792                      l2606 1777  
                    l2614 1783                      l2550 1670                      l2542 1647  
                    l2534 162B                      l2526 1623                      l2518 161B  
                    l2470 15BB                      l2462 15AD                      l3078 0908  
                    l2454 1D66                      l2446 1D4B                      l2438 1D37  
                    l2358 10AB                      l2366 10BF                      l2390 1F5D  
                    l2382 1F4B                      l2374 1F3F                      l4230 063C  
                    l4222 0625                      l4214 05D3                      l4206 0500  
                    l4150 0344                      l4142 02FA                      l4134 029A  
                    l4126 0221                      l4118 0195                      l4070 0061  
                    l4062 0045                      l4054 0033                      l4048 1D92  
                    l3600 1FF7                      l2640 17E5                      l2632 17B1  
                    l2608 177A                      l2616 1787                      l2560 168F  
                    l2552 1671                      l2544 1663                      l2536 162D  
                    l2528 1625                      l2480 15D3                      l2472 15C0  
                    l2464 15B1                      l2448 1D4F                      l2456 1D6C  
                    l2368 10C4                      l2392 1F64                      l2384 1F4F  
                    l2376 1F40                      l4240 0665                      l4232 0644  
                    l4224 0629                      l4216 05DD                      l4208 051E  
                    l4160 03EC                      l4144 0315                      l4136 02A9  
                    l4128 023C                      l4080 00A9                      l4072 0076  
                    l4064 0053                      l4056 0039                      l2650 17FA  
                    l2642 17EA                      l2634 17CF                      l2626 179A  
                    l2618 1788                      l2570 16B7                      l2554 167A  
                    l2546 166A                      l2538 162F                      l2490 15E5  
                    l2482 15D6                      l2474 15C8                      l2466 15B5  
                    l3098 0937                      l3610 1DC4                      l2394 1F68  
                    l2386 1F54                      l2378 1F44                      l4242 0673  
                    l4234 0655                      l4226 062F                      l4218 0618  
                    l4162 03EE                      l4154 0363                      l4146 031E  
                    l4138 02C4                      l4090 00DB                      l4074 008D  
                    l4066 0056                      l4058 003E                      l2652 17FE  
                    l2644 17EB                      l2636 17D8                      l2628 179F  
                    l2580 16CE                      l2572 16BE                      l2564 1698  
                    l2548 166C                      l2556 167E                      l2492 15E6  
                    l2484 15DC                      l2476 15C9                      l2468 15B6  
                    l3700 0AE9                      l3620 1DEA                      l3612 1DCB  
                    l3604 1DB7                      l2900 1BBB                      l2396 1F6C  
                    l2388 1F5A                      l4236 0656                      l4180 0447  
                    l4172 0427                      l4148 0326                      l4156 036C  
                    l4092 00DF                      l4228 0636                      l4084 00AD  
                    l4076 0093                      l4068 005C                      l4260 06A0  
                    l2646 17EF                      l2638 17DD                      l2590 1732  
                    l2574 16C0                      l2566 16AF                      l2558 168A  
                    l2582 16D3                      l2494 15EB                      l2486 15DD  
                    l2478 15CB                      l2910 1172                      l3710 0B90  
                    l3702 0B06                      l3630 0958                      l3622 1DEB  
                    l3614 1DCF                      l3606 1DBB                      l2902 1BC1  
                    l2398 1F76                      l4238 0665                      l4190 04BE  
                    l4182 0482                      l4174 0431                      l4158 03A1  
                    l4094 00ED                      l4086 00CB                      l4078 00A5  
                    l4246 0679                      l4270 06BD                      l4262 06A5  
                    l3800 1D35                      l2648 17F1                      l2584 16E9  
                    l2592 1741                      l2576 16C4                      l2568 16B3  
                    l2496 15F0                      l2488 15E1                      l2912 1183  
                    l3560 1C4B                      l3720 0BDC                      l3712 0BB8  
                    l3704 0B31                      l3640 096B                      l3632 095D  
                    l3624 1DF2                      l3616 1DD3                      l3608 1DC1  
                    l2904 1BC7                      l4192 04C4                      l4184 04A1  
                    l4176 043D                      l4168 03F0                      l4096 00F1  
                    l4088 00D7                      l4248 068D                      l4336 00C3  
                    l4280 0714                      l4272 06CB                      l4264 06AA  
                    l3570 1BF9                      l3810 1BF4                      l3802 1BDF  
                    l2594 1757                      l2586 1727                      l2578 16C5  
                    l2498 15F8                      l2930 11BB                      l2922 119D  
                    l3562 1C4F                      l3730 0BF1                      l3722 0BDD  
                    l3714 0BC1                      l3706 0B3F                      l3650 0987  
                    l3642 0970                      l3634 0961                      l3618 1DE4  
                    l3626 1DF8                      l2906 1BC9                      l4194 04D1  
                    l4186 04B3                      l4178 0442                      l4098 010A  
                    l4290 0773                      l4282 071D                      l4274 06D0  
                    l4266 06AF                      l4258 0692                      l2836 1B91  
                    l3572 1BFD                      l3804 1BE2                      l3580 1F98  
                    l2596 175C                      l2588 172D                      l3900 129D  
                    l2940 11E5                      l2932 11C4                      l2924 11A3  
                    l2916 118C                      l3564 1C5E                      l3556 1C42  
                    l3740 0C16                      l3732 0BF5                      l3724 0BE6  
                    l3716 0BCF                      l3708 0B6A                      l3660 099A  
                    l3652 098B                      l3644 0978                      l3636 0965  
                    l3820 14B3                      l3812 139E                      l4196 04E0  
                    l4188 04BA                      l4292 0784                      l4284 074E  
                    l4276 0700                      l4268 06B4                      l2838 1B97  
                    l3574 1C08                      l3806 1BE8                      l3590 1FC7  
                    l3582 1FAA                      l3902 12A7                      l3910 12C1  
                    l2942 11EF                      l2950 1209                      l2934 11D2  
                    l2926 11B2                      l3566 1C63                      l3558 1C44  
                    l3750 0C54                      l3742 0C24                      l3734 0C09  
                    l3718 0BD8                      l3726 0BEC                      l3670 09B6  
                    l3662 09A2                      l3654 098F                      l3646 097A  
                    l3638 0966                      l3822 14B9                      l3814 13A4  
                    l3830 0CA0                      l4198 04E5                      l4294 078C  
                    l4286 0753                      l4278 070F                      l3576 1C0F  
                    l3808 1BEB                      l3592 1FD9                      l3584 1FAD  
                    l2936 11DC                      l2928 11B4                      l3760 0C86  
                    l3752 0C5F                      l3744 0C28                      l3728 0BF0  
                    l3680 09F5                      l3664 09A4                      l3656 0990  
                    l3648 0982                      l3832 0CA4                      l4296 07BF  
                    l4288 076A                      l3578 1C16                      l3770 1CCB  
                    l3594 1FE7                      l3586 1FBA                      l3930 1F07  
                    l3922 1EE9                      l2938 11DD                      l3762 0C8A  
                    l3754 0C6E                      l3746 0C41                      l3738 0C11  
                    l3690 0A7C                      l3682 0A11                      l3674 09BF  
                    l3666 09AC                      l3658 0995                      l3826 1564  
                    l3842 0D97                      l3834 0CA6                      l4298 07E1  
                    l3780 1CEA                      l3772 1CD1                      l3596 1FE8  
                    l3588 1FBE                      l3932 1F19                      l3924 1EF1  
                    l3916 12C8                      l3908 12AF                      l2956 1210  
                    l2948 11F7                      l3764 0C8B                      l3756 0C78  
                    l3748 0C47                      l3692 0A8A                      l3684 0A3B  
                    l3676 09CD                      l3668 09B1                      l3860 0F44  
                    l3844 0D9E                      l3836 0CAD                      l3852 0E53  
                    l3782 1CED                      l3774 1CD4                      l3598 1FF1  
                    l3790 1CFF                      l3934 1F27                      l3926 1EF6  
                    l3950 130D                      l3942 12E4                      l3918 12D8  
                    l3870 1229                      l2958 1220                      l3766 0C94  
                    l3758 0C7A                      l3694 0AA7                      l3686 0A57  
                    l3678 09DA                      l3862 0F4B                      l3854 0E5A  
                    l3784 1CF3                      l3776 1CE2                      l3792 1D03  
                    l3936 1F30                      l3928 1F03                      l3960 132D  
                    l3944 12E9                      l3872 1234                      l3696 0AB5  
                    l3688 0A73                      l3848 0E26                      l3786 1CF6  
                    l3778 1CE5                      l3794 1D06                      l3938 1F36  
                    l3970 135E                      l3962 1331                      l3954 1316  
                    l3946 12ED                      l3890 126A                      l3882 1248  
                    l3698 0AD2                      l2898 1BBA                      l3866 0FD3  
                    l3788 1CFB                      l3796 1D33                      l3980 1391  
                    l3972 1368                      l3964 133F                      l3956 1319  
                    l3948 12FD                      l3892 1273                      l3884 1250  
                    l3876 123D                      l3798 1D34                      l3990 1CA7  
                    l3982 1392                      l3974 1372                      l3966 134F  
                    l3958 1326                      l3894 1285                      l3886 1261  
                    l3992 1CA8                      l3976 1388                      l3968 135A  
                    l3896 1293                      l3888 1263                      l3994 1CAB  
                    l3986 1C96                      l3978 138D                      l3898 1294  
                    l3996 1CAC                      l3988 1CA6                      ?_isr 0070  
                    l3998 1CAD                      STR_1 08A0                      STR_2 08A9  
                    STR_3 08B5                      STR_4 08B0                      STR_5 08B9  
                    u3000 10AB                      u3001 10AA                      u3020 10BF  
                    u3021 10BE                      u3005 10A7                      u3030 10C4  
                    u3110 1F89                      u3031 10C3                      u3015 10B3  
                    u3111 1F88                      u3200 1D3D                      u3120 1F8E  
                    u3040 1F44                      u3201 1D3C                      u3121 1F8D  
                    u3105 1F7D                      u3041 1F43                      u3050 1F4F  
                    u3051 1F4E                      u3300 15E5                      u3220 1D4F  
                    u3060 1F5A                      u3301 15E4                      u3221 1D4E  
                    u3061 1F59                      u4110 1B97                      u3310 15EB  
                    u3230 1D59                      u4111 1B96                      u3311 15EA  
                    u3231 1D58                      u3215 1D41                      u4120 1B9D  
                    u3320 15F0                      u3080 1F6C                      u4121 1B9C  
                    u3321 15EF                      u3081 1F6B                      u3410 1686  
                    u3330 1609                      u3250 1D6C                      u3090 1F76  
                    u3411 1685                      u3331 1608                      u3251 1D6B  
                    u3235 1D55                      u3091 1F75                      u3075 1F5E  
                    u3420 168A                      u3340 160D                      u3260 15B5  
                    u3501 1700                      u3421 1689                      u3405 1673  
                    u3341 160C                      u3261 15B4                      u3245 1D60  
                    u5110 1C89                      u3510 1714                      u3502 1701  
                    u3430 168F                      u3350 1647                      u3270 15BB  
                    u5111 1C88                      u3511 1715                      u3503 1706  
                    u3431 168E                      u3351 1646                      u3271 15BA  
                    u3095 1F72                      u3600 178C                      u3520 1732  
                    u3512 171A                      u3504 1707                      u3360 1652  
                    u3280 15C0                      u4400 1183                      u6000 0BDC  
                    u3601 178B                      u3521 1731                      u3513 171B  
                    u3505 170C                      u3441 16A1                      u3361 1650  
                    u3281 15BF                      u4401 1182                      u6001 0BDB  
                    _HORA 0197                      u3610 1792                      u3530 1757  
                    u3506 170D                      u3450 16B3                      u3442 16A8  
                    u3370 1653                      u3290 15DC                      u4410 119B  
                    u3611 1791                      u3531 1756                      u3451 16B2  
                    u3443 16AF                      u3355 1643                      u3291 15DB  
                    u4411 119A                      u3700 17EF                      u3620 1799  
                    u3540 175C                      u3460 16B7                      u3380 1663  
                    u4500 120F                      u6100 0C6E                      u6020 0BF0  
                    u3701 17EE                      u3621 1798                      u3541 175B  
                    u3461 16B6                      u3381 1662                      u4501 120E  
                    u6101 0C6D                      u6021 0BEF                      u3710 17FE  
                    u3630 179F                      u3470 16C4                      u3390 1670  
                    u4430 11D2                      u6110 0C8A                      u6030 0BF5  
                    u3711 17FD                      u3631 179E                      u3471 16C3  
                    u3391 166F                      u4431 11D1                      u6111 0C89  
                    u6031 0BF4                      u6015 0BDF                      u3640 17B1  
                    u3560 1772                      u4520 1220                      u6040 0C09  
                    u7000 04B2                      u3641 17B0                      u3561 1771  
                    u4521 121F                      u4425 11BD                      u6105 0C6A  
                    u6041 0C08                      u7001 04B1                      u6130 1D16  
                    u3650 17C0                      u3570 1777                      u3490 16E9  
                    u4450 11EB                      u6050 0C10                      u7010 04D1  
                    u3571 1776                      u3555 1767                      u3491 16E8  
                    u4515 1212                      u4451 11EA                      u4435 11CE  
                    u6051 0C0F                      u7011 04D0                      _PEIE 005E  
                    u4700 1E5F                      u3660 17CF                      u3580 1781  
                    u4460 11EF                      u6060 0C16                      u6140 13A4  
                    u4380 1BC1                      u2940 106C                      u6220 0CA4  
                    u7100 0655                      u7020 04E0                      u6125 1CD7  
                    u4701 1E5E                      u3661 17CE                      u3581 1780  
                    u3493 16E5                      u3485 16C7                      u4461 11EE  
                    u4445 11DE                      u6061 0C15                      u6205 1523  
                    u6141 13A3                      u4381 1BC0                      u2941 106B  
                    u6221 0CA3                      u7101 0654                      u7021 04DF  
                    u4710 1E7B                      u3670 17D8                      u3590 1787  
                    u4470 11F6                      u6070 0C28                      u4390 1BC7  
                    u2950 1077                      u6310 0E5A                      u6230 0CAD  
                    u7110 0665                      u7030 04F7                      u6135 1D11  
                    u4711 1E7A                      u3671 17D7                      u3655 17BB  
                    u3591 1786                      u4471 11F5                      u6071 0C27  
                    u6215 156F                      u4391 1BC6                      u2951 1076  
                    u6311 0E59                      u6231 0CAC                      u7111 0664  
                    u7031 04F6                      u7015 04CD                      u5600 1C16  
                    u4720 1E95                      u4800 1B8E                      u3680 17DD  
                    u6400 1246                      u6080 0C37                      u2960 1088  
                    u7120 0673                      u5601 1C15                      u4721 1E94  
                    u4801 1B8D                      u3681 17DC                      u6401 1245  
                    u2961 1087                      u6305 0E29                      u7121 0672  
                    u7105 0651                      u7025 04DC                      u5610 1FAA  
                    u4730 10E4                      u3690 17EA                      u4810 08EB  
                    u4490 1208                      u6090 0C54                      u7130 068D  
                    u5611 1FA9                      u4731 10E3                      u3691 17E9  
                    u4811 08EA                      u4491 1207                      u6091 0C53  
                    u6155 13C1                      u7131 068C                      u7115 0661  
                    u4740 1100                      u4900 094C                      u4820 0902  
                    u4660 08C1                      u6420 1285                      u5540 1C4F  
                    u5700 1DD3                      u6180 14B9                      u2980 109A  
                    u7060 061F                      u4725 1E91                      u4741 10FF  
                    u4901 094B                      u4661 08C0                      u6421 1284  
                    u4485 11F8                      u5541 1C4E                      u6085 0C32  
                    u5701 1DD2                      u6181 14B8                      u6165 141D  
                    u2981 1099                      u6325 0E7C                      u6245 0CCF  
                    u7061 061E                      u7045 057C                      u5630 1FBE  
                    u4750 110C                      u4830 0916                      u6510 12D8  
                    u6350 0F4B                      u6270 0D9E                      u7070 0635  
                    u7207 1012                      u5631 1FBD                      u4751 110B  
                    u4831 0915                      u6511 12D7                      u6415 126C  
                    u6095 0C50                      u6175 1472                      u2975 108C  
                    u6351 0F4A                      u6335 0EB8                      u6271 0D9D  
                    u6255 0D0B                      u7071 0634                      u7055 05E0  
                    u4840 091D                      u6520 1EF1                      u6600 130D  
                    u6440 12A3                      u5560 1C63                      u5800 099A  
                    u5720 1DE4                      u7080 063C                      u7217 1021  
                    u5625 1FAF                      u4761 111B                      u4841 091C  
                    u4825 08FD                      u6521 1EF0                      u6601 130C  
                    u6505 12CA                      u6441 12A2                      u6425 1281  
                    u5561 1C62                      u5801 0999                      u5721 1DE3  
                    u6345 0F03                      u6265 0D56                      u7081 063B  
                    u5570 1BFD                      u5650 1FD9                      u4770 1134  
                    u4762 111C                      u4690 08DB                      u6450 12A7  
                    u5810 09B1                      u7090 0644                      u5571 1BFC  
                    u7227 1030                      u5651 1FD8                      u4771 1133  
                    u4763 1121                      u4691 08DA                      u4675 08C8  
                    u6451 12A6                      u6435 1296                      u5555 1C56  
                    u5811 09B0                      u5715 1DD4                      u6195 14D6  
                    u2995 109B                      u7091 0643                      u7147 069A  
                    u5580 1C08                      u4764 1122                      u4860 092F  
                    u6540 1F07                      u6700 138D                      u6620 132C  
                    u6460 12AE                      u5820 09B6                      u5740 1DF8  
                    u5581 1C07                      u7237 1BEF                      u5645 1FC0  
                    u4781 1143                      u4765 1127                      u4861 092E  
                    u6541 1F06                      u4685 08CF                      u6701 138C  
                    u6621 132B                      u6461 12AD                      u5821 09B5  
                    u5741 1DF7                      u5725 1DE0                      u6365 0F5E  
                    u6285 0DB1                      u7157 06D8                      u5590 1C0F  
                    u5670 1FF7                      u4790 116E                      u4782 1144  
                    u4766 1128                      u4870 0936                      u6550 1F19  
                    u6710 1391                      u6390 1234                      u5750 0965  
                    u5591 1C0E                      u5671 1FF6                      u5655 1FD5  
                    u4791 116D                      u4783 1149                      u4871 0935  
                    u4855 091F                      u6551 1F18                      u6535 1EF8  
                    u6711 1390                      u6615 131E                      u6391 1233  
                    u5911 0AF8                      u5831 0A03                      u5751 0964  
                    u5735 1DEC                      u6375 0F9A                      u6295 0DED  
                    u7167 0708                      u6720 1E05                      u4784 114A  
                    u6640 134E                      u6480 12C0                      u5912 0AFF  
                    u5832 0A0A                      u5760 096B                      u5680 1DC1  
                    u6800 0053                      u6721 1E04                      u5665 1FE9  
                    u4785 114F                      u6641 134D                      u6481 12BF  
                    u5921 0B23                      u5913 0B06                      u5905 0AD4  
                    u5841 0A1F                      u5833 0A11                      u5761 096A  
                    u5681 1DC0                      u6385 0FD6                      u6801 0052  
                    u7177 075B                      u4786 1150                      u4890 0947  
                    u6570 1F36                      u6490 12C7                      u5922 0B2A  
                    u5842 0A26                      u5770 0970                      u6810 00A4  
                    u7187 1CE7                      u4795 116A                      u4891 0946  
                    u6571 1F35                      u6555 1F15                      u6635 1340  
                    u6491 12C6                      u6475 12B0                      u5931 0B4E  
                    u5923 0B31                      u5851 0A49                      u5843 0A2D  
                    u5771 096F                      u6811 00A3                      u6740 1E2A  
                    u6660 135E                      u6580 12E9                      u5940 0B76  
                    u5932 0B55                      u5852 0A50                      u5780 098F  
                    u6900 02A9                      u6820 00D7                      u6741 1E29  
                    u7197 1CF8                      u4885 0939                      u6565 1F28  
                    u6661 135D                      u6581 12E8                      u5933 0B5C  
                    u5861 0A65                      u5853 0A57                      u5781 098E  
                    u6901 02A8                      u6821 00D6                      u6670 1364  
                    u6590 12ED                      u5862 0A6C                      u5790 0995  
                    u6910 02C4                      u6830 00DB                      u6735 1E0B  
                    u6671 1363                      u6655 1353                      u6591 12EC  
                    u5951 0B82                      u5863 0A73                      u5791 0994  
                    u5695 1DC5                      u6911 02C3                      u6831 00DA  
                    u6760 1D80                      u6680 1368                      u5960 0B9E  
                    u5952 0B89                      u6920 02EB                      u6840 010A  
                    u6681 1367                      u5953 0B90                      u5945 0B71  
                    u5881 0A99                      u6921 02EA                      u6905 02A5  
                    u6841 0109                      u6770 1DA4                      u6690 137D  
                    u5882 0AA0                      u6930 02FA                      u6850 0144  
                    u6755 1E30                      u5971 0BAA                      u5891 0AC4  
                    u5883 0AA7                      u5875 0A75                      u6931 02F9  
                    u6851 0143                      u6780 1DB6                      u5972 0BB1  
                    u5892 0ACB                      u6940 0315                      u6860 018F  
                    u6781 1DB5                      u5973 0BB8                      u5965 0B99  
                    u5893 0AD2                      u6941 0314                      u6861 018E  
                    u6870 0218                      u6790 0039                      u6695 1378  
                    u6935 02F6                      u6871 0217                      u6791 0038  
                    u6960 0426                      u6880 023C                      u5985 0BBA  
                    u6961 0425                      u6881 023B                      u6970 0431  
                    u6890 0253                      u5995 0BD1                      u6971 0430  
                    u6955 03F3                      u6891 0252                      u6980 043D  
                    u6981 043C                      u6965 0422                      u6895 024F  
                    u6995 044A                      _TMR0 0001         ?_Lcd_Write_String 0077  
                    _cont 00D9                      _main 0692                      _hora 00E2  
                    _ones 00E5                      _tens 006F                      _year 00DF  
                    btemp 007E                      start 000C        ??_Lcd_Write_String 0020  
            _sprintf$1080 00AD           __end_of_Lcd_Cmd 1BF8                     ??_isr 0070  
        ?_I2C_Master_Init 0026          ?_I2C_Master_Read 0072          ?_I2C_Master_Wait 0070  
        ?_I2C_Master_Stop 0070             ___fltol@sign1 005D           __end_of___fladd 1800  
                   ?_main 0070           __end_of___awdiv 10CE           __end_of___flneg 1B91  
                   _FECHA 0190           __end_of___awmod 1F98           __end_of___flmul 0C9D  
         __end_of___flsub 1EE9           __end_of___fltol 0958                     _ANSEL 0188  
         __end_of___lldiv 2000           ___awdiv@divisor 0020           __end_of___llmod 1F3F  
         __end_of___lwdiv 1DFD                     i1l103 1C21                     i1l104 1C26  
                   i1l105 1C2B                     i1l106 1C30                     i1l109 1C38  
         __end_of___lwmod 1D71           ___awdiv@counter 0024                     _TEMP1 00E6  
                   _PORTA 0005                     _PORTB 0006                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISD 0088                     _SSPIE 0463                     _TRISE 0089  
                   _SSPIF 0063           __end_of_dpowers 08A0                     _horas 00D7  
                   _scale 0C9D           __end_of_isdigit 1BCB                     _month 00E0  
                   _setup 1C96                     pclath 000A                     status 0003  
                   wtemp0 007E           __end_of_sprintf 0692          __end_of_Lcd_Init 1065  
        __end_of_Lcd_Port 1C1A           __initialization 000F              __end_of_main 07F7  
                  ??_main 00C6         ?_I2C_Master_Start 0070         ?_I2C_Master_Write 0072  
      ??_I2C_Master_Start 0072        ??_I2C_Master_Write 0074          ___llmod@dividend 0076  
                  ?_scale 0042          ___awdiv@dividend 0022                    ?_setup 0070  
                  _ANSELH 0189                    i1l2180 1C2F                    i1l2172 1C1A  
                  i1l2182 1C34                    i1l2174 1C20                    i1l2184 1C36  
                  i1l2176 1C25                    i1l2186 1C37                    i1l2178 1C2A  
                  u275_20 1C20                    u275_21 1C1F                    u276_20 1C25  
                  u276_21 1C24                    u277_20 1C2A                    u277_21 1C29  
                  u278_20 1C2F                    u278_21 1C2E                    u279_20 1C34  
                  u279_21 1C33                 ??_Lcd_Cmd 0073                    _SSPADD 0093  
                  _TRISC3 043B                    _TRISC4 043C                    _SSPCON 0014  
                  _SSPBUF 0013          __end_of___xxtofl 139B          __end_of__powers_ 0844  
                  ___flge 10CE                    ___fleq 1E49                 ??___fladd 005E  
                  ___wmul 08BB                 ??___awdiv 0079                 ??___flneg 0076  
               ??___awmod 0076                 ??___flmul 0030                 ??___flsub 007A  
               ??___fltol 0059                 ??___lldiv 0020                 ??___llmod 0020  
               ??___lwdiv 0078                 ??___lwmod 0076                    _fround 139B  
        ___awdiv@quotient 0026           ___awmod@divisor 0072           ___awmod@counter 0077  
               ??_isdigit 0072                    saved_w 007E                 ??_sprintf 00A8  
         Lcd_Set_Cursor@a 0020           Lcd_Set_Cursor@b 0076           Lcd_Set_Cursor@y 0022  
         Lcd_Set_Cursor@z 0021                ___flge@ff1 0072                ___flge@ff2 0076  
            ___xxtofl@arg 002A              ___xxtofl@exp 0029              ___xxtofl@val 0020  
              ___fleq@ff1 0072                ___fleq@ff2 0076   __end_of__initialization 0029  
              ___flneg@f1 0072         __end_of_Lcd_Clear 1BAB                ___fltol@f1 0055  
          __pcstackCOMMON 0070              __pidataBANK3 1BAB             __end_of_scale 1000  
           __end_of_setup 1CCA            _Lcd_Set_Cursor 1DFD                __div_to_l_ 1229  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070           __div_to_l_@exp1 0026  
         __div_to_l_@cntr 0025                   ??_scale 0046           __div_to_l_@quot 0021  
                 ??_setup 007A                __pbssBANK0 006F                __pbssBANK1 00C9  
           __div_to_l_@f1 0072             __div_to_l_@f2 0076         __end_of__Umul8_16 1C68  
              __pmaintext 0692                   ?___flge 0072                   ?___fleq 0072  
                 ?___wmul 0072                __pintentry 0004                   ?_fround 0042  
  __end_of_Lcd_Set_Cursor 1E49                 ?___xxtofl 0020                ??_Lcd_Init 0076  
              ??_Lcd_Port 0072                   _SSPCON2 0091                   _SSPSTAT 0094  
              __stringtab 0800            _Lcd_Write_Char 1CCA                   _Lcd_Cmd 1BDE  
       __end_of__npowers_ 0878                _scale$1079 0050                   ___fladd 15A8  
                 ___awdiv 1065                   ___flneg 1B86                   ___awmod 1F3F  
                 ___flmul 0958                   ___flsub 1E99                   ___fltol 08E0  
                 ___lldiv 1F98                   ___llmod 1EE9                   ___lwdiv 1DB7  
                 ___lwmod 1D37           ?_Lcd_Set_Cursor 0076                   __ptext1 002D  
                 __ptext2 0C9D                   __ptext3 1F3F                   __ptext4 1065  
                 __ptext5 1BB9                   __ptext6 139B                   __ptext7 1D37  
                 __ptext8 1DB7                   __ptext9 0958               ?__div_to_l_ 0072  
                 _dpowers 0878                   _isdigit 1BB9                ??___xxtofl 0024  
        ___awmod@dividend 0074                   _sprintf 002D                   clrloop0 1001  
  __end_of_Lcd_Write_Char 1CFF      end_of_initialization 0029           ___lldiv@divisor 0072  
         ___lldiv@counter 0025          I2C_Master_Init@c 0026          I2C_Master_Read@a 0072  
               Lcd_Port@a 0072            __tdiv_to_l_@f1 0072            __tdiv_to_l_@f2 0076  
           ??__tdiv_to_l_ 0020                 _PORTDbits 0008               ___fladd@grs 0069  
           ___xxtofl@sign 0028                 _TRISCbits 0087           ?_Lcd_Write_Char 0070  
              _proximidad 00DD         Lcd_Write_String@a 0077         Lcd_Write_String@i 0023  
             ___flmul@grs 0037                 _Lcd_Clear 1B9E            __end_of___flge 1172  
          __end_of___fleq 1E99            __end_of___wmul 08E0          _Lcd_Write_String 1D71  
          __end_of_fround 15A8       start_initialization 000F       __end_of__tdiv_to_l_ 1229  
             __end_of_isr 1C3F         ??_I2C_Master_Init 002A         ??_I2C_Master_Read 0074  
       ??_I2C_Master_Wait 0072         ??_I2C_Master_Stop 0072           ___llmod@divisor 0072  
         ___llmod@counter 0021                ?_Lcd_Clear 0070                  ??___flge 0020  
                ??___fleq 0020                  ??___wmul 0076                init_fetch0 1BCB  
               __Umul8_16 1C3F               __pdataBANK3 0190           Lcd_Write_Char@a 0076  
         Lcd_Write_Char@y 0075                  ??_fround 0046             sprintf@tmpval 00BB  
               ___fladd@a 005A                 ___fladd@b 0056                fround@prec 0055  
               ___flmul@a 002C                 ___flmul@b 0028               __pbssCOMMON 007A  
               ___flsub@a 00A0                 ___flsub@b 00A4                 ___latbits 0002  
           __pcstackBANK0 0020             __pcstackBANK1 00A0                  ?_Lcd_Cmd 0070  
             sprintf@flag 00B2               sprintf@eexp 00B8               sprintf@fval 00C1  
             sprintf@prec 00BF          _I2C_Master_Start 1B73          _I2C_Master_Write 1B7C  
        ___lwdiv@dividend 0022          ??_Lcd_Set_Cursor 0077                  ?___fladd 0056  
                ?___awdiv 0020                  ?___flneg 0072                  ?___awmod 0072  
                ?___flmul 0028                  ?___flsub 00A0                  ?___fltol 0055  
                ?___lldiv 0072                  ?___llmod 0072                 __npowers_ 0844  
              ?__Umul8_16 0072                  ?___lwdiv 0020                  ?___lwmod 0072  
               __pstrings 0800               __tdiv_to_l_ 1172              ??__div_to_l_ 0020  
                ?_isdigit 0070          ___lwdiv@quotient 0025                  ?_sprintf 006A  
       interrupt_function 0004            ___wmul@product 0076                 clear_ram0 1000  
                _PIE1bits 008C                  Lcd_Cmd@a 0075                  _PIR1bits 000C  
      __end_of__div_to_l_ 12E1               ??_Lcd_Clear 0076                  _VOLTAJE1 00CD  
               _thousands 007B               __stringbase 080F         ___wmul@multiplier 0072  
        ??_Lcd_Write_Char 0073                  _Lcd_Init 1008                  _Lcd_Port 1BF8  
     I2C_Master_Read@temp 0076  __end_of_Lcd_Write_String 1DB7               ??__Umul8_16 0074  
             _fround$1077 0051               _fround$1078 004D        __end_of__stringtab 0810  
             _isdigit$890 0072                sprintf@val 00B4           _I2C_Master_Init 1CFF  
         _I2C_Master_Read 1C68                  ___xxtofl 12E1           _I2C_Master_Wait 1B91  
         _I2C_Master_Stop 07F7           ___lwdiv@divisor 0020           ___lwdiv@counter 0024  
                __ptext10 1C3F                  __ptext11 1172                  __ptext20 10CE  
                __ptext12 1229                  __ptext21 1E49                  __ptext13 12E1  
                __ptext30 1BDE                  __ptext22 1C96                  __ptext14 08BB  
                __ptext31 1BF8                  __ptext23 1CFF                  __ptext15 1EE9  
                __ptext32 1B7C                  __ptext24 1F98                  __ptext16 08E0  
                __ptext33 07F7                  __ptext25 1D71                  __ptext17 1E99  
                __ptext34 1B73                  __ptext26 1CCA                  __ptext18 15A8  
                __ptext35 1C68                  __ptext27 1DFD                  __ptext19 1B86  
                __ptext36 1B91                  __ptext28 1008                  __ptext37 1C1A  
                __ptext29 1B9E                  __powers_ 0810                  _espacios 00DB  
                _hundreds 007A                  _temporal 00D5                  _voltaje1 00C9  
__end_of_I2C_Master_Start 1B7C  __end_of_I2C_Master_Write 1B86                _INTCONbits 000B  
                init_ram0 1BCF                  isdigit@c 0073                  scale@scl 0054  
      Lcd_Write_Char@temp 0074                  intlevel1 0000                 sprintf@ap 00B1  
        __tdiv_to_l_@exp1 0028          __tdiv_to_l_@cntr 0027                 sprintf@sp 00BA  
        __tdiv_to_l_@quot 0023          ___lwmod@dividend 0074          ___lldiv@dividend 0076  
               stringcode 080A                _OSCCONbits 008F   __end_of_I2C_Master_Init 1D37  
 __end_of_I2C_Master_Read 1C96   __end_of_I2C_Master_Wait 1B9E   __end_of_I2C_Master_Stop 0800  
      Lcd_Set_Cursor@temp 0023              ?__tdiv_to_l_ 0072    __Umul8_16@multiplicand 0072  
             _temperatura 00D1                  sprintf@c 00C5                  sprintf@f 006A  
        ___lldiv@quotient 0021         I2C_Master_Write@d 0072           ___lwmod@divisor 0072  
         ___lwmod@counter 0077                  stringdir 080A                  stringtab 0800  
             _SSPCON2bits 0091             ___fladd@signs 0066              ___fladd@aexp 0067  
            ___fladd@bexp 0068      __Umul8_16@multiplier 0024         __Umul8_16@product 0020  
