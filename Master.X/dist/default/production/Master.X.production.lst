

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Mar 09 16:42:42 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36     0000                     
    37                           ; Version 2.40
    38                           ; Generated 17/11/2021 GMT
    39                           ; 
    40                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72     0000                     	;# 
    73     0001                     	;# 
    74     0002                     	;# 
    75     0003                     	;# 
    76     0004                     	;# 
    77     0005                     	;# 
    78     0006                     	;# 
    79     0007                     	;# 
    80     0008                     	;# 
    81     0009                     	;# 
    82     000A                     	;# 
    83     000B                     	;# 
    84     000C                     	;# 
    85     000D                     	;# 
    86     000E                     	;# 
    87     000E                     	;# 
    88     000F                     	;# 
    89     0010                     	;# 
    90     0011                     	;# 
    91     0012                     	;# 
    92     0013                     	;# 
    93     0014                     	;# 
    94     0015                     	;# 
    95     0015                     	;# 
    96     0016                     	;# 
    97     0017                     	;# 
    98     0018                     	;# 
    99     0019                     	;# 
   100     001A                     	;# 
   101     001B                     	;# 
   102     001B                     	;# 
   103     001C                     	;# 
   104     001D                     	;# 
   105     001E                     	;# 
   106     001F                     	;# 
   107     0081                     	;# 
   108     0085                     	;# 
   109     0086                     	;# 
   110     0087                     	;# 
   111     0088                     	;# 
   112     0089                     	;# 
   113     008C                     	;# 
   114     008D                     	;# 
   115     008E                     	;# 
   116     008F                     	;# 
   117     0090                     	;# 
   118     0091                     	;# 
   119     0092                     	;# 
   120     0093                     	;# 
   121     0093                     	;# 
   122     0093                     	;# 
   123     0094                     	;# 
   124     0095                     	;# 
   125     0096                     	;# 
   126     0097                     	;# 
   127     0098                     	;# 
   128     0099                     	;# 
   129     009A                     	;# 
   130     009B                     	;# 
   131     009C                     	;# 
   132     009D                     	;# 
   133     009E                     	;# 
   134     009F                     	;# 
   135     0105                     	;# 
   136     0107                     	;# 
   137     0108                     	;# 
   138     0109                     	;# 
   139     010C                     	;# 
   140     010C                     	;# 
   141     010D                     	;# 
   142     010E                     	;# 
   143     010F                     	;# 
   144     0185                     	;# 
   145     0187                     	;# 
   146     0188                     	;# 
   147     0189                     	;# 
   148     018C                     	;# 
   149     018D                     	;# 
   150     0000                     	;# 
   151     0001                     	;# 
   152     0002                     	;# 
   153     0003                     	;# 
   154     0004                     	;# 
   155     0005                     	;# 
   156     0006                     	;# 
   157     0007                     	;# 
   158     0008                     	;# 
   159     0009                     	;# 
   160     000A                     	;# 
   161     000B                     	;# 
   162     000C                     	;# 
   163     000D                     	;# 
   164     000E                     	;# 
   165     000E                     	;# 
   166     000F                     	;# 
   167     0010                     	;# 
   168     0011                     	;# 
   169     0012                     	;# 
   170     0013                     	;# 
   171     0014                     	;# 
   172     0015                     	;# 
   173     0015                     	;# 
   174     0016                     	;# 
   175     0017                     	;# 
   176     0018                     	;# 
   177     0019                     	;# 
   178     001A                     	;# 
   179     001B                     	;# 
   180     001B                     	;# 
   181     001C                     	;# 
   182     001D                     	;# 
   183     001E                     	;# 
   184     001F                     	;# 
   185     0081                     	;# 
   186     0085                     	;# 
   187     0086                     	;# 
   188     0087                     	;# 
   189     0088                     	;# 
   190     0089                     	;# 
   191     008C                     	;# 
   192     008D                     	;# 
   193     008E                     	;# 
   194     008F                     	;# 
   195     0090                     	;# 
   196     0091                     	;# 
   197     0092                     	;# 
   198     0093                     	;# 
   199     0093                     	;# 
   200     0093                     	;# 
   201     0094                     	;# 
   202     0095                     	;# 
   203     0096                     	;# 
   204     0097                     	;# 
   205     0098                     	;# 
   206     0099                     	;# 
   207     009A                     	;# 
   208     009B                     	;# 
   209     009C                     	;# 
   210     009D                     	;# 
   211     009E                     	;# 
   212     009F                     	;# 
   213     0105                     	;# 
   214     0107                     	;# 
   215     0108                     	;# 
   216     0109                     	;# 
   217     010C                     	;# 
   218     010C                     	;# 
   219     010D                     	;# 
   220     010E                     	;# 
   221     010F                     	;# 
   222     0185                     	;# 
   223     0187                     	;# 
   224     0188                     	;# 
   225     0189                     	;# 
   226     018C                     	;# 
   227     018D                     	;# 
   228     0000                     	;# 
   229     0001                     	;# 
   230     0002                     	;# 
   231     0003                     	;# 
   232     0004                     	;# 
   233     0005                     	;# 
   234     0006                     	;# 
   235     0007                     	;# 
   236     0008                     	;# 
   237     0009                     	;# 
   238     000A                     	;# 
   239     000B                     	;# 
   240     000C                     	;# 
   241     000D                     	;# 
   242     000E                     	;# 
   243     000E                     	;# 
   244     000F                     	;# 
   245     0010                     	;# 
   246     0011                     	;# 
   247     0012                     	;# 
   248     0013                     	;# 
   249     0014                     	;# 
   250     0015                     	;# 
   251     0015                     	;# 
   252     0016                     	;# 
   253     0017                     	;# 
   254     0018                     	;# 
   255     0019                     	;# 
   256     001A                     	;# 
   257     001B                     	;# 
   258     001B                     	;# 
   259     001C                     	;# 
   260     001D                     	;# 
   261     001E                     	;# 
   262     001F                     	;# 
   263     0081                     	;# 
   264     0085                     	;# 
   265     0086                     	;# 
   266     0087                     	;# 
   267     0088                     	;# 
   268     0089                     	;# 
   269     008C                     	;# 
   270     008D                     	;# 
   271     008E                     	;# 
   272     008F                     	;# 
   273     0090                     	;# 
   274     0091                     	;# 
   275     0092                     	;# 
   276     0093                     	;# 
   277     0093                     	;# 
   278     0093                     	;# 
   279     0094                     	;# 
   280     0095                     	;# 
   281     0096                     	;# 
   282     0097                     	;# 
   283     0098                     	;# 
   284     0099                     	;# 
   285     009A                     	;# 
   286     009B                     	;# 
   287     009C                     	;# 
   288     009D                     	;# 
   289     009E                     	;# 
   290     009F                     	;# 
   291     0105                     	;# 
   292     0107                     	;# 
   293     0108                     	;# 
   294     0109                     	;# 
   295     010C                     	;# 
   296     010C                     	;# 
   297     010D                     	;# 
   298     010E                     	;# 
   299     010F                     	;# 
   300     0185                     	;# 
   301     0187                     	;# 
   302     0188                     	;# 
   303     0189                     	;# 
   304     018C                     	;# 
   305     018D                     	;# 
   306     0000                     	;# 
   307     0001                     	;# 
   308     0002                     	;# 
   309     0003                     	;# 
   310     0004                     	;# 
   311     0005                     	;# 
   312     0006                     	;# 
   313     0007                     	;# 
   314     0008                     	;# 
   315     0009                     	;# 
   316     000A                     	;# 
   317     000B                     	;# 
   318     000C                     	;# 
   319     000D                     	;# 
   320     000E                     	;# 
   321     000E                     	;# 
   322     000F                     	;# 
   323     0010                     	;# 
   324     0011                     	;# 
   325     0012                     	;# 
   326     0013                     	;# 
   327     0014                     	;# 
   328     0015                     	;# 
   329     0015                     	;# 
   330     0016                     	;# 
   331     0017                     	;# 
   332     0018                     	;# 
   333     0019                     	;# 
   334     001A                     	;# 
   335     001B                     	;# 
   336     001B                     	;# 
   337     001C                     	;# 
   338     001D                     	;# 
   339     001E                     	;# 
   340     001F                     	;# 
   341     0081                     	;# 
   342     0085                     	;# 
   343     0086                     	;# 
   344     0087                     	;# 
   345     0088                     	;# 
   346     0089                     	;# 
   347     008C                     	;# 
   348     008D                     	;# 
   349     008E                     	;# 
   350     008F                     	;# 
   351     0090                     	;# 
   352     0091                     	;# 
   353     0092                     	;# 
   354     0093                     	;# 
   355     0093                     	;# 
   356     0093                     	;# 
   357     0094                     	;# 
   358     0095                     	;# 
   359     0096                     	;# 
   360     0097                     	;# 
   361     0098                     	;# 
   362     0099                     	;# 
   363     009A                     	;# 
   364     009B                     	;# 
   365     009C                     	;# 
   366     009D                     	;# 
   367     009E                     	;# 
   368     009F                     	;# 
   369     0105                     	;# 
   370     0107                     	;# 
   371     0108                     	;# 
   372     0109                     	;# 
   373     010C                     	;# 
   374     010C                     	;# 
   375     010D                     	;# 
   376     010E                     	;# 
   377     010F                     	;# 
   378     0185                     	;# 
   379     0187                     	;# 
   380     0188                     	;# 
   381     0189                     	;# 
   382     018C                     	;# 
   383     018D                     	;# 
   384                           
   385                           	psect	idataCOMMON
   386     05EF                     __pidataCOMMON:
   387                           
   388                           ;initializer for _espacios_comp
   389     05EF  3403               	retlw	3
   390     05F0  3400               	retlw	0
   391     0013                     _SSPBUF	set	19
   392     0014                     _SSPCON	set	20
   393     0008                     _PORTDbits	set	8
   394     0018                     _RCSTAbits	set	24
   395     0009                     _PORTE	set	9
   396     0008                     _PORTD	set	8
   397     0006                     _PORTB	set	6
   398     0005                     _PORTA	set	5
   399     0019                     _TXREG	set	25
   400     0006                     _PORTBbits	set	6
   401     0001                     _TMR0	set	1
   402     000B                     _INTCONbits	set	11
   403     000C                     _PIR1bits	set	12
   404     0063                     _SSPIF	set	99
   405     005E                     _PEIE	set	94
   406     005F                     _GIE	set	95
   407     0043                     _RD3	set	67
   408     0047                     _RD7	set	71
   409     0046                     _RD6	set	70
   410     0045                     _RD5	set	69
   411     0044                     _RD4	set	68
   412     0091                     _SSPCON2bits	set	145
   413     0094                     _SSPSTAT	set	148
   414     0093                     _SSPADD	set	147
   415     0091                     _SSPCON2	set	145
   416     0098                     _TXSTAbits	set	152
   417     0099                     _SPBRG	set	153
   418     008F                     _OSCCONbits	set	143
   419     008C                     _PIE1bits	set	140
   420     0087                     _TRISCbits	set	135
   421     0089                     _TRISE	set	137
   422     0088                     _TRISD	set	136
   423     0086                     _TRISB	set	134
   424     0085                     _TRISA	set	133
   425     0463                     _SSPIE	set	1123
   426     043C                     _TRISC4	set	1084
   427     043B                     _TRISC3	set	1083
   428     0189                     _ANSELH	set	393
   429     0188                     _ANSEL	set	392
   430                           
   431                           	psect	strings
   432     056B                     __pstrings:
   433     056B                     stringtab:
   434     056B                     __stringtab:
   435     056B                     stringcode:	
   436                           ;	String table - string pointers are 1 byte each
   437                           
   438     056B                     stringdir:
   439     056B  3005               	movlw	high stringdir
   440     056C  008A               	movwf	10
   441     056D  0804               	movf	4,w
   442     056E  0A84               	incf	4,f
   443     056F  0782               	addwf	2,f
   444     0570                     __stringbase:
   445     0570  3400               	retlw	0
   446     0571                     __end_of__stringtab:
   447     0571                     STR_1:
   448     0571  3457               	retlw	87	;'W'
   449     0572  3465               	retlw	101	;'e'
   450     0573  346C               	retlw	108	;'l'
   451     0574  3463               	retlw	99	;'c'
   452     0575  346F               	retlw	111	;'o'
   453     0576  346D               	retlw	109	;'m'
   454     0577  3465               	retlw	101	;'e'
   455     0578  3421               	retlw	33	;'!'
   456     0579  3400               	retlw	0
   457     057A                     STR_2:
   458     057A  3454               	retlw	84	;'T'
   459     057B  3465               	retlw	101	;'e'
   460     057C  346D               	retlw	109	;'m'
   461     057D  3470               	retlw	112	;'p'
   462     057E  343A               	retlw	58	;':'
   463     057F  3420               	retlw	32	;' '
   464     0580  3400               	retlw	0
   465     0581                     STR_3:
   466     0581  3450               	retlw	80	;'P'
   467     0582  342D               	retlw	45	;'-'
   468     0583  343E               	retlw	62	;'>'
   469     0584  3400               	retlw	0
   470     0585                     STR_4:
   471     0585  3443               	retlw	67	;'C'
   472     0586  3400               	retlw	0
   473                           
   474                           	psect	cinit
   475     000F                     start_initialization:	
   476                           ; #config settings
   477                           
   478     000F                     __initialization:
   479                           
   480                           ; Initialize objects allocated to COMMON
   481     000F  120A  118A  25EF  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   482     0014  00FA               	movwf	__pdataCOMMON& (0+127)
   483     0015  120A  118A  25F0  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   484     001A  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
   485                           
   486                           ; Clear objects allocated to BANK0
   487     001B  1383               	bcf	3,7	;select IRP bank0
   488     001C  3020               	movlw	low __pbssBANK0
   489     001D  0084               	movwf	4
   490     001E  303C               	movlw	low (__pbssBANK0+28)
   491     001F  120A  118A  25E7  120A  118A  	fcall	clear_ram0
   492     0024                     end_of_initialization:	
   493                           ;End of C runtime variable initialization code
   494                           
   495     0024                     __end_of__initialization:
   496     0024  0183               	clrf	3
   497     0025  120A  118A  2828   	ljmp	_main	;jump to C main() function
   498                           
   499                           	psect	dataCOMMON
   500     007A                     __pdataCOMMON:
   501     007A                     _espacios_comp:
   502     007A                     	ds	2
   503                           
   504                           	psect	bssBANK0
   505     0020                     __pbssBANK0:
   506     0020                     _TEMP1:
   507     0020                     	ds	4
   508     0024                     _voltaje1:
   509     0024                     	ds	4
   510     0028                     _VOLTAJE1:
   511     0028                     	ds	4
   512     002C                     _temporal:
   513     002C                     	ds	2
   514     002E                     _i:
   515     002E                     	ds	2
   516     0030                     _flag:
   517     0030                     	ds	2
   518     0032                     _cont:
   519     0032                     	ds	2
   520     0034                     _temperatura:
   521     0034                     	ds	2
   522     0036                     _espacios:
   523     0036                     	ds	2
   524     0038                     _proximidad:
   525     0038                     	ds	2
   526     003A                     _ones:
   527     003A                     	ds	1
   528     003B                     _tens:
   529     003B                     	ds	1
   530                           
   531                           	psect	clrtext
   532     05E7                     clear_ram0:	
   533                           ;	Called with FSR containing the base address, and
   534                           ;	W with the last address+1
   535                           
   536     05E7  0064               	clrwdt	;clear the watchdog before getting into this loop
   537     05E8                     clrloop0:
   538     05E8  0180               	clrf	0	;clear RAM location pointed to by FSR
   539     05E9  0A84               	incf	4,f	;increment pointer
   540     05EA  0604               	xorwf	4,w	;XOR with final address
   541     05EB  1903               	btfsc	3,2	;have we reached the end yet?
   542     05EC  3400               	retlw	0	;all done for this memory range, return
   543     05ED  0604               	xorwf	4,w	;XOR again to restore value
   544     05EE  2DE8               	goto	clrloop0	;do the next byte
   545                           
   546                           	psect	cstackCOMMON
   547     0070                     __pcstackCOMMON:
   548     0070                     ?_setup:
   549     0070                     ?_initUART:	
   550                           ; 1 bytes @ 0x0
   551                           
   552     0070                     ?_Lcd_Init:	
   553                           ; 1 bytes @ 0x0
   554                           
   555     0070                     ?_Lcd_Clear:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0070                     ?_I2C_Master_Start:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0070                     ?_I2C_Master_Stop:	
   562                           ; 1 bytes @ 0x0
   563                           
   564     0070                     ?_Lcd_Write_String:	
   565                           ; 1 bytes @ 0x0
   566                           
   567     0070                     ?_Lcd_Write_Char:	
   568                           ; 1 bytes @ 0x0
   569                           
   570     0070                     ?_isr:	
   571                           ; 1 bytes @ 0x0
   572                           
   573     0070                     ??_isr:	
   574                           ; 1 bytes @ 0x0
   575                           
   576     0070                     ?_main:	
   577                           ; 1 bytes @ 0x0
   578                           
   579     0070                     ?_Lcd_Port:	
   580                           ; 1 bytes @ 0x0
   581                           
   582     0070                     ?_Lcd_Cmd:	
   583                           ; 1 bytes @ 0x0
   584                           
   585     0070                     ?_I2C_Master_Wait:	
   586                           ; 1 bytes @ 0x0
   587                           
   588                           
   589                           ; 1 bytes @ 0x0
   590     0070                     	ds	2
   591     0072                     ??_initUART:
   592     0072                     ??_I2C_Master_Start:	
   593                           ; 1 bytes @ 0x2
   594                           
   595     0072                     ?_I2C_Master_Write:	
   596                           ; 1 bytes @ 0x2
   597                           
   598     0072                     ??_I2C_Master_Stop:	
   599                           ; 1 bytes @ 0x2
   600                           
   601     0072                     ??_Lcd_Port:	
   602                           ; 1 bytes @ 0x2
   603                           
   604     0072                     ??_I2C_Master_Wait:	
   605                           ; 1 bytes @ 0x2
   606                           
   607     0072                     ?_I2C_Master_Read:	
   608                           ; 1 bytes @ 0x2
   609                           
   610     0072                     ?___lwdiv:	
   611                           ; 2 bytes @ 0x2
   612                           
   613     0072                     ?___lldiv:	
   614                           ; 2 bytes @ 0x2
   615                           
   616     0072                     Lcd_Port@a:	
   617                           ; 4 bytes @ 0x2
   618                           
   619     0072                     I2C_Master_Write@d:	
   620                           ; 1 bytes @ 0x2
   621                           
   622     0072                     I2C_Master_Read@a:	
   623                           ; 2 bytes @ 0x2
   624                           
   625     0072                     ___lwdiv@divisor:	
   626                           ; 2 bytes @ 0x2
   627                           
   628     0072                     ___lldiv@divisor:	
   629                           ; 2 bytes @ 0x2
   630                           
   631                           
   632                           ; 4 bytes @ 0x2
   633     0072                     	ds	1
   634     0073                     ??_Lcd_Write_Char:
   635     0073                     ??_Lcd_Cmd:	
   636                           ; 1 bytes @ 0x3
   637                           
   638                           
   639                           ; 1 bytes @ 0x3
   640     0073                     	ds	1
   641     0074                     ??_I2C_Master_Write:
   642     0074                     ??_I2C_Master_Read:	
   643                           ; 1 bytes @ 0x4
   644                           
   645     0074                     Lcd_Write_Char@temp:	
   646                           ; 1 bytes @ 0x4
   647                           
   648     0074                     ___lwdiv@dividend:	
   649                           ; 1 bytes @ 0x4
   650                           
   651                           
   652                           ; 2 bytes @ 0x4
   653     0074                     	ds	1
   654     0075                     Lcd_Cmd@a:
   655     0075                     Lcd_Write_Char@y:	
   656                           ; 1 bytes @ 0x5
   657                           
   658                           
   659                           ; 1 bytes @ 0x5
   660     0075                     	ds	1
   661     0076                     ??_Lcd_Init:
   662     0076                     ??_Lcd_Clear:	
   663                           ; 1 bytes @ 0x6
   664                           
   665     0076                     ?_Lcd_Set_Cursor:	
   666                           ; 1 bytes @ 0x6
   667                           
   668     0076                     ??___lwdiv:	
   669                           ; 1 bytes @ 0x6
   670                           
   671     0076                     Lcd_Set_Cursor@b:	
   672                           ; 1 bytes @ 0x6
   673                           
   674     0076                     Lcd_Write_Char@a:	
   675                           ; 1 bytes @ 0x6
   676                           
   677     0076                     I2C_Master_Read@temp:	
   678                           ; 1 bytes @ 0x6
   679                           
   680     0076                     ___lldiv@dividend:	
   681                           ; 2 bytes @ 0x6
   682                           
   683                           
   684                           ; 4 bytes @ 0x6
   685     0076                     	ds	1
   686     0077                     ??_Lcd_Set_Cursor:
   687     0077                     ??_Lcd_Write_String:	
   688                           ; 1 bytes @ 0x7
   689                           
   690     0077                     Lcd_Write_String@i:	
   691                           ; 1 bytes @ 0x7
   692                           
   693     0077                     ___lwdiv@quotient:	
   694                           ; 2 bytes @ 0x7
   695                           
   696                           
   697                           ; 2 bytes @ 0x7
   698     0077                     	ds	2
   699     0079                     Lcd_Write_String@a:
   700     0079                     ___lwdiv@counter:	
   701                           ; 1 bytes @ 0x9
   702                           
   703                           
   704                           ; 1 bytes @ 0x9
   705     0079                     	ds	1
   706     007A                     ??_setup:
   707                           
   708                           	psect	cstackBANK0
   709     003C                     __pcstackBANK0:	
   710                           ; 1 bytes @ 0xA
   711                           
   712     003C                     ??___lldiv:
   713     003C                     ?___lwmod:	
   714                           ; 1 bytes @ 0x0
   715                           
   716     003C                     Lcd_Set_Cursor@a:	
   717                           ; 2 bytes @ 0x0
   718                           
   719     003C                     ___lwmod@divisor:	
   720                           ; 1 bytes @ 0x0
   721                           
   722                           
   723                           ; 2 bytes @ 0x0
   724     003C                     	ds	1
   725     003D                     Lcd_Set_Cursor@z:
   726     003D                     ___lldiv@quotient:	
   727                           ; 1 bytes @ 0x1
   728                           
   729                           
   730                           ; 4 bytes @ 0x1
   731     003D                     	ds	1
   732     003E                     Lcd_Set_Cursor@y:
   733     003E                     ___lwmod@dividend:	
   734                           ; 1 bytes @ 0x2
   735                           
   736                           
   737                           ; 2 bytes @ 0x2
   738     003E                     	ds	1
   739     003F                     Lcd_Set_Cursor@temp:
   740                           
   741                           ; 1 bytes @ 0x3
   742     003F                     	ds	1
   743     0040                     ??___lwmod:
   744                           
   745                           ; 1 bytes @ 0x4
   746     0040                     	ds	1
   747     0041                     ___lldiv@counter:
   748     0041                     ___lwmod@counter:	
   749                           ; 1 bytes @ 0x5
   750                           
   751                           
   752                           ; 1 bytes @ 0x5
   753     0041                     	ds	1
   754     0042                     ?_I2C_Master_Init:
   755     0042                     I2C_Master_Init@c:	
   756                           ; 1 bytes @ 0x6
   757                           
   758                           
   759                           ; 4 bytes @ 0x6
   760     0042                     	ds	4
   761     0046                     ??_I2C_Master_Init:
   762                           
   763                           ; 1 bytes @ 0xA
   764     0046                     	ds	4
   765     004A                     ??_main:
   766                           
   767                           ; 1 bytes @ 0xE
   768     004A                     	ds	3
   769                           
   770                           	psect	maintext
   771     0028                     __pmaintext:	
   772 ;;
   773 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   774 ;;
   775 ;; *************** function _main *****************
   776 ;; Defined at:
   777 ;;		line 118 in file "main.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;		None
   780 ;; Auto vars:     Size  Location     Type
   781 ;;		None
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      void 
   784 ;; Registers used:
   785 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   786 ;; Tracked objects:
   787 ;;		On entry : B00/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   791 ;;      Params:         0       0       0       0       0
   792 ;;      Locals:         0       0       0       0       0
   793 ;;      Temps:          0       3       0       0       0
   794 ;;      Totals:         0       3       0       0       0
   795 ;;Total ram usage:        3 bytes
   796 ;; Hardware stack levels required when called: 4
   797 ;; This function calls:
   798 ;;		_I2C_Master_Read
   799 ;;		_I2C_Master_Start
   800 ;;		_I2C_Master_Stop
   801 ;;		_I2C_Master_Write
   802 ;;		_Lcd_Clear
   803 ;;		_Lcd_Init
   804 ;;		_Lcd_Set_Cursor
   805 ;;		_Lcd_Write_Char
   806 ;;		_Lcd_Write_String
   807 ;;		___lwdiv
   808 ;;		___lwmod
   809 ;;		_initUART
   810 ;;		_setup
   811 ;; This function is called by:
   812 ;;		Startup code after reset
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816     0028                     _main:	
   817                           ;psect for function _main
   818                           
   819     0028                     l1761:	
   820                           ;incstack = 0
   821                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   822                           
   823                           
   824                           ;main.c: 119:     _delay((unsigned long)((1500)*(8000000/4000.0)));
   825     0028  3010               	movlw	16
   826     0029  1283               	bcf	3,5	;RP0=0, select bank0
   827     002A  1303               	bcf	3,6	;RP1=0, select bank0
   828     002B  00CC               	movwf	??_main+2
   829     002C  3039               	movlw	57
   830     002D  00CB               	movwf	??_main+1
   831     002E  300D               	movlw	13
   832     002F  00CA               	movwf	??_main
   833     0030                     u1147:
   834     0030  0BCA               	decfsz	??_main,f
   835     0031  2830               	goto	u1147
   836     0032  0BCB               	decfsz	??_main+1,f
   837     0033  2830               	goto	u1147
   838     0034  0BCC               	decfsz	??_main+2,f
   839     0035  2830               	goto	u1147
   840     0036                     l1763:
   841                           
   842                           ;main.c: 121:     setup();
   843     0036  120A  118A  249A  120A  118A  	fcall	_setup
   844     003B                     l1765:
   845                           
   846                           ;main.c: 122:     initUART();
   847     003B  120A  118A  25A1  120A  118A  	fcall	_initUART
   848                           
   849                           ;main.c: 123:     i = 1;
   850     0040  3001               	movlw	1
   851     0041  1283               	bcf	3,5	;RP0=0, select bank0
   852     0042  1303               	bcf	3,6	;RP1=0, select bank0
   853     0043  00AE               	movwf	_i
   854     0044  3000               	movlw	0
   855     0045  00AF               	movwf	_i+1
   856     0046                     l1767:
   857                           
   858                           ;main.c: 124:     Lcd_Init();
   859     0046  120A  118A  2304  120A  118A  	fcall	_Lcd_Init
   860     004B                     l1769:
   861                           
   862                           ;main.c: 125:     Lcd_Clear();
   863     004B  120A  118A  25B1  120A  118A  	fcall	_Lcd_Clear
   864     0050                     l1771:
   865                           
   866                           ;main.c: 128:         I2C_Master_Start();
   867     0050  120A  118A  25DE  120A  118A  	fcall	_I2C_Master_Start
   868     0055                     l1773:
   869                           
   870                           ;main.c: 129:         I2C_Master_Write(0x51);
   871     0055  3051               	movlw	81
   872     0056  00F2               	movwf	I2C_Master_Write@d
   873     0057  3000               	movlw	0
   874     0058  00F3               	movwf	I2C_Master_Write@d+1
   875     0059  120A  118A  25CB  120A  118A  	fcall	_I2C_Master_Write
   876     005E                     l1775:
   877                           
   878                           ;main.c: 130:         proximidad = I2C_Master_Read(0);
   879     005E  3000               	movlw	0
   880     005F  00F2               	movwf	I2C_Master_Read@a
   881     0060  00F3               	movwf	I2C_Master_Read@a+1
   882     0061  120A  118A  24CD  120A  118A  	fcall	_I2C_Master_Read
   883     0066  0873               	movf	?_I2C_Master_Read+1,w
   884     0067  1283               	bcf	3,5	;RP0=0, select bank0
   885     0068  1303               	bcf	3,6	;RP1=0, select bank0
   886     0069  00B9               	movwf	_proximidad+1
   887     006A  0872               	movf	?_I2C_Master_Read,w
   888     006B  00B8               	movwf	_proximidad
   889     006C                     l1777:
   890                           
   891                           ;main.c: 131:         I2C_Master_Stop();
   892     006C  120A  118A  25D5  120A  118A  	fcall	_I2C_Master_Stop
   893                           
   894                           ;main.c: 132:         _delay((unsigned long)((250)*(8000000/4000.0)));
   895     0071  3003               	movlw	3
   896     0072  1283               	bcf	3,5	;RP0=0, select bank0
   897     0073  1303               	bcf	3,6	;RP1=0, select bank0
   898     0074  00CC               	movwf	??_main+2
   899     0075  308A               	movlw	138
   900     0076  00CB               	movwf	??_main+1
   901     0077  3055               	movlw	85
   902     0078  00CA               	movwf	??_main
   903     0079                     u1157:
   904     0079  0BCA               	decfsz	??_main,f
   905     007A  2879               	goto	u1157
   906     007B  0BCB               	decfsz	??_main+1,f
   907     007C  2879               	goto	u1157
   908     007D  0BCC               	decfsz	??_main+2,f
   909     007E  2879               	goto	u1157
   910     007F                     l1779:
   911                           
   912                           ;main.c: 134:         I2C_Master_Start();
   913     007F  120A  118A  25DE  120A  118A  	fcall	_I2C_Master_Start
   914     0084                     l1781:
   915                           
   916                           ;main.c: 135:         I2C_Master_Write(0x101);
   917     0084  3001               	movlw	1
   918     0085  00F2               	movwf	I2C_Master_Write@d
   919     0086  3001               	movlw	1
   920     0087  00F3               	movwf	I2C_Master_Write@d+1
   921     0088  120A  118A  25CB  120A  118A  	fcall	_I2C_Master_Write
   922     008D                     l1783:
   923                           
   924                           ;main.c: 136:         espacios = I2C_Master_Read(0);
   925     008D  3000               	movlw	0
   926     008E  00F2               	movwf	I2C_Master_Read@a
   927     008F  00F3               	movwf	I2C_Master_Read@a+1
   928     0090  120A  118A  24CD  120A  118A  	fcall	_I2C_Master_Read
   929     0095  0873               	movf	?_I2C_Master_Read+1,w
   930     0096  1283               	bcf	3,5	;RP0=0, select bank0
   931     0097  1303               	bcf	3,6	;RP1=0, select bank0
   932     0098  00B7               	movwf	_espacios+1
   933     0099  0872               	movf	?_I2C_Master_Read,w
   934     009A  00B6               	movwf	_espacios
   935     009B                     l1785:
   936                           
   937                           ;main.c: 137:         I2C_Master_Stop();
   938     009B  120A  118A  25D5  120A  118A  	fcall	_I2C_Master_Stop
   939                           
   940                           ;main.c: 138:         _delay((unsigned long)((250)*(8000000/4000.0)));
   941     00A0  3003               	movlw	3
   942     00A1  1283               	bcf	3,5	;RP0=0, select bank0
   943     00A2  1303               	bcf	3,6	;RP1=0, select bank0
   944     00A3  00CC               	movwf	??_main+2
   945     00A4  308A               	movlw	138
   946     00A5  00CB               	movwf	??_main+1
   947     00A6  3055               	movlw	85
   948     00A7  00CA               	movwf	??_main
   949     00A8                     u1167:
   950     00A8  0BCA               	decfsz	??_main,f
   951     00A9  28A8               	goto	u1167
   952     00AA  0BCB               	decfsz	??_main+1,f
   953     00AB  28A8               	goto	u1167
   954     00AC  0BCC               	decfsz	??_main+2,f
   955     00AD  28A8               	goto	u1167
   956     00AE                     l1787:
   957                           
   958                           ;main.c: 141:         I2C_Master_Start();
   959     00AE  120A  118A  25DE  120A  118A  	fcall	_I2C_Master_Start
   960     00B3                     l1789:
   961                           
   962                           ;main.c: 142:         I2C_Master_Write(0x111);
   963     00B3  3011               	movlw	17
   964     00B4  00F2               	movwf	I2C_Master_Write@d
   965     00B5  3001               	movlw	1
   966     00B6  00F3               	movwf	I2C_Master_Write@d+1
   967     00B7  120A  118A  25CB  120A  118A  	fcall	_I2C_Master_Write
   968     00BC                     l1791:
   969                           
   970                           ;main.c: 143:         temperatura = I2C_Master_Read(0);
   971     00BC  3000               	movlw	0
   972     00BD  00F2               	movwf	I2C_Master_Read@a
   973     00BE  00F3               	movwf	I2C_Master_Read@a+1
   974     00BF  120A  118A  24CD  120A  118A  	fcall	_I2C_Master_Read
   975     00C4  0873               	movf	?_I2C_Master_Read+1,w
   976     00C5  1283               	bcf	3,5	;RP0=0, select bank0
   977     00C6  1303               	bcf	3,6	;RP1=0, select bank0
   978     00C7  00B5               	movwf	_temperatura+1
   979     00C8  0872               	movf	?_I2C_Master_Read,w
   980     00C9  00B4               	movwf	_temperatura
   981     00CA                     l1793:
   982                           
   983                           ;main.c: 144:         I2C_Master_Stop();
   984     00CA  120A  118A  25D5  120A  118A  	fcall	_I2C_Master_Stop
   985                           
   986                           ;main.c: 145:         _delay((unsigned long)((250)*(8000000/4000.0)));
   987     00CF  3003               	movlw	3
   988     00D0  1283               	bcf	3,5	;RP0=0, select bank0
   989     00D1  1303               	bcf	3,6	;RP1=0, select bank0
   990     00D2  00CC               	movwf	??_main+2
   991     00D3  308A               	movlw	138
   992     00D4  00CB               	movwf	??_main+1
   993     00D5  3055               	movlw	85
   994     00D6  00CA               	movwf	??_main
   995     00D7                     u1177:
   996     00D7  0BCA               	decfsz	??_main,f
   997     00D8  28D7               	goto	u1177
   998     00D9  0BCB               	decfsz	??_main+1,f
   999     00DA  28D7               	goto	u1177
  1000     00DB  0BCC               	decfsz	??_main+2,f
  1001     00DC  28D7               	goto	u1177
  1002     00DD                     l1795:
  1003                           
  1004                           ;main.c: 148:         Lcd_Set_Cursor(1,1);
  1005     00DD  01F6               	clrf	Lcd_Set_Cursor@b
  1006     00DE  0AF6               	incf	Lcd_Set_Cursor@b,f
  1007     00DF  3001               	movlw	1
  1008     00E0  120A  118A  2361  120A  118A  	fcall	_Lcd_Set_Cursor
  1009     00E5                     l1797:
  1010                           
  1011                           ;main.c: 149:         Lcd_Write_String("Welcome!");
  1012     00E5  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1013     00E6  120A  118A  2524  120A  118A  	fcall	_Lcd_Write_String
  1014     00EB                     l1799:
  1015                           
  1016                           ;main.c: 150:         Lcd_Set_Cursor(2,1);
  1017     00EB  01F6               	clrf	Lcd_Set_Cursor@b
  1018     00EC  0AF6               	incf	Lcd_Set_Cursor@b,f
  1019     00ED  3002               	movlw	2
  1020     00EE  120A  118A  2361  120A  118A  	fcall	_Lcd_Set_Cursor
  1021     00F3                     l1801:
  1022                           
  1023                           ;main.c: 151:         Lcd_Write_String("Temp: ");
  1024     00F3  300A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1025     00F4  120A  118A  2524  120A  118A  	fcall	_Lcd_Write_String
  1026     00F9                     l1803:
  1027                           
  1028                           ;main.c: 152:         Lcd_Set_Cursor(2,13);
  1029     00F9  300D               	movlw	13
  1030     00FA  00F6               	movwf	Lcd_Set_Cursor@b
  1031     00FB  3002               	movlw	2
  1032     00FC  120A  118A  2361  120A  118A  	fcall	_Lcd_Set_Cursor
  1033     0101                     l1805:
  1034                           
  1035                           ;main.c: 153:         Lcd_Write_String("P->");
  1036     0101  3011               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1037     0102  120A  118A  2524  120A  118A  	fcall	_Lcd_Write_String
  1038     0107                     l1807:
  1039                           
  1040                           ;main.c: 156:         Lcd_Set_Cursor(1,15);
  1041     0107  300F               	movlw	15
  1042     0108  00F6               	movwf	Lcd_Set_Cursor@b
  1043     0109  3001               	movlw	1
  1044     010A  120A  118A  2361  120A  118A  	fcall	_Lcd_Set_Cursor
  1045     010F                     l1809:
  1046                           
  1047                           ;main.c: 157:         Lcd_Write_Char(proximidad+32);
  1048     010F  1283               	bcf	3,5	;RP0=0, select bank0
  1049     0110  1303               	bcf	3,6	;RP1=0, select bank0
  1050     0111  0838               	movf	_proximidad,w
  1051     0112  3E20               	addlw	32
  1052     0113  120A  118A  2465  120A  118A  	fcall	_Lcd_Write_Char
  1053     0118                     l1811:
  1054                           
  1055                           ;main.c: 160:         Lcd_Set_Cursor(2,16);
  1056     0118  3010               	movlw	16
  1057     0119  00F6               	movwf	Lcd_Set_Cursor@b
  1058     011A  3002               	movlw	2
  1059     011B  120A  118A  2361  120A  118A  	fcall	_Lcd_Set_Cursor
  1060     0120                     l1813:
  1061                           
  1062                           ;main.c: 161:         Lcd_Write_Char(espacios+48);
  1063     0120  1283               	bcf	3,5	;RP0=0, select bank0
  1064     0121  1303               	bcf	3,6	;RP1=0, select bank0
  1065     0122  0836               	movf	_espacios,w
  1066     0123  3E30               	addlw	48
  1067     0124  120A  118A  2465  120A  118A  	fcall	_Lcd_Write_Char
  1068     0129                     l1815:
  1069                           
  1070                           ;main.c: 164:         tens = (temperatura/10)%10;
  1071     0129  300A               	movlw	10
  1072     012A  1283               	bcf	3,5	;RP0=0, select bank0
  1073     012B  1303               	bcf	3,6	;RP1=0, select bank0
  1074     012C  00BC               	movwf	___lwmod@divisor
  1075     012D  3000               	movlw	0
  1076     012E  00BD               	movwf	___lwmod@divisor+1
  1077     012F  300A               	movlw	10
  1078     0130  00F2               	movwf	___lwdiv@divisor
  1079     0131  3000               	movlw	0
  1080     0132  00F3               	movwf	___lwdiv@divisor+1
  1081     0133  0835               	movf	_temperatura+1,w
  1082     0134  00F5               	movwf	___lwdiv@dividend+1
  1083     0135  0834               	movf	_temperatura,w
  1084     0136  00F4               	movwf	___lwdiv@dividend
  1085     0137  120A  118A  23AD  120A  118A  	fcall	___lwdiv
  1086     013C  0873               	movf	?___lwdiv+1,w
  1087     013D  1283               	bcf	3,5	;RP0=0, select bank0
  1088     013E  1303               	bcf	3,6	;RP1=0, select bank0
  1089     013F  00BF               	movwf	___lwmod@dividend+1
  1090     0140  0872               	movf	?___lwdiv,w
  1091     0141  00BE               	movwf	___lwmod@dividend
  1092     0142  120A  118A  23F1  120A  118A  	fcall	___lwmod
  1093     0147  1283               	bcf	3,5	;RP0=0, select bank0
  1094     0148  1303               	bcf	3,6	;RP1=0, select bank0
  1095     0149  083C               	movf	?___lwmod,w
  1096     014A  00BB               	movwf	_tens
  1097     014B                     l1817:
  1098                           
  1099                           ;main.c: 165:         ones = temperatura%10;
  1100     014B  300A               	movlw	10
  1101     014C  00BC               	movwf	___lwmod@divisor
  1102     014D  3000               	movlw	0
  1103     014E  00BD               	movwf	___lwmod@divisor+1
  1104     014F  0835               	movf	_temperatura+1,w
  1105     0150  00BF               	movwf	___lwmod@dividend+1
  1106     0151  0834               	movf	_temperatura,w
  1107     0152  00BE               	movwf	___lwmod@dividend
  1108     0153  120A  118A  23F1  120A  118A  	fcall	___lwmod
  1109     0158  1283               	bcf	3,5	;RP0=0, select bank0
  1110     0159  1303               	bcf	3,6	;RP1=0, select bank0
  1111     015A  083C               	movf	?___lwmod,w
  1112     015B  00BA               	movwf	_ones
  1113     015C                     l1819:
  1114                           
  1115                           ;main.c: 167:         Lcd_Set_Cursor(2,6);
  1116     015C  3006               	movlw	6
  1117     015D  00F6               	movwf	Lcd_Set_Cursor@b
  1118     015E  3002               	movlw	2
  1119     015F  120A  118A  2361  120A  118A  	fcall	_Lcd_Set_Cursor
  1120     0164                     l1821:
  1121                           
  1122                           ;main.c: 168:         Lcd_Write_Char(tens+48);
  1123     0164  1283               	bcf	3,5	;RP0=0, select bank0
  1124     0165  1303               	bcf	3,6	;RP1=0, select bank0
  1125     0166  083B               	movf	_tens,w
  1126     0167  3E30               	addlw	48
  1127     0168  120A  118A  2465  120A  118A  	fcall	_Lcd_Write_Char
  1128     016D                     l1823:
  1129                           
  1130                           ;main.c: 169:         Lcd_Write_Char(ones+48);
  1131     016D  1283               	bcf	3,5	;RP0=0, select bank0
  1132     016E  1303               	bcf	3,6	;RP1=0, select bank0
  1133     016F  083A               	movf	_ones,w
  1134     0170  3E30               	addlw	48
  1135     0171  120A  118A  2465  120A  118A  	fcall	_Lcd_Write_Char
  1136     0176                     l1825:
  1137                           
  1138                           ;main.c: 170:         Lcd_Write_Char(0xDF);
  1139     0176  30DF               	movlw	223
  1140     0177  120A  118A  2465  120A  118A  	fcall	_Lcd_Write_Char
  1141     017C                     l1827:
  1142                           
  1143                           ;main.c: 171:         Lcd_Write_String("C");
  1144     017C  3015               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1145     017D  120A  118A  2524  120A  118A  	fcall	_Lcd_Write_String
  1146     0182                     l1829:
  1147                           
  1148                           ;main.c: 195:         if (proximidad == 1 && espacios>0){
  1149     0182  1283               	bcf	3,5	;RP0=0, select bank0
  1150     0183  1303               	bcf	3,6	;RP1=0, select bank0
  1151     0184  0338               	decf	_proximidad,w
  1152     0185  0439               	iorwf	_proximidad+1,w
  1153     0186  1D03               	btfss	3,2
  1154     0187  2989               	goto	u1091
  1155     0188  298A               	goto	u1090
  1156     0189                     u1091:
  1157     0189  2A6B               	goto	l113
  1158     018A                     u1090:
  1159     018A                     l1831:
  1160     018A  0836               	movf	_espacios,w
  1161     018B  0437               	iorwf	_espacios+1,w
  1162     018C  1903               	btfsc	3,2
  1163     018D  298F               	goto	u1101
  1164     018E  2990               	goto	u1100
  1165     018F                     u1101:
  1166     018F  2A6B               	goto	l113
  1167     0190                     u1100:
  1168     0190                     l1833:
  1169                           
  1170                           ;main.c: 196:             _delay((unsigned long)((250)*(8000000/4000.0)));
  1171     0190  3003               	movlw	3
  1172     0191  1283               	bcf	3,5	;RP0=0, select bank0
  1173     0192  1303               	bcf	3,6	;RP1=0, select bank0
  1174     0193  00CC               	movwf	??_main+2
  1175     0194  308A               	movlw	138
  1176     0195  00CB               	movwf	??_main+1
  1177     0196  3055               	movlw	85
  1178     0197  00CA               	movwf	??_main
  1179     0198                     u1187:
  1180     0198  0BCA               	decfsz	??_main,f
  1181     0199  2998               	goto	u1187
  1182     019A  0BCB               	decfsz	??_main+1,f
  1183     019B  2998               	goto	u1187
  1184     019C  0BCC               	decfsz	??_main+2,f
  1185     019D  2998               	goto	u1187
  1186     019E                     l1835:
  1187                           
  1188                           ;main.c: 197:             PORTBbits.RB7 = 0;
  1189     019E  1283               	bcf	3,5	;RP0=0, select bank0
  1190     019F  1303               	bcf	3,6	;RP1=0, select bank0
  1191     01A0  1386               	bcf	6,7	;volatile
  1192     01A1                     l1837:
  1193                           
  1194                           ;main.c: 198:             PORTBbits.RB6 = 1;
  1195     01A1  1706               	bsf	6,6	;volatile
  1196                           
  1197                           ;main.c: 199:             _delay((unsigned long)((13)*(8000000/4000.0)));
  1198     01A2  3022               	movlw	34
  1199     01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1200     01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1201     01A5  00CB               	movwf	??_main+1
  1202     01A6  30C2               	movlw	194
  1203     01A7  00CA               	movwf	??_main
  1204     01A8                     u1197:
  1205     01A8  0BCA               	decfsz	??_main,f
  1206     01A9  29A8               	goto	u1197
  1207     01AA  0BCB               	decfsz	??_main+1,f
  1208     01AB  29A8               	goto	u1197
  1209     01AC  0000               	nop
  1210     01AD                     l1839:
  1211                           
  1212                           ;main.c: 200:             PORTBbits.RB7 = 0;
  1213     01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1214     01AE  1303               	bcf	3,6	;RP1=0, select bank0
  1215     01AF  1386               	bcf	6,7	;volatile
  1216     01B0                     l1841:
  1217                           
  1218                           ;main.c: 201:             PORTBbits.RB6 = 0;
  1219     01B0  1306               	bcf	6,6	;volatile
  1220                           
  1221                           ;main.c: 203:             while (proximidad){
  1222     01B1  2A40               	goto	l1859
  1223     01B2                     l1843:
  1224                           
  1225                           ;main.c: 204:                 I2C_Master_Start();
  1226     01B2  120A  118A  25DE  120A  118A  	fcall	_I2C_Master_Start
  1227                           
  1228                           ;main.c: 205:                 I2C_Master_Write(0x51);
  1229     01B7  3051               	movlw	81
  1230     01B8  00F2               	movwf	I2C_Master_Write@d
  1231     01B9  3000               	movlw	0
  1232     01BA  00F3               	movwf	I2C_Master_Write@d+1
  1233     01BB  120A  118A  25CB  120A  118A  	fcall	_I2C_Master_Write
  1234                           
  1235                           ;main.c: 206:                 proximidad = I2C_Master_Read(0);
  1236     01C0  3000               	movlw	0
  1237     01C1  00F2               	movwf	I2C_Master_Read@a
  1238     01C2  00F3               	movwf	I2C_Master_Read@a+1
  1239     01C3  120A  118A  24CD  120A  118A  	fcall	_I2C_Master_Read
  1240     01C8  0873               	movf	?_I2C_Master_Read+1,w
  1241     01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1242     01CA  1303               	bcf	3,6	;RP1=0, select bank0
  1243     01CB  00B9               	movwf	_proximidad+1
  1244     01CC  0872               	movf	?_I2C_Master_Read,w
  1245     01CD  00B8               	movwf	_proximidad
  1246                           
  1247                           ;main.c: 207:                 I2C_Master_Stop();
  1248     01CE  120A  118A  25D5  120A  118A  	fcall	_I2C_Master_Stop
  1249     01D3                     l1845:
  1250                           
  1251                           ;main.c: 208:                 _delay((unsigned long)((200)*(8000000/4000.0)));
  1252     01D3  3003               	movlw	3
  1253     01D4  1283               	bcf	3,5	;RP0=0, select bank0
  1254     01D5  1303               	bcf	3,6	;RP1=0, select bank0
  1255     01D6  00CC               	movwf	??_main+2
  1256     01D7  3008               	movlw	8
  1257     01D8  00CB               	movwf	??_main+1
  1258     01D9  3076               	movlw	118
  1259     01DA  00CA               	movwf	??_main
  1260     01DB                     u1207:
  1261     01DB  0BCA               	decfsz	??_main,f
  1262     01DC  29DB               	goto	u1207
  1263     01DD  0BCB               	decfsz	??_main+1,f
  1264     01DE  29DB               	goto	u1207
  1265     01DF  0BCC               	decfsz	??_main+2,f
  1266     01E0  29DB               	goto	u1207
  1267     01E1  0000               	nop
  1268     01E2                     l1847:
  1269                           
  1270                           ;main.c: 210:                 I2C_Master_Start();
  1271     01E2  120A  118A  25DE  120A  118A  	fcall	_I2C_Master_Start
  1272     01E7                     l1849:
  1273                           
  1274                           ;main.c: 211:                 I2C_Master_Write(0x101);
  1275     01E7  3001               	movlw	1
  1276     01E8  00F2               	movwf	I2C_Master_Write@d
  1277     01E9  3001               	movlw	1
  1278     01EA  00F3               	movwf	I2C_Master_Write@d+1
  1279     01EB  120A  118A  25CB  120A  118A  	fcall	_I2C_Master_Write
  1280     01F0                     l1851:
  1281                           
  1282                           ;main.c: 212:                 espacios = I2C_Master_Read(0);
  1283     01F0  3000               	movlw	0
  1284     01F1  00F2               	movwf	I2C_Master_Read@a
  1285     01F2  00F3               	movwf	I2C_Master_Read@a+1
  1286     01F3  120A  118A  24CD  120A  118A  	fcall	_I2C_Master_Read
  1287     01F8  0873               	movf	?_I2C_Master_Read+1,w
  1288     01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1289     01FA  1303               	bcf	3,6	;RP1=0, select bank0
  1290     01FB  00B7               	movwf	_espacios+1
  1291     01FC  0872               	movf	?_I2C_Master_Read,w
  1292     01FD  00B6               	movwf	_espacios
  1293     01FE                     l1853:
  1294                           
  1295                           ;main.c: 213:                 I2C_Master_Stop();
  1296     01FE  120A  118A  25D5  120A  118A  	fcall	_I2C_Master_Stop
  1297     0203                     l1855:
  1298                           
  1299                           ;main.c: 214:                 _delay((unsigned long)((250)*(8000000/4000.0)));
  1300     0203  3003               	movlw	3
  1301     0204  1283               	bcf	3,5	;RP0=0, select bank0
  1302     0205  1303               	bcf	3,6	;RP1=0, select bank0
  1303     0206  00CC               	movwf	??_main+2
  1304     0207  308A               	movlw	138
  1305     0208  00CB               	movwf	??_main+1
  1306     0209  3055               	movlw	85
  1307     020A  00CA               	movwf	??_main
  1308     020B                     u1217:
  1309     020B  0BCA               	decfsz	??_main,f
  1310     020C  2A0B               	goto	u1217
  1311     020D  0BCB               	decfsz	??_main+1,f
  1312     020E  2A0B               	goto	u1217
  1313     020F  0BCC               	decfsz	??_main+2,f
  1314     0210  2A0B               	goto	u1217
  1315                           
  1316                           ;main.c: 217:                 I2C_Master_Start();
  1317     0211  120A  118A  25DE  120A  118A  	fcall	_I2C_Master_Start
  1318                           
  1319                           ;main.c: 218:                 I2C_Master_Write(0x111);
  1320     0216  3011               	movlw	17
  1321     0217  00F2               	movwf	I2C_Master_Write@d
  1322     0218  3001               	movlw	1
  1323     0219  00F3               	movwf	I2C_Master_Write@d+1
  1324     021A  120A  118A  25CB  120A  118A  	fcall	_I2C_Master_Write
  1325                           
  1326                           ;main.c: 219:                 temperatura = I2C_Master_Read(0);
  1327     021F  3000               	movlw	0
  1328     0220  00F2               	movwf	I2C_Master_Read@a
  1329     0221  00F3               	movwf	I2C_Master_Read@a+1
  1330     0222  120A  118A  24CD  120A  118A  	fcall	_I2C_Master_Read
  1331     0227  0873               	movf	?_I2C_Master_Read+1,w
  1332     0228  1283               	bcf	3,5	;RP0=0, select bank0
  1333     0229  1303               	bcf	3,6	;RP1=0, select bank0
  1334     022A  00B5               	movwf	_temperatura+1
  1335     022B  0872               	movf	?_I2C_Master_Read,w
  1336     022C  00B4               	movwf	_temperatura
  1337                           
  1338                           ;main.c: 220:                 I2C_Master_Stop();
  1339     022D  120A  118A  25D5  120A  118A  	fcall	_I2C_Master_Stop
  1340     0232                     l1857:
  1341                           
  1342                           ;main.c: 221:                 _delay((unsigned long)((250)*(8000000/4000.0)));
  1343     0232  3003               	movlw	3
  1344     0233  1283               	bcf	3,5	;RP0=0, select bank0
  1345     0234  1303               	bcf	3,6	;RP1=0, select bank0
  1346     0235  00CC               	movwf	??_main+2
  1347     0236  308A               	movlw	138
  1348     0237  00CB               	movwf	??_main+1
  1349     0238  3055               	movlw	85
  1350     0239  00CA               	movwf	??_main
  1351     023A                     u1227:
  1352     023A  0BCA               	decfsz	??_main,f
  1353     023B  2A3A               	goto	u1227
  1354     023C  0BCB               	decfsz	??_main+1,f
  1355     023D  2A3A               	goto	u1227
  1356     023E  0BCC               	decfsz	??_main+2,f
  1357     023F  2A3A               	goto	u1227
  1358     0240                     l1859:
  1359                           
  1360                           ;main.c: 203:             while (proximidad){
  1361     0240  1283               	bcf	3,5	;RP0=0, select bank0
  1362     0241  1303               	bcf	3,6	;RP1=0, select bank0
  1363     0242  0838               	movf	_proximidad,w
  1364     0243  0439               	iorwf	_proximidad+1,w
  1365     0244  1D03               	btfss	3,2
  1366     0245  2A47               	goto	u1111
  1367     0246  2A48               	goto	u1110
  1368     0247                     u1111:
  1369     0247  29B2               	goto	l1843
  1370     0248                     u1110:
  1371     0248                     l1861:
  1372                           
  1373                           ;main.c: 223:             _delay((unsigned long)((3000)*(8000000/4000.0)));
  1374     0248  301F               	movlw	31
  1375     0249  1283               	bcf	3,5	;RP0=0, select bank0
  1376     024A  1303               	bcf	3,6	;RP1=0, select bank0
  1377     024B  00CC               	movwf	??_main+2
  1378     024C  3071               	movlw	113
  1379     024D  00CB               	movwf	??_main+1
  1380     024E  301D               	movlw	29
  1381     024F  00CA               	movwf	??_main
  1382     0250                     u1237:
  1383     0250  0BCA               	decfsz	??_main,f
  1384     0251  2A50               	goto	u1237
  1385     0252  0BCB               	decfsz	??_main+1,f
  1386     0253  2A50               	goto	u1237
  1387     0254  0BCC               	decfsz	??_main+2,f
  1388     0255  2A50               	goto	u1237
  1389     0256  2A57               	nop2
  1390     0257                     l1863:
  1391                           
  1392                           ;main.c: 224:             PORTBbits.RB7 = 1;
  1393     0257  1283               	bcf	3,5	;RP0=0, select bank0
  1394     0258  1303               	bcf	3,6	;RP1=0, select bank0
  1395     0259  1786               	bsf	6,7	;volatile
  1396     025A                     l1865:
  1397                           
  1398                           ;main.c: 225:             PORTBbits.RB6 = 0;
  1399     025A  1306               	bcf	6,6	;volatile
  1400                           
  1401                           ;main.c: 226:             _delay((unsigned long)((13)*(8000000/4000.0)));
  1402     025B  3022               	movlw	34
  1403     025C  1283               	bcf	3,5	;RP0=0, select bank0
  1404     025D  1303               	bcf	3,6	;RP1=0, select bank0
  1405     025E  00CB               	movwf	??_main+1
  1406     025F  30C2               	movlw	194
  1407     0260  00CA               	movwf	??_main
  1408     0261                     u1247:
  1409     0261  0BCA               	decfsz	??_main,f
  1410     0262  2A61               	goto	u1247
  1411     0263  0BCB               	decfsz	??_main+1,f
  1412     0264  2A61               	goto	u1247
  1413     0265  0000               	nop
  1414     0266                     l1867:
  1415                           
  1416                           ;main.c: 227:             PORTBbits.RB7 = 0;
  1417     0266  1283               	bcf	3,5	;RP0=0, select bank0
  1418     0267  1303               	bcf	3,6	;RP1=0, select bank0
  1419     0268  1386               	bcf	6,7	;volatile
  1420     0269                     l1869:
  1421                           
  1422                           ;main.c: 228:             PORTBbits.RB6 = 0;
  1423     0269  1306               	bcf	6,6	;volatile
  1424                           
  1425                           ;main.c: 229:         }
  1426     026A  2A6D               	goto	l1871
  1427     026B                     l113:	
  1428                           ;main.c: 231:         else{
  1429                           
  1430                           
  1431                           ;main.c: 232:             PORTBbits.RB7 = 0;
  1432     026B  1386               	bcf	6,7	;volatile
  1433                           
  1434                           ;main.c: 233:             PORTBbits.RB6 = 0;
  1435     026C  1306               	bcf	6,6	;volatile
  1436     026D                     l1871:
  1437                           
  1438                           ;main.c: 237:         if (i == 1){
  1439     026D  032E               	decf	_i,w
  1440     026E  042F               	iorwf	_i+1,w
  1441     026F  1D03               	btfss	3,2
  1442     0270  2A72               	goto	u1121
  1443     0271  2A73               	goto	u1120
  1444     0272                     u1121:
  1445     0272  2A7B               	goto	l1877
  1446     0273                     u1120:
  1447     0273                     l1873:
  1448                           
  1449                           ;main.c: 238:             TXREG = espacios;
  1450     0273  0836               	movf	_espacios,w
  1451     0274  0099               	movwf	25	;volatile
  1452     0275                     l1875:
  1453                           
  1454                           ;main.c: 239:             PIR1bits.TXIF = 0;
  1455     0275  120C               	bcf	12,4	;volatile
  1456                           
  1457                           ;main.c: 240:             i = 2;
  1458     0276  3002               	movlw	2
  1459     0277  00AE               	movwf	_i
  1460     0278  3000               	movlw	0
  1461     0279  00AF               	movwf	_i+1
  1462                           
  1463                           ;main.c: 241:         }
  1464     027A  2A89               	goto	l119
  1465     027B                     l1877:
  1466     027B  3002               	movlw	2
  1467     027C  062E               	xorwf	_i,w
  1468     027D  042F               	iorwf	_i+1,w
  1469     027E  1D03               	btfss	3,2
  1470     027F  2A81               	goto	u1131
  1471     0280  2A82               	goto	u1130
  1472     0281                     u1131:
  1473     0281  2A89               	goto	l119
  1474     0282                     u1130:
  1475     0282                     l1879:
  1476                           
  1477                           ;main.c: 244:             TXREG = temperatura;
  1478     0282  0834               	movf	_temperatura,w
  1479     0283  0099               	movwf	25	;volatile
  1480     0284                     l1881:
  1481                           
  1482                           ;main.c: 245:             PIR1bits.TXIF = 0;
  1483     0284  120C               	bcf	12,4	;volatile
  1484                           
  1485                           ;main.c: 246:             i = 1;
  1486     0285  3001               	movlw	1
  1487     0286  00AE               	movwf	_i
  1488     0287  3000               	movlw	0
  1489     0288  00AF               	movwf	_i+1
  1490     0289                     l119:
  1491                           
  1492                           ;main.c: 258:         _delay((unsigned long)((5250)*(8000000/4000.0)));
  1493     0289  3036               	movlw	54
  1494     028A  1283               	bcf	3,5	;RP0=0, select bank0
  1495     028B  1303               	bcf	3,6	;RP1=0, select bank0
  1496     028C  00CC               	movwf	??_main+2
  1497     028D  3045               	movlw	69
  1498     028E  00CB               	movwf	??_main+1
  1499     028F  3036               	movlw	54
  1500     0290  00CA               	movwf	??_main
  1501     0291                     u1257:
  1502     0291  0BCA               	decfsz	??_main,f
  1503     0292  2A91               	goto	u1257
  1504     0293  0BCB               	decfsz	??_main+1,f
  1505     0294  2A91               	goto	u1257
  1506     0295  0BCC               	decfsz	??_main+2,f
  1507     0296  2A91               	goto	u1257
  1508     0297  0000               	nop
  1509     0298  2850               	goto	l1771
  1510     0299  120A  118A  280C   	ljmp	start
  1511     029C                     __end_of_main:
  1512                           
  1513                           	psect	text1
  1514     049A                     __ptext1:	
  1515 ;; *************** function _setup *****************
  1516 ;; Defined at:
  1517 ;;		line 268 in file "main.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;		None
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;		None
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  1    wreg      void 
  1524 ;; Registers used:
  1525 ;;		wreg, status,2, status,0, pclath, cstack
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1531 ;;      Params:         0       0       0       0       0
  1532 ;;      Locals:         0       0       0       0       0
  1533 ;;      Temps:          0       0       0       0       0
  1534 ;;      Totals:         0       0       0       0       0
  1535 ;;Total ram usage:        0 bytes
  1536 ;; Hardware stack levels used: 1
  1537 ;; Hardware stack levels required when called: 3
  1538 ;; This function calls:
  1539 ;;		_I2C_Master_Init
  1540 ;; This function is called by:
  1541 ;;		_main
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545     049A                     _setup:	
  1546                           ;psect for function _setup
  1547                           
  1548     049A                     l1671:	
  1549                           ;incstack = 0
  1550                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1551                           
  1552                           
  1553                           ;main.c: 271:     ANSEL = 0b00000000;
  1554     049A  1683               	bsf	3,5	;RP0=1, select bank3
  1555     049B  1703               	bsf	3,6	;RP1=1, select bank3
  1556     049C  0188               	clrf	8	;volatile
  1557                           
  1558                           ;main.c: 272:     ANSELH = 0;
  1559     049D  0189               	clrf	9	;volatile
  1560                           
  1561                           ;main.c: 275:     TRISA = 0b00000000;
  1562     049E  1683               	bsf	3,5	;RP0=1, select bank1
  1563     049F  1303               	bcf	3,6	;RP1=0, select bank1
  1564     04A0  0185               	clrf	5	;volatile
  1565                           
  1566                           ;main.c: 276:     TRISB = 0b00000000;
  1567     04A1  0186               	clrf	6	;volatile
  1568                           
  1569                           ;main.c: 278:     TRISD = 0b00000000;
  1570     04A2  0188               	clrf	8	;volatile
  1571                           
  1572                           ;main.c: 279:     TRISE = 0b00000000;
  1573     04A3  0189               	clrf	9	;volatile
  1574                           
  1575                           ;main.c: 281:     PORTA = 0b00000000;
  1576     04A4  1283               	bcf	3,5	;RP0=0, select bank0
  1577     04A5  1303               	bcf	3,6	;RP1=0, select bank0
  1578     04A6  0185               	clrf	5	;volatile
  1579                           
  1580                           ;main.c: 282:     PORTB = 0b00000000;
  1581     04A7  0186               	clrf	6	;volatile
  1582                           
  1583                           ;main.c: 284:     PORTD = 0b00000000;
  1584     04A8  0188               	clrf	8	;volatile
  1585                           
  1586                           ;main.c: 285:     PORTE = 0b00000000;
  1587     04A9  0189               	clrf	9	;volatile
  1588     04AA                     l1673:
  1589                           
  1590                           ;main.c: 287:     TRISCbits.TRISC6 = 0;
  1591     04AA  1683               	bsf	3,5	;RP0=1, select bank1
  1592     04AB  1303               	bcf	3,6	;RP1=0, select bank1
  1593     04AC  1307               	bcf	7,6	;volatile
  1594     04AD                     l1675:
  1595                           
  1596                           ;main.c: 298:     INTCONbits.GIE = 1;
  1597     04AD  178B               	bsf	11,7	;volatile
  1598     04AE                     l1677:
  1599                           
  1600                           ;main.c: 299:     INTCONbits.PEIE = 1;
  1601     04AE  170B               	bsf	11,6	;volatile
  1602     04AF                     l1679:
  1603                           
  1604                           ;main.c: 300:     PIE1bits.SSPIE = 0;
  1605     04AF  118C               	bcf	12,3	;volatile
  1606     04B0                     l1681:
  1607                           
  1608                           ;main.c: 301:     PIE1bits.ADIE = 0;
  1609     04B0  130C               	bcf	12,6	;volatile
  1610     04B1                     l1683:
  1611                           
  1612                           ;main.c: 302:     INTCONbits.TMR0IE = 0;
  1613     04B1  128B               	bcf	11,5	;volatile
  1614     04B2                     l1685:
  1615                           
  1616                           ;main.c: 304:     PIR1bits.SSPIF = 0;
  1617     04B2  1283               	bcf	3,5	;RP0=0, select bank0
  1618     04B3  1303               	bcf	3,6	;RP1=0, select bank0
  1619     04B4  118C               	bcf	12,3	;volatile
  1620     04B5                     l1687:
  1621                           
  1622                           ;main.c: 305:     PIR1bits.ADIF = 0;
  1623     04B5  130C               	bcf	12,6	;volatile
  1624     04B6                     l1689:
  1625                           
  1626                           ;main.c: 306:     INTCONbits.RBIF = 0;
  1627     04B6  100B               	bcf	11,0	;volatile
  1628     04B7                     l1691:
  1629                           
  1630                           ;main.c: 307:     INTCONbits.T0IF = 0;
  1631     04B7  110B               	bcf	11,2	;volatile
  1632     04B8                     l1693:
  1633                           
  1634                           ;main.c: 310:     OSCCONbits.IRCF = 0b111;
  1635     04B8  3070               	movlw	112
  1636     04B9  1683               	bsf	3,5	;RP0=1, select bank1
  1637     04BA  1303               	bcf	3,6	;RP1=0, select bank1
  1638     04BB  048F               	iorwf	15,f	;volatile
  1639     04BC                     l1695:
  1640                           
  1641                           ;main.c: 312:     OSCCONbits.SCS = 1;
  1642     04BC  140F               	bsf	15,0	;volatile
  1643     04BD                     l1697:
  1644                           
  1645                           ;main.c: 316:     I2C_Master_Init(100000);
  1646     04BD  3000               	movlw	0
  1647     04BE  1283               	bcf	3,5	;RP0=0, select bank0
  1648     04BF  1303               	bcf	3,6	;RP1=0, select bank0
  1649     04C0  00C5               	movwf	I2C_Master_Init@c+3
  1650     04C1  3001               	movlw	1
  1651     04C2  00C4               	movwf	I2C_Master_Init@c+2
  1652     04C3  3086               	movlw	134
  1653     04C4  00C3               	movwf	I2C_Master_Init@c+1
  1654     04C5  30A0               	movlw	160
  1655     04C6  00C2               	movwf	I2C_Master_Init@c
  1656     04C7  120A  118A  242D  120A  118A  	fcall	_I2C_Master_Init
  1657     04CC                     l126:
  1658     04CC  0008               	return
  1659     04CD                     __end_of_setup:
  1660                           
  1661                           	psect	text2
  1662     042D                     __ptext2:	
  1663 ;; *************** function _I2C_Master_Init *****************
  1664 ;; Defined at:
  1665 ;;		line 13 in file "IIC.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;  c               4    6[BANK0 ] const unsigned long 
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;		None
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg, status,2, status,0, pclath, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1679 ;;      Params:         0       4       0       0       0
  1680 ;;      Locals:         0       0       0       0       0
  1681 ;;      Temps:          0       4       0       0       0
  1682 ;;      Totals:         0       8       0       0       0
  1683 ;;Total ram usage:        8 bytes
  1684 ;; Hardware stack levels used: 1
  1685 ;; Hardware stack levels required when called: 2
  1686 ;; This function calls:
  1687 ;;		___lldiv
  1688 ;; This function is called by:
  1689 ;;		_setup
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693     042D                     _I2C_Master_Init:	
  1694                           ;psect for function _I2C_Master_Init
  1695                           
  1696     042D                     l1649:	
  1697                           ;incstack = 0
  1698                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1699                           
  1700                           
  1701                           ;IIC.c: 13: void I2C_Master_Init(const unsigned long c);IIC.c: 14: {;IIC.c: 15:     SSPC
      +                          ON = 0b00101000;
  1702     042D  3028               	movlw	40
  1703     042E  1283               	bcf	3,5	;RP0=0, select bank0
  1704     042F  1303               	bcf	3,6	;RP1=0, select bank0
  1705     0430  0094               	movwf	20	;volatile
  1706     0431                     l1651:
  1707                           
  1708                           ;IIC.c: 16:     SSPCON2 = 0;
  1709     0431  1683               	bsf	3,5	;RP0=1, select bank1
  1710     0432  1303               	bcf	3,6	;RP1=0, select bank1
  1711     0433  0191               	clrf	17	;volatile
  1712     0434                     l1653:
  1713                           
  1714                           ;IIC.c: 17:     SSPADD = (8000000/(4*c))-1;
  1715     0434  1283               	bcf	3,5	;RP0=0, select bank0
  1716     0435  1303               	bcf	3,6	;RP1=0, select bank0
  1717     0436  0842               	movf	I2C_Master_Init@c,w
  1718     0437  00C6               	movwf	??_I2C_Master_Init
  1719     0438  0843               	movf	I2C_Master_Init@c+1,w
  1720     0439  00C7               	movwf	??_I2C_Master_Init+1
  1721     043A  0844               	movf	I2C_Master_Init@c+2,w
  1722     043B  00C8               	movwf	??_I2C_Master_Init+2
  1723     043C  0845               	movf	I2C_Master_Init@c+3,w
  1724     043D  00C9               	movwf	??_I2C_Master_Init+3
  1725     043E  3002               	movlw	2
  1726     043F                     u975:
  1727     043F  1003               	clrc
  1728     0440  0DC6               	rlf	??_I2C_Master_Init,f
  1729     0441  0DC7               	rlf	??_I2C_Master_Init+1,f
  1730     0442  0DC8               	rlf	??_I2C_Master_Init+2,f
  1731     0443  0DC9               	rlf	??_I2C_Master_Init+3,f
  1732     0444                     u970:
  1733     0444  3EFF               	addlw	-1
  1734     0445  1D03               	skipz
  1735     0446  2C3F               	goto	u975
  1736     0447  0849               	movf	??_I2C_Master_Init+3,w
  1737     0448  00F5               	movwf	___lldiv@divisor+3
  1738     0449  0848               	movf	??_I2C_Master_Init+2,w
  1739     044A  00F4               	movwf	___lldiv@divisor+2
  1740     044B  0847               	movf	??_I2C_Master_Init+1,w
  1741     044C  00F3               	movwf	___lldiv@divisor+1
  1742     044D  0846               	movf	??_I2C_Master_Init,w
  1743     044E  00F2               	movwf	___lldiv@divisor
  1744     044F  3000               	movlw	0
  1745     0450  00F9               	movwf	___lldiv@dividend+3
  1746     0451  307A               	movlw	122
  1747     0452  00F8               	movwf	___lldiv@dividend+2
  1748     0453  3012               	movlw	18
  1749     0454  00F7               	movwf	___lldiv@dividend+1
  1750     0455  3000               	movlw	0
  1751     0456  00F6               	movwf	___lldiv@dividend
  1752     0457  120A  118A  229C  120A  118A  	fcall	___lldiv
  1753     045C  0872               	movf	?___lldiv,w
  1754     045D  3EFF               	addlw	255
  1755     045E  1683               	bsf	3,5	;RP0=1, select bank1
  1756     045F  1303               	bcf	3,6	;RP1=0, select bank1
  1757     0460  0093               	movwf	19	;volatile
  1758     0461                     l1655:
  1759                           
  1760                           ;IIC.c: 18:     SSPSTAT = 0;
  1761     0461  0194               	clrf	20	;volatile
  1762     0462                     l1657:
  1763                           
  1764                           ;IIC.c: 19:     TRISCbits.TRISC3 = 1;
  1765     0462  1587               	bsf	7,3	;volatile
  1766     0463                     l1659:
  1767                           
  1768                           ;IIC.c: 20:     TRISCbits.TRISC4 = 1;
  1769     0463  1607               	bsf	7,4	;volatile
  1770     0464                     l213:
  1771     0464  0008               	return
  1772     0465                     __end_of_I2C_Master_Init:
  1773                           
  1774                           	psect	text3
  1775     029C                     __ptext3:	
  1776 ;; *************** function ___lldiv *****************
  1777 ;; Defined at:
  1778 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;  divisor         4    2[COMMON] unsigned long 
  1781 ;;  dividend        4    6[COMMON] unsigned long 
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;  quotient        4    1[BANK0 ] unsigned long 
  1784 ;;  counter         1    5[BANK0 ] unsigned char 
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  4    2[COMMON] unsigned long 
  1787 ;; Registers used:
  1788 ;;		wreg, status,2, status,0
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1794 ;;      Params:         8       0       0       0       0
  1795 ;;      Locals:         0       5       0       0       0
  1796 ;;      Temps:          0       1       0       0       0
  1797 ;;      Totals:         8       6       0       0       0
  1798 ;;Total ram usage:       14 bytes
  1799 ;; Hardware stack levels used: 1
  1800 ;; Hardware stack levels required when called: 1
  1801 ;; This function calls:
  1802 ;;		Nothing
  1803 ;; This function is called by:
  1804 ;;		_I2C_Master_Init
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808     029C                     ___lldiv:	
  1809                           ;psect for function ___lldiv
  1810                           
  1811     029C                     l1605:	
  1812                           ;incstack = 0
  1813                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1814                           
  1815     029C  3000               	movlw	0
  1816     029D  1283               	bcf	3,5	;RP0=0, select bank0
  1817     029E  1303               	bcf	3,6	;RP1=0, select bank0
  1818     029F  00C0               	movwf	___lldiv@quotient+3
  1819     02A0  3000               	movlw	0
  1820     02A1  00BF               	movwf	___lldiv@quotient+2
  1821     02A2  3000               	movlw	0
  1822     02A3  00BE               	movwf	___lldiv@quotient+1
  1823     02A4  3000               	movlw	0
  1824     02A5  00BD               	movwf	___lldiv@quotient
  1825     02A6  0875               	movf	___lldiv@divisor+3,w
  1826     02A7  0474               	iorwf	___lldiv@divisor+2,w
  1827     02A8  0473               	iorwf	___lldiv@divisor+1,w
  1828     02A9  0472               	iorwf	___lldiv@divisor,w
  1829     02AA  1903               	skipnz
  1830     02AB  2AAD               	goto	u891
  1831     02AC  2AAE               	goto	u890
  1832     02AD                     u891:
  1833     02AD  2AFB               	goto	l1625
  1834     02AE                     u890:
  1835     02AE                     l1607:
  1836     02AE  01C1               	clrf	___lldiv@counter
  1837     02AF  0AC1               	incf	___lldiv@counter,f
  1838     02B0  2ABE               	goto	l1611
  1839     02B1                     l1609:
  1840     02B1  3001               	movlw	1
  1841     02B2  00BC               	movwf	??___lldiv
  1842     02B3                     u905:
  1843     02B3  1003               	clrc
  1844     02B4  0DF2               	rlf	___lldiv@divisor,f
  1845     02B5  0DF3               	rlf	___lldiv@divisor+1,f
  1846     02B6  0DF4               	rlf	___lldiv@divisor+2,f
  1847     02B7  0DF5               	rlf	___lldiv@divisor+3,f
  1848     02B8  0BBC               	decfsz	??___lldiv,f
  1849     02B9  2AB3               	goto	u905
  1850     02BA  3001               	movlw	1
  1851     02BB  00BC               	movwf	??___lldiv
  1852     02BC  083C               	movf	??___lldiv,w
  1853     02BD  07C1               	addwf	___lldiv@counter,f
  1854     02BE                     l1611:
  1855     02BE  1FF5               	btfss	___lldiv@divisor+3,7
  1856     02BF  2AC1               	goto	u911
  1857     02C0  2AC2               	goto	u910
  1858     02C1                     u911:
  1859     02C1  2AB1               	goto	l1609
  1860     02C2                     u910:
  1861     02C2                     l1613:
  1862     02C2  3001               	movlw	1
  1863     02C3  00BC               	movwf	??___lldiv
  1864     02C4                     u925:
  1865     02C4  1003               	clrc
  1866     02C5  0DBD               	rlf	___lldiv@quotient,f
  1867     02C6  0DBE               	rlf	___lldiv@quotient+1,f
  1868     02C7  0DBF               	rlf	___lldiv@quotient+2,f
  1869     02C8  0DC0               	rlf	___lldiv@quotient+3,f
  1870     02C9  0BBC               	decfsz	??___lldiv,f
  1871     02CA  2AC4               	goto	u925
  1872     02CB                     l1615:
  1873     02CB  0875               	movf	___lldiv@divisor+3,w
  1874     02CC  0279               	subwf	___lldiv@dividend+3,w
  1875     02CD  1D03               	skipz
  1876     02CE  2AD9               	goto	u935
  1877     02CF  0874               	movf	___lldiv@divisor+2,w
  1878     02D0  0278               	subwf	___lldiv@dividend+2,w
  1879     02D1  1D03               	skipz
  1880     02D2  2AD9               	goto	u935
  1881     02D3  0873               	movf	___lldiv@divisor+1,w
  1882     02D4  0277               	subwf	___lldiv@dividend+1,w
  1883     02D5  1D03               	skipz
  1884     02D6  2AD9               	goto	u935
  1885     02D7  0872               	movf	___lldiv@divisor,w
  1886     02D8  0276               	subwf	___lldiv@dividend,w
  1887     02D9                     u935:
  1888     02D9  1C03               	skipc
  1889     02DA  2ADC               	goto	u931
  1890     02DB  2ADD               	goto	u930
  1891     02DC                     u931:
  1892     02DC  2AEC               	goto	l1621
  1893     02DD                     u930:
  1894     02DD                     l1617:
  1895     02DD  0872               	movf	___lldiv@divisor,w
  1896     02DE  02F6               	subwf	___lldiv@dividend,f
  1897     02DF  0873               	movf	___lldiv@divisor+1,w
  1898     02E0  1C03               	skipc
  1899     02E1  0F73               	incfsz	___lldiv@divisor+1,w
  1900     02E2  02F7               	subwf	___lldiv@dividend+1,f
  1901     02E3  0874               	movf	___lldiv@divisor+2,w
  1902     02E4  1C03               	skipc
  1903     02E5  0F74               	incfsz	___lldiv@divisor+2,w
  1904     02E6  02F8               	subwf	___lldiv@dividend+2,f
  1905     02E7  0875               	movf	___lldiv@divisor+3,w
  1906     02E8  1C03               	skipc
  1907     02E9  0F75               	incfsz	___lldiv@divisor+3,w
  1908     02EA  02F9               	subwf	___lldiv@dividend+3,f
  1909     02EB                     l1619:
  1910     02EB  143D               	bsf	___lldiv@quotient,0
  1911     02EC                     l1621:
  1912     02EC  3001               	movlw	1
  1913     02ED                     u945:
  1914     02ED  1003               	clrc
  1915     02EE  0CF5               	rrf	___lldiv@divisor+3,f
  1916     02EF  0CF4               	rrf	___lldiv@divisor+2,f
  1917     02F0  0CF3               	rrf	___lldiv@divisor+1,f
  1918     02F1  0CF2               	rrf	___lldiv@divisor,f
  1919     02F2  3EFF               	addlw	-1
  1920     02F3  1D03               	skipz
  1921     02F4  2AED               	goto	u945
  1922     02F5                     l1623:
  1923     02F5  3001               	movlw	1
  1924     02F6  02C1               	subwf	___lldiv@counter,f
  1925     02F7  1D03               	btfss	3,2
  1926     02F8  2AFA               	goto	u951
  1927     02F9  2AFB               	goto	u950
  1928     02FA                     u951:
  1929     02FA  2AC2               	goto	l1613
  1930     02FB                     u950:
  1931     02FB                     l1625:
  1932     02FB  0840               	movf	___lldiv@quotient+3,w
  1933     02FC  00F5               	movwf	?___lldiv+3
  1934     02FD  083F               	movf	___lldiv@quotient+2,w
  1935     02FE  00F4               	movwf	?___lldiv+2
  1936     02FF  083E               	movf	___lldiv@quotient+1,w
  1937     0300  00F3               	movwf	?___lldiv+1
  1938     0301  083D               	movf	___lldiv@quotient,w
  1939     0302  00F2               	movwf	?___lldiv
  1940     0303                     l361:
  1941     0303  0008               	return
  1942     0304                     __end_of___lldiv:
  1943                           
  1944                           	psect	text4
  1945     05A1                     __ptext4:	
  1946 ;; *************** function _initUART *****************
  1947 ;; Defined at:
  1948 ;;		line 319 in file "main.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;		None
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;		None
  1953 ;; Return value:  Size  Location     Type
  1954 ;;                  1    wreg      void 
  1955 ;; Registers used:
  1956 ;;		wreg
  1957 ;; Tracked objects:
  1958 ;;		On entry : 0/0
  1959 ;;		On exit  : 0/0
  1960 ;;		Unchanged: 0/0
  1961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1962 ;;      Params:         0       0       0       0       0
  1963 ;;      Locals:         0       0       0       0       0
  1964 ;;      Temps:          0       0       0       0       0
  1965 ;;      Totals:         0       0       0       0       0
  1966 ;;Total ram usage:        0 bytes
  1967 ;; Hardware stack levels used: 1
  1968 ;; Hardware stack levels required when called: 1
  1969 ;; This function calls:
  1970 ;;		Nothing
  1971 ;; This function is called by:
  1972 ;;		_main
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976     05A1                     _initUART:	
  1977                           ;psect for function _initUART
  1978                           
  1979     05A1                     l1337:	
  1980                           ;incstack = 0
  1981                           ; Regs used in _initUART: [wreg]
  1982                           
  1983                           
  1984                           ;main.c: 321:     SPBRG = 12;
  1985     05A1  300C               	movlw	12
  1986     05A2  1683               	bsf	3,5	;RP0=1, select bank1
  1987     05A3  1303               	bcf	3,6	;RP1=0, select bank1
  1988     05A4  0099               	movwf	25	;volatile
  1989     05A5                     l1339:
  1990                           
  1991                           ;main.c: 323:     TXSTAbits.SYNC = 0;
  1992     05A5  1218               	bcf	24,4	;volatile
  1993     05A6                     l1341:
  1994                           
  1995                           ;main.c: 324:     RCSTAbits.SPEN = 1;
  1996     05A6  1283               	bcf	3,5	;RP0=0, select bank0
  1997     05A7  1303               	bcf	3,6	;RP1=0, select bank0
  1998     05A8  1798               	bsf	24,7	;volatile
  1999     05A9                     l1343:
  2000                           
  2001                           ;main.c: 325:     TXSTAbits.TXEN = 1;
  2002     05A9  1683               	bsf	3,5	;RP0=1, select bank1
  2003     05AA  1303               	bcf	3,6	;RP1=0, select bank1
  2004     05AB  1698               	bsf	24,5	;volatile
  2005     05AC                     l1345:
  2006                           
  2007                           ;main.c: 328:     PIR1bits.TXIF = 0;
  2008     05AC  1283               	bcf	3,5	;RP0=0, select bank0
  2009     05AD  1303               	bcf	3,6	;RP1=0, select bank0
  2010     05AE  120C               	bcf	12,4	;volatile
  2011     05AF                     l1347:
  2012                           
  2013                           ;main.c: 330:     RCSTAbits.CREN = 1;
  2014     05AF  1618               	bsf	24,4	;volatile
  2015     05B0                     l129:
  2016     05B0  0008               	return
  2017     05B1                     __end_of_initUART:
  2018                           
  2019                           	psect	text5
  2020     03F1                     __ptext5:	
  2021 ;; *************** function ___lwmod *****************
  2022 ;; Defined at:
  2023 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  divisor         2    0[BANK0 ] unsigned int 
  2026 ;;  dividend        2    2[BANK0 ] unsigned int 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  counter         1    5[BANK0 ] unsigned char 
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  2    0[BANK0 ] unsigned int 
  2031 ;; Registers used:
  2032 ;;		wreg, status,2, status,0
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2038 ;;      Params:         0       4       0       0       0
  2039 ;;      Locals:         0       1       0       0       0
  2040 ;;      Temps:          0       1       0       0       0
  2041 ;;      Totals:         0       6       0       0       0
  2042 ;;Total ram usage:        6 bytes
  2043 ;; Hardware stack levels used: 1
  2044 ;; Hardware stack levels required when called: 1
  2045 ;; This function calls:
  2046 ;;		Nothing
  2047 ;; This function is called by:
  2048 ;;		_main
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052     03F1                     ___lwmod:	
  2053                           ;psect for function ___lwmod
  2054                           
  2055     03F1                     l1739:	
  2056                           ;incstack = 0
  2057                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2058                           
  2059     03F1  1283               	bcf	3,5	;RP0=0, select bank0
  2060     03F2  1303               	bcf	3,6	;RP1=0, select bank0
  2061     03F3  083C               	movf	___lwmod@divisor,w
  2062     03F4  043D               	iorwf	___lwmod@divisor+1,w
  2063     03F5  1903               	btfsc	3,2
  2064     03F6  2BF8               	goto	u1031
  2065     03F7  2BF9               	goto	u1030
  2066     03F8                     u1031:
  2067     03F8  2C28               	goto	l1757
  2068     03F9                     u1030:
  2069     03F9                     l1741:
  2070     03F9  01C1               	clrf	___lwmod@counter
  2071     03FA  0AC1               	incf	___lwmod@counter,f
  2072     03FB  2C07               	goto	l1747
  2073     03FC                     l1743:
  2074     03FC  3001               	movlw	1
  2075     03FD                     u1045:
  2076     03FD  1003               	clrc
  2077     03FE  0DBC               	rlf	___lwmod@divisor,f
  2078     03FF  0DBD               	rlf	___lwmod@divisor+1,f
  2079     0400  3EFF               	addlw	-1
  2080     0401  1D03               	skipz
  2081     0402  2BFD               	goto	u1045
  2082     0403                     l1745:
  2083     0403  3001               	movlw	1
  2084     0404  00C0               	movwf	??___lwmod
  2085     0405  0840               	movf	??___lwmod,w
  2086     0406  07C1               	addwf	___lwmod@counter,f
  2087     0407                     l1747:
  2088     0407  1FBD               	btfss	___lwmod@divisor+1,7
  2089     0408  2C0A               	goto	u1051
  2090     0409  2C0B               	goto	u1050
  2091     040A                     u1051:
  2092     040A  2BFC               	goto	l1743
  2093     040B                     u1050:
  2094     040B                     l1749:
  2095     040B  083D               	movf	___lwmod@divisor+1,w
  2096     040C  023F               	subwf	___lwmod@dividend+1,w
  2097     040D  1D03               	skipz
  2098     040E  2C11               	goto	u1065
  2099     040F  083C               	movf	___lwmod@divisor,w
  2100     0410  023E               	subwf	___lwmod@dividend,w
  2101     0411                     u1065:
  2102     0411  1C03               	skipc
  2103     0412  2C14               	goto	u1061
  2104     0413  2C15               	goto	u1060
  2105     0414                     u1061:
  2106     0414  2C1B               	goto	l1753
  2107     0415                     u1060:
  2108     0415                     l1751:
  2109     0415  083C               	movf	___lwmod@divisor,w
  2110     0416  02BE               	subwf	___lwmod@dividend,f
  2111     0417  083D               	movf	___lwmod@divisor+1,w
  2112     0418  1C03               	skipc
  2113     0419  03BF               	decf	___lwmod@dividend+1,f
  2114     041A  02BF               	subwf	___lwmod@dividend+1,f
  2115     041B                     l1753:
  2116     041B  3001               	movlw	1
  2117     041C                     u1075:
  2118     041C  1003               	clrc
  2119     041D  0CBD               	rrf	___lwmod@divisor+1,f
  2120     041E  0CBC               	rrf	___lwmod@divisor,f
  2121     041F  3EFF               	addlw	-1
  2122     0420  1D03               	skipz
  2123     0421  2C1C               	goto	u1075
  2124     0422                     l1755:
  2125     0422  3001               	movlw	1
  2126     0423  02C1               	subwf	___lwmod@counter,f
  2127     0424  1D03               	btfss	3,2
  2128     0425  2C27               	goto	u1081
  2129     0426  2C28               	goto	u1080
  2130     0427                     u1081:
  2131     0427  2C0B               	goto	l1749
  2132     0428                     u1080:
  2133     0428                     l1757:
  2134     0428  083F               	movf	___lwmod@dividend+1,w
  2135     0429  00BD               	movwf	?___lwmod+1
  2136     042A  083E               	movf	___lwmod@dividend,w
  2137     042B  00BC               	movwf	?___lwmod
  2138     042C                     l607:
  2139     042C  0008               	return
  2140     042D                     __end_of___lwmod:
  2141                           
  2142                           	psect	text6
  2143     03AD                     __ptext6:	
  2144 ;; *************** function ___lwdiv *****************
  2145 ;; Defined at:
  2146 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;  divisor         2    2[COMMON] unsigned int 
  2149 ;;  dividend        2    4[COMMON] unsigned int 
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;  quotient        2    7[COMMON] unsigned int 
  2152 ;;  counter         1    9[COMMON] unsigned char 
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  2    2[COMMON] unsigned int 
  2155 ;; Registers used:
  2156 ;;		wreg, status,2, status,0
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2162 ;;      Params:         4       0       0       0       0
  2163 ;;      Locals:         3       0       0       0       0
  2164 ;;      Temps:          1       0       0       0       0
  2165 ;;      Totals:         8       0       0       0       0
  2166 ;;Total ram usage:        8 bytes
  2167 ;; Hardware stack levels used: 1
  2168 ;; Hardware stack levels required when called: 1
  2169 ;; This function calls:
  2170 ;;		Nothing
  2171 ;; This function is called by:
  2172 ;;		_main
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176     03AD                     ___lwdiv:	
  2177                           ;psect for function ___lwdiv
  2178                           
  2179     03AD                     l1417:	
  2180                           ;incstack = 0
  2181                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2182                           
  2183     03AD  01F7               	clrf	___lwdiv@quotient
  2184     03AE  01F8               	clrf	___lwdiv@quotient+1
  2185     03AF                     l1419:
  2186     03AF  0872               	movf	___lwdiv@divisor,w
  2187     03B0  0473               	iorwf	___lwdiv@divisor+1,w
  2188     03B1  1903               	btfsc	3,2
  2189     03B2  2BB4               	goto	u671
  2190     03B3  2BB5               	goto	u670
  2191     03B4                     u671:
  2192     03B4  2BEC               	goto	l1439
  2193     03B5                     u670:
  2194     03B5                     l1421:
  2195     03B5  01F9               	clrf	___lwdiv@counter
  2196     03B6  0AF9               	incf	___lwdiv@counter,f
  2197     03B7  2BC3               	goto	l1427
  2198     03B8                     l1423:
  2199     03B8  3001               	movlw	1
  2200     03B9                     u685:
  2201     03B9  1003               	clrc
  2202     03BA  0DF2               	rlf	___lwdiv@divisor,f
  2203     03BB  0DF3               	rlf	___lwdiv@divisor+1,f
  2204     03BC  3EFF               	addlw	-1
  2205     03BD  1D03               	skipz
  2206     03BE  2BB9               	goto	u685
  2207     03BF                     l1425:
  2208     03BF  3001               	movlw	1
  2209     03C0  00F6               	movwf	??___lwdiv
  2210     03C1  0876               	movf	??___lwdiv,w
  2211     03C2  07F9               	addwf	___lwdiv@counter,f
  2212     03C3                     l1427:
  2213     03C3  1FF3               	btfss	___lwdiv@divisor+1,7
  2214     03C4  2BC6               	goto	u691
  2215     03C5  2BC7               	goto	u690
  2216     03C6                     u691:
  2217     03C6  2BB8               	goto	l1423
  2218     03C7                     u690:
  2219     03C7                     l1429:
  2220     03C7  3001               	movlw	1
  2221     03C8                     u705:
  2222     03C8  1003               	clrc
  2223     03C9  0DF7               	rlf	___lwdiv@quotient,f
  2224     03CA  0DF8               	rlf	___lwdiv@quotient+1,f
  2225     03CB  3EFF               	addlw	-1
  2226     03CC  1D03               	skipz
  2227     03CD  2BC8               	goto	u705
  2228     03CE  0873               	movf	___lwdiv@divisor+1,w
  2229     03CF  0275               	subwf	___lwdiv@dividend+1,w
  2230     03D0  1D03               	skipz
  2231     03D1  2BD4               	goto	u715
  2232     03D2  0872               	movf	___lwdiv@divisor,w
  2233     03D3  0274               	subwf	___lwdiv@dividend,w
  2234     03D4                     u715:
  2235     03D4  1C03               	skipc
  2236     03D5  2BD7               	goto	u711
  2237     03D6  2BD8               	goto	u710
  2238     03D7                     u711:
  2239     03D7  2BDF               	goto	l1435
  2240     03D8                     u710:
  2241     03D8                     l1431:
  2242     03D8  0872               	movf	___lwdiv@divisor,w
  2243     03D9  02F4               	subwf	___lwdiv@dividend,f
  2244     03DA  0873               	movf	___lwdiv@divisor+1,w
  2245     03DB  1C03               	skipc
  2246     03DC  03F5               	decf	___lwdiv@dividend+1,f
  2247     03DD  02F5               	subwf	___lwdiv@dividend+1,f
  2248     03DE                     l1433:
  2249     03DE  1477               	bsf	___lwdiv@quotient,0
  2250     03DF                     l1435:
  2251     03DF  3001               	movlw	1
  2252     03E0                     u725:
  2253     03E0  1003               	clrc
  2254     03E1  0CF3               	rrf	___lwdiv@divisor+1,f
  2255     03E2  0CF2               	rrf	___lwdiv@divisor,f
  2256     03E3  3EFF               	addlw	-1
  2257     03E4  1D03               	skipz
  2258     03E5  2BE0               	goto	u725
  2259     03E6                     l1437:
  2260     03E6  3001               	movlw	1
  2261     03E7  02F9               	subwf	___lwdiv@counter,f
  2262     03E8  1D03               	btfss	3,2
  2263     03E9  2BEB               	goto	u731
  2264     03EA  2BEC               	goto	u730
  2265     03EB                     u731:
  2266     03EB  2BC7               	goto	l1429
  2267     03EC                     u730:
  2268     03EC                     l1439:
  2269     03EC  0878               	movf	___lwdiv@quotient+1,w
  2270     03ED  00F3               	movwf	?___lwdiv+1
  2271     03EE  0877               	movf	___lwdiv@quotient,w
  2272     03EF  00F2               	movwf	?___lwdiv
  2273     03F0                     l597:
  2274     03F0  0008               	return
  2275     03F1                     __end_of___lwdiv:
  2276                           
  2277                           	psect	text7
  2278     0524                     __ptext7:	
  2279 ;; *************** function _Lcd_Write_String *****************
  2280 ;; Defined at:
  2281 ;;		line 98 in file "LCD.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;  a               1    wreg     PTR unsigned char 
  2284 ;;		 -> STR_4(2), STR_3(4), STR_2(7), STR_1(9), 
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;  a               1    9[COMMON] PTR unsigned char 
  2287 ;;		 -> STR_4(2), STR_3(4), STR_2(7), STR_1(9), 
  2288 ;;  i               2    7[COMMON] int 
  2289 ;; Return value:  Size  Location     Type
  2290 ;;                  1    wreg      void 
  2291 ;; Registers used:
  2292 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2298 ;;      Params:         0       0       0       0       0
  2299 ;;      Locals:         3       0       0       0       0
  2300 ;;      Temps:          0       0       0       0       0
  2301 ;;      Totals:         3       0       0       0       0
  2302 ;;Total ram usage:        3 bytes
  2303 ;; Hardware stack levels used: 1
  2304 ;; Hardware stack levels required when called: 3
  2305 ;; This function calls:
  2306 ;;		_Lcd_Write_Char
  2307 ;; This function is called by:
  2308 ;;		_main
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312     0524                     _Lcd_Write_String:	
  2313                           ;psect for function _Lcd_Write_String
  2314                           
  2315                           
  2316                           ;incstack = 0
  2317                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2318                           ;Lcd_Write_String@a stored from wreg
  2319     0524  00F9               	movwf	Lcd_Write_String@a
  2320     0525                     l1731:
  2321                           
  2322                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  2323     0525  01F7               	clrf	Lcd_Write_String@i
  2324     0526  01F8               	clrf	Lcd_Write_String@i+1
  2325     0527  2D3B               	goto	l1737
  2326     0528                     l1733:
  2327                           
  2328                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  2329     0528  0877               	movf	Lcd_Write_String@i,w
  2330     0529  0779               	addwf	Lcd_Write_String@a,w
  2331     052A  0084               	movwf	4
  2332     052B  120A  118A  256B  120A  118A  	fcall	stringdir
  2333     0530  120A  118A  2465  120A  118A  	fcall	_Lcd_Write_Char
  2334     0535                     l1735:
  2335     0535  3001               	movlw	1
  2336     0536  07F7               	addwf	Lcd_Write_String@i,f
  2337     0537  1803               	skipnc
  2338     0538  0AF8               	incf	Lcd_Write_String@i+1,f
  2339     0539  3000               	movlw	0
  2340     053A  07F8               	addwf	Lcd_Write_String@i+1,f
  2341     053B                     l1737:
  2342     053B  0877               	movf	Lcd_Write_String@i,w
  2343     053C  0779               	addwf	Lcd_Write_String@a,w
  2344     053D  0084               	movwf	4
  2345     053E  120A  118A  256B  120A  118A  	fcall	stringdir
  2346     0543  3A00               	xorlw	0
  2347     0544  1D03               	skipz
  2348     0545  2D47               	goto	u1021
  2349     0546  2D48               	goto	u1020
  2350     0547                     u1021:
  2351     0547  2D28               	goto	l1733
  2352     0548                     u1020:
  2353     0548                     l178:
  2354     0548  0008               	return
  2355     0549                     __end_of_Lcd_Write_String:
  2356                           
  2357                           	psect	text8
  2358     0465                     __ptext8:	
  2359 ;; *************** function _Lcd_Write_Char *****************
  2360 ;; Defined at:
  2361 ;;		line 83 in file "LCD.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;  a               1    wreg     unsigned char 
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;  a               1    6[COMMON] unsigned char 
  2366 ;;  y               1    5[COMMON] unsigned char 
  2367 ;;  temp            1    4[COMMON] unsigned char 
  2368 ;; Return value:  Size  Location     Type
  2369 ;;                  1    wreg      void 
  2370 ;; Registers used:
  2371 ;;		wreg, status,2, status,0, pclath, cstack
  2372 ;; Tracked objects:
  2373 ;;		On entry : 0/0
  2374 ;;		On exit  : 0/0
  2375 ;;		Unchanged: 0/0
  2376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2377 ;;      Params:         0       0       0       0       0
  2378 ;;      Locals:         3       0       0       0       0
  2379 ;;      Temps:          1       0       0       0       0
  2380 ;;      Totals:         4       0       0       0       0
  2381 ;;Total ram usage:        4 bytes
  2382 ;; Hardware stack levels used: 1
  2383 ;; Hardware stack levels required when called: 2
  2384 ;; This function calls:
  2385 ;;		_Lcd_Port
  2386 ;; This function is called by:
  2387 ;;		_main
  2388 ;;		_Lcd_Write_String
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392     0465                     _Lcd_Write_Char:	
  2393                           ;psect for function _Lcd_Write_Char
  2394                           
  2395                           
  2396                           ;incstack = 0
  2397                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2398                           ;Lcd_Write_Char@a stored from wreg
  2399     0465  00F6               	movwf	Lcd_Write_Char@a
  2400     0466                     l1629:
  2401                           
  2402                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  2403     0466  0876               	movf	Lcd_Write_Char@a,w
  2404     0467  390F               	andlw	15
  2405     0468  00F4               	movwf	Lcd_Write_Char@temp
  2406                           
  2407                           ;LCD.c: 86:     y = a & 0xF0;
  2408     0469  0876               	movf	Lcd_Write_Char@a,w
  2409     046A  39F0               	andlw	240
  2410     046B  00F5               	movwf	Lcd_Write_Char@y
  2411     046C                     l1631:
  2412                           
  2413                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  2414     046C  1283               	bcf	3,5	;RP0=0, select bank0
  2415     046D  1303               	bcf	3,6	;RP1=0, select bank0
  2416     046E  1508               	bsf	8,2	;volatile
  2417     046F                     l1633:
  2418                           
  2419                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  2420     046F  0875               	movf	Lcd_Write_Char@y,w
  2421     0470  00F3               	movwf	??_Lcd_Write_Char
  2422     0471  3004               	movlw	4
  2423     0472                     u965:
  2424     0472  1003               	clrc
  2425     0473  0CF3               	rrf	??_Lcd_Write_Char,f
  2426     0474  3EFF               	addlw	-1
  2427     0475  1D03               	skipz
  2428     0476  2C72               	goto	u965
  2429     0477  0873               	movf	??_Lcd_Write_Char,w
  2430     0478  120A  118A  2549  120A  118A  	fcall	_Lcd_Port
  2431     047D                     l1635:
  2432                           
  2433                           ;LCD.c: 89:     RD3 = 1;
  2434     047D  1283               	bcf	3,5	;RP0=0, select bank0
  2435     047E  1303               	bcf	3,6	;RP1=0, select bank0
  2436     047F  1588               	bsf	8,3	;volatile
  2437     0480                     l1637:
  2438                           
  2439                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2440     0480  301A               	movlw	26
  2441     0481  00F3               	movwf	??_Lcd_Write_Char
  2442     0482                     u1267:
  2443     0482  0BF3               	decfsz	??_Lcd_Write_Char,f
  2444     0483  2C82               	goto	u1267
  2445     0484  0000               	nop
  2446     0485                     l1639:
  2447                           
  2448                           ;LCD.c: 91:     RD3 = 0;
  2449     0485  1283               	bcf	3,5	;RP0=0, select bank0
  2450     0486  1303               	bcf	3,6	;RP1=0, select bank0
  2451     0487  1188               	bcf	8,3	;volatile
  2452     0488                     l1641:
  2453                           
  2454                           ;LCD.c: 92:     Lcd_Port(temp);
  2455     0488  0874               	movf	Lcd_Write_Char@temp,w
  2456     0489  120A  118A  2549  120A  118A  	fcall	_Lcd_Port
  2457     048E                     l1643:
  2458                           
  2459                           ;LCD.c: 93:     RD3 = 1;
  2460     048E  1283               	bcf	3,5	;RP0=0, select bank0
  2461     048F  1303               	bcf	3,6	;RP1=0, select bank0
  2462     0490  1588               	bsf	8,3	;volatile
  2463     0491                     l1645:
  2464                           
  2465                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2466     0491  301A               	movlw	26
  2467     0492  00F3               	movwf	??_Lcd_Write_Char
  2468     0493                     u1277:
  2469     0493  0BF3               	decfsz	??_Lcd_Write_Char,f
  2470     0494  2C93               	goto	u1277
  2471     0495  0000               	nop
  2472     0496                     l1647:
  2473                           
  2474                           ;LCD.c: 95:     RD3 = 0;
  2475     0496  1283               	bcf	3,5	;RP0=0, select bank0
  2476     0497  1303               	bcf	3,6	;RP1=0, select bank0
  2477     0498  1188               	bcf	8,3	;volatile
  2478     0499                     l172:
  2479     0499  0008               	return
  2480     049A                     __end_of_Lcd_Write_Char:
  2481                           
  2482                           	psect	text9
  2483     0361                     __ptext9:	
  2484 ;; *************** function _Lcd_Set_Cursor *****************
  2485 ;; Defined at:
  2486 ;;		line 48 in file "LCD.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;  a               1    wreg     unsigned char 
  2489 ;;  b               1    6[COMMON] unsigned char 
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;  a               1    0[BANK0 ] unsigned char 
  2492 ;;  temp            1    3[BANK0 ] unsigned char 
  2493 ;;  y               1    2[BANK0 ] unsigned char 
  2494 ;;  z               1    1[BANK0 ] unsigned char 
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  1    wreg      void 
  2497 ;; Registers used:
  2498 ;;		wreg, status,2, status,0, pclath, cstack
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2504 ;;      Params:         1       0       0       0       0
  2505 ;;      Locals:         0       4       0       0       0
  2506 ;;      Temps:          1       0       0       0       0
  2507 ;;      Totals:         2       4       0       0       0
  2508 ;;Total ram usage:        6 bytes
  2509 ;; Hardware stack levels used: 1
  2510 ;; Hardware stack levels required when called: 3
  2511 ;; This function calls:
  2512 ;;		_Lcd_Cmd
  2513 ;; This function is called by:
  2514 ;;		_main
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518     0361                     _Lcd_Set_Cursor:	
  2519                           ;psect for function _Lcd_Set_Cursor
  2520                           
  2521                           
  2522                           ;incstack = 0
  2523                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2524                           ;Lcd_Set_Cursor@a stored from wreg
  2525     0361  1283               	bcf	3,5	;RP0=0, select bank0
  2526     0362  1303               	bcf	3,6	;RP1=0, select bank0
  2527     0363  00BC               	movwf	Lcd_Set_Cursor@a
  2528     0364                     l1711:
  2529                           
  2530                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2531     0364  033C               	decf	Lcd_Set_Cursor@a,w
  2532     0365  1D03               	btfss	3,2
  2533     0366  2B68               	goto	u981
  2534     0367  2B69               	goto	u980
  2535     0368                     u981:
  2536     0368  2B88               	goto	l1721
  2537     0369                     u980:
  2538     0369                     l1713:
  2539                           
  2540                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2541     0369  0876               	movf	Lcd_Set_Cursor@b,w
  2542     036A  3E7F               	addlw	127
  2543     036B  00BF               	movwf	Lcd_Set_Cursor@temp
  2544                           
  2545                           ;LCD.c: 52:         z = temp >> 4;
  2546     036C  083F               	movf	Lcd_Set_Cursor@temp,w
  2547     036D  00F7               	movwf	??_Lcd_Set_Cursor
  2548     036E  3004               	movlw	4
  2549     036F                     u995:
  2550     036F  1003               	clrc
  2551     0370  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2552     0371  3EFF               	addlw	-1
  2553     0372  1D03               	skipz
  2554     0373  2B6F               	goto	u995
  2555     0374  0877               	movf	??_Lcd_Set_Cursor,w
  2556     0375  00BD               	movwf	Lcd_Set_Cursor@z
  2557     0376                     l1715:
  2558                           
  2559                           ;LCD.c: 53:         y = temp & 0x0F;
  2560     0376  083F               	movf	Lcd_Set_Cursor@temp,w
  2561     0377  390F               	andlw	15
  2562     0378  00BE               	movwf	Lcd_Set_Cursor@y
  2563     0379                     l1717:
  2564                           
  2565                           ;LCD.c: 54:         Lcd_Cmd(z);
  2566     0379  083D               	movf	Lcd_Set_Cursor@z,w
  2567     037A  120A  118A  2587  120A  118A  	fcall	_Lcd_Cmd
  2568     037F                     l1719:
  2569                           
  2570                           ;LCD.c: 55:         Lcd_Cmd(y);
  2571     037F  1283               	bcf	3,5	;RP0=0, select bank0
  2572     0380  1303               	bcf	3,6	;RP1=0, select bank0
  2573     0381  083E               	movf	Lcd_Set_Cursor@y,w
  2574     0382  120A  118A  2587  120A  118A  	fcall	_Lcd_Cmd
  2575                           
  2576                           ;LCD.c: 56:     } else if (a == 2) {
  2577     0387  2BAC               	goto	l166
  2578     0388                     l1721:
  2579     0388  3002               	movlw	2
  2580     0389  063C               	xorwf	Lcd_Set_Cursor@a,w
  2581     038A  1D03               	btfss	3,2
  2582     038B  2B8D               	goto	u1001
  2583     038C  2B8E               	goto	u1000
  2584     038D                     u1001:
  2585     038D  2BAC               	goto	l166
  2586     038E                     u1000:
  2587     038E                     l1723:
  2588                           
  2589                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2590     038E  0876               	movf	Lcd_Set_Cursor@b,w
  2591     038F  3EBF               	addlw	191
  2592     0390  00BF               	movwf	Lcd_Set_Cursor@temp
  2593                           
  2594                           ;LCD.c: 58:         z = temp >> 4;
  2595     0391  083F               	movf	Lcd_Set_Cursor@temp,w
  2596     0392  00F7               	movwf	??_Lcd_Set_Cursor
  2597     0393  3004               	movlw	4
  2598     0394                     u1015:
  2599     0394  1003               	clrc
  2600     0395  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2601     0396  3EFF               	addlw	-1
  2602     0397  1D03               	skipz
  2603     0398  2B94               	goto	u1015
  2604     0399  0877               	movf	??_Lcd_Set_Cursor,w
  2605     039A  00BD               	movwf	Lcd_Set_Cursor@z
  2606     039B                     l1725:
  2607                           
  2608                           ;LCD.c: 59:         y = temp & 0x0F;
  2609     039B  083F               	movf	Lcd_Set_Cursor@temp,w
  2610     039C  390F               	andlw	15
  2611     039D  00BE               	movwf	Lcd_Set_Cursor@y
  2612     039E                     l1727:
  2613                           
  2614                           ;LCD.c: 60:         Lcd_Cmd(z);
  2615     039E  083D               	movf	Lcd_Set_Cursor@z,w
  2616     039F  120A  118A  2587  120A  118A  	fcall	_Lcd_Cmd
  2617     03A4                     l1729:
  2618                           
  2619                           ;LCD.c: 61:         Lcd_Cmd(y);
  2620     03A4  1283               	bcf	3,5	;RP0=0, select bank0
  2621     03A5  1303               	bcf	3,6	;RP1=0, select bank0
  2622     03A6  083E               	movf	Lcd_Set_Cursor@y,w
  2623     03A7  120A  118A  2587  120A  118A  	fcall	_Lcd_Cmd
  2624     03AC                     l166:
  2625     03AC  0008               	return
  2626     03AD                     __end_of_Lcd_Set_Cursor:
  2627                           
  2628                           	psect	text10
  2629     0304                     __ptext10:	
  2630 ;; *************** function _Lcd_Init *****************
  2631 ;; Defined at:
  2632 ;;		line 65 in file "LCD.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;		None
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;		None
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  1    wreg      void 
  2639 ;; Registers used:
  2640 ;;		wreg, status,2, status,0, pclath, cstack
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2646 ;;      Params:         0       0       0       0       0
  2647 ;;      Locals:         0       0       0       0       0
  2648 ;;      Temps:          2       0       0       0       0
  2649 ;;      Totals:         2       0       0       0       0
  2650 ;;Total ram usage:        2 bytes
  2651 ;; Hardware stack levels used: 1
  2652 ;; Hardware stack levels required when called: 3
  2653 ;; This function calls:
  2654 ;;		_Lcd_Cmd
  2655 ;;		_Lcd_Port
  2656 ;; This function is called by:
  2657 ;;		_main
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661     0304                     _Lcd_Init:	
  2662                           ;psect for function _Lcd_Init
  2663                           
  2664     0304                     l1699:	
  2665                           ;incstack = 0
  2666                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2667                           
  2668                           
  2669                           ;LCD.c: 66:     Lcd_Port(0x00);
  2670     0304  3000               	movlw	0
  2671     0305  120A  118A  2549  120A  118A  	fcall	_Lcd_Port
  2672     030A                     l1701:
  2673                           
  2674                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2675     030A  3034               	movlw	52
  2676     030B  00F7               	movwf	??_Lcd_Init+1
  2677     030C  30F1               	movlw	241
  2678     030D  00F6               	movwf	??_Lcd_Init
  2679     030E                     u1287:
  2680     030E  0BF6               	decfsz	??_Lcd_Init,f
  2681     030F  2B0E               	goto	u1287
  2682     0310  0BF7               	decfsz	??_Lcd_Init+1,f
  2683     0311  2B0E               	goto	u1287
  2684     0312  2B13               	nop2
  2685     0313                     l1703:
  2686                           
  2687                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2688     0313  3003               	movlw	3
  2689     0314  120A  118A  2587  120A  118A  	fcall	_Lcd_Cmd
  2690                           
  2691                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2692     0319  300D               	movlw	13
  2693     031A  00F7               	movwf	??_Lcd_Init+1
  2694     031B  30FB               	movlw	251
  2695     031C  00F6               	movwf	??_Lcd_Init
  2696     031D                     u1297:
  2697     031D  0BF6               	decfsz	??_Lcd_Init,f
  2698     031E  2B1D               	goto	u1297
  2699     031F  0BF7               	decfsz	??_Lcd_Init+1,f
  2700     0320  2B1D               	goto	u1297
  2701     0321  2B22               	nop2
  2702     0322                     l1705:
  2703                           
  2704                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2705     0322  3003               	movlw	3
  2706     0323  120A  118A  2587  120A  118A  	fcall	_Lcd_Cmd
  2707     0328                     l1707:
  2708                           
  2709                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2710     0328  301D               	movlw	29
  2711     0329  00F7               	movwf	??_Lcd_Init+1
  2712     032A  3091               	movlw	145
  2713     032B  00F6               	movwf	??_Lcd_Init
  2714     032C                     u1307:
  2715     032C  0BF6               	decfsz	??_Lcd_Init,f
  2716     032D  2B2C               	goto	u1307
  2717     032E  0BF7               	decfsz	??_Lcd_Init+1,f
  2718     032F  2B2C               	goto	u1307
  2719                           
  2720                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2721     0330  3003               	movlw	3
  2722     0331  120A  118A  2587  120A  118A  	fcall	_Lcd_Cmd
  2723                           
  2724                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2725     0336  3002               	movlw	2
  2726     0337  120A  118A  2587  120A  118A  	fcall	_Lcd_Cmd
  2727                           
  2728                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  2729     033C  3002               	movlw	2
  2730     033D  120A  118A  2587  120A  118A  	fcall	_Lcd_Cmd
  2731                           
  2732                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  2733     0342  3008               	movlw	8
  2734     0343  120A  118A  2587  120A  118A  	fcall	_Lcd_Cmd
  2735                           
  2736                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  2737     0348  3000               	movlw	0
  2738     0349  120A  118A  2587  120A  118A  	fcall	_Lcd_Cmd
  2739                           
  2740                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  2741     034E  300C               	movlw	12
  2742     034F  120A  118A  2587  120A  118A  	fcall	_Lcd_Cmd
  2743                           
  2744                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  2745     0354  3000               	movlw	0
  2746     0355  120A  118A  2587  120A  118A  	fcall	_Lcd_Cmd
  2747                           
  2748                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  2749     035A  3006               	movlw	6
  2750     035B  120A  118A  2587  120A  118A  	fcall	_Lcd_Cmd
  2751     0360                     l169:
  2752     0360  0008               	return
  2753     0361                     __end_of_Lcd_Init:
  2754                           
  2755                           	psect	text11
  2756     05B1                     __ptext11:	
  2757 ;; *************** function _Lcd_Clear *****************
  2758 ;; Defined at:
  2759 ;;		line 43 in file "LCD.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;		None
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;		None
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  1    wreg      void 
  2766 ;; Registers used:
  2767 ;;		wreg, status,2, status,0, pclath, cstack
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2773 ;;      Params:         0       0       0       0       0
  2774 ;;      Locals:         0       0       0       0       0
  2775 ;;      Temps:          0       0       0       0       0
  2776 ;;      Totals:         0       0       0       0       0
  2777 ;;Total ram usage:        0 bytes
  2778 ;; Hardware stack levels used: 1
  2779 ;; Hardware stack levels required when called: 3
  2780 ;; This function calls:
  2781 ;;		_Lcd_Cmd
  2782 ;; This function is called by:
  2783 ;;		_main
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787     05B1                     _Lcd_Clear:	
  2788                           ;psect for function _Lcd_Clear
  2789                           
  2790     05B1                     l1709:	
  2791                           ;incstack = 0
  2792                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2793                           
  2794                           
  2795                           ;LCD.c: 44:     Lcd_Cmd(0);
  2796     05B1  3000               	movlw	0
  2797     05B2  120A  118A  2587  120A  118A  	fcall	_Lcd_Cmd
  2798                           
  2799                           ;LCD.c: 45:     Lcd_Cmd(1);
  2800     05B7  3001               	movlw	1
  2801     05B8  120A  118A  2587  120A  118A  	fcall	_Lcd_Cmd
  2802     05BD                     l160:
  2803     05BD  0008               	return
  2804     05BE                     __end_of_Lcd_Clear:
  2805                           
  2806                           	psect	text12
  2807     0587                     __ptext12:	
  2808 ;; *************** function _Lcd_Cmd *****************
  2809 ;; Defined at:
  2810 ;;		line 35 in file "LCD.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;  a               1    wreg     unsigned char 
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;  a               1    5[COMMON] unsigned char 
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  1    wreg      void 
  2817 ;; Registers used:
  2818 ;;		wreg, status,2, status,0, pclath, cstack
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2824 ;;      Params:         0       0       0       0       0
  2825 ;;      Locals:         1       0       0       0       0
  2826 ;;      Temps:          2       0       0       0       0
  2827 ;;      Totals:         3       0       0       0       0
  2828 ;;Total ram usage:        3 bytes
  2829 ;; Hardware stack levels used: 1
  2830 ;; Hardware stack levels required when called: 2
  2831 ;; This function calls:
  2832 ;;		_Lcd_Port
  2833 ;; This function is called by:
  2834 ;;		_Lcd_Clear
  2835 ;;		_Lcd_Set_Cursor
  2836 ;;		_Lcd_Init
  2837 ;;		_Lcd_Shift_Right
  2838 ;;		_Lcd_Shift_Left
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842     0587                     _Lcd_Cmd:	
  2843                           ;psect for function _Lcd_Cmd
  2844                           
  2845                           
  2846                           ;incstack = 0
  2847                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2848                           ;Lcd_Cmd@a stored from wreg
  2849     0587  00F5               	movwf	Lcd_Cmd@a
  2850     0588                     l1661:
  2851                           
  2852                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  2853     0588  1283               	bcf	3,5	;RP0=0, select bank0
  2854     0589  1303               	bcf	3,6	;RP1=0, select bank0
  2855     058A  1108               	bcf	8,2	;volatile
  2856     058B                     l1663:
  2857                           
  2858                           ;LCD.c: 37:     Lcd_Port(a);
  2859     058B  0875               	movf	Lcd_Cmd@a,w
  2860     058C  120A  118A  2549  120A  118A  	fcall	_Lcd_Port
  2861     0591                     l1665:
  2862                           
  2863                           ;LCD.c: 38:     RD3 = 1;
  2864     0591  1283               	bcf	3,5	;RP0=0, select bank0
  2865     0592  1303               	bcf	3,6	;RP1=0, select bank0
  2866     0593  1588               	bsf	8,3	;volatile
  2867     0594                     l1667:
  2868                           
  2869                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2870     0594  300B               	movlw	11
  2871     0595  00F4               	movwf	??_Lcd_Cmd+1
  2872     0596  3062               	movlw	98
  2873     0597  00F3               	movwf	??_Lcd_Cmd
  2874     0598                     u1317:
  2875     0598  0BF3               	decfsz	??_Lcd_Cmd,f
  2876     0599  2D98               	goto	u1317
  2877     059A  0BF4               	decfsz	??_Lcd_Cmd+1,f
  2878     059B  2D98               	goto	u1317
  2879     059C  0000               	nop
  2880     059D                     l1669:
  2881                           
  2882                           ;LCD.c: 40:     RD3 = 0;
  2883     059D  1283               	bcf	3,5	;RP0=0, select bank0
  2884     059E  1303               	bcf	3,6	;RP1=0, select bank0
  2885     059F  1188               	bcf	8,3	;volatile
  2886     05A0                     l157:
  2887     05A0  0008               	return
  2888     05A1                     __end_of_Lcd_Cmd:
  2889                           
  2890                           	psect	text13
  2891     0549                     __ptext13:	
  2892 ;; *************** function _Lcd_Port *****************
  2893 ;; Defined at:
  2894 ;;		line 13 in file "LCD.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;  a               1    wreg     unsigned char 
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;  a               1    2[COMMON] unsigned char 
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  1    wreg      void 
  2901 ;; Registers used:
  2902 ;;		wreg
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2908 ;;      Params:         0       0       0       0       0
  2909 ;;      Locals:         1       0       0       0       0
  2910 ;;      Temps:          0       0       0       0       0
  2911 ;;      Totals:         1       0       0       0       0
  2912 ;;Total ram usage:        1 bytes
  2913 ;; Hardware stack levels used: 1
  2914 ;; Hardware stack levels required when called: 1
  2915 ;; This function calls:
  2916 ;;		Nothing
  2917 ;; This function is called by:
  2918 ;;		_Lcd_Cmd
  2919 ;;		_Lcd_Init
  2920 ;;		_Lcd_Write_Char
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924     0549                     _Lcd_Port:	
  2925                           ;psect for function _Lcd_Port
  2926                           
  2927                           
  2928                           ;incstack = 0
  2929                           ; Regs used in _Lcd_Port: [wreg]
  2930                           ;Lcd_Port@a stored from wreg
  2931     0549  00F2               	movwf	Lcd_Port@a
  2932     054A                     l1595:
  2933                           
  2934                           ;LCD.c: 14:     if (a & 1)
  2935     054A  1C72               	btfss	Lcd_Port@a,0
  2936     054B  2D4D               	goto	u851
  2937     054C  2D4E               	goto	u850
  2938     054D                     u851:
  2939     054D  2D52               	goto	l146
  2940     054E                     u850:
  2941     054E                     l1597:
  2942                           
  2943                           ;LCD.c: 15:         RD4 = 1;
  2944     054E  1283               	bcf	3,5	;RP0=0, select bank0
  2945     054F  1303               	bcf	3,6	;RP1=0, select bank0
  2946     0550  1608               	bsf	8,4	;volatile
  2947     0551  2D55               	goto	l147
  2948     0552                     l146:	
  2949                           ;LCD.c: 16:     else
  2950                           
  2951                           
  2952                           ;LCD.c: 17:         RD4 = 0;
  2953     0552  1283               	bcf	3,5	;RP0=0, select bank0
  2954     0553  1303               	bcf	3,6	;RP1=0, select bank0
  2955     0554  1208               	bcf	8,4	;volatile
  2956     0555                     l147:
  2957                           
  2958                           ;LCD.c: 19:     if (a & 2)
  2959     0555  1CF2               	btfss	Lcd_Port@a,1
  2960     0556  2D58               	goto	u861
  2961     0557  2D59               	goto	u860
  2962     0558                     u861:
  2963     0558  2D5B               	goto	l148
  2964     0559                     u860:
  2965     0559                     l1599:
  2966                           
  2967                           ;LCD.c: 20:         RD5 = 1;
  2968     0559  1688               	bsf	8,5	;volatile
  2969     055A  2D5C               	goto	l149
  2970     055B                     l148:	
  2971                           ;LCD.c: 21:     else
  2972                           
  2973                           
  2974                           ;LCD.c: 22:         RD5 = 0;
  2975     055B  1288               	bcf	8,5	;volatile
  2976     055C                     l149:
  2977                           
  2978                           ;LCD.c: 24:     if (a & 4)
  2979     055C  1D72               	btfss	Lcd_Port@a,2
  2980     055D  2D5F               	goto	u871
  2981     055E  2D60               	goto	u870
  2982     055F                     u871:
  2983     055F  2D62               	goto	l150
  2984     0560                     u870:
  2985     0560                     l1601:
  2986                           
  2987                           ;LCD.c: 25:         RD6 = 1;
  2988     0560  1708               	bsf	8,6	;volatile
  2989     0561  2D63               	goto	l151
  2990     0562                     l150:	
  2991                           ;LCD.c: 26:     else
  2992                           
  2993                           
  2994                           ;LCD.c: 27:         RD6 = 0;
  2995     0562  1308               	bcf	8,6	;volatile
  2996     0563                     l151:
  2997                           
  2998                           ;LCD.c: 29:     if (a & 8)
  2999     0563  1DF2               	btfss	Lcd_Port@a,3
  3000     0564  2D66               	goto	u881
  3001     0565  2D67               	goto	u880
  3002     0566                     u881:
  3003     0566  2D69               	goto	l152
  3004     0567                     u880:
  3005     0567                     l1603:
  3006                           
  3007                           ;LCD.c: 30:         RD7 = 1;
  3008     0567  1788               	bsf	8,7	;volatile
  3009     0568  2D6A               	goto	l154
  3010     0569                     l152:	
  3011                           ;LCD.c: 31:     else
  3012                           
  3013                           
  3014                           ;LCD.c: 32:         RD7 = 0;
  3015     0569  1388               	bcf	8,7	;volatile
  3016     056A                     l154:
  3017     056A  0008               	return
  3018     056B                     __end_of_Lcd_Port:
  3019                           
  3020                           	psect	text14
  3021     05CB                     __ptext14:	
  3022 ;; *************** function _I2C_Master_Write *****************
  3023 ;; Defined at:
  3024 ;;		line 62 in file "IIC.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;  d               2    2[COMMON] unsigned int 
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;		None
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  1    wreg      void 
  3031 ;; Registers used:
  3032 ;;		wreg, status,2, status,0, pclath, cstack
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3038 ;;      Params:         2       0       0       0       0
  3039 ;;      Locals:         0       0       0       0       0
  3040 ;;      Temps:          0       0       0       0       0
  3041 ;;      Totals:         2       0       0       0       0
  3042 ;;Total ram usage:        2 bytes
  3043 ;; Hardware stack levels used: 1
  3044 ;; Hardware stack levels required when called: 2
  3045 ;; This function calls:
  3046 ;;		_I2C_Master_Wait
  3047 ;; This function is called by:
  3048 ;;		_main
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052     05CB                     _I2C_Master_Write:	
  3053                           ;psect for function _I2C_Master_Write
  3054                           
  3055     05CB                     l1365:	
  3056                           ;incstack = 0
  3057                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3058                           
  3059                           
  3060                           ;IIC.c: 62: void I2C_Master_Write(unsigned d);IIC.c: 63: {;IIC.c: 64:     I2C_Master_Wai
      +                          t();
  3061     05CB  120A  118A  25BE  120A  118A  	fcall	_I2C_Master_Wait
  3062     05D0                     l1367:
  3063                           
  3064                           ;IIC.c: 65:     SSPBUF = d;
  3065     05D0  0872               	movf	I2C_Master_Write@d,w
  3066     05D1  1283               	bcf	3,5	;RP0=0, select bank0
  3067     05D2  1303               	bcf	3,6	;RP1=0, select bank0
  3068     05D3  0093               	movwf	19	;volatile
  3069     05D4                     l231:
  3070     05D4  0008               	return
  3071     05D5                     __end_of_I2C_Master_Write:
  3072                           
  3073                           	psect	text15
  3074     05D5                     __ptext15:	
  3075 ;; *************** function _I2C_Master_Stop *****************
  3076 ;; Defined at:
  3077 ;;		line 52 in file "IIC.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;		None
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;		None
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      void 
  3084 ;; Registers used:
  3085 ;;		wreg, status,2, status,0, pclath, cstack
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3091 ;;      Params:         0       0       0       0       0
  3092 ;;      Locals:         0       0       0       0       0
  3093 ;;      Temps:          0       0       0       0       0
  3094 ;;      Totals:         0       0       0       0       0
  3095 ;;Total ram usage:        0 bytes
  3096 ;; Hardware stack levels used: 1
  3097 ;; Hardware stack levels required when called: 2
  3098 ;; This function calls:
  3099 ;;		_I2C_Master_Wait
  3100 ;; This function is called by:
  3101 ;;		_main
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105     05D5                     _I2C_Master_Stop:	
  3106                           ;psect for function _I2C_Master_Stop
  3107                           
  3108     05D5                     l1385:	
  3109                           ;incstack = 0
  3110                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3111                           
  3112                           
  3113                           ;IIC.c: 54:     I2C_Master_Wait();
  3114     05D5  120A  118A  25BE  120A  118A  	fcall	_I2C_Master_Wait
  3115     05DA                     l1387:
  3116                           
  3117                           ;IIC.c: 55:     SSPCON2bits.PEN = 1;
  3118     05DA  1683               	bsf	3,5	;RP0=1, select bank1
  3119     05DB  1303               	bcf	3,6	;RP1=0, select bank1
  3120     05DC  1511               	bsf	17,2	;volatile
  3121     05DD                     l228:
  3122     05DD  0008               	return
  3123     05DE                     __end_of_I2C_Master_Stop:
  3124                           
  3125                           	psect	text16
  3126     05DE                     __ptext16:	
  3127 ;; *************** function _I2C_Master_Start *****************
  3128 ;; Defined at:
  3129 ;;		line 36 in file "IIC.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;		None
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;		None
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  1    wreg      void 
  3136 ;; Registers used:
  3137 ;;		wreg, status,2, status,0, pclath, cstack
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3143 ;;      Params:         0       0       0       0       0
  3144 ;;      Locals:         0       0       0       0       0
  3145 ;;      Temps:          0       0       0       0       0
  3146 ;;      Totals:         0       0       0       0       0
  3147 ;;Total ram usage:        0 bytes
  3148 ;; Hardware stack levels used: 1
  3149 ;; Hardware stack levels required when called: 2
  3150 ;; This function calls:
  3151 ;;		_I2C_Master_Wait
  3152 ;; This function is called by:
  3153 ;;		_main
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157     05DE                     _I2C_Master_Start:	
  3158                           ;psect for function _I2C_Master_Start
  3159                           
  3160     05DE                     l1361:	
  3161                           ;incstack = 0
  3162                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3163                           
  3164                           
  3165                           ;IIC.c: 38:     I2C_Master_Wait();
  3166     05DE  120A  118A  25BE  120A  118A  	fcall	_I2C_Master_Wait
  3167     05E3                     l1363:
  3168                           
  3169                           ;IIC.c: 39:     SSPCON2bits.SEN = 1;
  3170     05E3  1683               	bsf	3,5	;RP0=1, select bank1
  3171     05E4  1303               	bcf	3,6	;RP1=0, select bank1
  3172     05E5  1411               	bsf	17,0	;volatile
  3173     05E6                     l222:
  3174     05E6  0008               	return
  3175     05E7                     __end_of_I2C_Master_Start:
  3176                           
  3177                           	psect	text17
  3178     04CD                     __ptext17:	
  3179 ;; *************** function _I2C_Master_Read *****************
  3180 ;; Defined at:
  3181 ;;		line 71 in file "IIC.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  a               2    2[COMMON] unsigned short 
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;  temp            2    6[COMMON] int 
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  2    2[COMMON] int 
  3188 ;; Registers used:
  3189 ;;		wreg, status,2, status,0, pclath, cstack
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3195 ;;      Params:         2       0       0       0       0
  3196 ;;      Locals:         2       0       0       0       0
  3197 ;;      Temps:          2       0       0       0       0
  3198 ;;      Totals:         6       0       0       0       0
  3199 ;;Total ram usage:        6 bytes
  3200 ;; Hardware stack levels used: 1
  3201 ;; Hardware stack levels required when called: 2
  3202 ;; This function calls:
  3203 ;;		_I2C_Master_Wait
  3204 ;; This function is called by:
  3205 ;;		_main
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209     04CD                     _I2C_Master_Read:	
  3210                           ;psect for function _I2C_Master_Read
  3211                           
  3212     04CD                     l1369:	
  3213                           ;incstack = 0
  3214                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3215                           
  3216                           
  3217                           ;IIC.c: 71: int I2C_Master_Read(unsigned short a);IIC.c: 72: {;IIC.c: 73:     int temp;;
      +                          IIC.c: 74:     I2C_Master_Wait();
  3218     04CD  120A  118A  25BE  120A  118A  	fcall	_I2C_Master_Wait
  3219     04D2                     l1371:
  3220                           
  3221                           ;IIC.c: 75:     SSPCON2bits.RCEN = 1;
  3222     04D2  1683               	bsf	3,5	;RP0=1, select bank1
  3223     04D3  1303               	bcf	3,6	;RP1=0, select bank1
  3224     04D4  1591               	bsf	17,3	;volatile
  3225                           
  3226                           ;IIC.c: 76:     I2C_Master_Wait();
  3227     04D5  120A  118A  25BE  120A  118A  	fcall	_I2C_Master_Wait
  3228     04DA                     l1373:
  3229                           
  3230                           ;IIC.c: 77:     temp = SSPBUF;
  3231     04DA  1283               	bcf	3,5	;RP0=0, select bank0
  3232     04DB  1303               	bcf	3,6	;RP1=0, select bank0
  3233     04DC  0813               	movf	19,w	;volatile
  3234     04DD  00F4               	movwf	??_I2C_Master_Read
  3235     04DE  01F5               	clrf	??_I2C_Master_Read+1
  3236     04DF  0874               	movf	??_I2C_Master_Read,w
  3237     04E0  00F6               	movwf	I2C_Master_Read@temp
  3238     04E1  0875               	movf	??_I2C_Master_Read+1,w
  3239     04E2  00F7               	movwf	I2C_Master_Read@temp+1
  3240     04E3                     l1375:
  3241                           
  3242                           ;IIC.c: 78:     I2C_Master_Wait();
  3243     04E3  120A  118A  25BE  120A  118A  	fcall	_I2C_Master_Wait
  3244     04E8                     l1377:
  3245                           
  3246                           ;IIC.c: 79:     if(a == 1){
  3247     04E8  0372               	decf	I2C_Master_Read@a,w
  3248     04E9  0473               	iorwf	I2C_Master_Read@a+1,w
  3249     04EA  1D03               	btfss	3,2
  3250     04EB  2CED               	goto	u611
  3251     04EC  2CEE               	goto	u610
  3252     04ED                     u611:
  3253     04ED  2CF2               	goto	l234
  3254     04EE                     u610:
  3255     04EE                     l1379:
  3256                           
  3257                           ;IIC.c: 80:         SSPCON2bits.ACKDT = 0;
  3258     04EE  1683               	bsf	3,5	;RP0=1, select bank1
  3259     04EF  1303               	bcf	3,6	;RP1=0, select bank1
  3260     04F0  1291               	bcf	17,5	;volatile
  3261                           
  3262                           ;IIC.c: 81:     }else{
  3263     04F1  2CF5               	goto	l235
  3264     04F2                     l234:
  3265                           
  3266                           ;IIC.c: 82:         SSPCON2bits.ACKDT = 1;
  3267     04F2  1683               	bsf	3,5	;RP0=1, select bank1
  3268     04F3  1303               	bcf	3,6	;RP1=0, select bank1
  3269     04F4  1691               	bsf	17,5	;volatile
  3270     04F5                     l235:	
  3271                           ;IIC.c: 83:     }
  3272                           
  3273                           
  3274                           ;IIC.c: 84:     SSPCON2bits.ACKEN = 1;
  3275     04F5  1611               	bsf	17,4	;volatile
  3276     04F6                     l1381:
  3277                           
  3278                           ;IIC.c: 85:     return temp;
  3279     04F6  0877               	movf	I2C_Master_Read@temp+1,w
  3280     04F7  00F3               	movwf	?_I2C_Master_Read+1
  3281     04F8  0876               	movf	I2C_Master_Read@temp,w
  3282     04F9  00F2               	movwf	?_I2C_Master_Read
  3283     04FA                     l236:
  3284     04FA  0008               	return
  3285     04FB                     __end_of_I2C_Master_Read:
  3286                           
  3287                           	psect	text18
  3288     05BE                     __ptext18:	
  3289 ;; *************** function _I2C_Master_Wait *****************
  3290 ;; Defined at:
  3291 ;;		line 29 in file "IIC.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;		None
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;		None
  3296 ;; Return value:  Size  Location     Type
  3297 ;;                  1    wreg      void 
  3298 ;; Registers used:
  3299 ;;		wreg, status,2
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3305 ;;      Params:         0       0       0       0       0
  3306 ;;      Locals:         0       0       0       0       0
  3307 ;;      Temps:          0       0       0       0       0
  3308 ;;      Totals:         0       0       0       0       0
  3309 ;;Total ram usage:        0 bytes
  3310 ;; Hardware stack levels used: 1
  3311 ;; Hardware stack levels required when called: 1
  3312 ;; This function calls:
  3313 ;;		Nothing
  3314 ;; This function is called by:
  3315 ;;		_I2C_Master_Start
  3316 ;;		_I2C_Master_Stop
  3317 ;;		_I2C_Master_Write
  3318 ;;		_I2C_Master_Read
  3319 ;;		_I2C_Master_RepeatedStart
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323     05BE                     _I2C_Master_Wait:	
  3324                           ;psect for function _I2C_Master_Wait
  3325                           
  3326     05BE                     l1305:	
  3327                           ;incstack = 0
  3328                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3329                           
  3330     05BE                     l216:	
  3331                           ;IIC.c: 31:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3332                           
  3333     05BE  1683               	bsf	3,5	;RP0=1, select bank1
  3334     05BF  1303               	bcf	3,6	;RP1=0, select bank1
  3335     05C0  1914               	btfsc	20,2	;volatile
  3336     05C1  2DC3               	goto	u591
  3337     05C2  2DC4               	goto	u590
  3338     05C3                     u591:
  3339     05C3  2DBE               	goto	l216
  3340     05C4                     u590:
  3341     05C4                     l1307:
  3342     05C4  0811               	movf	17,w	;volatile
  3343     05C5  391F               	andlw	31
  3344     05C6  1D03               	btfss	3,2
  3345     05C7  2DC9               	goto	u601
  3346     05C8  2DCA               	goto	u600
  3347     05C9                     u601:
  3348     05C9  2DBE               	goto	l216
  3349     05CA                     u600:
  3350     05CA                     l219:
  3351     05CA  0008               	return
  3352     05CB                     __end_of_I2C_Master_Wait:
  3353                           
  3354                           	psect	text19
  3355     04FB                     __ptext19:	
  3356 ;; *************** function _isr *****************
  3357 ;; Defined at:
  3358 ;;		line 81 in file "main.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;		None
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;		None
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  1    wreg      void 
  3365 ;; Registers used:
  3366 ;;		wreg
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3372 ;;      Params:         0       0       0       0       0
  3373 ;;      Locals:         0       0       0       0       0
  3374 ;;      Temps:          2       0       0       0       0
  3375 ;;      Totals:         2       0       0       0       0
  3376 ;;Total ram usage:        2 bytes
  3377 ;; Hardware stack levels used: 1
  3378 ;; This function calls:
  3379 ;;		Nothing
  3380 ;; This function is called by:
  3381 ;;		Interrupt level 1
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385     04FB                     _isr:	
  3386                           ;psect for function _isr
  3387                           
  3388     04FB                     i1l1067:
  3389                           
  3390                           ;main.c: 84:     if (PIR1bits.SSPIF){
  3391     04FB  1283               	bcf	3,5	;RP0=0, select bank0
  3392     04FC  1303               	bcf	3,6	;RP1=0, select bank0
  3393     04FD  1D8C               	btfss	12,3	;volatile
  3394     04FE  2D00               	goto	u35_21
  3395     04FF  2D01               	goto	u35_20
  3396     0500                     u35_21:
  3397     0500  2D02               	goto	i1l101
  3398     0501                     u35_20:
  3399     0501                     i1l1069:
  3400                           
  3401                           ;main.c: 85:         PIR1bits.SSPIF = 0;
  3402     0501  118C               	bcf	12,3	;volatile
  3403     0502                     i1l101:	
  3404                           ;main.c: 86:     }
  3405                           
  3406                           
  3407                           ;main.c: 89:     if (PIR1bits.TXIF){
  3408     0502  1E0C               	btfss	12,4	;volatile
  3409     0503  2D05               	goto	u36_21
  3410     0504  2D06               	goto	u36_20
  3411     0505                     u36_21:
  3412     0505  2D07               	goto	i1l102
  3413     0506                     u36_20:
  3414     0506                     i1l1071:
  3415                           
  3416                           ;main.c: 90:         PIR1bits.TXIF = 0;
  3417     0506  120C               	bcf	12,4	;volatile
  3418     0507                     i1l102:	
  3419                           ;main.c: 91:     }
  3420                           
  3421                           
  3422                           ;main.c: 94:     if (PIR1bits.RCIF){
  3423     0507  1E8C               	btfss	12,5	;volatile
  3424     0508  2D0A               	goto	u37_21
  3425     0509  2D0B               	goto	u37_20
  3426     050A                     u37_21:
  3427     050A  2D0C               	goto	i1l103
  3428     050B                     u37_20:
  3429     050B                     i1l1073:
  3430                           
  3431                           ;main.c: 95:         PIR1bits.RCIF = 0;
  3432     050B  128C               	bcf	12,5	;volatile
  3433     050C                     i1l103:	
  3434                           ;main.c: 96:     }
  3435                           
  3436                           
  3437                           ;main.c: 99:     if (PIR1bits.ADIF){
  3438     050C  1F0C               	btfss	12,6	;volatile
  3439     050D  2D0F               	goto	u38_21
  3440     050E  2D10               	goto	u38_20
  3441     050F                     u38_21:
  3442     050F  2D11               	goto	i1l104
  3443     0510                     u38_20:
  3444     0510                     i1l1075:
  3445                           
  3446                           ;main.c: 100:         PIR1bits.ADIF = 0;
  3447     0510  130C               	bcf	12,6	;volatile
  3448     0511                     i1l104:	
  3449                           ;main.c: 101:     }
  3450                           
  3451                           
  3452                           ;main.c: 104:     if (INTCONbits.T0IF){
  3453     0511  1D0B               	btfss	11,2	;volatile
  3454     0512  2D14               	goto	u39_21
  3455     0513  2D15               	goto	u39_20
  3456     0514                     u39_21:
  3457     0514  2D18               	goto	i1l1081
  3458     0515                     u39_20:
  3459     0515                     i1l1077:
  3460                           
  3461                           ;main.c: 105:         TMR0 = 179;
  3462     0515  30B3               	movlw	179
  3463     0516  0081               	movwf	1	;volatile
  3464     0517                     i1l1079:
  3465                           
  3466                           ;main.c: 106:         INTCONbits.T0IF = 0;
  3467     0517  110B               	bcf	11,2	;volatile
  3468     0518                     i1l1081:
  3469                           
  3470                           ;main.c: 110:     if (INTCONbits.RBIF){
  3471     0518  1C0B               	btfss	11,0	;volatile
  3472     0519  2D1B               	goto	u40_21
  3473     051A  2D1C               	goto	u40_20
  3474     051B                     u40_21:
  3475     051B  2D1D               	goto	i1l107
  3476     051C                     u40_20:
  3477     051C                     i1l1083:
  3478                           
  3479                           ;main.c: 111:         INTCONbits.RBIF = 0;
  3480     051C  100B               	bcf	11,0	;volatile
  3481     051D                     i1l107:
  3482     051D  0871               	movf	??_isr+1,w
  3483     051E  008A               	movwf	10
  3484     051F  0E70               	swapf	??_isr,w
  3485     0520  0083               	movwf	3
  3486     0521  0EFE               	swapf	btemp,f
  3487     0522  0E7E               	swapf	btemp,w
  3488     0523  0009               	retfie
  3489     0524                     __end_of_isr:
  3490     007E                     btemp	set	126	;btemp
  3491     007E                     wtemp0	set	126
  3492                           
  3493                           	psect	intentry
  3494     0004                     __pintentry:	
  3495                           ;incstack = 0
  3496                           ; Regs used in _isr: [wreg]
  3497                           
  3498     0004                     interrupt_function:
  3499     007E                     saved_w	set	btemp
  3500     0004  00FE               	movwf	btemp
  3501     0005  0E03               	swapf	3,w
  3502     0006  00F0               	movwf	??_isr
  3503     0007  080A               	movf	10,w
  3504     0008  00F1               	movwf	??_isr+1
  3505     0009  120A  118A  2CFB   	ljmp	_isr
  3506                           
  3507                           	psect	idloc
  3508                           
  3509                           ;Config register IDLOC0 @ 0x2000
  3510                           ;	unspecified, using default values
  3511     2000                     	org	8192
  3512     2000  3FFF               	dw	16383
  3513                           
  3514                           ;Config register IDLOC1 @ 0x2001
  3515                           ;	unspecified, using default values
  3516     2001                     	org	8193
  3517     2001  3FFF               	dw	16383
  3518                           
  3519                           ;Config register IDLOC2 @ 0x2002
  3520                           ;	unspecified, using default values
  3521     2002                     	org	8194
  3522     2002  3FFF               	dw	16383
  3523                           
  3524                           ;Config register IDLOC3 @ 0x2003
  3525                           ;	unspecified, using default values
  3526     2003                     	org	8195
  3527     2003  3FFF               	dw	16383
  3528                           
  3529                           	psect	config
  3530                           
  3531                           ;Config register CONFIG1 @ 0x2007
  3532                           ;	Oscillator Selection bits
  3533                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3534                           ;	Watchdog Timer Enable bit
  3535                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3536                           ;	Power-up Timer Enable bit
  3537                           ;	PWRTE = OFF, PWRT disabled
  3538                           ;	RE3/MCLR pin function select bit
  3539                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3540                           ;	Code Protection bit
  3541                           ;	CP = OFF, Program memory code protection is disabled
  3542                           ;	Data Code Protection bit
  3543                           ;	CPD = OFF, Data memory code protection is disabled
  3544                           ;	Brown Out Reset Selection bits
  3545                           ;	BOREN = OFF, BOR disabled
  3546                           ;	Internal External Switchover bit
  3547                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3548                           ;	Fail-Safe Clock Monitor Enabled bit
  3549                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3550                           ;	Low Voltage Programming Enable bit
  3551                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3552                           ;	In-Circuit Debugger Mode bit
  3553                           ;	DEBUG = 0x1, unprogramme  3554     2007                     	org	8199
  3555     2007  20D4               	dw	8404
  3556                           
  3557                           ;Config register CONFIG2 @ 0x2008
  3558                           ;	Brown-out Reset Selection bit
  3559                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3560                           ;	Flash Program Memory Self Write Enable bits
  3561                           ;	WRT = OFF, Write protection off
  3562     2008                     	org	8200
  3563     2008  3FFF               	dw	16383

Data Sizes:
    Strings     22
    Constant    0
    Data        2
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     17      45
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 9
		 -> STR_4(CODE[2]), STR_3(CODE[4]), STR_2(CODE[7]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _main->___lwdiv
    _I2C_Master_Init->___lldiv
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4728
                                             14 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___lwdiv
                            ___lwmod
                           _initUART
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     542
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     592
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     528
                                              7 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1    1085
                                              6 COMMON     2     1      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     478
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     501
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)
   _initUART
   _setup
     _I2C_Master_Init
       ___lldiv

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     11      2D       5       56.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      39      12        0.0%
ABS                  0      0      39       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Mar 09 16:42:42 2023

                       _i 002E                         pc 0002                        fsr 0004  
                     l113 026B                       l213 0464                       l222 05E6  
                     l150 0562                       l126 04CC                       l231 05D4  
                     l151 0563                       l119 0289                       l216 05BE  
                     l152 0569                       l160 05BD                       l129 05B0  
                     l234 04F2                       l154 056A                       l146 0552  
                     l219 05CA                       l235 04F5                       l147 0555  
                     l236 04FA                       l228 05DD                       l148 055B  
                     l172 0499                       l149 055C                       l157 05A0  
                     l166 03AC                       l169 0360                       l361 0303  
                     l178 0548                       l607 042C                       l597 03F0  
                     _GIE 005F                       _RD3 0043                       _RD4 0044  
                     _RD5 0045                       _RD6 0046                       _RD7 0047  
                     u600 05CA                       u601 05C9                       u610 04EE  
                     u611 04ED                       u710 03D8                       u711 03D7  
                     u705 03C8                       u730 03EC                       u731 03EB  
                     u715 03D4                       u725 03E0                       u590 05C4  
                     u670 03B5                       u910 02C2                       u591 05C3  
                     u671 03B4                       u911 02C1                       u905 02B3  
                     u850 054E                       u690 03C7                       u930 02DD  
                     u851 054D                       u691 03C6                       u931 02DC  
                     u860 0559                       u861 0558                       u685 03B9  
                     u925 02C4                       u870 0560                       u950 02FB  
                     u871 055F                       u951 02FA                       u935 02D9  
                     u880 0567                       u881 0566                       u945 02ED  
                     u890 02AE                       u970 0444                       u891 02AD  
                     u980 0369                       u981 0368                       u965 0472  
                     u975 043F                       u995 036F                       _isr 04FB  
                     fsr0 0004                       indf 0000                      l1305 05BE  
                    l1307 05C4                      l1421 03B5                      l1341 05A6  
                    l1431 03D8                      l1423 03B8                      l1343 05A9  
                    l1361 05DE                      l1601 0560                      l1433 03DE  
                    l1425 03BF                      l1417 03AD                      l1345 05AC  
                    l1337 05A1                      l1371 04D2                      l1363 05E3  
                    l1603 0567                      l1435 03DF                      l1427 03C3  
                    l1419 03AF                      l1347 05AF                      l1339 05A5  
                    l1611 02BE                      l1381 04F6                      l1373 04DA  
                    l1365 05CB                      l1701 030A                      l1437 03E6  
                    l1429 03C7                      l1621 02EC                      l1613 02C2  
                    l1605 029C                      l1375 04E3                      l1367 05D0  
                    l1703 0313                      l1711 0364                      l1631 046C  
                    l1439 03EC                      l1623 02F5                      l1615 02CB  
                    l1607 02AE                      l1377 04E8                      l1369 04CD  
                    l1385 05D5                      l1705 0322                      l1713 0369  
                    l1721 0388                      l1641 0488                      l1633 046F  
                    l1617 02DD                      l1609 02B1                      l1625 02FB  
                    l1801 00F3                      l1379 04EE                      l1387 05DA  
                    l1707 0328                      l1723 038E                      l1715 0376  
                    l1643 048E                      l1635 047D                      l1731 0525  
                    l1619 02EB                      l1651 0431                      l1811 0118  
                    l1803 00F9                      l1661 0588                      l1709 05B1  
                    l1725 039B                      l1717 0379                      l1645 0491  
                    l1637 0480                      l1629 0466                      l1733 0528  
                    l1741 03F9                      l1653 0434                      l1821 0164  
                    l1813 0120                      l1805 0101                      l1663 058B  
                    l1727 039E                      l1719 037F                      l1647 0496  
                    l1639 0485                      l1735 0535                      l1751 0415  
                    l1743 03FC                      l1655 0461                      l1671 049A  
                    l1831 018A                      l1823 016D                      l1815 0129  
                    l1807 0107                      l1665 0591                      l1729 03A4  
                    l1737 053B                      l1753 041B                      l1745 0403  
                    l1657 0462                      l1649 042D                      l1681 04B0  
                    l1673 04AA                      l1841 01B0                      l1833 0190  
                    l1825 0176                      l1817 014B                      l1809 010F  
                    l1761 0028                      l1595 054A                      l1667 0594  
                    l1755 0422                      l1747 0407                      l1739 03F1  
                    l1659 0463                      l1691 04B7                      l1683 04B1  
                    l1675 04AD                      l1851 01F0                      l1843 01B2  
                    l1835 019E                      l1827 017C                      l1819 015C  
                    l1771 0050                      l1763 0036                      l1597 054E  
                    l1669 059D                      l1749 040B                      l1757 0428  
                    l1693 04B8                      l1685 04B2                      l1677 04AE  
                    l1861 0248                      l1853 01FE                      l1845 01D3  
                    l1837 01A1                      l1829 0182                      l1781 0084  
                    l1773 0055                      l1765 003B                      l1599 0559  
                    l1695 04BC                      l1687 04B5                      l1679 04AF  
                    l1871 026D                      l1863 0257                      l1855 0203  
                    l1847 01E2                      l1839 01AD                      l1791 00BC  
                    l1783 008D                      l1775 005E                      l1767 0046  
                    l1697 04BD                      l1689 04B6                      l1881 0284  
                    l1873 0273                      l1865 025A                      l1857 0232  
                    l1849 01E7                      l1793 00CA                      l1785 009B  
                    l1777 006C                      l1769 004B                      l1699 0304  
                    l1875 0275                      l1867 0266                      l1859 0240  
                    l1795 00DD                      l1787 00AE                      l1779 007F  
                    l1877 027B                      l1869 0269                      l1797 00E5  
                    l1789 00B3                      l1879 0282                      l1799 00EB  
                    ?_isr 0070                      STR_1 0571                      STR_2 057A  
                    STR_3 0581                      STR_4 0585                      u1000 038E  
                    u1001 038D                      u1020 0548                      u1100 0190  
                    u1021 0547                      u1101 018F                      u1030 03F9  
                    u1110 0248                      u1015 0394                      u1031 03F8  
                    u1111 0247                      u1120 0273                      u1121 0272  
                    u1050 040B                      u1130 0282                      u1051 040A  
                    u1131 0281                      u1060 0415                      u1061 0414  
                    u1045 03FD                      u1207 01DB                      u1080 0428  
                    u1081 0427                      u1065 0411                      u1217 020B  
                    u1090 018A                      u1307 032C                      u1075 041C  
                    u1227 023A                      u1091 0189                      u1147 0030  
                    u1317 0598                      u1237 0250                      u1157 0079  
                    u1247 0261                      u1167 00A8                      u1257 0291  
                    u1177 00D7                      u1267 0482                      u1187 0198  
                    u1277 0493                      u1197 01A8                      u1287 030E  
                    u1297 031D                      _PEIE 005E                      _TMR0 0001  
       ?_Lcd_Write_String 0070                      _flag 0030                      _cont 0032  
                    _main 0028                      _ones 003A                      _tens 003B  
                    btemp 007E                      start 000C        ??_Lcd_Write_String 0077  
         __end_of_Lcd_Cmd 05A1                     ??_isr 0070          ?_I2C_Master_Init 0042  
        ?_I2C_Master_Read 0072          ?_I2C_Master_Wait 0070          ?_I2C_Master_Stop 0070  
                   ?_main 0070                     _ANSEL 0188           __end_of___lldiv 0304  
         __end_of___lwdiv 03F1                     i1l101 0502                     i1l102 0507  
                   i1l103 050C                     i1l104 0511                     i1l107 051D  
         __end_of___lwmod 042D                     _TEMP1 0020                     u40_20 051C  
                   u40_21 051B                     _SPBRG 0099                     u35_20 0501  
                   u35_21 0500                     _PORTA 0005                     _PORTB 0006  
                   _PORTD 0008                     _PORTE 0009                     u36_20 0506  
                   u36_21 0505                     u37_20 050B                     u37_21 050A  
                   u38_20 0510                     u38_21 050F                     u39_20 0515  
                   u39_21 0514                     _TRISA 0085                     _TRISB 0086  
                   _TRISD 0088                     _SSPIE 0463                     _TRISE 0089  
                   _SSPIF 0063                     _TXREG 0019                     _setup 049A  
                   pclath 000A                     status 0003                     wtemp0 007E  
        __end_of_Lcd_Init 0361          __end_of_Lcd_Port 056B           __initialization 000F  
            __end_of_main 029C                    ??_main 004A         ?_I2C_Master_Start 0070  
       ?_I2C_Master_Write 0072        ??_I2C_Master_Start 0072        ??_I2C_Master_Write 0074  
                  ?_setup 0070                    _ANSELH 0189                    i1l1071 0506  
                  i1l1081 0518                    i1l1073 050B                    i1l1083 051C  
                  i1l1075 0510                    i1l1067 04FB                    i1l1077 0515  
                  i1l1069 0501                    i1l1079 0517                 ??_Lcd_Cmd 0073  
           _espacios_comp 007A                    _SSPADD 0093                    _TRISC3 043B  
                  _TRISC4 043C                    _SSPCON 0014                    _SSPBUF 0013  
               ??___lldiv 003C          __end_of_initUART 05B1                 ??___lwdiv 0076  
               ??___lwmod 0040              __pdataCOMMON 007A                    saved_w 007E  
         Lcd_Set_Cursor@a 003C           Lcd_Set_Cursor@b 0076           Lcd_Set_Cursor@y 003E  
         Lcd_Set_Cursor@z 003D   __end_of__initialization 0024         __end_of_Lcd_Clear 05BE  
          __pcstackCOMMON 0070             __end_of_setup 04CD            _Lcd_Set_Cursor 0361  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070                   ??_setup 007A  
              __pbssBANK0 0020                __pmaintext 0028                __pintentry 0004  
  __end_of_Lcd_Set_Cursor 03AD                ??_Lcd_Init 0076                ??_Lcd_Port 0072  
                 _SSPCON2 0091                   _SSPSTAT 0094                __stringtab 056B  
               ?_initUART 0070            _Lcd_Write_Char 0465                   _Lcd_Cmd 0587  
                 ___lldiv 029C                   ___lwdiv 03AD                   ___lwmod 03F1  
         ?_Lcd_Set_Cursor 0076                   __ptext1 049A                   __ptext2 042D  
                 __ptext3 029C                   __ptext4 05A1                   __ptext5 03F1  
                 __ptext6 03AD                   __ptext7 0524                   __ptext8 0465  
                 __ptext9 0361                   clrloop0 05E8    __end_of_Lcd_Write_Char 049A  
    end_of_initialization 0024                ??_initUART 0072           ___lldiv@divisor 0072  
         ___lldiv@counter 0041                 _RCSTAbits 0018          I2C_Master_Init@c 0042  
        I2C_Master_Read@a 0072                 Lcd_Port@a 0072                 _PORTBbits 0006  
               _PORTDbits 0008                 _TRISCbits 0087           ?_Lcd_Write_Char 0070  
              _proximidad 0038         Lcd_Write_String@a 0079         Lcd_Write_String@i 0077  
               _TXSTAbits 0098                 _Lcd_Clear 05B1          _Lcd_Write_String 0524  
           __pidataCOMMON 05EF       start_initialization 000F               __end_of_isr 0524  
       ??_I2C_Master_Init 0046         ??_I2C_Master_Read 0074         ??_I2C_Master_Wait 0072  
       ??_I2C_Master_Stop 0072                ?_Lcd_Clear 0070           Lcd_Write_Char@a 0076  
         Lcd_Write_Char@y 0075                 ___latbits 0002             __pcstackBANK0 003C  
                ?_Lcd_Cmd 0070          _I2C_Master_Start 05DE          _I2C_Master_Write 05CB  
        ___lwdiv@dividend 0074          ??_Lcd_Set_Cursor 0077                  ?___lldiv 0072  
                ?___lwdiv 0072                  ?___lwmod 003C                 __pstrings 056B  
        ___lwdiv@quotient 0077         interrupt_function 0004                 clear_ram0 05E7  
                _PIE1bits 008C                  Lcd_Cmd@a 0075                  _PIR1bits 000C  
             ??_Lcd_Clear 0076                  _VOLTAJE1 0028               __stringbase 0570  
        ??_Lcd_Write_Char 0073                  _Lcd_Init 0304                  _Lcd_Port 0549  
     I2C_Master_Read@temp 0076  __end_of_Lcd_Write_String 0549        __end_of__stringtab 0571  
         _I2C_Master_Init 042D           _I2C_Master_Read 04CD           _I2C_Master_Wait 05BE  
         _I2C_Master_Stop 05D5           ___lwdiv@divisor 0072           ___lwdiv@counter 0079  
                __ptext10 0304                  __ptext11 05B1                  __ptext12 0587  
                __ptext13 0549                  __ptext14 05CB                  __ptext15 05D5  
                __ptext16 05DE                  __ptext17 04CD                  __ptext18 05BE  
                __ptext19 04FB                  _initUART 05A1                  _espacios 0036  
                _temporal 002C                  _voltaje1 0024  __end_of_I2C_Master_Start 05E7  
__end_of_I2C_Master_Write 05D5                _INTCONbits 000B        Lcd_Write_Char@temp 0074  
                intlevel1 0000          ___lwmod@dividend 003E          ___lldiv@dividend 0076  
               stringcode 056B                _OSCCONbits 008F   __end_of_I2C_Master_Init 0465  
 __end_of_I2C_Master_Read 04FB   __end_of_I2C_Master_Wait 05CB   __end_of_I2C_Master_Stop 05DE  
      Lcd_Set_Cursor@temp 003F               _temperatura 0034          ___lldiv@quotient 003D  
       I2C_Master_Write@d 0072           ___lwmod@divisor 003C           ___lwmod@counter 0041  
                stringdir 056B                  stringtab 056B               _SSPCON2bits 0091  
