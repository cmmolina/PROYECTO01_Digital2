

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Mar 07 06:41:51 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Version 2.40
    24                           ; Generated 17/11/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0000                     	;# 
    59     0001                     	;# 
    60     0002                     	;# 
    61     0003                     	;# 
    62     0004                     	;# 
    63     0005                     	;# 
    64     0006                     	;# 
    65     0007                     	;# 
    66     0008                     	;# 
    67     0009                     	;# 
    68     000A                     	;# 
    69     000B                     	;# 
    70     000C                     	;# 
    71     000D                     	;# 
    72     000E                     	;# 
    73     000E                     	;# 
    74     000F                     	;# 
    75     0010                     	;# 
    76     0011                     	;# 
    77     0012                     	;# 
    78     0013                     	;# 
    79     0014                     	;# 
    80     0015                     	;# 
    81     0015                     	;# 
    82     0016                     	;# 
    83     0017                     	;# 
    84     0018                     	;# 
    85     0019                     	;# 
    86     001A                     	;# 
    87     001B                     	;# 
    88     001B                     	;# 
    89     001C                     	;# 
    90     001D                     	;# 
    91     001E                     	;# 
    92     001F                     	;# 
    93     0081                     	;# 
    94     0085                     	;# 
    95     0086                     	;# 
    96     0087                     	;# 
    97     0088                     	;# 
    98     0089                     	;# 
    99     008C                     	;# 
   100     008D                     	;# 
   101     008E                     	;# 
   102     008F                     	;# 
   103     0090                     	;# 
   104     0091                     	;# 
   105     0092                     	;# 
   106     0093                     	;# 
   107     0093                     	;# 
   108     0093                     	;# 
   109     0094                     	;# 
   110     0095                     	;# 
   111     0096                     	;# 
   112     0097                     	;# 
   113     0098                     	;# 
   114     0099                     	;# 
   115     009A                     	;# 
   116     009B                     	;# 
   117     009C                     	;# 
   118     009D                     	;# 
   119     009E                     	;# 
   120     009F                     	;# 
   121     0105                     	;# 
   122     0107                     	;# 
   123     0108                     	;# 
   124     0109                     	;# 
   125     010C                     	;# 
   126     010C                     	;# 
   127     010D                     	;# 
   128     010E                     	;# 
   129     010F                     	;# 
   130     0185                     	;# 
   131     0187                     	;# 
   132     0188                     	;# 
   133     0189                     	;# 
   134     018C                     	;# 
   135     018D                     	;# 
   136     0000                     	;# 
   137     0001                     	;# 
   138     0002                     	;# 
   139     0003                     	;# 
   140     0004                     	;# 
   141     0005                     	;# 
   142     0006                     	;# 
   143     0007                     	;# 
   144     0008                     	;# 
   145     0009                     	;# 
   146     000A                     	;# 
   147     000B                     	;# 
   148     000C                     	;# 
   149     000D                     	;# 
   150     000E                     	;# 
   151     000E                     	;# 
   152     000F                     	;# 
   153     0010                     	;# 
   154     0011                     	;# 
   155     0012                     	;# 
   156     0013                     	;# 
   157     0014                     	;# 
   158     0015                     	;# 
   159     0015                     	;# 
   160     0016                     	;# 
   161     0017                     	;# 
   162     0018                     	;# 
   163     0019                     	;# 
   164     001A                     	;# 
   165     001B                     	;# 
   166     001B                     	;# 
   167     001C                     	;# 
   168     001D                     	;# 
   169     001E                     	;# 
   170     001F                     	;# 
   171     0081                     	;# 
   172     0085                     	;# 
   173     0086                     	;# 
   174     0087                     	;# 
   175     0088                     	;# 
   176     0089                     	;# 
   177     008C                     	;# 
   178     008D                     	;# 
   179     008E                     	;# 
   180     008F                     	;# 
   181     0090                     	;# 
   182     0091                     	;# 
   183     0092                     	;# 
   184     0093                     	;# 
   185     0093                     	;# 
   186     0093                     	;# 
   187     0094                     	;# 
   188     0095                     	;# 
   189     0096                     	;# 
   190     0097                     	;# 
   191     0098                     	;# 
   192     0099                     	;# 
   193     009A                     	;# 
   194     009B                     	;# 
   195     009C                     	;# 
   196     009D                     	;# 
   197     009E                     	;# 
   198     009F                     	;# 
   199     0105                     	;# 
   200     0107                     	;# 
   201     0108                     	;# 
   202     0109                     	;# 
   203     010C                     	;# 
   204     010C                     	;# 
   205     010D                     	;# 
   206     010E                     	;# 
   207     010F                     	;# 
   208     0185                     	;# 
   209     0187                     	;# 
   210     0188                     	;# 
   211     0189                     	;# 
   212     018C                     	;# 
   213     018D                     	;# 
   214     0000                     	;# 
   215     0001                     	;# 
   216     0002                     	;# 
   217     0003                     	;# 
   218     0004                     	;# 
   219     0005                     	;# 
   220     0006                     	;# 
   221     0007                     	;# 
   222     0008                     	;# 
   223     0009                     	;# 
   224     000A                     	;# 
   225     000B                     	;# 
   226     000C                     	;# 
   227     000D                     	;# 
   228     000E                     	;# 
   229     000E                     	;# 
   230     000F                     	;# 
   231     0010                     	;# 
   232     0011                     	;# 
   233     0012                     	;# 
   234     0013                     	;# 
   235     0014                     	;# 
   236     0015                     	;# 
   237     0015                     	;# 
   238     0016                     	;# 
   239     0017                     	;# 
   240     0018                     	;# 
   241     0019                     	;# 
   242     001A                     	;# 
   243     001B                     	;# 
   244     001B                     	;# 
   245     001C                     	;# 
   246     001D                     	;# 
   247     001E                     	;# 
   248     001F                     	;# 
   249     0081                     	;# 
   250     0085                     	;# 
   251     0086                     	;# 
   252     0087                     	;# 
   253     0088                     	;# 
   254     0089                     	;# 
   255     008C                     	;# 
   256     008D                     	;# 
   257     008E                     	;# 
   258     008F                     	;# 
   259     0090                     	;# 
   260     0091                     	;# 
   261     0092                     	;# 
   262     0093                     	;# 
   263     0093                     	;# 
   264     0093                     	;# 
   265     0094                     	;# 
   266     0095                     	;# 
   267     0096                     	;# 
   268     0097                     	;# 
   269     0098                     	;# 
   270     0099                     	;# 
   271     009A                     	;# 
   272     009B                     	;# 
   273     009C                     	;# 
   274     009D                     	;# 
   275     009E                     	;# 
   276     009F                     	;# 
   277     0105                     	;# 
   278     0107                     	;# 
   279     0108                     	;# 
   280     0109                     	;# 
   281     010C                     	;# 
   282     010C                     	;# 
   283     010D                     	;# 
   284     010E                     	;# 
   285     010F                     	;# 
   286     0185                     	;# 
   287     0187                     	;# 
   288     0188                     	;# 
   289     0189                     	;# 
   290     018C                     	;# 
   291     018D                     	;# 
   292                           
   293                           	psect	idataCOMMON
   294     0128                     __pidataCOMMON:
   295                           
   296                           ;initializer for _number2
   297     0128  3401               	retlw	1
   298     0129  3400               	retlw	0
   299                           
   300                           ;initializer for _number1
   301     012A  3401               	retlw	1
   302     012B  3400               	retlw	0
   303                           
   304                           	psect	idataBANK0
   305     012C                     __pidataBANK0:
   306                           
   307                           ;initializer for _number3
   308     012C  3401               	retlw	1
   309     012D  3400               	retlw	0
   310     0014                     _SSPCON	set	20
   311     0006                     _PORTBbits	set	6
   312     0009                     _PORTE	set	9
   313     0006                     _PORTB	set	6
   314     0005                     _PORTA	set	5
   315     000B                     _INTCONbits	set	11
   316     0008                     _PORTD	set	8
   317     0013                     _SSPBUF	set	19
   318     0014                     _SSPCONbits	set	20
   319     000C                     _PIR1bits	set	12
   320     0063                     _SSPIF	set	99
   321     005E                     _PEIE	set	94
   322     005F                     _GIE	set	95
   323     0091                     _SSPCON2bits	set	145
   324     0087                     _TRISCbits	set	135
   325     0094                     _SSPSTAT	set	148
   326     0093                     _SSPADD	set	147
   327     0091                     _SSPCON2	set	145
   328     008F                     _OSCCONbits	set	143
   329     008C                     _PIE1bits	set	140
   330     0089                     _TRISE	set	137
   331     0088                     _TRISD	set	136
   332     0086                     _TRISB	set	134
   333     0085                     _TRISA	set	133
   334     0094                     _SSPSTATbits	set	148
   335     0463                     _SSPIE	set	1123
   336     0189                     _ANSELH	set	393
   337     0188                     _ANSEL	set	392
   338                           
   339                           	psect	cinit
   340     000F                     start_initialization:	
   341                           ; #config settings
   342                           
   343     000F                     __initialization:
   344                           
   345                           ; Initialize objects allocated to BANK0
   346     000F  120A  118A  212C  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   347     0014  00A2               	movwf	__pdataBANK0& (0+127)
   348     0015  120A  118A  212D  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   349     001A  00A3               	movwf	(__pdataBANK0+1)& (0+127)
   350                           
   351                           ; Initialize objects allocated to COMMON
   352     001B  120A  118A  2128  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   353     0020  00F5               	movwf	__pdataCOMMON& (0+127)
   354     0021  120A  118A  2129  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   355     0026  00F6               	movwf	(__pdataCOMMON+1)& (0+127)
   356     0027  120A  118A  212A  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   357     002C  00F7               	movwf	(__pdataCOMMON+2)& (0+127)
   358     002D  120A  118A  212B  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   359     0032  00F8               	movwf	(__pdataCOMMON+3)& (0+127)
   360                           
   361                           ; Clear objects allocated to BANK0
   362     0033  01A0               	clrf	__pbssBANK0& (0+127)
   363     0034  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   364                           
   365                           ; Clear objects allocated to COMMON
   366     0035  01F9               	clrf	__pbssCOMMON& (0+127)
   367     0036  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   368     0037  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   369     0038                     end_of_initialization:	
   370                           ;End of C runtime variable initialization code
   371                           
   372     0038                     __end_of__initialization:
   373     0038  0183               	clrf	3
   374     0039  120A  118A  291D   	ljmp	_main	;jump to C main() function
   375                           
   376                           	psect	bssCOMMON
   377     0079                     __pbssCOMMON:
   378     0079                     _lots:
   379     0079                     	ds	2
   380     007B                     _z:
   381     007B                     	ds	1
   382                           
   383                           	psect	dataCOMMON
   384     0075                     __pdataCOMMON:
   385     0075                     _number2:
   386     0075                     	ds	2
   387     0077                     _number1:
   388     0077                     	ds	2
   389                           
   390                           	psect	bssBANK0
   391     0020                     __pbssBANK0:
   392     0020                     _contador:
   393     0020                     	ds	2
   394                           
   395                           	psect	dataBANK0
   396     0022                     __pdataBANK0:
   397     0022                     _number3:
   398     0022                     	ds	2
   399                           
   400                           	psect	cstackCOMMON
   401     0070                     __pcstackCOMMON:
   402     0070                     ?_LotReading:
   403     0070                     ??_LotReading:	
   404                           ; 1 bytes @ 0x0
   405                           
   406     0070                     ?_setup:	
   407                           ; 1 bytes @ 0x0
   408                           
   409     0070                     ?_I2C_Slave_Init:	
   410                           ; 1 bytes @ 0x0
   411                           
   412     0070                     ?_isr:	
   413                           ; 1 bytes @ 0x0
   414                           
   415     0070                     ?_main:	
   416                           ; 1 bytes @ 0x0
   417                           
   418                           
   419                           ; 1 bytes @ 0x0
   420     0070                     	ds	2
   421     0072                     ??_isr:
   422                           
   423                           ; 1 bytes @ 0x2
   424     0072                     	ds	3
   425                           
   426                           	psect	cstackBANK0
   427     0024                     __pcstackBANK0:
   428     0024                     ??_I2C_Slave_Init:
   429     0024                     I2C_Slave_Init@address:	
   430                           ; 1 bytes @ 0x0
   431                           
   432                           
   433                           ; 1 bytes @ 0x0
   434     0024                     	ds	1
   435     0025                     ??_setup:
   436     0025                     ??_main:	
   437                           ; 1 bytes @ 0x1
   438                           
   439                           
   440                           	psect	maintext
   441     011D                     __pmaintext:	
   442                           ; 1 bytes @ 0x1
   443 ;;
   444 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   445 ;;
   446 ;; *************** function _main *****************
   447 ;; Defined at:
   448 ;;		line 102 in file "main.c"
   449 ;; Parameters:    Size  Location     Type
   450 ;;		None
   451 ;; Auto vars:     Size  Location     Type
   452 ;;		None
   453 ;; Return value:  Size  Location     Type
   454 ;;                  1    wreg      void 
   455 ;; Registers used:
   456 ;;		wreg, status,2, status,0, pclath, cstack
   457 ;; Tracked objects:
   458 ;;		On entry : B00/0
   459 ;;		On exit  : 0/0
   460 ;;		Unchanged: 0/0
   461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   462 ;;      Params:         0       0       0       0       0
   463 ;;      Locals:         0       0       0       0       0
   464 ;;      Temps:          0       0       0       0       0
   465 ;;      Totals:         0       0       0       0       0
   466 ;;Total ram usage:        0 bytes
   467 ;; Hardware stack levels required when called: 4
   468 ;; This function calls:
   469 ;;		_setup
   470 ;; This function is called by:
   471 ;;		Startup code after reset
   472 ;; This function uses a non-reentrant model
   473 ;;
   474                           
   475     011D                     _main:	
   476                           ;psect for function _main
   477                           
   478     011D                     l1018:	
   479                           ;incstack = 0
   480                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   481                           
   482                           
   483                           ;main.c: 103:     setup();
   484     011D  120A  118A  20D7  120A  118A  	fcall	_setup
   485     0122                     l1020:
   486                           
   487                           ;main.c: 104:     lots = 0;
   488     0122  01F9               	clrf	_lots
   489     0123  01FA               	clrf	_lots+1
   490     0124                     l80:	
   491                           ;main.c: 105:     while(1){
   492                           
   493     0124                     l81:	
   494                           ;main.c: 107:     }
   495                           
   496     0124  2924               	goto	l80
   497     0125  120A  118A  280C   	ljmp	start
   498     0128                     __end_of_main:
   499                           
   500                           	psect	text1
   501     00D7                     __ptext1:	
   502 ;; *************** function _setup *****************
   503 ;; Defined at:
   504 ;;		line 115 in file "main.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;		None
   507 ;; Auto vars:     Size  Location     Type
   508 ;;		None
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg, status,2, status,0, pclath, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   518 ;;      Params:         0       0       0       0       0
   519 ;;      Locals:         0       0       0       0       0
   520 ;;      Temps:          0       0       0       0       0
   521 ;;      Totals:         0       0       0       0       0
   522 ;;Total ram usage:        0 bytes
   523 ;; Hardware stack levels used: 1
   524 ;; Hardware stack levels required when called: 3
   525 ;; This function calls:
   526 ;;		_I2C_Slave_Init
   527 ;; This function is called by:
   528 ;;		_main
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532     00D7                     _setup:	
   533                           ;psect for function _setup
   534                           
   535     00D7                     l978:	
   536                           ;incstack = 0
   537                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   538                           
   539                           
   540                           ;main.c: 118:     ANSEL = 0b00000000;
   541     00D7  1683               	bsf	3,5	;RP0=1, select bank3
   542     00D8  1703               	bsf	3,6	;RP1=1, select bank3
   543     00D9  0188               	clrf	8	;volatile
   544                           
   545                           ;main.c: 119:     ANSELH = 0;
   546     00DA  0189               	clrf	9	;volatile
   547                           
   548                           ;main.c: 122:     TRISA = 0b00000000;
   549     00DB  1683               	bsf	3,5	;RP0=1, select bank1
   550     00DC  1303               	bcf	3,6	;RP1=0, select bank1
   551     00DD  0185               	clrf	5	;volatile
   552     00DE                     l980:
   553                           
   554                           ;main.c: 123:     TRISB = 0b00001110;
   555     00DE  300E               	movlw	14
   556     00DF  0086               	movwf	6	;volatile
   557     00E0                     l982:
   558                           
   559                           ;main.c: 125:     TRISD = 0b00000000;
   560     00E0  0188               	clrf	8	;volatile
   561     00E1                     l984:
   562                           
   563                           ;main.c: 126:     TRISE = 0b00000000;
   564     00E1  0189               	clrf	9	;volatile
   565     00E2                     l986:
   566                           
   567                           ;main.c: 128:     PORTA = 0b00000000;
   568     00E2  1283               	bcf	3,5	;RP0=0, select bank0
   569     00E3  1303               	bcf	3,6	;RP1=0, select bank0
   570     00E4  0185               	clrf	5	;volatile
   571     00E5                     l988:
   572                           
   573                           ;main.c: 129:     PORTB = 0b00000000;
   574     00E5  0186               	clrf	6	;volatile
   575     00E6                     l990:
   576                           
   577                           ;main.c: 131:     PORTD = 0b00000000;
   578     00E6  0188               	clrf	8	;volatile
   579     00E7                     l992:
   580                           
   581                           ;main.c: 132:     PORTE = 0b00000000;
   582     00E7  0189               	clrf	9	;volatile
   583     00E8                     l994:
   584                           
   585                           ;main.c: 135:     INTCONbits.GIE = 1;
   586     00E8  178B               	bsf	11,7	;volatile
   587     00E9                     l996:
   588                           
   589                           ;main.c: 136:     INTCONbits.PEIE = 1;
   590     00E9  170B               	bsf	11,6	;volatile
   591     00EA                     l998:
   592                           
   593                           ;main.c: 137:     PIE1bits.SSPIE = 0;
   594     00EA  1683               	bsf	3,5	;RP0=1, select bank1
   595     00EB  1303               	bcf	3,6	;RP1=0, select bank1
   596     00EC  118C               	bcf	12,3	;volatile
   597     00ED                     l1000:
   598                           
   599                           ;main.c: 138:     PIE1bits.ADIE = 0;
   600     00ED  130C               	bcf	12,6	;volatile
   601     00EE                     l1002:
   602                           
   603                           ;main.c: 139:     INTCONbits.TMR0IE = 0;
   604     00EE  128B               	bcf	11,5	;volatile
   605     00EF                     l1004:
   606                           
   607                           ;main.c: 141:     PIR1bits.SSPIF = 0;
   608     00EF  1283               	bcf	3,5	;RP0=0, select bank0
   609     00F0  1303               	bcf	3,6	;RP1=0, select bank0
   610     00F1  118C               	bcf	12,3	;volatile
   611     00F2                     l1006:
   612                           
   613                           ;main.c: 142:     PIR1bits.ADIF = 0;
   614     00F2  130C               	bcf	12,6	;volatile
   615     00F3                     l1008:
   616                           
   617                           ;main.c: 143:     INTCONbits.RBIF = 0;
   618     00F3  100B               	bcf	11,0	;volatile
   619     00F4                     l1010:
   620                           
   621                           ;main.c: 144:     INTCONbits.T0IF = 0;
   622     00F4  110B               	bcf	11,2	;volatile
   623     00F5                     l1012:
   624                           
   625                           ;main.c: 153:     OSCCONbits.IRCF = 0b111;
   626     00F5  3070               	movlw	112
   627     00F6  1683               	bsf	3,5	;RP0=1, select bank1
   628     00F7  1303               	bcf	3,6	;RP1=0, select bank1
   629     00F8  048F               	iorwf	15,f	;volatile
   630     00F9                     l1014:
   631                           
   632                           ;main.c: 154:     OSCCONbits.SCS = 1;
   633     00F9  140F               	bsf	15,0	;volatile
   634     00FA                     l1016:
   635                           
   636                           ;main.c: 156:     I2C_Slave_Init(0x100);
   637     00FA  3000               	movlw	0
   638     00FB  120A  118A  2101  120A  118A  	fcall	_I2C_Slave_Init
   639     0100                     l86:
   640     0100  0008               	return
   641     0101                     __end_of_setup:
   642                           
   643                           	psect	text2
   644     0101                     __ptext2:	
   645 ;; *************** function _I2C_Slave_Init *****************
   646 ;; Defined at:
   647 ;;		line 90 in file "IIC.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;  address         1    wreg     unsigned char 
   650 ;; Auto vars:     Size  Location     Type
   651 ;;  address         1    0[BANK0 ] unsigned char 
   652 ;; Return value:  Size  Location     Type
   653 ;;                  1    wreg      void 
   654 ;; Registers used:
   655 ;;		wreg
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   661 ;;      Params:         0       0       0       0       0
   662 ;;      Locals:         0       1       0       0       0
   663 ;;      Temps:          0       0       0       0       0
   664 ;;      Totals:         0       1       0       0       0
   665 ;;Total ram usage:        1 bytes
   666 ;; Hardware stack levels used: 1
   667 ;; Hardware stack levels required when called: 2
   668 ;; This function calls:
   669 ;;		Nothing
   670 ;; This function is called by:
   671 ;;		_setup
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675     0101                     _I2C_Slave_Init:	
   676                           ;psect for function _I2C_Slave_Init
   677                           
   678                           
   679                           ;incstack = 0
   680                           ; Regs used in _I2C_Slave_Init: [wreg]
   681                           ;I2C_Slave_Init@address stored from wreg
   682     0101  1283               	bcf	3,5	;RP0=0, select bank0
   683     0102  1303               	bcf	3,6	;RP1=0, select bank0
   684     0103  00A4               	movwf	I2C_Slave_Init@address
   685     0104                     l964:
   686                           
   687                           ;IIC.c: 90: void I2C_Slave_Init(uint8_t address);IIC.c: 91: {;IIC.c: 92:     SSPADD = ad
      +                          dress;
   688     0104  0824               	movf	I2C_Slave_Init@address,w
   689     0105  1683               	bsf	3,5	;RP0=1, select bank1
   690     0106  1303               	bcf	3,6	;RP1=0, select bank1
   691     0107  0093               	movwf	19	;volatile
   692                           
   693                           ;IIC.c: 93:     SSPCON = 0x36;
   694     0108  3036               	movlw	54
   695     0109  1283               	bcf	3,5	;RP0=0, select bank0
   696     010A  1303               	bcf	3,6	;RP1=0, select bank0
   697     010B  0094               	movwf	20	;volatile
   698                           
   699                           ;IIC.c: 94:     SSPSTAT = 0x80;
   700     010C  3080               	movlw	128
   701     010D  1683               	bsf	3,5	;RP0=1, select bank1
   702     010E  1303               	bcf	3,6	;RP1=0, select bank1
   703     010F  0094               	movwf	20	;volatile
   704                           
   705                           ;IIC.c: 95:     SSPCON2 = 0x01;
   706     0110  3001               	movlw	1
   707     0111  0091               	movwf	17	;volatile
   708     0112                     l966:
   709                           
   710                           ;IIC.c: 96:     TRISCbits.TRISC3 = 1;
   711     0112  1587               	bsf	7,3	;volatile
   712     0113                     l968:
   713                           
   714                           ;IIC.c: 97:     TRISCbits.TRISC4 = 1;
   715     0113  1607               	bsf	7,4	;volatile
   716     0114                     l970:
   717                           
   718                           ;IIC.c: 98:     GIE = 1;
   719     0114  178B               	bsf	11,7	;volatile
   720     0115                     l972:
   721                           
   722                           ;IIC.c: 99:     PEIE = 1;
   723     0115  170B               	bsf	11,6	;volatile
   724     0116                     l974:
   725                           
   726                           ;IIC.c: 100:     SSPIF = 0;
   727     0116  1283               	bcf	3,5	;RP0=0, select bank0
   728     0117  1303               	bcf	3,6	;RP1=0, select bank0
   729     0118  118C               	bcf	12,3	;volatile
   730     0119                     l976:
   731                           
   732                           ;IIC.c: 101:     SSPIE = 1;
   733     0119  1683               	bsf	3,5	;RP0=1, select bank1
   734     011A  1303               	bcf	3,6	;RP1=0, select bank1
   735     011B  158C               	bsf	12,3	;volatile
   736     011C                     l146:
   737     011C  0008               	return
   738     011D                     __end_of_I2C_Slave_Init:
   739                           
   740                           	psect	text3
   741     003C                     __ptext3:	
   742 ;; *************** function _isr *****************
   743 ;; Defined at:
   744 ;;		line 58 in file "main.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;		None
   747 ;; Auto vars:     Size  Location     Type
   748 ;;		None
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg, status,2, status,0, pclath, cstack
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   758 ;;      Params:         0       0       0       0       0
   759 ;;      Locals:         0       0       0       0       0
   760 ;;      Temps:          3       0       0       0       0
   761 ;;      Totals:         3       0       0       0       0
   762 ;;Total ram usage:        3 bytes
   763 ;; Hardware stack levels used: 1
   764 ;; Hardware stack levels required when called: 1
   765 ;; This function calls:
   766 ;;		_LotReading
   767 ;; This function is called by:
   768 ;;		Interrupt level 1
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772     003C                     _isr:	
   773                           ;psect for function _isr
   774                           
   775     003C                     i1l922:
   776                           
   777                           ;main.c: 61:     if (PIR1bits.SSPIF){
   778     003C  1283               	bcf	3,5	;RP0=0, select bank0
   779     003D  1303               	bcf	3,6	;RP1=0, select bank0
   780     003E  1D8C               	btfss	12,3	;volatile
   781     003F  2841               	goto	u21_21
   782     0040  2842               	goto	u21_20
   783     0041                     u21_21:
   784     0041  2897               	goto	i1l61
   785     0042                     u21_20:
   786     0042                     i1l924:
   787                           
   788                           ;main.c: 63:         SSPCONbits.CKP = 0;
   789     0042  1214               	bcf	20,4	;volatile
   790                           
   791                           ;main.c: 65:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
   792     0043  1B14               	btfsc	20,6	;volatile
   793     0044  2846               	goto	u22_21
   794     0045  2847               	goto	u22_20
   795     0046                     u22_21:
   796     0046  284B               	goto	i1l928
   797     0047                     u22_20:
   798     0047                     i1l926:
   799     0047  1F94               	btfss	20,7	;volatile
   800     0048  284A               	goto	u23_21
   801     0049  284B               	goto	u23_20
   802     004A                     u23_21:
   803     004A  2850               	goto	i1l936
   804     004B                     u23_20:
   805     004B                     i1l928:
   806                           
   807                           ;main.c: 66:             z = SSPBUF;
   808     004B  0813               	movf	19,w	;volatile
   809     004C  00FB               	movwf	_z
   810     004D                     i1l930:
   811                           
   812                           ;main.c: 67:             SSPCONbits.SSPOV = 0;
   813     004D  1314               	bcf	20,6	;volatile
   814     004E                     i1l932:
   815                           
   816                           ;main.c: 68:             SSPCONbits.WCOL = 0;
   817     004E  1394               	bcf	20,7	;volatile
   818     004F                     i1l934:
   819                           
   820                           ;main.c: 69:             SSPCONbits.CKP = 1;
   821     004F  1614               	bsf	20,4	;volatile
   822     0050                     i1l936:
   823                           
   824                           ;main.c: 72:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
   825     0050  1683               	bsf	3,5	;RP0=1, select bank1
   826     0051  1303               	bcf	3,6	;RP1=0, select bank1
   827     0052  1A94               	btfsc	20,5	;volatile
   828     0053  2855               	goto	u24_21
   829     0054  2856               	goto	u24_20
   830     0055                     u24_21:
   831     0055  2870               	goto	i1l65
   832     0056                     u24_20:
   833     0056                     i1l938:
   834     0056  1914               	btfsc	20,2	;volatile
   835     0057  2859               	goto	u25_21
   836     0058  285A               	goto	u25_20
   837     0059                     u25_21:
   838     0059  2870               	goto	i1l65
   839     005A                     u25_20:
   840     005A                     i1l940:
   841                           
   842                           ;main.c: 73:             z = SSPBUF;
   843     005A  1283               	bcf	3,5	;RP0=0, select bank0
   844     005B  1303               	bcf	3,6	;RP1=0, select bank0
   845     005C  0813               	movf	19,w	;volatile
   846     005D  00FB               	movwf	_z
   847     005E                     i1l942:
   848                           
   849                           ;main.c: 74:             PIR1bits.SSPIF = 0;
   850     005E  118C               	bcf	12,3	;volatile
   851     005F                     i1l944:
   852                           
   853                           ;main.c: 75:             SSPCONbits.CKP = 1;
   854     005F  1614               	bsf	20,4	;volatile
   855     0060                     i1l66:	
   856                           ;main.c: 76:             while(!SSPSTATbits.BF);
   857                           
   858     0060  1683               	bsf	3,5	;RP0=1, select bank1
   859     0061  1303               	bcf	3,6	;RP1=0, select bank1
   860     0062  1C14               	btfss	20,0	;volatile
   861     0063  2865               	goto	u26_21
   862     0064  2866               	goto	u26_20
   863     0065                     u26_21:
   864     0065  2860               	goto	i1l66
   865     0066                     u26_20:
   866     0066                     i1l946:
   867                           
   868                           ;main.c: 77:             PORTD = SSPBUF;
   869     0066  1283               	bcf	3,5	;RP0=0, select bank0
   870     0067  1303               	bcf	3,6	;RP1=0, select bank0
   871     0068  0813               	movf	19,w	;volatile
   872     0069  0088               	movwf	8	;volatile
   873                           
   874                           ;main.c: 78:             _delay((unsigned long)((250)*(8000000/4000000.0)));
   875     006A  30A6               	movlw	166
   876     006B  00F2               	movwf	??_isr
   877     006C                     u31_27:
   878     006C  0BF2               	decfsz	??_isr,f
   879     006D  286C               	goto	u31_27
   880     006E  0000               	nop
   881                           
   882                           ;main.c: 80:         }
   883     006F  2894               	goto	i1l69
   884     0070                     i1l65:	
   885                           ;main.c: 82:         else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
   886                           
   887     0070  1A94               	btfsc	20,5	;volatile
   888     0071  2873               	goto	u27_21
   889     0072  2874               	goto	u27_20
   890     0073                     u27_21:
   891     0073  2894               	goto	i1l69
   892     0074                     u27_20:
   893     0074                     i1l948:
   894     0074  1D14               	btfss	20,2	;volatile
   895     0075  2877               	goto	u28_21
   896     0076  2878               	goto	u28_20
   897     0077                     u28_21:
   898     0077  2894               	goto	i1l69
   899     0078                     u28_20:
   900     0078                     i1l950:
   901                           
   902                           ;main.c: 83:             z = SSPBUF;
   903     0078  1283               	bcf	3,5	;RP0=0, select bank0
   904     0079  1303               	bcf	3,6	;RP1=0, select bank0
   905     007A  0813               	movf	19,w	;volatile
   906     007B  00FB               	movwf	_z
   907     007C                     i1l952:
   908                           
   909                           ;main.c: 84:             SSPSTATbits.BF = 0;
   910     007C  1683               	bsf	3,5	;RP0=1, select bank1
   911     007D  1303               	bcf	3,6	;RP1=0, select bank1
   912     007E  1014               	bcf	20,0	;volatile
   913     007F                     i1l954:
   914                           
   915                           ;main.c: 85:             LotReading();
   916     007F  120A  118A  20A3  120A  118A  	fcall	_LotReading
   917     0084                     i1l956:
   918                           
   919                           ;main.c: 86:             SSPBUF = lots;
   920     0084  0879               	movf	_lots,w
   921     0085  1283               	bcf	3,5	;RP0=0, select bank0
   922     0086  1303               	bcf	3,6	;RP1=0, select bank0
   923     0087  0093               	movwf	19	;volatile
   924     0088                     i1l958:
   925                           
   926                           ;main.c: 87:             SSPCONbits.CKP = 1;
   927     0088  1614               	bsf	20,4	;volatile
   928     0089                     i1l960:
   929                           
   930                           ;main.c: 88:             _delay((unsigned long)((250)*(8000000/4000000.0)));
   931     0089  30A6               	movlw	166
   932     008A  00F2               	movwf	??_isr
   933     008B                     u32_27:
   934     008B  0BF2               	decfsz	??_isr,f
   935     008C  288B               	goto	u32_27
   936     008D  0000               	nop
   937     008E                     i1l71:	
   938                           ;main.c: 89:             while(SSPSTATbits.BF);
   939                           
   940     008E  1683               	bsf	3,5	;RP0=1, select bank1
   941     008F  1303               	bcf	3,6	;RP1=0, select bank1
   942     0090  1814               	btfsc	20,0	;volatile
   943     0091  2893               	goto	u29_21
   944     0092  2894               	goto	u29_20
   945     0093                     u29_21:
   946     0093  288E               	goto	i1l71
   947     0094                     u29_20:
   948     0094                     i1l69:
   949                           
   950                           ;main.c: 91:         PIR1bits.SSPIF = 0;
   951     0094  1283               	bcf	3,5	;RP0=0, select bank0
   952     0095  1303               	bcf	3,6	;RP1=0, select bank0
   953     0096  118C               	bcf	12,3	;volatile
   954     0097                     i1l61:	
   955                           ;main.c: 92:     }
   956                           
   957                           
   958                           ;main.c: 94:     if (INTCONbits.RBIF){
   959     0097  1C0B               	btfss	11,0	;volatile
   960     0098  289A               	goto	u30_21
   961     0099  289B               	goto	u30_20
   962     009A                     u30_21:
   963     009A  289C               	goto	i1l75
   964     009B                     u30_20:
   965     009B                     i1l962:
   966                           
   967                           ;main.c: 95:         INTCONbits.RBIF = 0;
   968     009B  100B               	bcf	11,0	;volatile
   969     009C                     i1l75:
   970     009C  0874               	movf	??_isr+2,w
   971     009D  008A               	movwf	10
   972     009E  0E73               	swapf	??_isr+1,w
   973     009F  0083               	movwf	3
   974     00A0  0EFE               	swapf	btemp,f
   975     00A1  0E7E               	swapf	btemp,w
   976     00A2  0009               	retfie
   977     00A3                     __end_of_isr:
   978                           
   979                           	psect	intentry
   980     0004                     __pintentry:	
   981                           ;incstack = 0
   982                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   983                           
   984     0004                     interrupt_function:
   985     007E                     saved_w	set	btemp
   986     0004  00FE               	movwf	btemp
   987     0005  0E03               	swapf	3,w
   988     0006  00F3               	movwf	??_isr+1
   989     0007  080A               	movf	10,w
   990     0008  00F4               	movwf	??_isr+2
   991     0009  120A  118A  283C   	ljmp	_isr
   992                           
   993                           	psect	text4
   994     00A3                     __ptext4:	
   995 ;; *************** function _LotReading *****************
   996 ;; Defined at:
   997 ;;		line 159 in file "main.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;		None
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;		None
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      void 
  1004 ;; Registers used:
  1005 ;;		wreg, status,2, status,0
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1011 ;;      Params:         0       0       0       0       0
  1012 ;;      Locals:         0       0       0       0       0
  1013 ;;      Temps:          2       0       0       0       0
  1014 ;;      Totals:         2       0       0       0       0
  1015 ;;Total ram usage:        2 bytes
  1016 ;; Hardware stack levels used: 1
  1017 ;; This function calls:
  1018 ;;		Nothing
  1019 ;; This function is called by:
  1020 ;;		_isr
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024     00A3                     _LotReading:	
  1025                           ;psect for function _LotReading
  1026                           
  1027     00A3                     i1l902:	
  1028                           ;incstack = 0
  1029                           ; Regs used in _LotReading: [wreg+status,2+status,0]
  1030                           
  1031                           
  1032                           ;main.c: 162:     if (PORTBbits.RB1 == 0){
  1033     00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1034     00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1035     00A5  1886               	btfsc	6,1	;volatile
  1036     00A6  28A8               	goto	u18_21
  1037     00A7  28A9               	goto	u18_20
  1038     00A8                     u18_21:
  1039     00A8  28AC               	goto	i1l906
  1040     00A9                     u18_20:
  1041     00A9                     i1l904:
  1042                           
  1043                           ;main.c: 163:         number1 = 0;
  1044     00A9  01F7               	clrf	_number1
  1045     00AA  01F8               	clrf	_number1+1
  1046                           
  1047                           ;main.c: 164:     }
  1048     00AB  28B0               	goto	i1l908
  1049     00AC                     i1l906:
  1050                           
  1051                           ;main.c: 167:         number1 = 1;
  1052     00AC  3001               	movlw	1
  1053     00AD  00F7               	movwf	_number1
  1054     00AE  3000               	movlw	0
  1055     00AF  00F8               	movwf	_number1+1
  1056     00B0                     i1l908:
  1057                           
  1058                           ;main.c: 170:     if (PORTBbits.RB2 == 0){
  1059     00B0  1906               	btfsc	6,2	;volatile
  1060     00B1  28B3               	goto	u19_21
  1061     00B2  28B4               	goto	u19_20
  1062     00B3                     u19_21:
  1063     00B3  28B7               	goto	i1l912
  1064     00B4                     u19_20:
  1065     00B4                     i1l910:
  1066                           
  1067                           ;main.c: 171:         number2 = 0;
  1068     00B4  01F5               	clrf	_number2
  1069     00B5  01F6               	clrf	_number2+1
  1070                           
  1071                           ;main.c: 172:     }
  1072     00B6  28BB               	goto	i1l914
  1073     00B7                     i1l912:
  1074                           
  1075                           ;main.c: 175:         number2 = 1;
  1076     00B7  3001               	movlw	1
  1077     00B8  00F5               	movwf	_number2
  1078     00B9  3000               	movlw	0
  1079     00BA  00F6               	movwf	_number2+1
  1080     00BB                     i1l914:
  1081                           
  1082                           ;main.c: 178:     if (PORTBbits.RB3 == 0){
  1083     00BB  1986               	btfsc	6,3	;volatile
  1084     00BC  28BE               	goto	u20_21
  1085     00BD  28BF               	goto	u20_20
  1086     00BE                     u20_21:
  1087     00BE  28C2               	goto	i1l918
  1088     00BF                     u20_20:
  1089     00BF                     i1l916:
  1090                           
  1091                           ;main.c: 179:         number3 = 0;
  1092     00BF  01A2               	clrf	_number3
  1093     00C0  01A3               	clrf	_number3+1
  1094                           
  1095                           ;main.c: 180:     }
  1096     00C1  28C6               	goto	i1l920
  1097     00C2                     i1l918:
  1098                           
  1099                           ;main.c: 183:         number3 = 1;
  1100     00C2  3001               	movlw	1
  1101     00C3  00A2               	movwf	_number3
  1102     00C4  3000               	movlw	0
  1103     00C5  00A3               	movwf	_number3+1
  1104     00C6                     i1l920:
  1105                           
  1106                           ;main.c: 186:     lots = (number1+number2+number3);
  1107     00C6  0875               	movf	_number2,w
  1108     00C7  0777               	addwf	_number1,w
  1109     00C8  00F0               	movwf	??_LotReading
  1110     00C9  0876               	movf	_number2+1,w
  1111     00CA  1803               	skipnc
  1112     00CB  0A76               	incf	_number2+1,w
  1113     00CC  0778               	addwf	_number1+1,w
  1114     00CD  00F1               	movwf	??_LotReading+1
  1115     00CE  0822               	movf	_number3,w
  1116     00CF  0770               	addwf	??_LotReading,w
  1117     00D0  00F9               	movwf	_lots
  1118     00D1  0823               	movf	_number3+1,w
  1119     00D2  1803               	skipnc
  1120     00D3  0A23               	incf	_number3+1,w
  1121     00D4  0771               	addwf	??_LotReading+1,w
  1122     00D5  00FA               	movwf	_lots+1
  1123     00D6                     i1l95:
  1124     00D6  0008               	return
  1125     00D7                     __end_of_LotReading:
  1126     007E                     btemp	set	126	;btemp
  1127     007E                     wtemp0	set	126
  1128                           
  1129                           	psect	idloc
  1130                           
  1131                           ;Config register IDLOC0 @ 0x2000
  1132                           ;	unspecified, using default values
  1133     2000                     	org	8192
  1134     2000  3FFF               	dw	16383
  1135                           
  1136                           ;Config register IDLOC1 @ 0x2001
  1137                           ;	unspecified, using default values
  1138     2001                     	org	8193
  1139     2001  3FFF               	dw	16383
  1140                           
  1141                           ;Config register IDLOC2 @ 0x2002
  1142                           ;	unspecified, using default values
  1143     2002                     	org	8194
  1144     2002  3FFF               	dw	16383
  1145                           
  1146                           ;Config register IDLOC3 @ 0x2003
  1147                           ;	unspecified, using default values
  1148     2003                     	org	8195
  1149     2003  3FFF               	dw	16383
  1150                           
  1151                           	psect	config
  1152                           
  1153                           ;Config register CONFIG1 @ 0x2007
  1154                           ;	Oscillator Selection bits
  1155                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1156                           ;	Watchdog Timer Enable bit
  1157                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1158                           ;	Power-up Timer Enable bit
  1159                           ;	PWRTE = OFF, PWRT disabled
  1160                           ;	RE3/MCLR pin function select bit
  1161                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1162                           ;	Code Protection bit
  1163                           ;	CP = OFF, Program memory code protection is disabled
  1164                           ;	Data Code Protection bit
  1165                           ;	CPD = OFF, Data memory code protection is disabled
  1166                           ;	Brown Out Reset Selection bits
  1167                           ;	BOREN = OFF, BOR disabled
  1168                           ;	Internal External Switchover bit
  1169                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1170                           ;	Fail-Safe Clock Monitor Enabled bit
  1171                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1172                           ;	Low Voltage Programming Enable bit
  1173                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1174                           ;	In-Circuit Debugger Mode bit
  1175                           ;	DEBUG = 0x1, unprogramme  1176     2007                     	org	8199
  1177     2007  20D4               	dw	8404
  1178                           
  1179                           ;Config register CONFIG2 @ 0x2008
  1180                           ;	Brown-out Reset Selection bit
  1181                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1182                           ;	Flash Program Memory Self Write Enable bits
  1183                           ;	WRT = OFF, Write protection off
  1184     2008                     	org	8200
  1185     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      1       5
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_LotReading

Critical Paths under _main in BANK0

    _setup->_I2C_Slave_Init

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      22
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              2 COMMON     3     3      0
                         _LotReading
 ---------------------------------------------------------------------------------
 (4) _LotReading                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _I2C_Slave_Init

 _isr (ROOT)
   _LotReading

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      1       5       5        6.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      11      12        0.0%
ABS                  0      0      11       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Mar 07 06:41:51 2023

                      _z 007B              _SSPSTATbits 0094                       l80 0124  
                     l81 0124                       l86 0100                      l146 011C  
                    l970 0114                      l972 0115                      l964 0104  
                    l980 00DE                      l974 0116                      l966 0112  
                    l990 00E6                      l982 00E0                      l976 0119  
                    l968 0113                      l992 00E7                      l984 00E1  
                    l994 00E8                      l986 00E2                      l978 00D7  
                    _GIE 005F                      l996 00E9                      l988 00E5  
                    l998 00EA                      _isr 003C                     l1000 00ED  
                   l1010 00F4                     l1002 00EE                     l1012 00F5  
                   l1004 00EF                     l1020 0122                     l1014 00F9  
                   l1006 00F2                     l1016 00FA                     l1008 00F3  
                   l1018 011D                     ?_isr 0070                     _PEIE 005E  
                   i1l61 0097                     i1l71 008E                     i1l65 0070  
                   i1l66 0060                     i1l75 009C                     i1l69 0094  
                   i1l95 00D6                     _main 011D                     _lots 0079  
                   btemp 007E                     start 000C                    ??_isr 0072  
                  ?_main 0070                    _ANSEL 0188                    i1l910 00B4  
                  i1l902 00A3                    i1l920 00C6                    i1l912 00B7  
                  i1l904 00A9                    i1l914 00BB                    i1l906 00AC  
                  i1l930 004D                    i1l922 003C                    i1l916 00BF  
                  i1l908 00B0                    i1l940 005A                    i1l932 004E  
                  i1l924 0042                    i1l918 00C2                    i1l950 0078  
                  i1l942 005E                    i1l934 004F                    i1l926 0047  
                  i1l960 0089                    i1l952 007C                    i1l944 005F  
                  i1l936 0050                    i1l928 004B                    i1l962 009B  
                  i1l954 007F                    i1l946 0066                    i1l938 0056  
                  i1l956 0084                    i1l948 0074                    i1l958 0088  
                  u20_20 00BF                    u20_21 00BE                    u21_20 0042  
                  u21_21 0041                    u30_20 009B                    u22_20 0047  
                  u30_21 009A                    u22_21 0046                    u23_20 004B  
                  u23_21 004A                    u31_27 006C                    u24_20 0056  
                  u24_21 0055                    u32_27 008B                    u25_20 005A  
                  u25_21 0059                    u18_20 00A9                    u26_20 0066  
                  u18_21 00A8                    u26_21 0065                    u19_20 00B4  
                  u27_20 0074                    u19_21 00B3                    u27_21 0073  
                  _PORTA 0005                    _PORTB 0006                    _PORTD 0008  
                  _PORTE 0009                    u28_20 0078                    u28_21 0077  
                  u29_20 0094                    u29_21 0093                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _SSPIE 0463  
                  _TRISE 0089                    _SSPIF 0063                    _setup 00D7  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0128                   ??_main 0025  
             _LotReading 00A3                   ?_setup 0070                   _ANSELH 0189  
                 _SSPADD 0093                   _SSPBUF 0013                   _SSPCON 0014  
           __pdataCOMMON 0075                   saved_w 007E  __end_of__initialization 0038  
         __pcstackCOMMON 0070             __pidataBANK0 012C            __end_of_setup 0101  
            ?_LotReading 0070                  ??_setup 0025    I2C_Slave_Init@address 0024  
             __pbssBANK0 0020               __pmaintext 011D               __pintentry 0004  
                _SSPCON2 0091                  _SSPSTAT 0094                  __ptext1 00D7  
                __ptext2 0101                  __ptext3 003C                  __ptext4 00A3  
                _number1 0077                  _number2 0075                  _number3 0022  
   end_of_initialization 0038           _I2C_Slave_Init 0101                _PORTBbits 0006  
              _TRISCbits 0087   __end_of_I2C_Slave_Init 011D            __pidataCOMMON 0128  
           ??_LotReading 0070      start_initialization 000F              __end_of_isr 00A3  
        ?_I2C_Slave_Init 0070       __end_of_LotReading 00D7              __pdataBANK0 0022  
            __pbssCOMMON 0079                ___latbits 0002            __pcstackBANK0 0024  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
               _contador 0020         ??_I2C_Slave_Init 0024               _INTCONbits 000B  
               intlevel1 0000               _OSCCONbits 008F              _SSPCON2bits 0091  
             _SSPCONbits 0014  
