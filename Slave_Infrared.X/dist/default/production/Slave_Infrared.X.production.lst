

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Feb 26 13:51:10 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Version 2.40
    24                           ; Generated 17/11/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0000                     	;# 
    59     0001                     	;# 
    60     0002                     	;# 
    61     0003                     	;# 
    62     0004                     	;# 
    63     0005                     	;# 
    64     0006                     	;# 
    65     0007                     	;# 
    66     0008                     	;# 
    67     0009                     	;# 
    68     000A                     	;# 
    69     000B                     	;# 
    70     000C                     	;# 
    71     000D                     	;# 
    72     000E                     	;# 
    73     000E                     	;# 
    74     000F                     	;# 
    75     0010                     	;# 
    76     0011                     	;# 
    77     0012                     	;# 
    78     0013                     	;# 
    79     0014                     	;# 
    80     0015                     	;# 
    81     0015                     	;# 
    82     0016                     	;# 
    83     0017                     	;# 
    84     0018                     	;# 
    85     0019                     	;# 
    86     001A                     	;# 
    87     001B                     	;# 
    88     001B                     	;# 
    89     001C                     	;# 
    90     001D                     	;# 
    91     001E                     	;# 
    92     001F                     	;# 
    93     0081                     	;# 
    94     0085                     	;# 
    95     0086                     	;# 
    96     0087                     	;# 
    97     0088                     	;# 
    98     0089                     	;# 
    99     008C                     	;# 
   100     008D                     	;# 
   101     008E                     	;# 
   102     008F                     	;# 
   103     0090                     	;# 
   104     0091                     	;# 
   105     0092                     	;# 
   106     0093                     	;# 
   107     0093                     	;# 
   108     0093                     	;# 
   109     0094                     	;# 
   110     0095                     	;# 
   111     0096                     	;# 
   112     0097                     	;# 
   113     0098                     	;# 
   114     0099                     	;# 
   115     009A                     	;# 
   116     009B                     	;# 
   117     009C                     	;# 
   118     009D                     	;# 
   119     009E                     	;# 
   120     009F                     	;# 
   121     0105                     	;# 
   122     0107                     	;# 
   123     0108                     	;# 
   124     0109                     	;# 
   125     010C                     	;# 
   126     010C                     	;# 
   127     010D                     	;# 
   128     010E                     	;# 
   129     010F                     	;# 
   130     0185                     	;# 
   131     0187                     	;# 
   132     0188                     	;# 
   133     0189                     	;# 
   134     018C                     	;# 
   135     018D                     	;# 
   136     0000                     	;# 
   137     0001                     	;# 
   138     0002                     	;# 
   139     0003                     	;# 
   140     0004                     	;# 
   141     0005                     	;# 
   142     0006                     	;# 
   143     0007                     	;# 
   144     0008                     	;# 
   145     0009                     	;# 
   146     000A                     	;# 
   147     000B                     	;# 
   148     000C                     	;# 
   149     000D                     	;# 
   150     000E                     	;# 
   151     000E                     	;# 
   152     000F                     	;# 
   153     0010                     	;# 
   154     0011                     	;# 
   155     0012                     	;# 
   156     0013                     	;# 
   157     0014                     	;# 
   158     0015                     	;# 
   159     0015                     	;# 
   160     0016                     	;# 
   161     0017                     	;# 
   162     0018                     	;# 
   163     0019                     	;# 
   164     001A                     	;# 
   165     001B                     	;# 
   166     001B                     	;# 
   167     001C                     	;# 
   168     001D                     	;# 
   169     001E                     	;# 
   170     001F                     	;# 
   171     0081                     	;# 
   172     0085                     	;# 
   173     0086                     	;# 
   174     0087                     	;# 
   175     0088                     	;# 
   176     0089                     	;# 
   177     008C                     	;# 
   178     008D                     	;# 
   179     008E                     	;# 
   180     008F                     	;# 
   181     0090                     	;# 
   182     0091                     	;# 
   183     0092                     	;# 
   184     0093                     	;# 
   185     0093                     	;# 
   186     0093                     	;# 
   187     0094                     	;# 
   188     0095                     	;# 
   189     0096                     	;# 
   190     0097                     	;# 
   191     0098                     	;# 
   192     0099                     	;# 
   193     009A                     	;# 
   194     009B                     	;# 
   195     009C                     	;# 
   196     009D                     	;# 
   197     009E                     	;# 
   198     009F                     	;# 
   199     0105                     	;# 
   200     0107                     	;# 
   201     0108                     	;# 
   202     0109                     	;# 
   203     010C                     	;# 
   204     010C                     	;# 
   205     010D                     	;# 
   206     010E                     	;# 
   207     010F                     	;# 
   208     0185                     	;# 
   209     0187                     	;# 
   210     0188                     	;# 
   211     0189                     	;# 
   212     018C                     	;# 
   213     018D                     	;# 
   214     0000                     	;# 
   215     0001                     	;# 
   216     0002                     	;# 
   217     0003                     	;# 
   218     0004                     	;# 
   219     0005                     	;# 
   220     0006                     	;# 
   221     0007                     	;# 
   222     0008                     	;# 
   223     0009                     	;# 
   224     000A                     	;# 
   225     000B                     	;# 
   226     000C                     	;# 
   227     000D                     	;# 
   228     000E                     	;# 
   229     000E                     	;# 
   230     000F                     	;# 
   231     0010                     	;# 
   232     0011                     	;# 
   233     0012                     	;# 
   234     0013                     	;# 
   235     0014                     	;# 
   236     0015                     	;# 
   237     0015                     	;# 
   238     0016                     	;# 
   239     0017                     	;# 
   240     0018                     	;# 
   241     0019                     	;# 
   242     001A                     	;# 
   243     001B                     	;# 
   244     001B                     	;# 
   245     001C                     	;# 
   246     001D                     	;# 
   247     001E                     	;# 
   248     001F                     	;# 
   249     0081                     	;# 
   250     0085                     	;# 
   251     0086                     	;# 
   252     0087                     	;# 
   253     0088                     	;# 
   254     0089                     	;# 
   255     008C                     	;# 
   256     008D                     	;# 
   257     008E                     	;# 
   258     008F                     	;# 
   259     0090                     	;# 
   260     0091                     	;# 
   261     0092                     	;# 
   262     0093                     	;# 
   263     0093                     	;# 
   264     0093                     	;# 
   265     0094                     	;# 
   266     0095                     	;# 
   267     0096                     	;# 
   268     0097                     	;# 
   269     0098                     	;# 
   270     0099                     	;# 
   271     009A                     	;# 
   272     009B                     	;# 
   273     009C                     	;# 
   274     009D                     	;# 
   275     009E                     	;# 
   276     009F                     	;# 
   277     0105                     	;# 
   278     0107                     	;# 
   279     0108                     	;# 
   280     0109                     	;# 
   281     010C                     	;# 
   282     010C                     	;# 
   283     010D                     	;# 
   284     010E                     	;# 
   285     010F                     	;# 
   286     0185                     	;# 
   287     0187                     	;# 
   288     0188                     	;# 
   289     0189                     	;# 
   290     018C                     	;# 
   291     018D                     	;# 
   292                           
   293                           	psect	idataCOMMON
   294     0141                     __pidataCOMMON:
   295                           
   296                           ;initializer for _number2
   297     0141  3401               	retlw	1
   298     0142  3400               	retlw	0
   299                           
   300                           ;initializer for _number1
   301     0143  3401               	retlw	1
   302     0144  3400               	retlw	0
   303                           
   304                           	psect	idataBANK0
   305     0145                     __pidataBANK0:
   306                           
   307                           ;initializer for _number3
   308     0145  3401               	retlw	1
   309     0146  3400               	retlw	0
   310                           
   311                           	psect	nvBANK0
   312     0020                     __pnvBANK0:
   313     0020                     _contador:
   314     0020                     	ds	2
   315     0022                     _lots:
   316     0022                     	ds	2
   317     0014                     _SSPCON	set	20
   318     0006                     _PORTBbits	set	6
   319     0009                     _PORTE	set	9
   320     0005                     _PORTA	set	5
   321     0006                     _PORTB	set	6
   322     000B                     _INTCONbits	set	11
   323     0008                     _PORTD	set	8
   324     0013                     _SSPBUF	set	19
   325     0014                     _SSPCONbits	set	20
   326     000C                     _PIR1bits	set	12
   327     0063                     _SSPIF	set	99
   328     005E                     _PEIE	set	94
   329     005F                     _GIE	set	95
   330     0091                     _SSPCON2bits	set	145
   331     0087                     _TRISCbits	set	135
   332     0094                     _SSPSTAT	set	148
   333     0093                     _SSPADD	set	147
   334     0091                     _SSPCON2	set	145
   335     008F                     _OSCCONbits	set	143
   336     0081                     _OPTION_REGbits	set	129
   337     0096                     _IOCB	set	150
   338     008C                     _PIE1bits	set	140
   339     0089                     _TRISE	set	137
   340     0088                     _TRISD	set	136
   341     0086                     _TRISB	set	134
   342     0085                     _TRISA	set	133
   343     0094                     _SSPSTATbits	set	148
   344     0463                     _SSPIE	set	1123
   345     0189                     _ANSELH	set	393
   346     0188                     _ANSEL	set	392
   347                           
   348                           	psect	cinit
   349     000F                     start_initialization:	
   350                           ; #config settings
   351                           
   352     000F                     __initialization:
   353                           
   354                           ; Initialize objects allocated to BANK0
   355     000F  120A  118A  2145  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   356     0014  00A7               	movwf	__pdataBANK0& (0+127)
   357     0015  120A  118A  2146  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   358     001A  00A8               	movwf	(__pdataBANK0+1)& (0+127)
   359                           
   360                           ; Initialize objects allocated to COMMON
   361     001B  120A  118A  2141  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   362     0020  00F5               	movwf	__pdataCOMMON& (0+127)
   363     0021  120A  118A  2142  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   364     0026  00F6               	movwf	(__pdataCOMMON+1)& (0+127)
   365     0027  120A  118A  2143  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   366     002C  00F7               	movwf	(__pdataCOMMON+2)& (0+127)
   367     002D  120A  118A  2144  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   368     0032  00F8               	movwf	(__pdataCOMMON+3)& (0+127)
   369                           
   370                           ; Clear objects allocated to COMMON
   371     0033  01F9               	clrf	__pbssCOMMON& (0+127)
   372     0034                     end_of_initialization:	
   373                           ;End of C runtime variable initialization code
   374                           
   375     0034                     __end_of__initialization:
   376     0034  0183               	clrf	3
   377     0035  120A  118A  292B   	ljmp	_main	;jump to C main() function
   378                           
   379                           	psect	bssCOMMON
   380     0079                     __pbssCOMMON:
   381     0079                     _z:
   382     0079                     	ds	1
   383                           
   384                           	psect	dataCOMMON
   385     0075                     __pdataCOMMON:
   386     0075                     _number2:
   387     0075                     	ds	2
   388     0077                     _number1:
   389     0077                     	ds	2
   390                           
   391                           	psect	dataBANK0
   392     0027                     __pdataBANK0:
   393     0027                     _number3:
   394     0027                     	ds	2
   395                           
   396                           	psect	cstackCOMMON
   397     0070                     __pcstackCOMMON:
   398     0070                     ?_LotReading:
   399     0070                     ??_LotReading:	
   400                           ; 1 bytes @ 0x0
   401                           
   402     0070                     ?_setup:	
   403                           ; 1 bytes @ 0x0
   404                           
   405     0070                     ?_I2C_Slave_Init:	
   406                           ; 1 bytes @ 0x0
   407                           
   408     0070                     ?_isr:	
   409                           ; 1 bytes @ 0x0
   410                           
   411     0070                     ?_main:	
   412                           ; 1 bytes @ 0x0
   413                           
   414                           
   415                           ; 1 bytes @ 0x0
   416     0070                     	ds	2
   417     0072                     ??_isr:
   418                           
   419                           ; 1 bytes @ 0x2
   420     0072                     	ds	3
   421                           
   422                           	psect	cstackBANK0
   423     0024                     __pcstackBANK0:
   424     0024                     ??_I2C_Slave_Init:
   425     0024                     I2C_Slave_Init@address:	
   426                           ; 1 bytes @ 0x0
   427                           
   428                           
   429                           ; 1 bytes @ 0x0
   430     0024                     	ds	1
   431     0025                     ??_setup:
   432     0025                     ??_main:	
   433                           ; 1 bytes @ 0x1
   434                           
   435                           
   436                           ; 1 bytes @ 0x1
   437     0025                     	ds	2
   438                           
   439                           	psect	maintext
   440     012B                     __pmaintext:	
   441 ;;
   442 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   443 ;;
   444 ;; *************** function _main *****************
   445 ;; Defined at:
   446 ;;		line 102 in file "main.c"
   447 ;; Parameters:    Size  Location     Type
   448 ;;		None
   449 ;; Auto vars:     Size  Location     Type
   450 ;;		None
   451 ;; Return value:  Size  Location     Type
   452 ;;                  1    wreg      void 
   453 ;; Registers used:
   454 ;;		wreg, status,2, status,0, pclath, cstack
   455 ;; Tracked objects:
   456 ;;		On entry : B00/0
   457 ;;		On exit  : 0/0
   458 ;;		Unchanged: 0/0
   459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   460 ;;      Params:         0       0       0       0       0
   461 ;;      Locals:         0       0       0       0       0
   462 ;;      Temps:          0       2       0       0       0
   463 ;;      Totals:         0       2       0       0       0
   464 ;;Total ram usage:        2 bytes
   465 ;; Hardware stack levels required when called: 4
   466 ;; This function calls:
   467 ;;		_setup
   468 ;; This function is called by:
   469 ;;		Startup code after reset
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473     012B                     _main:	
   474                           ;psect for function _main
   475                           
   476     012B                     l1105:	
   477                           ;incstack = 0
   478                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   479                           
   480                           
   481                           ;main.c: 103:     setup();
   482     012B  120A  118A  20DF  120A  118A  	fcall	_setup
   483     0130                     l1107:
   484                           
   485                           ;main.c: 104:     contador = PORTB;
   486     0130  1283               	bcf	3,5	;RP0=0, select bank0
   487     0131  1303               	bcf	3,6	;RP1=0, select bank0
   488     0132  0806               	movf	6,w	;volatile
   489     0133  00A5               	movwf	??_main
   490     0134  01A6               	clrf	??_main+1
   491     0135  0825               	movf	??_main,w
   492     0136  00A0               	movwf	_contador
   493     0137  0826               	movf	??_main+1,w
   494     0138  00A1               	movwf	_contador+1
   495     0139                     l1109:
   496                           
   497                           ;main.c: 105:     lots = 3;
   498     0139  3003               	movlw	3
   499     013A  00A2               	movwf	_lots
   500     013B  3000               	movlw	0
   501     013C  00A3               	movwf	_lots+1
   502     013D                     l84:	
   503                           ;main.c: 107:     while(1){
   504                           
   505     013D                     l85:	
   506                           ;main.c: 109:     }
   507                           
   508     013D  293D               	goto	l84
   509     013E  120A  118A  280C   	ljmp	start
   510     0141                     __end_of_main:
   511                           
   512                           	psect	text1
   513     00DF                     __ptext1:	
   514 ;; *************** function _setup *****************
   515 ;; Defined at:
   516 ;;		line 117 in file "main.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;		None
   519 ;; Auto vars:     Size  Location     Type
   520 ;;		None
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      void 
   523 ;; Registers used:
   524 ;;		wreg, status,2, status,0, pclath, cstack
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   530 ;;      Params:         0       0       0       0       0
   531 ;;      Locals:         0       0       0       0       0
   532 ;;      Temps:          0       0       0       0       0
   533 ;;      Totals:         0       0       0       0       0
   534 ;;Total ram usage:        0 bytes
   535 ;; Hardware stack levels used: 1
   536 ;; Hardware stack levels required when called: 3
   537 ;; This function calls:
   538 ;;		_I2C_Slave_Init
   539 ;; This function is called by:
   540 ;;		_main
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544     00DF                     _setup:	
   545                           ;psect for function _setup
   546                           
   547     00DF                     l1059:	
   548                           ;incstack = 0
   549                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   550                           
   551                           
   552                           ;main.c: 120:     ANSEL = 0b00000000;
   553     00DF  1683               	bsf	3,5	;RP0=1, select bank3
   554     00E0  1703               	bsf	3,6	;RP1=1, select bank3
   555     00E1  0188               	clrf	8	;volatile
   556                           
   557                           ;main.c: 121:     ANSELH = 0;
   558     00E2  0189               	clrf	9	;volatile
   559                           
   560                           ;main.c: 124:     TRISA = 0b00000000;
   561     00E3  1683               	bsf	3,5	;RP0=1, select bank1
   562     00E4  1303               	bcf	3,6	;RP1=0, select bank1
   563     00E5  0185               	clrf	5	;volatile
   564     00E6                     l1061:
   565                           
   566                           ;main.c: 125:     TRISB = 0b00001110;
   567     00E6  300E               	movlw	14
   568     00E7  0086               	movwf	6	;volatile
   569     00E8                     l1063:
   570                           
   571                           ;main.c: 127:     TRISD = 0b00000000;
   572     00E8  0188               	clrf	8	;volatile
   573     00E9                     l1065:
   574                           
   575                           ;main.c: 128:     TRISE = 0b00000000;
   576     00E9  0189               	clrf	9	;volatile
   577     00EA                     l1067:
   578                           
   579                           ;main.c: 130:     PORTA = 0b00000000;
   580     00EA  1283               	bcf	3,5	;RP0=0, select bank0
   581     00EB  1303               	bcf	3,6	;RP1=0, select bank0
   582     00EC  0185               	clrf	5	;volatile
   583     00ED                     l1069:
   584                           
   585                           ;main.c: 131:     PORTB = 0b00000000;
   586     00ED  0186               	clrf	6	;volatile
   587     00EE                     l1071:
   588                           
   589                           ;main.c: 133:     PORTD = 0b00000000;
   590     00EE  0188               	clrf	8	;volatile
   591     00EF                     l1073:
   592                           
   593                           ;main.c: 134:     PORTE = 0b00000000;
   594     00EF  0189               	clrf	9	;volatile
   595     00F0                     l1075:
   596                           
   597                           ;main.c: 137:     INTCONbits.GIE = 1;
   598     00F0  178B               	bsf	11,7	;volatile
   599     00F1                     l1077:
   600                           
   601                           ;main.c: 138:     INTCONbits.PEIE = 1;
   602     00F1  170B               	bsf	11,6	;volatile
   603     00F2                     l1079:
   604                           
   605                           ;main.c: 139:     PIE1bits.SSPIE = 0;
   606     00F2  1683               	bsf	3,5	;RP0=1, select bank1
   607     00F3  1303               	bcf	3,6	;RP1=0, select bank1
   608     00F4  118C               	bcf	12,3	;volatile
   609     00F5                     l1081:
   610                           
   611                           ;main.c: 140:     PIE1bits.ADIE = 0;
   612     00F5  130C               	bcf	12,6	;volatile
   613     00F6                     l1083:
   614                           
   615                           ;main.c: 141:     INTCONbits.TMR0IE = 0;
   616     00F6  128B               	bcf	11,5	;volatile
   617     00F7                     l1085:
   618                           
   619                           ;main.c: 143:     PIR1bits.SSPIF = 0;
   620     00F7  1283               	bcf	3,5	;RP0=0, select bank0
   621     00F8  1303               	bcf	3,6	;RP1=0, select bank0
   622     00F9  118C               	bcf	12,3	;volatile
   623     00FA                     l1087:
   624                           
   625                           ;main.c: 144:     PIR1bits.ADIF = 0;
   626     00FA  130C               	bcf	12,6	;volatile
   627     00FB                     l1089:
   628                           
   629                           ;main.c: 145:     INTCONbits.RBIF = 0;
   630     00FB  100B               	bcf	11,0	;volatile
   631     00FC                     l1091:
   632                           
   633                           ;main.c: 146:     INTCONbits.T0IF = 0;
   634     00FC  110B               	bcf	11,2	;volatile
   635     00FD                     l1093:
   636                           
   637                           ;main.c: 150:     IOCB = 0b00000111;
   638     00FD  3007               	movlw	7
   639     00FE  1683               	bsf	3,5	;RP0=1, select bank1
   640     00FF  1303               	bcf	3,6	;RP1=0, select bank1
   641     0100  0096               	movwf	22	;volatile
   642     0101                     l1095:
   643                           
   644                           ;main.c: 151:     OPTION_REGbits.nRBPU = 0;
   645     0101  1381               	bcf	1,7	;volatile
   646     0102                     l1097:
   647                           
   648                           ;main.c: 152:     INTCONbits.RBIE = 1;
   649     0102  158B               	bsf	11,3	;volatile
   650     0103                     l1099:
   651                           
   652                           ;main.c: 155:     OSCCONbits.IRCF = 0b100;
   653     0103  080F               	movf	15,w	;volatile
   654     0104  398F               	andlw	-113
   655     0105  3840               	iorlw	64
   656     0106  008F               	movwf	15	;volatile
   657     0107                     l1101:
   658                           
   659                           ;main.c: 156:     OSCCONbits.SCS = 1;
   660     0107  140F               	bsf	15,0	;volatile
   661     0108                     l1103:
   662                           
   663                           ;main.c: 158:     I2C_Slave_Init(0x100);
   664     0108  3000               	movlw	0
   665     0109  120A  118A  210F  120A  118A  	fcall	_I2C_Slave_Init
   666     010E                     l90:
   667     010E  0008               	return
   668     010F                     __end_of_setup:
   669                           
   670                           	psect	text2
   671     010F                     __ptext2:	
   672 ;; *************** function _I2C_Slave_Init *****************
   673 ;; Defined at:
   674 ;;		line 90 in file "IIC.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;  address         1    wreg     unsigned char 
   677 ;; Auto vars:     Size  Location     Type
   678 ;;  address         1    0[BANK0 ] unsigned char 
   679 ;; Return value:  Size  Location     Type
   680 ;;                  1    wreg      void 
   681 ;; Registers used:
   682 ;;		wreg
   683 ;; Tracked objects:
   684 ;;		On entry : 0/0
   685 ;;		On exit  : 0/0
   686 ;;		Unchanged: 0/0
   687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   688 ;;      Params:         0       0       0       0       0
   689 ;;      Locals:         0       1       0       0       0
   690 ;;      Temps:          0       0       0       0       0
   691 ;;      Totals:         0       1       0       0       0
   692 ;;Total ram usage:        1 bytes
   693 ;; Hardware stack levels used: 1
   694 ;; Hardware stack levels required when called: 2
   695 ;; This function calls:
   696 ;;		Nothing
   697 ;; This function is called by:
   698 ;;		_setup
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702     010F                     _I2C_Slave_Init:	
   703                           ;psect for function _I2C_Slave_Init
   704                           
   705                           
   706                           ;incstack = 0
   707                           ; Regs used in _I2C_Slave_Init: [wreg]
   708                           ;I2C_Slave_Init@address stored from wreg
   709     010F  1283               	bcf	3,5	;RP0=0, select bank0
   710     0110  1303               	bcf	3,6	;RP1=0, select bank0
   711     0111  00A4               	movwf	I2C_Slave_Init@address
   712     0112                     l1045:
   713                           
   714                           ;IIC.c: 90: void I2C_Slave_Init(uint8_t address);IIC.c: 91: {;IIC.c: 92:     SSPADD = ad
      +                          dress;
   715     0112  0824               	movf	I2C_Slave_Init@address,w
   716     0113  1683               	bsf	3,5	;RP0=1, select bank1
   717     0114  1303               	bcf	3,6	;RP1=0, select bank1
   718     0115  0093               	movwf	19	;volatile
   719                           
   720                           ;IIC.c: 93:     SSPCON = 0x36;
   721     0116  3036               	movlw	54
   722     0117  1283               	bcf	3,5	;RP0=0, select bank0
   723     0118  1303               	bcf	3,6	;RP1=0, select bank0
   724     0119  0094               	movwf	20	;volatile
   725                           
   726                           ;IIC.c: 94:     SSPSTAT = 0x80;
   727     011A  3080               	movlw	128
   728     011B  1683               	bsf	3,5	;RP0=1, select bank1
   729     011C  1303               	bcf	3,6	;RP1=0, select bank1
   730     011D  0094               	movwf	20	;volatile
   731                           
   732                           ;IIC.c: 95:     SSPCON2 = 0x01;
   733     011E  3001               	movlw	1
   734     011F  0091               	movwf	17	;volatile
   735     0120                     l1047:
   736                           
   737                           ;IIC.c: 96:     TRISCbits.TRISC3 = 1;
   738     0120  1587               	bsf	7,3	;volatile
   739     0121                     l1049:
   740                           
   741                           ;IIC.c: 97:     TRISCbits.TRISC4 = 1;
   742     0121  1607               	bsf	7,4	;volatile
   743     0122                     l1051:
   744                           
   745                           ;IIC.c: 98:     GIE = 1;
   746     0122  178B               	bsf	11,7	;volatile
   747     0123                     l1053:
   748                           
   749                           ;IIC.c: 99:     PEIE = 1;
   750     0123  170B               	bsf	11,6	;volatile
   751     0124                     l1055:
   752                           
   753                           ;IIC.c: 100:     SSPIF = 0;
   754     0124  1283               	bcf	3,5	;RP0=0, select bank0
   755     0125  1303               	bcf	3,6	;RP1=0, select bank0
   756     0126  118C               	bcf	12,3	;volatile
   757     0127                     l1057:
   758                           
   759                           ;IIC.c: 101:     SSPIE = 1;
   760     0127  1683               	bsf	3,5	;RP0=1, select bank1
   761     0128  1303               	bcf	3,6	;RP1=0, select bank1
   762     0129  158C               	bsf	12,3	;volatile
   763     012A                     l153:
   764     012A  0008               	return
   765     012B                     __end_of_I2C_Slave_Init:
   766                           
   767                           	psect	text3
   768     0038                     __ptext3:	
   769 ;; *************** function _isr *****************
   770 ;; Defined at:
   771 ;;		line 58 in file "main.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		wreg, status,2, status,0, pclath, cstack
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   785 ;;      Params:         0       0       0       0       0
   786 ;;      Locals:         0       0       0       0       0
   787 ;;      Temps:          3       0       0       0       0
   788 ;;      Totals:         3       0       0       0       0
   789 ;;Total ram usage:        3 bytes
   790 ;; Hardware stack levels used: 1
   791 ;; Hardware stack levels required when called: 1
   792 ;; This function calls:
   793 ;;		_LotReading
   794 ;; This function is called by:
   795 ;;		Interrupt level 1
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799     0038                     _isr:	
   800                           ;psect for function _isr
   801                           
   802     0038                     i1l997:
   803                           
   804                           ;main.c: 61:     if (PIR1bits.SSPIF){
   805     0038  1283               	bcf	3,5	;RP0=0, select bank0
   806     0039  1303               	bcf	3,6	;RP1=0, select bank0
   807     003A  1D8C               	btfss	12,3	;volatile
   808     003B  283D               	goto	u27_21
   809     003C  283E               	goto	u27_20
   810     003D                     u27_21:
   811     003D  2893               	goto	i1l65
   812     003E                     u27_20:
   813     003E                     i1l999:
   814                           
   815                           ;main.c: 63:         SSPCONbits.CKP = 0;
   816     003E  1214               	bcf	20,4	;volatile
   817                           
   818                           ;main.c: 65:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
   819     003F  1B14               	btfsc	20,6	;volatile
   820     0040  2842               	goto	u28_21
   821     0041  2843               	goto	u28_20
   822     0042                     u28_21:
   823     0042  2847               	goto	i1l1003
   824     0043                     u28_20:
   825     0043                     i1l1001:
   826     0043  1F94               	btfss	20,7	;volatile
   827     0044  2846               	goto	u29_21
   828     0045  2847               	goto	u29_20
   829     0046                     u29_21:
   830     0046  284C               	goto	i1l1011
   831     0047                     u29_20:
   832     0047                     i1l1003:
   833                           
   834                           ;main.c: 66:             z = SSPBUF;
   835     0047  0813               	movf	19,w	;volatile
   836     0048  00F9               	movwf	_z
   837     0049                     i1l1005:
   838                           
   839                           ;main.c: 67:             SSPCONbits.SSPOV = 0;
   840     0049  1314               	bcf	20,6	;volatile
   841     004A                     i1l1007:
   842                           
   843                           ;main.c: 68:             SSPCONbits.WCOL = 0;
   844     004A  1394               	bcf	20,7	;volatile
   845     004B                     i1l1009:
   846                           
   847                           ;main.c: 69:             SSPCONbits.CKP = 1;
   848     004B  1614               	bsf	20,4	;volatile
   849     004C                     i1l1011:
   850                           
   851                           ;main.c: 72:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
   852     004C  1683               	bsf	3,5	;RP0=1, select bank1
   853     004D  1303               	bcf	3,6	;RP1=0, select bank1
   854     004E  1A94               	btfsc	20,5	;volatile
   855     004F  2851               	goto	u30_21
   856     0050  2852               	goto	u30_20
   857     0051                     u30_21:
   858     0051  286C               	goto	i1l69
   859     0052                     u30_20:
   860     0052                     i1l1013:
   861     0052  1914               	btfsc	20,2	;volatile
   862     0053  2855               	goto	u31_21
   863     0054  2856               	goto	u31_20
   864     0055                     u31_21:
   865     0055  286C               	goto	i1l69
   866     0056                     u31_20:
   867     0056                     i1l1015:
   868                           
   869                           ;main.c: 73:             z = SSPBUF;
   870     0056  1283               	bcf	3,5	;RP0=0, select bank0
   871     0057  1303               	bcf	3,6	;RP1=0, select bank0
   872     0058  0813               	movf	19,w	;volatile
   873     0059  00F9               	movwf	_z
   874     005A                     i1l1017:
   875                           
   876                           ;main.c: 74:             PIR1bits.SSPIF = 0;
   877     005A  118C               	bcf	12,3	;volatile
   878     005B                     i1l1019:
   879                           
   880                           ;main.c: 75:             SSPCONbits.CKP = 1;
   881     005B  1614               	bsf	20,4	;volatile
   882     005C                     i1l70:	
   883                           ;main.c: 76:             while(!SSPSTATbits.BF);
   884                           
   885     005C  1683               	bsf	3,5	;RP0=1, select bank1
   886     005D  1303               	bcf	3,6	;RP1=0, select bank1
   887     005E  1C14               	btfss	20,0	;volatile
   888     005F  2861               	goto	u32_21
   889     0060  2862               	goto	u32_20
   890     0061                     u32_21:
   891     0061  285C               	goto	i1l70
   892     0062                     u32_20:
   893     0062                     i1l1021:
   894                           
   895                           ;main.c: 77:             PORTD = SSPBUF;
   896     0062  1283               	bcf	3,5	;RP0=0, select bank0
   897     0063  1303               	bcf	3,6	;RP1=0, select bank0
   898     0064  0813               	movf	19,w	;volatile
   899     0065  0088               	movwf	8	;volatile
   900                           
   901                           ;main.c: 78:             _delay((unsigned long)((250)*(1000000/4000000.0)));
   902     0066  3014               	movlw	20
   903     0067  00F2               	movwf	??_isr
   904     0068                     u37_27:
   905     0068  0BF2               	decfsz	??_isr,f
   906     0069  2868               	goto	u37_27
   907     006A  0000               	nop
   908                           
   909                           ;main.c: 80:         }
   910     006B  2890               	goto	i1l73
   911     006C                     i1l69:	
   912                           ;main.c: 82:         else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
   913                           
   914     006C  1A94               	btfsc	20,5	;volatile
   915     006D  286F               	goto	u33_21
   916     006E  2870               	goto	u33_20
   917     006F                     u33_21:
   918     006F  2890               	goto	i1l73
   919     0070                     u33_20:
   920     0070                     i1l1023:
   921     0070  1D14               	btfss	20,2	;volatile
   922     0071  2873               	goto	u34_21
   923     0072  2874               	goto	u34_20
   924     0073                     u34_21:
   925     0073  2890               	goto	i1l73
   926     0074                     u34_20:
   927     0074                     i1l1025:
   928                           
   929                           ;main.c: 83:             z = SSPBUF;
   930     0074  1283               	bcf	3,5	;RP0=0, select bank0
   931     0075  1303               	bcf	3,6	;RP1=0, select bank0
   932     0076  0813               	movf	19,w	;volatile
   933     0077  00F9               	movwf	_z
   934     0078                     i1l1027:
   935                           
   936                           ;main.c: 84:             SSPSTATbits.BF = 0;
   937     0078  1683               	bsf	3,5	;RP0=1, select bank1
   938     0079  1303               	bcf	3,6	;RP1=0, select bank1
   939     007A  1014               	bcf	20,0	;volatile
   940     007B                     i1l1029:
   941                           
   942                           ;main.c: 85:             LotReading();
   943     007B  120A  118A  209F  120A  118A  	fcall	_LotReading
   944     0080                     i1l1031:
   945                           
   946                           ;main.c: 86:             SSPBUF = lots;
   947     0080  1283               	bcf	3,5	;RP0=0, select bank0
   948     0081  1303               	bcf	3,6	;RP1=0, select bank0
   949     0082  0822               	movf	_lots,w
   950     0083  0093               	movwf	19	;volatile
   951     0084                     i1l1033:
   952                           
   953                           ;main.c: 87:             SSPCONbits.CKP = 1;
   954     0084  1614               	bsf	20,4	;volatile
   955     0085                     i1l1035:
   956                           
   957                           ;main.c: 88:             _delay((unsigned long)((250)*(1000000/4000000.0)));
   958     0085  3014               	movlw	20
   959     0086  00F2               	movwf	??_isr
   960     0087                     u38_27:
   961     0087  0BF2               	decfsz	??_isr,f
   962     0088  2887               	goto	u38_27
   963     0089  0000               	nop
   964     008A                     i1l75:	
   965                           ;main.c: 89:             while(SSPSTATbits.BF);
   966                           
   967     008A  1683               	bsf	3,5	;RP0=1, select bank1
   968     008B  1303               	bcf	3,6	;RP1=0, select bank1
   969     008C  1814               	btfsc	20,0	;volatile
   970     008D  288F               	goto	u35_21
   971     008E  2890               	goto	u35_20
   972     008F                     u35_21:
   973     008F  288A               	goto	i1l75
   974     0090                     u35_20:
   975     0090                     i1l73:
   976                           
   977                           ;main.c: 91:         PIR1bits.SSPIF = 0;
   978     0090  1283               	bcf	3,5	;RP0=0, select bank0
   979     0091  1303               	bcf	3,6	;RP1=0, select bank0
   980     0092  118C               	bcf	12,3	;volatile
   981     0093                     i1l65:	
   982                           ;main.c: 92:     }
   983                           
   984                           
   985                           ;main.c: 94:     if (INTCONbits.RBIF){
   986     0093  1C0B               	btfss	11,0	;volatile
   987     0094  2896               	goto	u36_21
   988     0095  2897               	goto	u36_20
   989     0096                     u36_21:
   990     0096  2898               	goto	i1l79
   991     0097                     u36_20:
   992     0097                     i1l1037:
   993                           
   994                           ;main.c: 95:         INTCONbits.RBIF = 0;
   995     0097  100B               	bcf	11,0	;volatile
   996     0098                     i1l79:
   997     0098  0874               	movf	??_isr+2,w
   998     0099  008A               	movwf	10
   999     009A  0E73               	swapf	??_isr+1,w
  1000     009B  0083               	movwf	3
  1001     009C  0EFE               	swapf	btemp,f
  1002     009D  0E7E               	swapf	btemp,w
  1003     009E  0009               	retfie
  1004     009F                     __end_of_isr:
  1005                           
  1006                           	psect	intentry
  1007     0004                     __pintentry:	
  1008                           ;incstack = 0
  1009                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1010                           
  1011     0004                     interrupt_function:
  1012     007E                     saved_w	set	btemp
  1013     0004  00FE               	movwf	btemp
  1014     0005  0E03               	swapf	3,w
  1015     0006  00F3               	movwf	??_isr+1
  1016     0007  080A               	movf	10,w
  1017     0008  00F4               	movwf	??_isr+2
  1018     0009  120A  118A  2838   	ljmp	_isr
  1019                           
  1020                           	psect	text4
  1021     009F                     __ptext4:	
  1022 ;; *************** function _LotReading *****************
  1023 ;; Defined at:
  1024 ;;		line 161 in file "main.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;		None
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;		None
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      void 
  1031 ;; Registers used:
  1032 ;;		wreg, status,2, status,0
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1038 ;;      Params:         0       0       0       0       0
  1039 ;;      Locals:         0       0       0       0       0
  1040 ;;      Temps:          2       0       0       0       0
  1041 ;;      Totals:         2       0       0       0       0
  1042 ;;Total ram usage:        2 bytes
  1043 ;; Hardware stack levels used: 1
  1044 ;; This function calls:
  1045 ;;		Nothing
  1046 ;; This function is called by:
  1047 ;;		_isr
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051     009F                     _LotReading:	
  1052                           ;psect for function _LotReading
  1053                           
  1054     009F                     i1l931:	
  1055                           ;incstack = 0
  1056                           ; Regs used in _LotReading: [wreg+status,2+status,0]
  1057                           
  1058                           
  1059                           ;main.c: 162:     if (PORTBbits.RB1 == 0){
  1060     009F  1283               	bcf	3,5	;RP0=0, select bank0
  1061     00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1062     00A1  1886               	btfsc	6,1	;volatile
  1063     00A2  28A4               	goto	u21_21
  1064     00A3  28A5               	goto	u21_20
  1065     00A4                     u21_21:
  1066     00A4  28A8               	goto	i1l93
  1067     00A5                     u21_20:
  1068     00A5                     i1l933:
  1069                           
  1070                           ;main.c: 163:         number1 = 0;
  1071     00A5  01F7               	clrf	_number1
  1072     00A6  01F8               	clrf	_number1+1
  1073                           
  1074                           ;main.c: 164:     }
  1075     00A7  28B0               	goto	i1l937
  1076     00A8                     i1l93:	
  1077                           ;main.c: 166:     else if (PORTBbits.RB1 == 1){
  1078                           
  1079     00A8  1C86               	btfss	6,1	;volatile
  1080     00A9  28AB               	goto	u22_21
  1081     00AA  28AC               	goto	u22_20
  1082     00AB                     u22_21:
  1083     00AB  28B0               	goto	i1l937
  1084     00AC                     u22_20:
  1085     00AC                     i1l935:
  1086                           
  1087                           ;main.c: 167:         number1 = 1;
  1088     00AC  3001               	movlw	1
  1089     00AD  00F7               	movwf	_number1
  1090     00AE  3000               	movlw	0
  1091     00AF  00F8               	movwf	_number1+1
  1092     00B0                     i1l937:
  1093                           
  1094                           ;main.c: 170:     if (PORTBbits.RB2 == 0){
  1095     00B0  1906               	btfsc	6,2	;volatile
  1096     00B1  28B3               	goto	u23_21
  1097     00B2  28B4               	goto	u23_20
  1098     00B3                     u23_21:
  1099     00B3  28B7               	goto	i1l96
  1100     00B4                     u23_20:
  1101     00B4                     i1l939:
  1102                           
  1103                           ;main.c: 171:         number2 = 0;
  1104     00B4  01F5               	clrf	_number2
  1105     00B5  01F6               	clrf	_number2+1
  1106                           
  1107                           ;main.c: 172:     }
  1108     00B6  28BF               	goto	i1l943
  1109     00B7                     i1l96:	
  1110                           ;main.c: 174:     else if (PORTBbits.RB2 == 1){
  1111                           
  1112     00B7  1D06               	btfss	6,2	;volatile
  1113     00B8  28BA               	goto	u24_21
  1114     00B9  28BB               	goto	u24_20
  1115     00BA                     u24_21:
  1116     00BA  28BF               	goto	i1l943
  1117     00BB                     u24_20:
  1118     00BB                     i1l941:
  1119                           
  1120                           ;main.c: 175:         number2 = 1;
  1121     00BB  3001               	movlw	1
  1122     00BC  00F5               	movwf	_number2
  1123     00BD  3000               	movlw	0
  1124     00BE  00F6               	movwf	_number2+1
  1125     00BF                     i1l943:
  1126                           
  1127                           ;main.c: 178:     if (PORTBbits.RB3 == 0){
  1128     00BF  1986               	btfsc	6,3	;volatile
  1129     00C0  28C2               	goto	u25_21
  1130     00C1  28C3               	goto	u25_20
  1131     00C2                     u25_21:
  1132     00C2  28C6               	goto	i1l99
  1133     00C3                     u25_20:
  1134     00C3                     i1l945:
  1135                           
  1136                           ;main.c: 179:         number3 = 0;
  1137     00C3  01A7               	clrf	_number3
  1138     00C4  01A8               	clrf	_number3+1
  1139                           
  1140                           ;main.c: 180:     }
  1141     00C5  28CE               	goto	i1l949
  1142     00C6                     i1l99:	
  1143                           ;main.c: 182:     else if (PORTBbits.RB3 == 1){
  1144                           
  1145     00C6  1D86               	btfss	6,3	;volatile
  1146     00C7  28C9               	goto	u26_21
  1147     00C8  28CA               	goto	u26_20
  1148     00C9                     u26_21:
  1149     00C9  28CE               	goto	i1l949
  1150     00CA                     u26_20:
  1151     00CA                     i1l947:
  1152                           
  1153                           ;main.c: 183:         number3 = 1;
  1154     00CA  3001               	movlw	1
  1155     00CB  00A7               	movwf	_number3
  1156     00CC  3000               	movlw	0
  1157     00CD  00A8               	movwf	_number3+1
  1158     00CE                     i1l949:
  1159                           
  1160                           ;main.c: 186:     lots = (number1+number2+number3);
  1161     00CE  0875               	movf	_number2,w
  1162     00CF  0777               	addwf	_number1,w
  1163     00D0  00F0               	movwf	??_LotReading
  1164     00D1  0876               	movf	_number2+1,w
  1165     00D2  1803               	skipnc
  1166     00D3  0A76               	incf	_number2+1,w
  1167     00D4  0778               	addwf	_number1+1,w
  1168     00D5  00F1               	movwf	??_LotReading+1
  1169     00D6  0827               	movf	_number3,w
  1170     00D7  0770               	addwf	??_LotReading,w
  1171     00D8  00A2               	movwf	_lots
  1172     00D9  0828               	movf	_number3+1,w
  1173     00DA  1803               	skipnc
  1174     00DB  0A28               	incf	_number3+1,w
  1175     00DC  0771               	addwf	??_LotReading+1,w
  1176     00DD  00A3               	movwf	_lots+1
  1177     00DE                     i1l102:
  1178     00DE  0008               	return
  1179     00DF                     __end_of_LotReading:
  1180     007E                     btemp	set	126	;btemp
  1181     007E                     wtemp0	set	126
  1182                           
  1183                           	psect	idloc
  1184                           
  1185                           ;Config register IDLOC0 @ 0x2000
  1186                           ;	unspecified, using default values
  1187     2000                     	org	8192
  1188     2000  3FFF               	dw	16383
  1189                           
  1190                           ;Config register IDLOC1 @ 0x2001
  1191                           ;	unspecified, using default values
  1192     2001                     	org	8193
  1193     2001  3FFF               	dw	16383
  1194                           
  1195                           ;Config register IDLOC2 @ 0x2002
  1196                           ;	unspecified, using default values
  1197     2002                     	org	8194
  1198     2002  3FFF               	dw	16383
  1199                           
  1200                           ;Config register IDLOC3 @ 0x2003
  1201                           ;	unspecified, using default values
  1202     2003                     	org	8195
  1203     2003  3FFF               	dw	16383
  1204                           
  1205                           	psect	config
  1206                           
  1207                           ;Config register CONFIG1 @ 0x2007
  1208                           ;	Oscillator Selection bits
  1209                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1210                           ;	Watchdog Timer Enable bit
  1211                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1212                           ;	Power-up Timer Enable bit
  1213                           ;	PWRTE = OFF, PWRT disabled
  1214                           ;	RE3/MCLR pin function select bit
  1215                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1216                           ;	Code Protection bit
  1217                           ;	CP = OFF, Program memory code protection is disabled
  1218                           ;	Data Code Protection bit
  1219                           ;	CPD = OFF, Data memory code protection is disabled
  1220                           ;	Brown Out Reset Selection bits
  1221                           ;	BOREN = OFF, BOR disabled
  1222                           ;	Internal External Switchover bit
  1223                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1224                           ;	Fail-Safe Clock Monitor Enabled bit
  1225                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1226                           ;	Low Voltage Programming Enable bit
  1227                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1228                           ;	In-Circuit Debugger Mode bit
  1229                           ;	DEBUG = 0x1, unprogramme  1230     2007                     	org	8199
  1231     2007  20D4               	dw	8404
  1232                           
  1233                           ;Config register CONFIG2 @ 0x2008
  1234                           ;	Brown-out Reset Selection bit
  1235                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1236                           ;	Flash Program Memory Self Write Enable bits
  1237                           ;	WRT = OFF, Write protection off
  1238     2008                     	org	8200
  1239     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         1
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80      3       9
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_LotReading

Critical Paths under _main in BANK0

    _setup->_I2C_Slave_Init

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      31
                                              1 BANK0      2     2      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      31
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              2 COMMON     3     3      0
                         _LotReading
 ---------------------------------------------------------------------------------
 (4) _LotReading                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _I2C_Slave_Init

 _isr (ROOT)
   _LotReading

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3       9       5       11.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      13      12        0.0%
ABS                  0      0      13       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Feb 26 13:51:10 2023

                      _z 0079              _SSPSTATbits 0094                       l90 010E  
                     l84 013D                       l85 013D                      l153 012A  
                    _GIE 005F                      _isr 0038                     l1101 0107  
                   l1103 0108                     l1105 012B                     l1051 0122  
                   l1107 0130                     l1053 0123                     l1045 0112  
                   l1061 00E6                     l1109 0139                     l1055 0124  
                   l1047 0120                     l1071 00EE                     l1063 00E8  
                   l1057 0127                     l1049 0121                     l1081 00F5  
                   l1073 00EF                     l1065 00E9                     l1091 00FC  
                   l1083 00F6                     l1075 00F0                     l1067 00EA  
                   l1059 00DF                     l1093 00FD                     l1085 00F7  
                   l1077 00F1                     l1069 00ED                     l1095 0101  
                   l1087 00FA                     l1079 00F2                     l1097 0102  
                   l1089 00FB                     l1099 0103                     ?_isr 0070  
                   _IOCB 0096                     _PEIE 005E                     i1l70 005C  
                   i1l73 0090                     i1l65 0093                     i1l75 008A  
                   i1l93 00A8                     i1l69 006C                     i1l79 0098  
                   i1l96 00B7                     i1l99 00C6                     _main 012B  
                   _lots 0022                     btemp 007E                     start 000C  
                  ??_isr 0072                    ?_main 0070                    _ANSEL 0188  
                  i1l102 00DE                    i1l931 009F                    i1l941 00BB  
                  i1l933 00A5                    i1l943 00BF                    i1l935 00AC  
                  i1l945 00C3                    i1l937 00B0                    i1l947 00CA  
                  i1l939 00B4                    i1l949 00CE                    i1l997 0038  
                  i1l999 003E                    u21_20 00A5                    u21_21 00A4  
                  u22_20 00AC                    u30_20 0052                    u22_21 00AB  
                  u30_21 0051                    u23_20 00B4                    u31_20 0056  
                  u23_21 00B3                    u31_21 0055                    u24_20 00BB  
                  u32_20 0062                    u24_21 00BA                    u32_21 0061  
                  u25_20 00C3                    u33_20 0070                    u25_21 00C2  
                  u33_21 006F                    u26_20 00CA                    u34_20 0074  
                  u26_21 00C9                    u34_21 0073                    u35_20 0090  
                  u27_20 003E                    u35_21 008F                    u27_21 003D  
                  _PORTA 0005                    _PORTB 0006                    _PORTD 0008  
                  _PORTE 0009                    u36_20 0097                    u28_20 0043  
                  u36_21 0096                    u28_21 0042                    u29_20 0047  
                  u29_21 0046                    u37_27 0068                    u38_27 0087  
                  _TRISA 0085                    _TRISB 0086                    _TRISD 0088  
                  _SSPIE 0463                    _TRISE 0089                    _SSPIF 0063  
                  _setup 00DF                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0141  
                 ??_main 0025               _LotReading 009F                   ?_setup 0070  
                 _ANSELH 0189                   i1l1001 0043                   i1l1011 004C  
                 i1l1003 0047                   i1l1021 0062                   i1l1013 0052  
                 i1l1005 0049                   i1l1031 0080                   i1l1023 0070  
                 i1l1015 0056                   i1l1007 004A                   i1l1033 0084  
                 i1l1025 0074                   i1l1017 005A                   i1l1009 004B  
                 i1l1035 0085                   i1l1027 0078                   i1l1019 005B  
                 i1l1037 0097                   i1l1029 007B                   _SSPADD 0093  
                 _SSPBUF 0013                   _SSPCON 0014             __pdataCOMMON 0075  
                 saved_w 007E  __end_of__initialization 0034           __pcstackCOMMON 0070  
           __pidataBANK0 0145            __end_of_setup 010F              ?_LotReading 0070  
         _OPTION_REGbits 0081                  ??_setup 0025    I2C_Slave_Init@address 0024  
             __pmaintext 012B               __pintentry 0004                  _SSPCON2 0091  
                _SSPSTAT 0094                  __ptext1 00DF                  __ptext2 010F  
                __ptext3 0038                  __ptext4 009F                  _number1 0077  
                _number2 0075                  _number3 0027     end_of_initialization 0034  
         _I2C_Slave_Init 010F                _PORTBbits 0006                _TRISCbits 0087  
 __end_of_I2C_Slave_Init 012B            __pidataCOMMON 0141             ??_LotReading 0070  
    start_initialization 000F              __end_of_isr 009F          ?_I2C_Slave_Init 0070  
     __end_of_LotReading 00DF              __pdataBANK0 0027              __pbssCOMMON 0079  
              ___latbits 0002            __pcstackBANK0 0024                __pnvBANK0 0020  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
               _contador 0020         ??_I2C_Slave_Init 0024               _INTCONbits 000B  
               intlevel1 0000               _OSCCONbits 008F              _SSPCON2bits 0091  
             _SSPCONbits 0014  
